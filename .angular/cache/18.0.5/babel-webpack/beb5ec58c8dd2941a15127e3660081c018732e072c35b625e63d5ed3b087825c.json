{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../core/services/olympic.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@swimlane/ngx-charts\";\nfunction CountryComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 5)(1, \"h1\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"ul\")(4, \"li\")(5, \"p\");\n    i0.ɵɵtext(6, \"Number of entries\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"p\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(9, \"li\")(10, \"p\");\n    i0.ɵɵtext(11, \"Total medals\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"p\");\n    i0.ɵɵtext(13);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(14, \"li\")(15, \"p\");\n    i0.ɵɵtext(16, \"Total number of athletes\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"p\");\n    i0.ɵɵtext(18);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelement(19, \"ngx-charts-line-chart\", 6);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.countryName);\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate(ctx_r0.numberOfEntries);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(ctx_r0.totalNumberOfMedals);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(ctx_r0.totalNumberOfAthletes);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"results\", ctx_r0.chartData)(\"xAxis\", ctx_r0.showXAxis)(\"yAxis\", ctx_r0.showYAxis)(\"showXAxisLabel\", ctx_r0.showXAxisLabel)(\"xAxisLabel\", ctx_r0.xAxisLabel);\n  }\n}\nexport class CountryComponent {\n  constructor(route, olympicService, router) {\n    this.route = route;\n    this.olympicService = olympicService;\n    this.router = router;\n    this.countryName = '';\n    this.isDataLoaded = false;\n    this.chartData = [];\n    this.numberOfEntries = 0;\n    this.totalNumberOfMedals = 0;\n    this.totalNumberOfAthletes = 0;\n    this.showXAxis = true;\n    this.showYAxis = true;\n    this.showLegend = true;\n    this.showXAxisLabel = true;\n    this.xAxisLabel = 'Dates';\n  }\n  ngOnInit() {\n    this.countryName = this.route.snapshot.paramMap.get('name');\n    this.olympicService.getOlympics().subscribe(data => {\n      const countryData = data.find(element => element.country === this.countryName);\n      const numberOfEntries = countryData?.participations.length;\n      this.numberOfEntries = numberOfEntries ?? 0;\n      const totalNumberOfMedals = countryData?.participations.reduce((accumulator, participation) => accumulator + participation.medalsCount, 0);\n      this.totalNumberOfMedals = totalNumberOfMedals ?? 0;\n      const totalNumberOfAthletes = countryData?.participations.reduce((accumulator, participation) => accumulator + participation.athleteCount, 0);\n      this.totalNumberOfAthletes = totalNumberOfAthletes ?? 0;\n      const yearsOfParticipation = countryData?.participations.map(participation => participation.year);\n      const numberOfMedals = countryData?.participations.map(participation => participation.medalsCount);\n      const chartData = [{\n        name: 'Medals',\n        series: countryData?.participations.map(participation => ({\n          name: participation.year.toString(),\n          value: participation.medalsCount\n        })) ?? []\n      }];\n      this.chartData = chartData;\n      this.isDataLoaded = true;\n    });\n  }\n  static #_ = this.ɵfac = function CountryComponent_Factory(t) {\n    return new (t || CountryComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.OlympicService), i0.ɵɵdirectiveInject(i1.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CountryComponent,\n    selectors: [[\"app-country\"]],\n    decls: 5,\n    vars: 1,\n    consts: [[1, \"banner\"], [\"routerLink\", \"/\"], [1, \"back-button\"], [1, \"fa-solid\", \"fa-arrow-left\"], [\"class\", \"chart-container\", 4, \"ngIf\"], [1, \"chart-container\"], [3, \"results\", \"xAxis\", \"yAxis\", \"showXAxisLabel\", \"xAxisLabel\"]],\n    template: function CountryComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"a\", 1)(2, \"div\", 2);\n        i0.ɵɵelement(3, \"i\", 3);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵtemplate(4, CountryComponent_div_4_Template, 20, 9, \"div\", 4);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", ctx.isDataLoaded);\n      }\n    },\n    dependencies: [i3.NgIf, i1.RouterLink, i4.LineChartComponent],\n    styles: [\"ngx-charts-line-chart .line {\\n  stroke-width: 3px;\\n}\\n\\n  ngx-charts-line-chart g[ngx-charts-axis-label] text {\\n  font-size: 1.3rem !important;\\n  fill: grey !important;\\n}\\n\\n  ngx-tooltip-content.ngx-charts-tooltip-content.type-tooltip {\\n  font-size: 1rem;\\n  font-weight: 300;\\n  background-color: #00838E;\\n  color: white;\\n  box-shadow: 0 6px 20px 0 rgba(0, 0, 0, 0.2);\\n}\\n  ngx-tooltip-content.ngx-charts-tooltip-content.type-tooltip .tooltip-caret.position-top {\\n  border-top-color: #00838E;\\n  box-shadow: 0 6px 20px 0 rgba(0, 0, 0, 0.2);\\n}\\n\\na[_ngcontent-%COMP%] {\\n  text-decoration: none;\\n}\\n\\n.banner[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: left;\\n  width: 100%;\\n}\\n\\n.back-button[_ngcontent-%COMP%] {\\n  background-color: #00838E;\\n  color: white;\\n  font-weight: 400;\\n  padding: 0.8rem;\\n  font-size: 1.4rem;\\n  border-radius: 50%;\\n  transition: 0.3s ease;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  height: 1.5rem;\\n  width: 1.5rem;\\n}\\n\\n.back-button[_ngcontent-%COMP%]:hover {\\n  scale: 1.02;\\n}\\n\\nngx-charts-line-chart[_ngcontent-%COMP%] {\\n  flex: 1;\\n  width: 100%;\\n  max-height: 25vh;\\n  margin-top: 2rem;\\n}\\n\\n.chart-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: center;\\n  align-items: center;\\n  justify-content: center;\\n  width: 80%;\\n  height: auto;\\n  max-width: 100vw;\\n  max-height: 50vh;\\n  margin: 0 auto;\\n}\\n\\nul[_ngcontent-%COMP%] {\\n  list-style-type: none;\\n  display: flex;\\n  gap: 20px;\\n  padding: 0.5rem;\\n  flex-wrap: wrap;\\n  justify-content: center;\\n}\\n\\nli[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: center;\\n  align-items: center;\\n  border-radius: 0.5rem;\\n  border: 2px solid #00838E;\\n  padding: 0.5rem 1rem 0.5rem 1rem;\\n}\\nli[_ngcontent-%COMP%]   p[_ngcontent-%COMP%] {\\n  margin-top: 0.2rem;\\n  margin-bottom: 0.2rem;\\n  font-size: 1.3rem;\\n  padding-inline: 1rem;\\n}\\nli[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]:first-child {\\n  color: grey;\\n}\\nli[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]:last-child {\\n  font-weight: 700;\\n}\\n\\nh1[_ngcontent-%COMP%] {\\n  background-color: #00838E;\\n  color: white;\\n  font-weight: 400;\\n  font-style: normal;\\n  padding: 0.5rem 1rem 0.5rem 1rem;\\n  border-radius: 0.5rem;\\n}\\n\\n@media screen and (max-width: 480px) {\\n  .chart-container[_ngcontent-%COMP%] {\\n    width: 100%;\\n  }\\n  ngx-charts-line-chart[_ngcontent-%COMP%] {\\n    max-height: 5vh;\\n  }\\n  ul[_ngcontent-%COMP%] {\\n    gap: 10px;\\n  }\\n  li[_ngcontent-%COMP%] {\\n    padding: 0.2rem;\\n  }\\n  li[_ngcontent-%COMP%]   p[_ngcontent-%COMP%] {\\n    font-size: 1rem;\\n    text-align: center;\\n  }\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY291bnRyeS9jb3VudHJ5LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsaUJBQUE7QUFDRjs7QUFFQTtFQUNFLDRCQUFBO0VBQ0EscUJBQUE7QUFDRjs7QUFFQTtFQU1FLGVBQUE7RUFDQSxnQkFBQTtFQUNBLHlCQUFBO0VBQ0EsWUFBQTtFQUNBLDJDQUFBO0FBSkY7QUFMRTtFQUNFLHlCQUFBO0VBQ0EsMkNBQUE7QUFPSjs7QUFHQTtFQUNFLHFCQUFBO0FBQUY7O0FBR0E7RUFDRSxhQUFBO0VBQ0EscUJBQUE7RUFDQSxXQUFBO0FBQUY7O0FBR0E7RUFDRSx5QkFBQTtFQUNBLFlBQUE7RUFDQSxnQkFBQTtFQUNBLGVBQUE7RUFDQSxpQkFBQTtFQUNBLGtCQUFBO0VBQ0EscUJBQUE7RUFDQSxhQUFBO0VBQ0EsdUJBQUE7RUFDQSxtQkFBQTtFQUNBLGNBQUE7RUFDQSxhQUFBO0FBQUY7O0FBR0E7RUFDRSxXQUFBO0FBQUY7O0FBR0E7RUFDRSxPQUFBO0VBQ0EsV0FBQTtFQUNBLGdCQUFBO0VBQ0EsZ0JBQUE7QUFBRjs7QUFHQTtFQUNFLGFBQUE7RUFDQSxzQkFBQTtFQUNBLHVCQUFBO0VBQ0EsbUJBQUE7RUFDQSx1QkFBQTtFQUNBLFVBQUE7RUFDQSxZQUFBO0VBQ0EsZ0JBQUE7RUFDQSxnQkFBQTtFQUNBLGNBQUE7QUFBRjs7QUFHQTtFQUNFLHFCQUFBO0VBQ0EsYUFBQTtFQUNBLFNBQUE7RUFDQSxlQUFBO0VBQ0EsZUFBQTtFQUNBLHVCQUFBO0FBQUY7O0FBR0E7RUFDRSxhQUFBO0VBQ0Esc0JBQUE7RUFDQSx1QkFBQTtFQUNBLG1CQUFBO0VBQ0EscUJBQUE7RUFDQSx5QkFBQTtFQUNBLGdDQUFBO0FBQUY7QUFFRTtFQUNFLGtCQUFBO0VBQ0EscUJBQUE7RUFDQSxpQkFBQTtFQUNBLG9CQUFBO0FBQUo7QUFHRTtFQUNFLFdBQUE7QUFESjtBQUlFO0VBQ0UsZ0JBQUE7QUFGSjs7QUFPQTtFQUNFLHlCQUFBO0VBQ0EsWUFBQTtFQUNBLGdCQUFBO0VBQ0Esa0JBQUE7RUFDQSxnQ0FBQTtFQUNBLHFCQUFBO0FBSkY7O0FBT0E7RUFDRTtJQUNFLFdBQUE7RUFKRjtFQU9BO0lBQ0UsZUFBQTtFQUxGO0VBUUE7SUFDRSxTQUFBO0VBTkY7RUFTQTtJQUNFLGVBQUE7RUFQRjtFQVFFO0lBQ0UsZUFBQTtJQUNBLGtCQUFBO0VBTko7QUFDRiIsInNvdXJjZXNDb250ZW50IjpbIjo6bmctZGVlcCBuZ3gtY2hhcnRzLWxpbmUtY2hhcnQgLmxpbmUge1xuICBzdHJva2Utd2lkdGg6IDNweDtcbn1cblxuOjpuZy1kZWVwIG5neC1jaGFydHMtbGluZS1jaGFydCBnW25neC1jaGFydHMtYXhpcy1sYWJlbF0gdGV4dCB7XG4gIGZvbnQtc2l6ZTogMS4zcmVtICFpbXBvcnRhbnQ7XG4gIGZpbGw6IGdyZXkgIWltcG9ydGFudDtcbn1cblxuOjpuZy1kZWVwIG5neC10b29sdGlwLWNvbnRlbnQubmd4LWNoYXJ0cy10b29sdGlwLWNvbnRlbnQudHlwZS10b29sdGlwIHtcbiAgLnRvb2x0aXAtY2FyZXQucG9zaXRpb24tdG9wIHtcbiAgICBib3JkZXItdG9wLWNvbG9yOiAjMDA4MzhFO1xuICAgIGJveC1zaGFkb3c6IDAgNnB4IDIwcHggMCByZ2JhKDAsIDAsIDAsIDAuMik7XG4gIH1cblxuICBmb250LXNpemU6IDFyZW07XG4gIGZvbnQtd2VpZ2h0OiAzMDA7XG4gIGJhY2tncm91bmQtY29sb3I6ICMwMDgzOEU7XG4gIGNvbG9yOiB3aGl0ZTtcbiAgYm94LXNoYWRvdzogMCA2cHggMjBweCAwIHJnYmEoMCwgMCwgMCwgMC4yKTtcbn1cblxuYXtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xufVxuXG4uYmFubmVye1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGxlZnQ7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4uYmFjay1idXR0b257XG4gIGJhY2tncm91bmQtY29sb3I6ICMwMDgzOEU7XG4gIGNvbG9yOiB3aGl0ZTtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgcGFkZGluZzogLjhyZW07XG4gIGZvbnQtc2l6ZTogMS40cmVtO1xuICBib3JkZXItcmFkaXVzOiA1MCU7XG4gIHRyYW5zaXRpb246IC4zcyBlYXNlO1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgaGVpZ2h0OiAxLjVyZW07XG4gIHdpZHRoOiAxLjVyZW07XG59XG5cbi5iYWNrLWJ1dHRvbjpob3ZlcntcbiAgc2NhbGU6IDEuMDI7XG59XG5cbm5neC1jaGFydHMtbGluZS1jaGFydCB7XG4gIGZsZXg6IDE7XG4gIHdpZHRoOiAxMDAlO1xuICBtYXgtaGVpZ2h0OiAyNXZoO1xuICBtYXJnaW4tdG9wOiAycmVtO1xufVxuXG4uY2hhcnQtY29udGFpbmVyIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICB3aWR0aDogODAlO1xuICBoZWlnaHQ6IGF1dG87XG4gIG1heC13aWR0aDogMTAwdnc7XG4gIG1heC1oZWlnaHQ6IDUwdmg7XG4gIG1hcmdpbjogMCBhdXRvO1xufVxuXG51bHtcbiAgbGlzdC1zdHlsZS10eXBlOiBub25lO1xuICBkaXNwbGF5OiBmbGV4O1xuICBnYXA6IDIwcHg7XG4gIHBhZGRpbmc6IC41cmVtO1xuICBmbGV4LXdyYXA6IHdyYXA7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xufVxuXG5saXtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGJvcmRlci1yYWRpdXM6IC41cmVtO1xuICBib3JkZXI6IDJweCBzb2xpZCAjMDA4MzhFO1xuICBwYWRkaW5nOiAuNXJlbSAxcmVtIC41cmVtIDFyZW07XG5cbiAgcHtcbiAgICBtYXJnaW4tdG9wOiAuMnJlbTtcbiAgICBtYXJnaW4tYm90dG9tOiAuMnJlbTtcbiAgICBmb250LXNpemU6IDEuM3JlbTtcbiAgICBwYWRkaW5nLWlubGluZTogMXJlbTtcbiAgfVxuXG4gIHA6Zmlyc3QtY2hpbGR7XG4gICAgY29sb3I6IGdyZXk7XG4gIH1cblxuICBwOmxhc3QtY2hpbGR7XG4gICAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgfVxufVxuXG5cbmgxe1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDA4MzhFO1xuICBjb2xvcjogd2hpdGU7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgcGFkZGluZzogLjVyZW0gMXJlbSAuNXJlbSAxcmVtO1xuICBib3JkZXItcmFkaXVzOiAuNXJlbTtcbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDgwcHgpIHtcbiAgLmNoYXJ0LWNvbnRhaW5lciB7XG4gICAgd2lkdGg6IDEwMCU7XG4gIH1cblxuICBuZ3gtY2hhcnRzLWxpbmUtY2hhcnQge1xuICAgIG1heC1oZWlnaHQ6IDV2aDtcbiAgfVxuXG4gIHVse1xuICAgIGdhcDogMTBweDtcbiAgfVxuXG4gIGxpe1xuICAgIHBhZGRpbmc6IC4ycmVtO1xuICAgIHB7XG4gICAgICBmb250LXNpemU6IDFyZW07XG4gICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgfVxuICB9XG5cbn1cbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵtextInterpolate","ctx_r0","countryName","numberOfEntries","totalNumberOfMedals","totalNumberOfAthletes","ɵɵproperty","chartData","showXAxis","showYAxis","showXAxisLabel","xAxisLabel","CountryComponent","constructor","route","olympicService","router","isDataLoaded","showLegend","ngOnInit","snapshot","paramMap","get","getOlympics","subscribe","data","countryData","find","element","country","participations","length","reduce","accumulator","participation","medalsCount","athleteCount","yearsOfParticipation","map","year","numberOfMedals","name","series","toString","value","_","ɵɵdirectiveInject","i1","ActivatedRoute","i2","OlympicService","Router","_2","selectors","decls","vars","consts","template","CountryComponent_Template","rf","ctx","ɵɵtemplate","CountryComponent_div_4_Template"],"sources":["/Users/joannyprignol/code/JoPrignol/oc-project-2/src/app/country/country.component.ts","/Users/joannyprignol/code/JoPrignol/oc-project-2/src/app/country/country.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { OlympicService } from '../core/services/olympic.service';\nimport { Router } from '@angular/router';\nimport { Olympic } from '../core/models/Olympic';\nimport { ChartData } from '../core/models/ChartData';\nimport { Color, ScaleType } from '@swimlane/ngx-charts';\n\n@Component({\n  selector: 'app-country',\n  templateUrl: './country.component.html',\n  styleUrl: './country.component.scss'\n})\nexport class CountryComponent implements OnInit {\n\n  countryName: string | null = '';\n\n  isDataLoaded = false;\n\n  chartData: ChartData[] = [];\n  numberOfEntries: number = 0;\n  totalNumberOfMedals: number = 0;\n  totalNumberOfAthletes: number = 0;\n\n  constructor(private route: ActivatedRoute, private olympicService: OlympicService, private router: Router) {}\n\n  ngOnInit(): void {\n    this.countryName = this.route.snapshot.paramMap.get('name');\n\n    this.olympicService.getOlympics().subscribe((data:Olympic[]) => {\n\n      const countryData = data.find(element => element.country === this.countryName);\n\n      const numberOfEntries = countryData?.participations.length;\n      this.numberOfEntries = numberOfEntries ?? 0;\n\n      const totalNumberOfMedals = countryData?.participations.reduce(\n        (accumulator, participation) => accumulator + participation.medalsCount, 0,\n      );\n      this.totalNumberOfMedals = totalNumberOfMedals ?? 0;\n\n      const totalNumberOfAthletes = countryData?.participations.reduce(\n        (accumulator, participation) => accumulator + participation.athleteCount, 0,\n      );\n      this.totalNumberOfAthletes = totalNumberOfAthletes ?? 0;\n\n      const yearsOfParticipation = countryData?.participations.map(participation => participation.year);\n      const numberOfMedals = countryData?.participations.map(participation => participation.medalsCount);\n\n      const chartData = [{\n        name: 'Medals',\n        series: countryData?.participations.map((participation) => ({\n          name: participation.year.toString(),\n          value: participation.medalsCount\n        })) ?? []\n      }];\n\n      this.chartData = chartData;\n\n    this.isDataLoaded = true;\n    });\n  }\n\n  showXAxis = true;\n  showYAxis = true;\n  showLegend = true;\n  showXAxisLabel = true;\n  xAxisLabel = 'Dates';\n}\n","<div class=\"banner\">\n  <a routerLink=\"/\">\n    <div class=\"back-button\">\n      <i class=\"fa-solid fa-arrow-left\"></i>\n    </div>\n  </a>\n</div>\n<div *ngIf=\"isDataLoaded\" class=\"chart-container\">\n  <h1>{{ countryName }}</h1>\n  <ul>\n    <li>\n      <p>Number of entries</p>\n      <p>{{ numberOfEntries }}</p>\n    </li>\n    <li>\n      <p>Total medals</p>\n      <p>{{ totalNumberOfMedals }}</p>\n    </li>\n    <li>\n      <p>Total number of athletes</p>\n      <p>{{ totalNumberOfAthletes }}</p>\n    </li>\n  </ul>\n  <ngx-charts-line-chart\n      [results]=\"chartData\"\n      [xAxis]=\"showXAxis\"\n      [yAxis]=\"showYAxis\"\n      [showXAxisLabel]=\"showXAxisLabel\"\n      [xAxisLabel]=\"xAxisLabel\">\n  </ngx-charts-line-chart>\n</div>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}