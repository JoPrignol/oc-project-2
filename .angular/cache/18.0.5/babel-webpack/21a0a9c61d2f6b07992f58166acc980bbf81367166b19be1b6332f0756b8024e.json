{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { PLATFORM_ID, Component, ViewEncapsulation, Inject, Input, ViewChild, HostBinding, HostListener, Injectable, ChangeDetectionStrategy, EventEmitter, Output, Directive, NgModule, ContentChild } from '@angular/core';\nimport * as i2 from '@angular/common';\nimport { isPlatformBrowser, isPlatformServer, CommonModule } from '@angular/common';\nimport { __decorate } from 'tslib';\nimport { DomPortalOutlet, ComponentPortal } from '@angular/cdk/portal';\nimport { fromEvent } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\nimport { trigger, transition, style, animate } from '@angular/animations';\nimport { select } from 'd3-selection';\nimport { brushX } from 'd3-brush';\nimport { scaleTime, scaleLinear, scalePoint, scaleOrdinal, scaleQuantile, scaleBand } from 'd3-scale';\nimport { area, curveLinear, line, arc, lineRadial, curveCardinalClosed, pie } from 'd3-shape';\nimport { range, min, max, quantile } from 'd3-array';\nimport { interpolate } from 'd3-interpolate';\nimport { easeSinInOut } from 'd3-ease';\nimport rfdc from 'rfdc';\nimport { format } from 'd3-format';\nimport * as d3_color from 'd3-color';\nimport { treemap, stratify } from 'd3-hierarchy';\nimport { sankey, sankeyLeft, sankeyLinkHorizontal } from 'd3-sankey';\nimport { timeFormat } from 'd3-time-format';\n\n/**\n * Throttle a function\n *\n */\nconst _c0 = [\"caretElm\"];\nconst _c1 = a0 => ({\n  model: a0\n});\nfunction TooltipContentComponent_span_4_ng_template_1_Template(rf, ctx) {}\nfunction TooltipContentComponent_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtemplate(1, TooltipContentComponent_span_4_ng_template_1_Template, 0, 0, \"ng-template\", 5);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.template)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(2, _c1, ctx_r0.context));\n  }\n}\nfunction TooltipContentComponent_span_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 6);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"innerHTML\", ctx_r0.title, i0.ɵɵsanitizeHtml);\n  }\n}\nfunction LegendComponent_header_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"header\", 4)(1, \"span\", 5);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.title);\n  }\n}\nfunction LegendComponent_li_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\", 6)(1, \"ngx-charts-legend-entry\", 7);\n    i0.ɵɵlistener(\"select\", function LegendComponent_li_4_Template_ngx_charts_legend_entry_select_1_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r0 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r0.labelClick.emit($event));\n    })(\"activate\", function LegendComponent_li_4_Template_ngx_charts_legend_entry_activate_1_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r0 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r0.activate($event));\n    })(\"deactivate\", function LegendComponent_li_4_Template_ngx_charts_legend_entry_deactivate_1_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r0 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r0.deactivate($event));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const entry_r3 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"label\", entry_r3.label)(\"formattedLabel\", entry_r3.formattedLabel)(\"color\", entry_r3.color)(\"isActive\", ctx_r0.isActive(entry_r3));\n  }\n}\nconst _c2 = [\"*\"];\nfunction ChartComponent_ngx_charts_scale_legend_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"ngx-charts-scale-legend\", 4);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"horizontal\", ctx_r0.legendOptions && ctx_r0.legendOptions.position === ctx_r0.LegendPosition.Below)(\"valueRange\", ctx_r0.legendOptions.domain)(\"colors\", ctx_r0.legendOptions.colors)(\"height\", ctx_r0.view[1])(\"width\", ctx_r0.legendWidth);\n  }\n}\nfunction ChartComponent_ngx_charts_legend_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ngx-charts-legend\", 5);\n    i0.ɵɵlistener(\"labelClick\", function ChartComponent_ngx_charts_legend_4_Template_ngx_charts_legend_labelClick_0_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r0 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r0.legendLabelClick.emit($event));\n    })(\"labelActivate\", function ChartComponent_ngx_charts_legend_4_Template_ngx_charts_legend_labelActivate_0_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r0 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r0.legendLabelActivate.emit($event));\n    })(\"labelDeactivate\", function ChartComponent_ngx_charts_legend_4_Template_ngx_charts_legend_labelDeactivate_0_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r0 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r0.legendLabelDeactivate.emit($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"horizontal\", ctx_r0.legendOptions && ctx_r0.legendOptions.position === ctx_r0.LegendPosition.Below)(\"data\", ctx_r0.legendOptions.domain)(\"title\", ctx_r0.legendOptions.title)(\"colors\", ctx_r0.legendOptions.colors)(\"height\", ctx_r0.view[1])(\"width\", ctx_r0.legendWidth)(\"activeEntries\", ctx_r0.activeEntries);\n  }\n}\nconst _c3 = [\"ngx-charts-axis-label\", \"\"];\nconst _c4 = [\"ticksel\"];\nconst _c5 = [\"ngx-charts-x-axis-ticks\", \"\"];\nfunction XAxisTicksComponent__svg_g_2__svg_ng_container_1__svg_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction XAxisTicksComponent__svg_g_2__svg_ng_container_1__svg_ng_template_5__svg_ng_container_0__svg_tspan_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"tspan\", 10);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const tickLine_r1 = ctx.$implicit;\n    const i_r2 = ctx.index;\n    i0.ɵɵattribute(\"y\", i_r2 * 12);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", tickLine_r1, \" \");\n  }\n}\nfunction XAxisTicksComponent__svg_g_2__svg_ng_container_1__svg_ng_template_5__svg_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, XAxisTicksComponent__svg_g_2__svg_ng_container_1__svg_ng_template_5__svg_ng_container_0__svg_tspan_1_Template, 2, 2, \"tspan\", 9);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const tickLines_r3 = ctx.ngIf;\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", tickLines_r3);\n  }\n}\nfunction XAxisTicksComponent__svg_g_2__svg_ng_container_1__svg_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, XAxisTicksComponent__svg_g_2__svg_ng_container_1__svg_ng_template_5__svg_ng_container_0_Template, 2, 1, \"ng-container\", 6);\n  }\n  if (rf & 2) {\n    const tick_r4 = i0.ɵɵnextContext(2).$implicit;\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.tickChunks(tick_r4));\n  }\n}\nfunction XAxisTicksComponent__svg_g_2__svg_ng_container_1__svg_ng_template_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n  if (rf & 2) {\n    const tickFormatted_r6 = i0.ɵɵnextContext().ngIf;\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r4.tickTrim(tickFormatted_r6), \" \");\n  }\n}\nfunction XAxisTicksComponent__svg_g_2__svg_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"title\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"text\", 7);\n    i0.ɵɵtemplate(4, XAxisTicksComponent__svg_g_2__svg_ng_container_1__svg_ng_container_4_Template, 1, 0, \"ng-container\", 8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(5, XAxisTicksComponent__svg_g_2__svg_ng_container_1__svg_ng_template_5_Template, 1, 1, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor)(7, XAxisTicksComponent__svg_g_2__svg_ng_container_1__svg_ng_template_7_Template, 1, 1, \"ng-template\", null, 2, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const tickFormatted_r6 = ctx.ngIf;\n    const tmplMultilineTick_r7 = i0.ɵɵreference(6);\n    const tmplSinglelineTick_r8 = i0.ɵɵreference(8);\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(tickFormatted_r6);\n    i0.ɵɵadvance();\n    i0.ɵɵattribute(\"text-anchor\", ctx_r4.textAnchor)(\"transform\", ctx_r4.textTransform);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.isWrapTicksSupported)(\"ngIfThen\", tmplMultilineTick_r7)(\"ngIfElse\", tmplSinglelineTick_r8);\n  }\n}\nfunction XAxisTicksComponent__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 5);\n    i0.ɵɵtemplate(1, XAxisTicksComponent__svg_g_2__svg_ng_container_1_Template, 9, 6, \"ng-container\", 6);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const tick_r4 = ctx.$implicit;\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"transform\", ctx_r4.tickTransform(tick_r4));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.tickFormat(tick_r4));\n  }\n}\nfunction XAxisTicksComponent__svg_g_3__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵelement(1, \"line\", 11);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵattribute(\"transform\", ctx_r4.gridLineTransform());\n    i0.ɵɵadvance();\n    i0.ɵɵattribute(\"y1\", -ctx_r4.gridLineHeight);\n  }\n}\nfunction XAxisTicksComponent__svg_g_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, XAxisTicksComponent__svg_g_3__svg_g_1_Template, 2, 2, \"g\", 6);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const tick_r9 = ctx.$implicit;\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"transform\", ctx_r4.tickTransform(tick_r9));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.showGridLines);\n  }\n}\nconst _c6 = [\"ngx-charts-x-axis\", \"\"];\nfunction XAxisComponent__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 2);\n    i0.ɵɵlistener(\"dimensionsChanged\", function XAxisComponent__svg_g_1_Template_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.emitTicksHeight($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"trimTicks\", ctx_r1.trimTicks)(\"rotateTicks\", ctx_r1.rotateTicks)(\"maxTickLength\", ctx_r1.maxTickLength)(\"tickFormatting\", ctx_r1.tickFormatting)(\"tickArguments\", ctx_r1.tickArguments)(\"tickStroke\", ctx_r1.tickStroke)(\"scale\", ctx_r1.xScale)(\"orient\", ctx_r1.xOrient)(\"showGridLines\", ctx_r1.showGridLines)(\"gridLineHeight\", ctx_r1.dims.height)(\"width\", ctx_r1.dims.width)(\"tickValues\", ctx_r1.ticks)(\"wrapTicks\", ctx_r1.wrapTicks);\n  }\n}\nfunction XAxisComponent__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"g\", 3);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"label\", ctx_r1.labelText)(\"offset\", ctx_r1.labelOffset)(\"orient\", ctx_r1.orientation.Bottom)(\"height\", ctx_r1.dims.height)(\"width\", ctx_r1.dims.width);\n  }\n}\nconst _c7 = [\"ngx-charts-y-axis-ticks\", \"\"];\nfunction YAxisTicksComponent__svg_g_2__svg_ng_container_1__svg_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction YAxisTicksComponent__svg_g_2__svg_ng_container_1__svg_ng_template_5__svg_ng_container_0__svg_ng_container_1__svg_tspan_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"tspan\", 12);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const tickLine_r1 = ctx.$implicit;\n    const i_r2 = ctx.index;\n    const ctx_r2 = i0.ɵɵnextContext(6);\n    i0.ɵɵattribute(\"y\", i_r2 * (8 + ctx_r2.tickSpacing));\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", tickLine_r1, \" \");\n  }\n}\nfunction YAxisTicksComponent__svg_g_2__svg_ng_container_1__svg_ng_template_5__svg_ng_container_0__svg_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, YAxisTicksComponent__svg_g_2__svg_ng_container_1__svg_ng_template_5__svg_ng_container_0__svg_ng_container_1__svg_tspan_1_Template, 2, 2, \"tspan\", 11);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const tickLines_r4 = i0.ɵɵnextContext().ngIf;\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", tickLines_r4);\n  }\n}\nfunction YAxisTicksComponent__svg_g_2__svg_ng_container_1__svg_ng_template_5__svg_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, YAxisTicksComponent__svg_g_2__svg_ng_container_1__svg_ng_template_5__svg_ng_container_0__svg_ng_container_1_Template, 2, 1, \"ng-container\", 10);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const tickLines_r4 = ctx.ngIf;\n    i0.ɵɵnextContext(2);\n    const tmplSinglelineTick_r5 = i0.ɵɵreference(8);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", tickLines_r4.length > 1)(\"ngIfElse\", tmplSinglelineTick_r5);\n  }\n}\nfunction YAxisTicksComponent__svg_g_2__svg_ng_container_1__svg_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, YAxisTicksComponent__svg_g_2__svg_ng_container_1__svg_ng_template_5__svg_ng_container_0_Template, 2, 2, \"ng-container\", 7);\n  }\n  if (rf & 2) {\n    const tick_r6 = i0.ɵɵnextContext(2).$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.tickChunks(tick_r6));\n  }\n}\nfunction YAxisTicksComponent__svg_g_2__svg_ng_container_1__svg_ng_template_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n  if (rf & 2) {\n    const tickFormatted_r7 = i0.ɵɵnextContext().ngIf;\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.tickTrim(tickFormatted_r7), \" \");\n  }\n}\nfunction YAxisTicksComponent__svg_g_2__svg_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"title\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"text\", 8);\n    i0.ɵɵtemplate(4, YAxisTicksComponent__svg_g_2__svg_ng_container_1__svg_ng_container_4_Template, 1, 0, \"ng-container\", 9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(5, YAxisTicksComponent__svg_g_2__svg_ng_container_1__svg_ng_template_5_Template, 1, 1, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor)(7, YAxisTicksComponent__svg_g_2__svg_ng_container_1__svg_ng_template_7_Template, 1, 1, \"ng-template\", null, 2, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const tickFormatted_r7 = ctx.ngIf;\n    const tmplMultilineTick_r8 = i0.ɵɵreference(6);\n    const tmplSinglelineTick_r5 = i0.ɵɵreference(8);\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(tickFormatted_r7);\n    i0.ɵɵadvance();\n    i0.ɵɵstyleProp(\"font-size\", \"12px\");\n    i0.ɵɵattribute(\"dy\", ctx_r2.dy)(\"x\", ctx_r2.x1)(\"y\", ctx_r2.y1)(\"text-anchor\", ctx_r2.textAnchor);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.wrapTicks)(\"ngIfThen\", tmplMultilineTick_r8)(\"ngIfElse\", tmplSinglelineTick_r5);\n  }\n}\nfunction YAxisTicksComponent__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 6);\n    i0.ɵɵtemplate(1, YAxisTicksComponent__svg_g_2__svg_ng_container_1_Template, 9, 10, \"ng-container\", 7);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const tick_r6 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"transform\", ctx_r2.transform(tick_r6));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.tickFormat(tick_r6));\n  }\n}\nfunction YAxisTicksComponent__svg_path_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"path\", 13);\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"d\", ctx_r2.referenceAreaPath)(\"transform\", ctx_r2.gridLineTransform());\n  }\n}\nfunction YAxisTicksComponent__svg_g_4__svg_g_1__svg_line_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"line\", 15);\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(3);\n    i0.ɵɵattribute(\"x2\", ctx_r2.gridLineWidth);\n  }\n}\nfunction YAxisTicksComponent__svg_g_4__svg_g_1__svg_line_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"line\", 15);\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(3);\n    i0.ɵɵattribute(\"x2\", -ctx_r2.gridLineWidth);\n  }\n}\nfunction YAxisTicksComponent__svg_g_4__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, YAxisTicksComponent__svg_g_4__svg_g_1__svg_line_1_Template, 1, 1, \"line\", 14)(2, YAxisTicksComponent__svg_g_4__svg_g_1__svg_line_2_Template, 1, 1, \"line\", 14);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵattribute(\"transform\", ctx_r2.gridLineTransform());\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.orient === ctx_r2.Orientation.Left);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.orient === ctx_r2.Orientation.Right);\n  }\n}\nfunction YAxisTicksComponent__svg_g_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, YAxisTicksComponent__svg_g_4__svg_g_1_Template, 3, 3, \"g\", 7);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const tick_r9 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"transform\", ctx_r2.transform(tick_r9));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.showGridLines);\n  }\n}\nfunction YAxisTicksComponent__svg_g_5__svg_g_1__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"title\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"text\", 17);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const refLine_r10 = i0.ɵɵnextContext(2).$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r2.tickTrim(ctx_r2.tickFormat(refLine_r10.value)));\n    i0.ɵɵadvance();\n    i0.ɵɵattribute(\"dy\", ctx_r2.dy)(\"y\", -6)(\"x\", ctx_r2.gridLineWidth)(\"text-anchor\", ctx_r2.textAnchor);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", refLine_r10.name, \" \");\n  }\n}\nfunction YAxisTicksComponent__svg_g_5__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵelement(1, \"line\", 16);\n    i0.ɵɵtemplate(2, YAxisTicksComponent__svg_g_5__svg_g_1__svg_g_2_Template, 5, 6, \"g\", 7);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const refLine_r10 = i0.ɵɵnextContext().$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"transform\", ctx_r2.transform(refLine_r10.value));\n    i0.ɵɵadvance();\n    i0.ɵɵattribute(\"x2\", ctx_r2.gridLineWidth)(\"transform\", ctx_r2.gridLineTransform());\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.showRefLabels);\n  }\n}\nfunction YAxisTicksComponent__svg_g_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, YAxisTicksComponent__svg_g_5__svg_g_1_Template, 3, 4, \"g\", 7);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.showRefLines);\n  }\n}\nconst _c8 = [\"ngx-charts-y-axis\", \"\"];\nfunction YAxisComponent__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 2);\n    i0.ɵɵlistener(\"dimensionsChanged\", function YAxisComponent__svg_g_1_Template_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.emitTicksWidth($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"trimTicks\", ctx_r1.trimTicks)(\"maxTickLength\", ctx_r1.maxTickLength)(\"tickFormatting\", ctx_r1.tickFormatting)(\"tickArguments\", ctx_r1.tickArguments)(\"tickValues\", ctx_r1.ticks)(\"tickStroke\", ctx_r1.tickStroke)(\"scale\", ctx_r1.yScale)(\"orient\", ctx_r1.yOrient)(\"showGridLines\", ctx_r1.showGridLines)(\"gridLineWidth\", ctx_r1.dims.width)(\"referenceLines\", ctx_r1.referenceLines)(\"showRefLines\", ctx_r1.showRefLines)(\"showRefLabels\", ctx_r1.showRefLabels)(\"height\", ctx_r1.dims.height)(\"wrapTicks\", ctx_r1.wrapTicks);\n  }\n}\nfunction YAxisComponent__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"g\", 3);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"label\", ctx_r1.labelText)(\"offset\", ctx_r1.labelOffset)(\"orient\", ctx_r1.yOrient)(\"height\", ctx_r1.dims.height)(\"width\", ctx_r1.dims.width);\n  }\n}\nconst _c9 = [\"ngx-charts-svg-linear-gradient\", \"\"];\nfunction SvgLinearGradientComponent__svg_stop_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"stop\");\n  }\n  if (rf & 2) {\n    const stop_r1 = ctx.$implicit;\n    i0.ɵɵstyleProp(\"stop-color\", stop_r1.color)(\"stop-opacity\", stop_r1.opacity);\n    i0.ɵɵattribute(\"offset\", stop_r1.offset + \"%\");\n  }\n}\nconst _c10 = [\"ngx-charts-circle\", \"\"];\nconst _c11 = [\"ngx-charts-circle-series\", \"\"];\nconst _c12 = a0 => ({\n  name: a0\n});\nfunction CircleSeriesComponent__svg_g_0__svg_rect_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"rect\", 4);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"@animationState\", \"active\");\n    i0.ɵɵattribute(\"x\", ctx_r1.circle.cx - ctx_r1.circle.radius)(\"y\", ctx_r1.circle.cy)(\"width\", ctx_r1.circle.radius * 2)(\"height\", ctx_r1.circle.height)(\"fill\", ctx_r1.gradientFill);\n  }\n}\nfunction CircleSeriesComponent__svg_g_0__svg_rect_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"rect\", 4);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵattribute(\"x\", ctx_r1.circle.cx - ctx_r1.circle.radius)(\"y\", ctx_r1.circle.cy)(\"width\", ctx_r1.circle.radius * 2)(\"height\", ctx_r1.circle.height)(\"fill\", ctx_r1.gradientFill);\n  }\n}\nfunction CircleSeriesComponent__svg_g_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"defs\");\n    i0.ɵɵelement(2, \"g\", 1);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, CircleSeriesComponent__svg_g_0__svg_rect_3_Template, 1, 6, \"rect\", 2)(4, CircleSeriesComponent__svg_g_0__svg_rect_4_Template, 1, 5, \"rect\", 2);\n    i0.ɵɵelementStart(5, \"g\", 3);\n    i0.ɵɵlistener(\"select\", function CircleSeriesComponent__svg_g_0_Template_g_select_5_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onClick(ctx_r1.circle.data));\n    })(\"activate\", function CircleSeriesComponent__svg_g_0_Template_g_activate_5_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.activateCircle());\n    })(\"deactivate\", function CircleSeriesComponent__svg_g_0_Template_g_deactivate_5_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.deactivateCircle());\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"orientation\", ctx_r1.barOrientation.Vertical)(\"name\", ctx_r1.gradientId)(\"stops\", ctx_r1.circle.gradientStops);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.isSSR && ctx_r1.barVisible && ctx_r1.type === \"standard\");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.isSSR && ctx_r1.barVisible && ctx_r1.type === \"standard\");\n    i0.ɵɵadvance();\n    i0.ɵɵclassProp(\"active\", ctx_r1.isActive(i0.ɵɵpureFunction1(20, _c12, ctx_r1.circle.seriesName)));\n    i0.ɵɵproperty(\"cx\", ctx_r1.circle.cx)(\"cy\", ctx_r1.circle.cy)(\"r\", ctx_r1.circle.radius)(\"fill\", ctx_r1.circle.color)(\"pointerEvents\", ctx_r1.circle.value === 0 ? \"none\" : \"all\")(\"data\", ctx_r1.circle.value)(\"classNames\", ctx_r1.circle.classNames)(\"tooltipDisabled\", ctx_r1.tooltipDisabled)(\"tooltipPlacement\", ctx_r1.placementTypes.Top)(\"tooltipType\", ctx_r1.styleTypes.tooltip)(\"tooltipTitle\", ctx_r1.tooltipTemplate ? undefined : ctx_r1.getTooltipText(ctx_r1.circle))(\"tooltipTemplate\", ctx_r1.tooltipTemplate)(\"tooltipContext\", ctx_r1.circle.data);\n  }\n}\nconst _c13 = [\"ngx-charts-grid-panel\", \"\"];\nconst _c14 = [\"ngx-charts-grid-panel-series\", \"\"];\nfunction GridPanelSeriesComponent__svg_g_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"g\", 1);\n  }\n  if (rf & 2) {\n    const gridPanel_r1 = ctx.$implicit;\n    i0.ɵɵclassProp(\"grid-panel\", true)(\"odd\", gridPanel_r1.class === \"odd\")(\"even\", gridPanel_r1.class === \"even\");\n    i0.ɵɵproperty(\"height\", gridPanel_r1.height)(\"width\", gridPanel_r1.width)(\"x\", gridPanel_r1.x)(\"y\", gridPanel_r1.y);\n  }\n}\nconst _c15 = [\"ngx-charts-svg-radial-gradient\", \"\"];\nfunction SvgRadialGradientComponent__svg_stop_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"stop\");\n  }\n  if (rf & 2) {\n    const stop_r1 = ctx.$implicit;\n    i0.ɵɵstyleProp(\"stop-color\", stop_r1.color)(\"stop-opacity\", stop_r1.opacity);\n    i0.ɵɵattribute(\"offset\", stop_r1.offset + \"%\");\n  }\n}\nconst _c16 = [\"ngx-charts-area\", \"\"];\nfunction AreaComponent__svg_defs_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"defs\");\n    i0.ɵɵelement(1, \"g\", 2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"orientation\", ctx_r0.barOrientation.Vertical)(\"name\", ctx_r0.gradientId)(\"stops\", ctx_r0.gradientStops);\n  }\n}\nconst _c17 = [\"ngx-charts-count-up\", \"\"];\nconst _c18 = [\"tooltipAnchor\"];\nconst _c19 = [\"ngx-charts-tooltip-area\", \"\"];\nfunction TooltipArea__svg_ng_template_2_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6);\n    i0.ɵɵelement(1, \"span\", 7);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const tooltipItem_r2 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵstyleProp(\"background-color\", tooltipItem_r2.color);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.getToolTipText(tooltipItem_r2), \" \");\n  }\n}\nfunction TooltipArea__svg_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 4);\n    i0.ɵɵtemplate(1, TooltipArea__svg_ng_template_2_div_1_Template, 3, 3, \"div\", 5);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const model_r4 = ctx.model;\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", model_r4);\n  }\n}\nconst _c20 = [\"ngx-charts-timeline\", \"\"];\nfunction AdvancedLegendComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 7);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"countTo\", ctx_r0.roundedTotal)(\"valueFormatting\", ctx_r0.valueFormatting);\n  }\n}\nfunction AdvancedLegendComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.valueFormatting ? ctx_r0.valueFormatting(ctx_r0.roundedTotal) : ctx_r0.defaultValueFormatting(ctx_r0.roundedTotal), \" \");\n  }\n}\nfunction AdvancedLegendComponent_div_7_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 16);\n  }\n  if (rf & 2) {\n    const legendItem_r3 = i0.ɵɵnextContext().$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"countTo\", legendItem_r3._value)(\"valueFormatting\", ctx_r0.valueFormatting);\n  }\n}\nfunction AdvancedLegendComponent_div_7_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 17);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const legendItem_r3 = i0.ɵɵnextContext().$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.valueFormatting ? ctx_r0.valueFormatting(legendItem_r3.value) : ctx_r0.defaultValueFormatting(legendItem_r3.value), \" \");\n  }\n}\nfunction AdvancedLegendComponent_div_7_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 18);\n  }\n  if (rf & 2) {\n    const legendItem_r3 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"countTo\", legendItem_r3.percentage)(\"countSuffix\", \"%\");\n  }\n}\nfunction AdvancedLegendComponent_div_7_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const legendItem_r3 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\"\", legendItem_r3.percentage.toLocaleString(), \"%\");\n  }\n}\nfunction AdvancedLegendComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵlistener(\"mouseenter\", function AdvancedLegendComponent_div_7_Template_div_mouseenter_0_listener() {\n      const legendItem_r3 = i0.ɵɵrestoreView(_r2).$implicit;\n      const ctx_r0 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r0.activate.emit(legendItem_r3.data));\n    })(\"mouseleave\", function AdvancedLegendComponent_div_7_Template_div_mouseleave_0_listener() {\n      const legendItem_r3 = i0.ɵɵrestoreView(_r2).$implicit;\n      const ctx_r0 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r0.deactivate.emit(legendItem_r3.data));\n    })(\"click\", function AdvancedLegendComponent_div_7_Template_div_click_0_listener() {\n      const legendItem_r3 = i0.ɵɵrestoreView(_r2).$implicit;\n      const ctx_r0 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r0.select.emit(legendItem_r3.data));\n    });\n    i0.ɵɵelement(1, \"div\", 10);\n    i0.ɵɵtemplate(2, AdvancedLegendComponent_div_7_div_2_Template, 1, 2, \"div\", 11)(3, AdvancedLegendComponent_div_7_div_3_Template, 2, 1, \"div\", 12);\n    i0.ɵɵelementStart(4, \"div\", 13);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(6, AdvancedLegendComponent_div_7_div_6_Template, 1, 2, \"div\", 14)(7, AdvancedLegendComponent_div_7_div_7_Template, 2, 1, \"div\", 15);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const legendItem_r3 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵstyleProp(\"border-left-color\", legendItem_r3.color);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.animations);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.animations);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(legendItem_r3.displayLabel);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.animations);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.animations);\n  }\n}\nconst _c21 = [\"ngx-charts-area-series\", \"\"];\nconst _c22 = [\"tooltipTemplate\"];\nconst _c23 = [\"seriesTooltipTemplate\"];\nconst _c24 = (a0, a1) => [a0, a1];\nfunction AreaChartComponent__svg_g_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 7);\n    i0.ɵɵlistener(\"dimensionsChanged\", function AreaChartComponent__svg_g_5_Template_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.updateXAxisHeight($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"xScale\", ctx_r1.xScale)(\"dims\", ctx_r1.dims)(\"showGridLines\", ctx_r1.showGridLines)(\"showLabel\", ctx_r1.showXAxisLabel)(\"labelText\", ctx_r1.xAxisLabel)(\"trimTicks\", ctx_r1.trimXAxisTicks)(\"rotateTicks\", ctx_r1.rotateXAxisTicks)(\"maxTickLength\", ctx_r1.maxXAxisTickLength)(\"tickFormatting\", ctx_r1.xAxisTickFormatting)(\"ticks\", ctx_r1.xAxisTicks)(\"wrapTicks\", ctx_r1.wrapTicks);\n  }\n}\nfunction AreaChartComponent__svg_g_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 8);\n    i0.ɵɵlistener(\"dimensionsChanged\", function AreaChartComponent__svg_g_6_Template_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.updateYAxisWidth($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"yScale\", ctx_r1.yScale)(\"dims\", ctx_r1.dims)(\"showGridLines\", ctx_r1.showGridLines)(\"showLabel\", ctx_r1.showYAxisLabel)(\"labelText\", ctx_r1.yAxisLabel)(\"trimTicks\", ctx_r1.trimYAxisTicks)(\"maxTickLength\", ctx_r1.maxYAxisTickLength)(\"tickFormatting\", ctx_r1.yAxisTickFormatting)(\"ticks\", ctx_r1.yAxisTicks)(\"wrapTicks\", ctx_r1.wrapTicks);\n  }\n}\nfunction AreaChartComponent__svg_g_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵelement(1, \"g\", 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const series_r4 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"xScale\", ctx_r1.xScale)(\"yScale\", ctx_r1.yScale)(\"baseValue\", ctx_r1.baseValue)(\"colors\", ctx_r1.colors)(\"data\", series_r4)(\"activeEntries\", ctx_r1.activeEntries)(\"scaleType\", ctx_r1.scaleType)(\"gradient\", ctx_r1.gradient)(\"curve\", ctx_r1.curve)(\"animations\", ctx_r1.animations);\n  }\n}\nfunction AreaChartComponent__svg_g_9__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"g\", 13);\n    i0.ɵɵlistener(\"select\", function AreaChartComponent__svg_g_9__svg_g_2_Template_g_select_1_listener($event) {\n      const series_r7 = i0.ɵɵrestoreView(_r6).$implicit;\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onClick($event, series_r7));\n    })(\"activate\", function AreaChartComponent__svg_g_9__svg_g_2_Template_g_activate_1_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onActivate($event));\n    })(\"deactivate\", function AreaChartComponent__svg_g_9__svg_g_2_Template_g_deactivate_1_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onDeactivate($event));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const series_r7 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"xScale\", ctx_r1.xScale)(\"yScale\", ctx_r1.yScale)(\"colors\", ctx_r1.colors)(\"activeEntries\", ctx_r1.activeEntries)(\"data\", series_r7)(\"scaleType\", ctx_r1.scaleType)(\"visibleValue\", ctx_r1.hoveredVertical)(\"tooltipDisabled\", ctx_r1.tooltipDisabled)(\"tooltipTemplate\", ctx_r1.tooltipTemplate);\n  }\n}\nfunction AreaChartComponent__svg_g_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 10);\n    i0.ɵɵlistener(\"mouseleave\", function AreaChartComponent__svg_g_9_Template_g_mouseleave_0_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.hideCircles());\n    });\n    i0.ɵɵelementStart(1, \"g\", 11);\n    i0.ɵɵlistener(\"hover\", function AreaChartComponent__svg_g_9_Template_g_hover_1_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.updateHoveredVertical($event));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(2, AreaChartComponent__svg_g_9__svg_g_2_Template, 2, 9, \"g\", 12);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"dims\", ctx_r1.dims)(\"xSet\", ctx_r1.xSet)(\"xScale\", ctx_r1.xScale)(\"yScale\", ctx_r1.yScale)(\"results\", ctx_r1.results)(\"colors\", ctx_r1.colors)(\"tooltipDisabled\", ctx_r1.tooltipDisabled)(\"tooltipTemplate\", ctx_r1.seriesTooltipTemplate);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.results);\n  }\n}\nfunction AreaChartComponent__svg_g_10__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵelement(1, \"g\", 15);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const series_r9 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"xScale\", ctx_r1.timelineXScale)(\"yScale\", ctx_r1.timelineYScale)(\"baseValue\", ctx_r1.baseValue)(\"colors\", ctx_r1.colors)(\"data\", series_r9)(\"scaleType\", ctx_r1.scaleType)(\"gradient\", ctx_r1.gradient)(\"curve\", ctx_r1.curve)(\"animations\", ctx_r1.animations);\n  }\n}\nfunction AreaChartComponent__svg_g_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 14);\n    i0.ɵɵlistener(\"onDomainChange\", function AreaChartComponent__svg_g_10_Template_g_onDomainChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.updateDomain($event));\n    });\n    i0.ɵɵtemplate(1, AreaChartComponent__svg_g_10__svg_g_1_Template, 2, 9, \"g\", 4);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"results\", ctx_r1.results)(\"view\", i0.ɵɵpureFunction2(10, _c24, ctx_r1.timelineWidth, ctx_r1.height))(\"height\", ctx_r1.timelineHeight)(\"scheme\", ctx_r1.scheme)(\"customColors\", ctx_r1.customColors)(\"legend\", ctx_r1.legend)(\"scaleType\", ctx_r1.scaleType);\n    i0.ɵɵattribute(\"transform\", ctx_r1.timelineTransform);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.results)(\"ngForTrackBy\", ctx_r1.trackBy);\n  }\n}\nfunction AreaChartNormalizedComponent__svg_g_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 7);\n    i0.ɵɵlistener(\"dimensionsChanged\", function AreaChartNormalizedComponent__svg_g_5_Template_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.updateXAxisHeight($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"xScale\", ctx_r1.xScale)(\"dims\", ctx_r1.dims)(\"showGridLines\", ctx_r1.showGridLines)(\"showLabel\", ctx_r1.showXAxisLabel)(\"labelText\", ctx_r1.xAxisLabel)(\"trimTicks\", ctx_r1.trimXAxisTicks)(\"rotateTicks\", ctx_r1.rotateXAxisTicks)(\"maxTickLength\", ctx_r1.maxXAxisTickLength)(\"tickFormatting\", ctx_r1.xAxisTickFormatting)(\"ticks\", ctx_r1.xAxisTicks)(\"wrapTicks\", ctx_r1.wrapTicks);\n  }\n}\nfunction AreaChartNormalizedComponent__svg_g_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 8);\n    i0.ɵɵlistener(\"dimensionsChanged\", function AreaChartNormalizedComponent__svg_g_6_Template_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.updateYAxisWidth($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"yScale\", ctx_r1.yScale)(\"dims\", ctx_r1.dims)(\"showGridLines\", ctx_r1.showGridLines)(\"showLabel\", ctx_r1.showYAxisLabel)(\"labelText\", ctx_r1.yAxisLabel)(\"trimTicks\", ctx_r1.trimYAxisTicks)(\"maxTickLength\", ctx_r1.maxYAxisTickLength)(\"tickFormatting\", ctx_r1.yAxisTickFormatting)(\"ticks\", ctx_r1.yAxisTicks)(\"wrapTicks\", ctx_r1.wrapTicks);\n  }\n}\nfunction AreaChartNormalizedComponent__svg_g_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵelement(1, \"g\", 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const series_r4 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"xScale\", ctx_r1.xScale)(\"yScale\", ctx_r1.yScale)(\"colors\", ctx_r1.colors)(\"data\", series_r4)(\"scaleType\", ctx_r1.scaleType)(\"activeEntries\", ctx_r1.activeEntries)(\"gradient\", ctx_r1.gradient)(\"normalized\", true)(\"curve\", ctx_r1.curve)(\"animations\", ctx_r1.animations);\n  }\n}\nfunction AreaChartNormalizedComponent__svg_g_9__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"g\", 13);\n    i0.ɵɵlistener(\"select\", function AreaChartNormalizedComponent__svg_g_9__svg_g_2_Template_g_select_1_listener($event) {\n      const series_r7 = i0.ɵɵrestoreView(_r6).$implicit;\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onClick($event, series_r7));\n    })(\"activate\", function AreaChartNormalizedComponent__svg_g_9__svg_g_2_Template_g_activate_1_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onActivate($event));\n    })(\"deactivate\", function AreaChartNormalizedComponent__svg_g_9__svg_g_2_Template_g_deactivate_1_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onDeactivate($event));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const series_r7 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"type\", ctx_r1.seriesType.Stacked)(\"xScale\", ctx_r1.xScale)(\"yScale\", ctx_r1.yScale)(\"colors\", ctx_r1.colors)(\"activeEntries\", ctx_r1.activeEntries)(\"data\", series_r7)(\"scaleType\", ctx_r1.scaleType)(\"visibleValue\", ctx_r1.hoveredVertical)(\"tooltipDisabled\", ctx_r1.tooltipDisabled)(\"tooltipTemplate\", ctx_r1.tooltipTemplate);\n  }\n}\nfunction AreaChartNormalizedComponent__svg_g_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 10);\n    i0.ɵɵlistener(\"mouseleave\", function AreaChartNormalizedComponent__svg_g_9_Template_g_mouseleave_0_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.hideCircles());\n    });\n    i0.ɵɵelementStart(1, \"g\", 11);\n    i0.ɵɵlistener(\"hover\", function AreaChartNormalizedComponent__svg_g_9_Template_g_hover_1_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.updateHoveredVertical($event));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(2, AreaChartNormalizedComponent__svg_g_9__svg_g_2_Template, 2, 10, \"g\", 12);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"dims\", ctx_r1.dims)(\"xSet\", ctx_r1.xSet)(\"xScale\", ctx_r1.xScale)(\"yScale\", ctx_r1.yScale)(\"results\", ctx_r1.results)(\"colors\", ctx_r1.colors)(\"showPercentage\", true)(\"tooltipDisabled\", ctx_r1.tooltipDisabled)(\"tooltipTemplate\", ctx_r1.seriesTooltipTemplate);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.results);\n  }\n}\nfunction AreaChartNormalizedComponent__svg_g_10__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵelement(1, \"g\", 15);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const series_r9 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"xScale\", ctx_r1.timelineXScale)(\"yScale\", ctx_r1.timelineYScale)(\"colors\", ctx_r1.colors)(\"data\", series_r9)(\"scaleType\", ctx_r1.scaleType)(\"gradient\", ctx_r1.gradient)(\"normalized\", true)(\"curve\", ctx_r1.curve)(\"animations\", ctx_r1.animations);\n  }\n}\nfunction AreaChartNormalizedComponent__svg_g_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 14);\n    i0.ɵɵlistener(\"onDomainChange\", function AreaChartNormalizedComponent__svg_g_10_Template_g_onDomainChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.updateDomain($event));\n    });\n    i0.ɵɵtemplate(1, AreaChartNormalizedComponent__svg_g_10__svg_g_1_Template, 2, 9, \"g\", 4);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"results\", ctx_r1.results)(\"view\", i0.ɵɵpureFunction2(10, _c24, ctx_r1.timelineWidth, ctx_r1.height))(\"height\", ctx_r1.timelineHeight)(\"scheme\", ctx_r1.scheme)(\"customColors\", ctx_r1.customColors)(\"legend\", ctx_r1.legend)(\"scaleType\", ctx_r1.scaleType);\n    i0.ɵɵattribute(\"transform\", ctx_r1.timelineTransform);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.results)(\"ngForTrackBy\", ctx_r1.trackBy);\n  }\n}\nconst _c25 = \".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\";\nfunction AreaChartStackedComponent__svg_g_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 7);\n    i0.ɵɵlistener(\"dimensionsChanged\", function AreaChartStackedComponent__svg_g_5_Template_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.updateXAxisHeight($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"xScale\", ctx_r1.xScale)(\"dims\", ctx_r1.dims)(\"showGridLines\", ctx_r1.showGridLines)(\"showLabel\", ctx_r1.showXAxisLabel)(\"labelText\", ctx_r1.xAxisLabel)(\"trimTicks\", ctx_r1.trimXAxisTicks)(\"rotateTicks\", ctx_r1.rotateXAxisTicks)(\"maxTickLength\", ctx_r1.maxXAxisTickLength)(\"tickFormatting\", ctx_r1.xAxisTickFormatting)(\"ticks\", ctx_r1.xAxisTicks)(\"wrapTicks\", ctx_r1.wrapTicks);\n  }\n}\nfunction AreaChartStackedComponent__svg_g_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 8);\n    i0.ɵɵlistener(\"dimensionsChanged\", function AreaChartStackedComponent__svg_g_6_Template_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.updateYAxisWidth($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"yScale\", ctx_r1.yScale)(\"dims\", ctx_r1.dims)(\"showGridLines\", ctx_r1.showGridLines)(\"showLabel\", ctx_r1.showYAxisLabel)(\"labelText\", ctx_r1.yAxisLabel)(\"trimTicks\", ctx_r1.trimYAxisTicks)(\"maxTickLength\", ctx_r1.maxYAxisTickLength)(\"tickFormatting\", ctx_r1.yAxisTickFormatting)(\"ticks\", ctx_r1.yAxisTicks)(\"wrapTicks\", ctx_r1.wrapTicks);\n  }\n}\nfunction AreaChartStackedComponent__svg_g_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵelement(1, \"g\", 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const series_r4 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"xScale\", ctx_r1.xScale)(\"yScale\", ctx_r1.yScale)(\"colors\", ctx_r1.colors)(\"data\", series_r4)(\"scaleType\", ctx_r1.scaleType)(\"gradient\", ctx_r1.gradient)(\"activeEntries\", ctx_r1.activeEntries)(\"stacked\", true)(\"curve\", ctx_r1.curve)(\"animations\", ctx_r1.animations);\n  }\n}\nfunction AreaChartStackedComponent__svg_g_9__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"g\", 12);\n    i0.ɵɵlistener(\"select\", function AreaChartStackedComponent__svg_g_9__svg_g_2_Template_g_select_1_listener($event) {\n      const series_r7 = i0.ɵɵrestoreView(_r6).$implicit;\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onClick($event, series_r7));\n    })(\"activate\", function AreaChartStackedComponent__svg_g_9__svg_g_2_Template_g_activate_1_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onActivate($event));\n    })(\"deactivate\", function AreaChartStackedComponent__svg_g_9__svg_g_2_Template_g_deactivate_1_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onDeactivate($event));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const series_r7 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"type\", ctx_r1.seriesType.Stacked)(\"xScale\", ctx_r1.xScale)(\"yScale\", ctx_r1.yScale)(\"colors\", ctx_r1.colors)(\"activeEntries\", ctx_r1.activeEntries)(\"data\", series_r7)(\"scaleType\", ctx_r1.scaleType)(\"visibleValue\", ctx_r1.hoveredVertical)(\"tooltipDisabled\", ctx_r1.tooltipDisabled)(\"tooltipTemplate\", ctx_r1.tooltipTemplate);\n  }\n}\nfunction AreaChartStackedComponent__svg_g_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 10);\n    i0.ɵɵlistener(\"mouseleave\", function AreaChartStackedComponent__svg_g_9_Template_g_mouseleave_0_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.hideCircles());\n    });\n    i0.ɵɵelementStart(1, \"g\", 11);\n    i0.ɵɵlistener(\"hover\", function AreaChartStackedComponent__svg_g_9_Template_g_hover_1_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.updateHoveredVertical($event));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(2, AreaChartStackedComponent__svg_g_9__svg_g_2_Template, 2, 10, \"g\", 4);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"dims\", ctx_r1.dims)(\"xSet\", ctx_r1.xSet)(\"xScale\", ctx_r1.xScale)(\"yScale\", ctx_r1.yScale)(\"results\", ctx_r1.results)(\"colors\", ctx_r1.colors)(\"tooltipDisabled\", ctx_r1.tooltipDisabled)(\"tooltipTemplate\", ctx_r1.seriesTooltipTemplate);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.results)(\"ngForTrackBy\", ctx_r1.trackBy);\n  }\n}\nfunction AreaChartStackedComponent__svg_g_10__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵelement(1, \"g\", 14);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const series_r9 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"xScale\", ctx_r1.timelineXScale)(\"yScale\", ctx_r1.timelineYScale)(\"colors\", ctx_r1.colors)(\"data\", series_r9)(\"scaleType\", ctx_r1.scaleType)(\"gradient\", ctx_r1.gradient)(\"stacked\", true)(\"curve\", ctx_r1.curve)(\"animations\", ctx_r1.animations);\n  }\n}\nfunction AreaChartStackedComponent__svg_g_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 13);\n    i0.ɵɵlistener(\"onDomainChange\", function AreaChartStackedComponent__svg_g_10_Template_g_onDomainChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.updateDomain($event));\n    });\n    i0.ɵɵtemplate(1, AreaChartStackedComponent__svg_g_10__svg_g_1_Template, 2, 9, \"g\", 4);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"results\", ctx_r1.results)(\"view\", i0.ɵɵpureFunction2(10, _c24, ctx_r1.timelineWidth, ctx_r1.height))(\"height\", ctx_r1.timelineHeight)(\"scheme\", ctx_r1.scheme)(\"customColors\", ctx_r1.customColors)(\"legend\", ctx_r1.legend)(\"scaleType\", ctx_r1.scaleType);\n    i0.ɵɵattribute(\"transform\", ctx_r1.timelineTransform);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.results)(\"ngForTrackBy\", ctx_r1.trackBy);\n  }\n}\nconst _c26 = [\"ngx-charts-bar\", \"\"];\nfunction BarComponent__svg_defs_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"defs\");\n    i0.ɵɵelement(1, \"g\", 2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"orientation\", ctx_r0.orientation)(\"name\", ctx_r0.gradientId)(\"stops\", ctx_r0.gradientStops);\n  }\n}\nconst _c27 = [\"ngx-charts-bar-label\", \"\"];\nconst _c28 = [\"ngx-charts-series-horizontal\", \"\"];\nfunction SeriesHorizontal__svg_g_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 2);\n    i0.ɵɵlistener(\"select\", function SeriesHorizontal__svg_g_0_Template_g_select_0_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.click($event));\n    })(\"activate\", function SeriesHorizontal__svg_g_0_Template_g_activate_0_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.activate.emit($event));\n    })(\"deactivate\", function SeriesHorizontal__svg_g_0_Template_g_deactivate_0_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.deactivate.emit($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const bar_r3 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"@animationState\", \"active\")(\"width\", bar_r3.width)(\"height\", bar_r3.height)(\"x\", bar_r3.x)(\"y\", bar_r3.y)(\"fill\", bar_r3.color)(\"stops\", bar_r3.gradientStops)(\"data\", bar_r3.data)(\"orientation\", ctx_r1.barOrientation.Horizontal)(\"roundEdges\", bar_r3.roundEdges)(\"gradient\", ctx_r1.gradient)(\"isActive\", ctx_r1.isActive(bar_r3.data))(\"ariaLabel\", bar_r3.ariaLabel)(\"animations\", ctx_r1.animations)(\"tooltipDisabled\", ctx_r1.tooltipDisabled)(\"tooltipPlacement\", ctx_r1.tooltipPlacement)(\"tooltipType\", ctx_r1.tooltipType)(\"tooltipTitle\", ctx_r1.tooltipTemplate ? undefined : bar_r3.tooltipText)(\"tooltipTemplate\", ctx_r1.tooltipTemplate)(\"tooltipContext\", bar_r3.data)(\"noBarWhenZero\", ctx_r1.noBarWhenZero);\n  }\n}\nfunction SeriesHorizontal__svg_g_1__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 4);\n    i0.ɵɵlistener(\"dimensionsChanged\", function SeriesHorizontal__svg_g_1__svg_g_1_Template_g_dimensionsChanged_0_listener($event) {\n      const i_r5 = i0.ɵɵrestoreView(_r4).index;\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.dataLabelWidthChanged.emit({\n        size: $event,\n        index: i_r5\n      }));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const b_r6 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"barX\", b_r6.x)(\"barY\", b_r6.y)(\"barWidth\", b_r6.width)(\"barHeight\", b_r6.height)(\"value\", b_r6.total)(\"valueFormatting\", ctx_r1.dataLabelFormatting)(\"orientation\", ctx_r1.barOrientation.Horizontal);\n  }\n}\nfunction SeriesHorizontal__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, SeriesHorizontal__svg_g_1__svg_g_1_Template, 1, 7, \"g\", 3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.barsForDataLabels)(\"ngForTrackBy\", ctx_r1.trackDataLabelBy);\n  }\n}\nfunction BarHorizontalComponent__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 5);\n    i0.ɵɵlistener(\"dimensionsChanged\", function BarHorizontalComponent__svg_g_2_Template_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.updateXAxisHeight($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"xScale\", ctx_r1.xScale)(\"dims\", ctx_r1.dims)(\"showGridLines\", ctx_r1.showGridLines)(\"showLabel\", ctx_r1.showXAxisLabel)(\"labelText\", ctx_r1.xAxisLabel)(\"trimTicks\", ctx_r1.trimXAxisTicks)(\"rotateTicks\", ctx_r1.rotateXAxisTicks)(\"maxTickLength\", ctx_r1.maxXAxisTickLength)(\"tickFormatting\", ctx_r1.xAxisTickFormatting)(\"ticks\", ctx_r1.xAxisTicks)(\"wrapTicks\", ctx_r1.wrapTicks);\n  }\n}\nfunction BarHorizontalComponent__svg_g_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 6);\n    i0.ɵɵlistener(\"dimensionsChanged\", function BarHorizontalComponent__svg_g_3_Template_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.updateYAxisWidth($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"yScale\", ctx_r1.yScale)(\"dims\", ctx_r1.dims)(\"showLabel\", ctx_r1.showYAxisLabel)(\"labelText\", ctx_r1.yAxisLabel)(\"trimTicks\", ctx_r1.trimYAxisTicks)(\"maxTickLength\", ctx_r1.maxYAxisTickLength)(\"tickFormatting\", ctx_r1.yAxisTickFormatting)(\"ticks\", ctx_r1.yAxisTicks)(\"yAxisOffset\", ctx_r1.dataLabelMaxWidth.negative)(\"wrapTicks\", ctx_r1.wrapTicks);\n  }\n}\nfunction BarHorizontal2DComponent__svg_g_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 6);\n    i0.ɵɵlistener(\"dimensionsChanged\", function BarHorizontal2DComponent__svg_g_3_Template_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.updateXAxisHeight($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"xScale\", ctx_r1.valueScale)(\"dims\", ctx_r1.dims)(\"showGridLines\", ctx_r1.showGridLines)(\"showLabel\", ctx_r1.showXAxisLabel)(\"labelText\", ctx_r1.xAxisLabel)(\"trimTicks\", ctx_r1.trimXAxisTicks)(\"rotateTicks\", ctx_r1.rotateXAxisTicks)(\"maxTickLength\", ctx_r1.maxXAxisTickLength)(\"tickFormatting\", ctx_r1.xAxisTickFormatting)(\"ticks\", ctx_r1.xAxisTicks)(\"wrapTicks\", ctx_r1.wrapTicks);\n  }\n}\nfunction BarHorizontal2DComponent__svg_g_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 7);\n    i0.ɵɵlistener(\"dimensionsChanged\", function BarHorizontal2DComponent__svg_g_4_Template_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.updateYAxisWidth($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"yScale\", ctx_r1.groupScale)(\"dims\", ctx_r1.dims)(\"showLabel\", ctx_r1.showYAxisLabel)(\"labelText\", ctx_r1.yAxisLabel)(\"trimTicks\", ctx_r1.trimYAxisTicks)(\"maxTickLength\", ctx_r1.maxYAxisTickLength)(\"tickFormatting\", ctx_r1.yAxisTickFormatting)(\"ticks\", ctx_r1.yAxisTicks)(\"yAxisOffset\", ctx_r1.dataLabelMaxWidth.negative)(\"wrapTicks\", ctx_r1.wrapTicks);\n  }\n}\nfunction BarHorizontal2DComponent__svg_g_5__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"g\", 9);\n    i0.ɵɵlistener(\"select\", function BarHorizontal2DComponent__svg_g_5__svg_g_1_Template_g_select_1_listener($event) {\n      const group_r5 = i0.ɵɵrestoreView(_r4).$implicit;\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onClick($event, group_r5));\n    })(\"activate\", function BarHorizontal2DComponent__svg_g_5__svg_g_1_Template_g_activate_1_listener($event) {\n      const group_r5 = i0.ɵɵrestoreView(_r4).$implicit;\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onActivate($event, group_r5));\n    })(\"deactivate\", function BarHorizontal2DComponent__svg_g_5__svg_g_1_Template_g_deactivate_1_listener($event) {\n      const group_r5 = i0.ɵɵrestoreView(_r4).$implicit;\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onDeactivate($event, group_r5));\n    })(\"dataLabelWidthChanged\", function BarHorizontal2DComponent__svg_g_5__svg_g_1_Template_g_dataLabelWidthChanged_1_listener($event) {\n      const index_r6 = i0.ɵɵrestoreView(_r4).index;\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onDataLabelMaxWidthChanged($event, index_r6));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const group_r5 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"@animationState\", \"active\");\n    i0.ɵɵattribute(\"transform\", ctx_r1.groupTransform(group_r5));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"xScale\", ctx_r1.valueScale)(\"activeEntries\", ctx_r1.activeEntries)(\"yScale\", ctx_r1.innerScale)(\"colors\", ctx_r1.colors)(\"series\", group_r5.series)(\"dims\", ctx_r1.dims)(\"gradient\", ctx_r1.gradient)(\"tooltipDisabled\", ctx_r1.tooltipDisabled)(\"tooltipTemplate\", ctx_r1.tooltipTemplate)(\"seriesName\", group_r5.name)(\"roundEdges\", ctx_r1.roundEdges)(\"animations\", ctx_r1.animations)(\"showDataLabel\", ctx_r1.showDataLabel)(\"dataLabelFormatting\", ctx_r1.dataLabelFormatting)(\"noBarWhenZero\", ctx_r1.noBarWhenZero);\n  }\n}\nfunction BarHorizontal2DComponent__svg_g_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, BarHorizontal2DComponent__svg_g_5__svg_g_1_Template, 2, 17, \"g\", 8);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.results)(\"ngForTrackBy\", ctx_r1.trackBy);\n  }\n}\nfunction BarHorizontal2DComponent__svg_g_6__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"g\", 9);\n    i0.ɵɵlistener(\"select\", function BarHorizontal2DComponent__svg_g_6__svg_g_1_Template_g_select_1_listener($event) {\n      const group_r8 = i0.ɵɵrestoreView(_r7).$implicit;\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onClick($event, group_r8));\n    })(\"activate\", function BarHorizontal2DComponent__svg_g_6__svg_g_1_Template_g_activate_1_listener($event) {\n      const group_r8 = i0.ɵɵrestoreView(_r7).$implicit;\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onActivate($event, group_r8));\n    })(\"deactivate\", function BarHorizontal2DComponent__svg_g_6__svg_g_1_Template_g_deactivate_1_listener($event) {\n      const group_r8 = i0.ɵɵrestoreView(_r7).$implicit;\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onDeactivate($event, group_r8));\n    })(\"dataLabelWidthChanged\", function BarHorizontal2DComponent__svg_g_6__svg_g_1_Template_g_dataLabelWidthChanged_1_listener($event) {\n      const index_r9 = i0.ɵɵrestoreView(_r7).index;\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onDataLabelMaxWidthChanged($event, index_r9));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const group_r8 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵattribute(\"transform\", ctx_r1.groupTransform(group_r8));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"xScale\", ctx_r1.valueScale)(\"activeEntries\", ctx_r1.activeEntries)(\"yScale\", ctx_r1.innerScale)(\"colors\", ctx_r1.colors)(\"series\", group_r8.series)(\"dims\", ctx_r1.dims)(\"gradient\", ctx_r1.gradient)(\"tooltipDisabled\", ctx_r1.tooltipDisabled)(\"tooltipTemplate\", ctx_r1.tooltipTemplate)(\"seriesName\", group_r8.name)(\"roundEdges\", ctx_r1.roundEdges)(\"animations\", ctx_r1.animations)(\"showDataLabel\", ctx_r1.showDataLabel)(\"dataLabelFormatting\", ctx_r1.dataLabelFormatting)(\"noBarWhenZero\", ctx_r1.noBarWhenZero);\n  }\n}\nfunction BarHorizontal2DComponent__svg_g_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, BarHorizontal2DComponent__svg_g_6__svg_g_1_Template, 2, 16, \"g\", 8);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.results)(\"ngForTrackBy\", ctx_r1.trackBy);\n  }\n}\nfunction BarHorizontalNormalizedComponent__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 5);\n    i0.ɵɵlistener(\"dimensionsChanged\", function BarHorizontalNormalizedComponent__svg_g_2_Template_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.updateXAxisHeight($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"xScale\", ctx_r1.xScale)(\"dims\", ctx_r1.dims)(\"showGridLines\", ctx_r1.showGridLines)(\"showLabel\", ctx_r1.showXAxisLabel)(\"labelText\", ctx_r1.xAxisLabel)(\"trimTicks\", ctx_r1.trimXAxisTicks)(\"rotateTicks\", ctx_r1.rotateXAxisTicks)(\"maxTickLength\", ctx_r1.maxXAxisTickLength)(\"tickFormatting\", ctx_r1.xAxisTickFormatting)(\"ticks\", ctx_r1.xAxisTicks)(\"wrapTicks\", ctx_r1.wrapTicks);\n  }\n}\nfunction BarHorizontalNormalizedComponent__svg_g_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 6);\n    i0.ɵɵlistener(\"dimensionsChanged\", function BarHorizontalNormalizedComponent__svg_g_3_Template_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.updateYAxisWidth($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"yScale\", ctx_r1.yScale)(\"dims\", ctx_r1.dims)(\"showLabel\", ctx_r1.showYAxisLabel)(\"labelText\", ctx_r1.yAxisLabel)(\"trimTicks\", ctx_r1.trimYAxisTicks)(\"maxTickLength\", ctx_r1.maxYAxisTickLength)(\"tickFormatting\", ctx_r1.yAxisTickFormatting)(\"ticks\", ctx_r1.yAxisTicks)(\"wrapTicks\", ctx_r1.wrapTicks);\n  }\n}\nfunction BarHorizontalNormalizedComponent__svg_g_4__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"g\", 8);\n    i0.ɵɵlistener(\"select\", function BarHorizontalNormalizedComponent__svg_g_4__svg_g_1_Template_g_select_1_listener($event) {\n      const group_r5 = i0.ɵɵrestoreView(_r4).$implicit;\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onClick($event, group_r5));\n    })(\"activate\", function BarHorizontalNormalizedComponent__svg_g_4__svg_g_1_Template_g_activate_1_listener($event) {\n      const group_r5 = i0.ɵɵrestoreView(_r4).$implicit;\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onActivate($event, group_r5));\n    })(\"deactivate\", function BarHorizontalNormalizedComponent__svg_g_4__svg_g_1_Template_g_deactivate_1_listener($event) {\n      const group_r5 = i0.ɵɵrestoreView(_r4).$implicit;\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onDeactivate($event, group_r5));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const group_r5 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"@animationState\", \"active\");\n    i0.ɵɵattribute(\"transform\", ctx_r1.groupTransform(group_r5));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"type\", ctx_r1.barChartType.Normalized)(\"xScale\", ctx_r1.xScale)(\"yScale\", ctx_r1.yScale)(\"activeEntries\", ctx_r1.activeEntries)(\"colors\", ctx_r1.colors)(\"series\", group_r5.series)(\"dims\", ctx_r1.dims)(\"gradient\", ctx_r1.gradient)(\"tooltipDisabled\", ctx_r1.tooltipDisabled)(\"tooltipTemplate\", ctx_r1.tooltipTemplate)(\"seriesName\", group_r5.name)(\"animations\", ctx_r1.animations)(\"noBarWhenZero\", ctx_r1.noBarWhenZero);\n  }\n}\nfunction BarHorizontalNormalizedComponent__svg_g_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, BarHorizontalNormalizedComponent__svg_g_4__svg_g_1_Template, 2, 15, \"g\", 7);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.results)(\"ngForTrackBy\", ctx_r1.trackBy);\n  }\n}\nfunction BarHorizontalNormalizedComponent__svg_g_5__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"g\", 8);\n    i0.ɵɵlistener(\"select\", function BarHorizontalNormalizedComponent__svg_g_5__svg_g_1_Template_g_select_1_listener($event) {\n      const group_r7 = i0.ɵɵrestoreView(_r6).$implicit;\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onClick($event, group_r7));\n    })(\"activate\", function BarHorizontalNormalizedComponent__svg_g_5__svg_g_1_Template_g_activate_1_listener($event) {\n      const group_r7 = i0.ɵɵrestoreView(_r6).$implicit;\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onActivate($event, group_r7));\n    })(\"deactivate\", function BarHorizontalNormalizedComponent__svg_g_5__svg_g_1_Template_g_deactivate_1_listener($event) {\n      const group_r7 = i0.ɵɵrestoreView(_r6).$implicit;\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onDeactivate($event, group_r7));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const group_r7 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵattribute(\"transform\", ctx_r1.groupTransform(group_r7));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"type\", ctx_r1.barChartType.Normalized)(\"xScale\", ctx_r1.xScale)(\"yScale\", ctx_r1.yScale)(\"activeEntries\", ctx_r1.activeEntries)(\"colors\", ctx_r1.colors)(\"series\", group_r7.series)(\"dims\", ctx_r1.dims)(\"gradient\", ctx_r1.gradient)(\"tooltipDisabled\", ctx_r1.tooltipDisabled)(\"tooltipTemplate\", ctx_r1.tooltipTemplate)(\"seriesName\", group_r7.name)(\"animations\", ctx_r1.animations)(\"noBarWhenZero\", ctx_r1.noBarWhenZero);\n  }\n}\nfunction BarHorizontalNormalizedComponent__svg_g_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, BarHorizontalNormalizedComponent__svg_g_5__svg_g_1_Template, 2, 14, \"g\", 7);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.results)(\"ngForTrackBy\", ctx_r1.trackBy);\n  }\n}\nfunction BarHorizontalStackedComponent__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 5);\n    i0.ɵɵlistener(\"dimensionsChanged\", function BarHorizontalStackedComponent__svg_g_2_Template_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.updateXAxisHeight($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"xScale\", ctx_r1.xScale)(\"dims\", ctx_r1.dims)(\"showGridLines\", ctx_r1.showGridLines)(\"showLabel\", ctx_r1.showXAxisLabel)(\"labelText\", ctx_r1.xAxisLabel)(\"trimTicks\", ctx_r1.trimXAxisTicks)(\"rotateTicks\", ctx_r1.rotateXAxisTicks)(\"maxTickLength\", ctx_r1.maxXAxisTickLength)(\"tickFormatting\", ctx_r1.xAxisTickFormatting)(\"ticks\", ctx_r1.xAxisTicks)(\"wrapTicks\", ctx_r1.wrapTicks);\n  }\n}\nfunction BarHorizontalStackedComponent__svg_g_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 6);\n    i0.ɵɵlistener(\"dimensionsChanged\", function BarHorizontalStackedComponent__svg_g_3_Template_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.updateYAxisWidth($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"yScale\", ctx_r1.yScale)(\"dims\", ctx_r1.dims)(\"showLabel\", ctx_r1.showYAxisLabel)(\"labelText\", ctx_r1.yAxisLabel)(\"trimTicks\", ctx_r1.trimYAxisTicks)(\"maxTickLength\", ctx_r1.maxYAxisTickLength)(\"tickFormatting\", ctx_r1.yAxisTickFormatting)(\"ticks\", ctx_r1.yAxisTicks)(\"yAxisOffset\", ctx_r1.dataLabelMaxWidth.negative)(\"wrapTicks\", ctx_r1.wrapTicks);\n  }\n}\nfunction BarHorizontalStackedComponent__svg_g_4__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"g\", 8);\n    i0.ɵɵlistener(\"select\", function BarHorizontalStackedComponent__svg_g_4__svg_g_1_Template_g_select_1_listener($event) {\n      const group_r5 = i0.ɵɵrestoreView(_r4).$implicit;\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onClick($event, group_r5));\n    })(\"activate\", function BarHorizontalStackedComponent__svg_g_4__svg_g_1_Template_g_activate_1_listener($event) {\n      const group_r5 = i0.ɵɵrestoreView(_r4).$implicit;\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onActivate($event, group_r5));\n    })(\"deactivate\", function BarHorizontalStackedComponent__svg_g_4__svg_g_1_Template_g_deactivate_1_listener($event) {\n      const group_r5 = i0.ɵɵrestoreView(_r4).$implicit;\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onDeactivate($event, group_r5));\n    })(\"dataLabelWidthChanged\", function BarHorizontalStackedComponent__svg_g_4__svg_g_1_Template_g_dataLabelWidthChanged_1_listener($event) {\n      const index_r6 = i0.ɵɵrestoreView(_r4).index;\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onDataLabelMaxWidthChanged($event, index_r6));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const group_r5 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"@animationState\", \"active\");\n    i0.ɵɵattribute(\"transform\", ctx_r1.groupTransform(group_r5));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"type\", ctx_r1.barChartType.Stacked)(\"xScale\", ctx_r1.xScale)(\"yScale\", ctx_r1.yScale)(\"colors\", ctx_r1.colors)(\"series\", group_r5.series)(\"activeEntries\", ctx_r1.activeEntries)(\"dims\", ctx_r1.dims)(\"gradient\", ctx_r1.gradient)(\"tooltipDisabled\", ctx_r1.tooltipDisabled)(\"tooltipTemplate\", ctx_r1.tooltipTemplate)(\"seriesName\", group_r5.name)(\"animations\", ctx_r1.animations)(\"showDataLabel\", ctx_r1.showDataLabel)(\"dataLabelFormatting\", ctx_r1.dataLabelFormatting)(\"noBarWhenZero\", ctx_r1.noBarWhenZero);\n  }\n}\nfunction BarHorizontalStackedComponent__svg_g_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, BarHorizontalStackedComponent__svg_g_4__svg_g_1_Template, 2, 17, \"g\", 7);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.results)(\"ngForTrackBy\", ctx_r1.trackBy);\n  }\n}\nfunction BarHorizontalStackedComponent__svg_g_5__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"g\", 8);\n    i0.ɵɵlistener(\"select\", function BarHorizontalStackedComponent__svg_g_5__svg_g_1_Template_g_select_1_listener($event) {\n      const group_r8 = i0.ɵɵrestoreView(_r7).$implicit;\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onClick($event, group_r8));\n    })(\"activate\", function BarHorizontalStackedComponent__svg_g_5__svg_g_1_Template_g_activate_1_listener($event) {\n      const group_r8 = i0.ɵɵrestoreView(_r7).$implicit;\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onActivate($event, group_r8));\n    })(\"deactivate\", function BarHorizontalStackedComponent__svg_g_5__svg_g_1_Template_g_deactivate_1_listener($event) {\n      const group_r8 = i0.ɵɵrestoreView(_r7).$implicit;\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onDeactivate($event, group_r8));\n    })(\"dataLabelWidthChanged\", function BarHorizontalStackedComponent__svg_g_5__svg_g_1_Template_g_dataLabelWidthChanged_1_listener($event) {\n      const index_r9 = i0.ɵɵrestoreView(_r7).index;\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onDataLabelMaxWidthChanged($event, index_r9));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const group_r8 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵattribute(\"transform\", ctx_r1.groupTransform(group_r8));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"type\", ctx_r1.barChartType.Stacked)(\"xScale\", ctx_r1.xScale)(\"yScale\", ctx_r1.yScale)(\"colors\", ctx_r1.colors)(\"series\", group_r8.series)(\"activeEntries\", ctx_r1.activeEntries)(\"dims\", ctx_r1.dims)(\"gradient\", ctx_r1.gradient)(\"tooltipDisabled\", ctx_r1.tooltipDisabled)(\"tooltipTemplate\", ctx_r1.tooltipTemplate)(\"seriesName\", group_r8.name)(\"animations\", ctx_r1.animations)(\"showDataLabel\", ctx_r1.showDataLabel)(\"dataLabelFormatting\", ctx_r1.dataLabelFormatting)(\"noBarWhenZero\", ctx_r1.noBarWhenZero);\n  }\n}\nfunction BarHorizontalStackedComponent__svg_g_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, BarHorizontalStackedComponent__svg_g_5__svg_g_1_Template, 2, 16, \"g\", 7);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.results)(\"ngForTrackBy\", ctx_r1.trackBy);\n  }\n}\nconst _c29 = [\"ngx-charts-series-vertical\", \"\"];\nfunction SeriesVerticalComponent__svg_g_0__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 2);\n    i0.ɵɵlistener(\"select\", function SeriesVerticalComponent__svg_g_0__svg_g_1_Template_g_select_0_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onClick($event));\n    })(\"activate\", function SeriesVerticalComponent__svg_g_0__svg_g_1_Template_g_activate_0_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.activate.emit($event));\n    })(\"deactivate\", function SeriesVerticalComponent__svg_g_0__svg_g_1_Template_g_deactivate_0_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.deactivate.emit($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const bar_r3 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"@animationState\", \"active\")(\"@.disabled\", !ctx_r1.animations)(\"width\", bar_r3.width)(\"height\", bar_r3.height)(\"x\", bar_r3.x)(\"y\", bar_r3.y)(\"fill\", bar_r3.color)(\"stops\", bar_r3.gradientStops)(\"data\", bar_r3.data)(\"orientation\", ctx_r1.barOrientation.Vertical)(\"roundEdges\", bar_r3.roundEdges)(\"gradient\", ctx_r1.gradient)(\"ariaLabel\", bar_r3.ariaLabel)(\"isActive\", ctx_r1.isActive(bar_r3.data))(\"tooltipDisabled\", ctx_r1.tooltipDisabled)(\"tooltipPlacement\", ctx_r1.tooltipPlacement)(\"tooltipType\", ctx_r1.tooltipType)(\"tooltipTitle\", ctx_r1.tooltipTemplate ? undefined : bar_r3.tooltipText)(\"tooltipTemplate\", ctx_r1.tooltipTemplate)(\"tooltipContext\", bar_r3.data)(\"noBarWhenZero\", ctx_r1.noBarWhenZero)(\"animations\", ctx_r1.animations);\n  }\n}\nfunction SeriesVerticalComponent__svg_g_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, SeriesVerticalComponent__svg_g_0__svg_g_1_Template, 1, 22, \"g\", 1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.bars)(\"ngForTrackBy\", ctx_r1.trackBy);\n  }\n}\nfunction SeriesVerticalComponent__svg_g_1__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 2);\n    i0.ɵɵlistener(\"select\", function SeriesVerticalComponent__svg_g_1__svg_g_1_Template_g_select_0_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onClick($event));\n    })(\"activate\", function SeriesVerticalComponent__svg_g_1__svg_g_1_Template_g_activate_0_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.activate.emit($event));\n    })(\"deactivate\", function SeriesVerticalComponent__svg_g_1__svg_g_1_Template_g_deactivate_0_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.deactivate.emit($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const bar_r5 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"width\", bar_r5.width)(\"height\", bar_r5.height)(\"x\", bar_r5.x)(\"y\", bar_r5.y)(\"fill\", bar_r5.color)(\"stops\", bar_r5.gradientStops)(\"data\", bar_r5.data)(\"orientation\", ctx_r1.barOrientation.Vertical)(\"roundEdges\", bar_r5.roundEdges)(\"gradient\", ctx_r1.gradient)(\"ariaLabel\", bar_r5.ariaLabel)(\"isActive\", ctx_r1.isActive(bar_r5.data))(\"tooltipDisabled\", ctx_r1.tooltipDisabled)(\"tooltipPlacement\", ctx_r1.tooltipPlacement)(\"tooltipType\", ctx_r1.tooltipType)(\"tooltipTitle\", ctx_r1.tooltipTemplate ? undefined : bar_r5.tooltipText)(\"tooltipTemplate\", ctx_r1.tooltipTemplate)(\"tooltipContext\", bar_r5.data)(\"noBarWhenZero\", ctx_r1.noBarWhenZero)(\"animations\", ctx_r1.animations);\n  }\n}\nfunction SeriesVerticalComponent__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, SeriesVerticalComponent__svg_g_1__svg_g_1_Template, 1, 20, \"g\", 1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.bars)(\"ngForTrackBy\", ctx_r1.trackBy);\n  }\n}\nfunction SeriesVerticalComponent__svg_g_2__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 4);\n    i0.ɵɵlistener(\"dimensionsChanged\", function SeriesVerticalComponent__svg_g_2__svg_g_1_Template_g_dimensionsChanged_0_listener($event) {\n      const i_r7 = i0.ɵɵrestoreView(_r6).index;\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.dataLabelHeightChanged.emit({\n        size: $event,\n        index: i_r7\n      }));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const b_r8 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"barX\", b_r8.x)(\"barY\", b_r8.y)(\"barWidth\", b_r8.width)(\"barHeight\", b_r8.height)(\"value\", b_r8.total)(\"valueFormatting\", ctx_r1.dataLabelFormatting)(\"orientation\", ctx_r1.barOrientation.Vertical);\n  }\n}\nfunction SeriesVerticalComponent__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, SeriesVerticalComponent__svg_g_2__svg_g_1_Template, 1, 7, \"g\", 3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.barsForDataLabels)(\"ngForTrackBy\", ctx_r1.trackDataLabelBy);\n  }\n}\nfunction BarVerticalComponent__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 5);\n    i0.ɵɵlistener(\"dimensionsChanged\", function BarVerticalComponent__svg_g_2_Template_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.updateXAxisHeight($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"xScale\", ctx_r1.xScale)(\"dims\", ctx_r1.dims)(\"showGridLines\", ctx_r1.showGridLines)(\"showLabel\", ctx_r1.showXAxisLabel)(\"labelText\", ctx_r1.xAxisLabel)(\"trimTicks\", ctx_r1.trimXAxisTicks)(\"rotateTicks\", ctx_r1.rotateXAxisTicks)(\"maxTickLength\", ctx_r1.maxXAxisTickLength)(\"tickFormatting\", ctx_r1.xAxisTickFormatting)(\"ticks\", ctx_r1.xAxisTicks)(\"xAxisOffset\", ctx_r1.dataLabelMaxHeight.negative)(\"wrapTicks\", ctx_r1.wrapTicks);\n  }\n}\nfunction BarVerticalComponent__svg_g_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 6);\n    i0.ɵɵlistener(\"dimensionsChanged\", function BarVerticalComponent__svg_g_3_Template_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.updateYAxisWidth($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"yScale\", ctx_r1.yScale)(\"dims\", ctx_r1.dims)(\"showGridLines\", ctx_r1.showGridLines)(\"showLabel\", ctx_r1.showYAxisLabel)(\"labelText\", ctx_r1.yAxisLabel)(\"trimTicks\", ctx_r1.trimYAxisTicks)(\"maxTickLength\", ctx_r1.maxYAxisTickLength)(\"tickFormatting\", ctx_r1.yAxisTickFormatting)(\"ticks\", ctx_r1.yAxisTicks)(\"wrapTicks\", ctx_r1.wrapTicks);\n  }\n}\nfunction BarVertical2DComponent__svg_g_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 6);\n    i0.ɵɵlistener(\"dimensionsChanged\", function BarVertical2DComponent__svg_g_3_Template_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.updateXAxisHeight($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"xScale\", ctx_r1.groupScale)(\"dims\", ctx_r1.dims)(\"showLabel\", ctx_r1.showXAxisLabel)(\"labelText\", ctx_r1.xAxisLabel)(\"trimTicks\", ctx_r1.trimXAxisTicks)(\"rotateTicks\", ctx_r1.rotateXAxisTicks)(\"maxTickLength\", ctx_r1.maxXAxisTickLength)(\"tickFormatting\", ctx_r1.xAxisTickFormatting)(\"ticks\", ctx_r1.xAxisTicks)(\"xAxisOffset\", ctx_r1.dataLabelMaxHeight.negative)(\"wrapTicks\", ctx_r1.wrapTicks);\n  }\n}\nfunction BarVertical2DComponent__svg_g_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 7);\n    i0.ɵɵlistener(\"dimensionsChanged\", function BarVertical2DComponent__svg_g_4_Template_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.updateYAxisWidth($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"yScale\", ctx_r1.valueScale)(\"dims\", ctx_r1.dims)(\"showGridLines\", ctx_r1.showGridLines)(\"showLabel\", ctx_r1.showYAxisLabel)(\"labelText\", ctx_r1.yAxisLabel)(\"trimTicks\", ctx_r1.trimYAxisTicks)(\"maxTickLength\", ctx_r1.maxYAxisTickLength)(\"tickFormatting\", ctx_r1.yAxisTickFormatting)(\"ticks\", ctx_r1.yAxisTicks)(\"wrapTicks\", ctx_r1.wrapTicks);\n  }\n}\nfunction BarVertical2DComponent__svg_g_5__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 9);\n    i0.ɵɵlistener(\"select\", function BarVertical2DComponent__svg_g_5__svg_g_1_Template_g_select_0_listener($event) {\n      const group_r5 = i0.ɵɵrestoreView(_r4).$implicit;\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onClick($event, group_r5));\n    })(\"activate\", function BarVertical2DComponent__svg_g_5__svg_g_1_Template_g_activate_0_listener($event) {\n      const group_r5 = i0.ɵɵrestoreView(_r4).$implicit;\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onActivate($event, group_r5));\n    })(\"deactivate\", function BarVertical2DComponent__svg_g_5__svg_g_1_Template_g_deactivate_0_listener($event) {\n      const group_r5 = i0.ɵɵrestoreView(_r4).$implicit;\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onDeactivate($event, group_r5));\n    })(\"dataLabelHeightChanged\", function BarVertical2DComponent__svg_g_5__svg_g_1_Template_g_dataLabelHeightChanged_0_listener($event) {\n      const index_r6 = i0.ɵɵrestoreView(_r4).index;\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onDataLabelMaxHeightChanged($event, index_r6));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const group_r5 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"@animationState\", \"active\")(\"activeEntries\", ctx_r1.activeEntries)(\"xScale\", ctx_r1.innerScale)(\"yScale\", ctx_r1.valueScale)(\"colors\", ctx_r1.colors)(\"series\", group_r5.series)(\"dims\", ctx_r1.dims)(\"gradient\", ctx_r1.gradient)(\"tooltipDisabled\", ctx_r1.tooltipDisabled)(\"tooltipTemplate\", ctx_r1.tooltipTemplate)(\"showDataLabel\", ctx_r1.showDataLabel)(\"dataLabelFormatting\", ctx_r1.dataLabelFormatting)(\"seriesName\", group_r5.name)(\"roundEdges\", ctx_r1.roundEdges)(\"animations\", ctx_r1.animations)(\"noBarWhenZero\", ctx_r1.noBarWhenZero);\n    i0.ɵɵattribute(\"transform\", ctx_r1.groupTransform(group_r5));\n  }\n}\nfunction BarVertical2DComponent__svg_g_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, BarVertical2DComponent__svg_g_5__svg_g_1_Template, 1, 17, \"g\", 8);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.results)(\"ngForTrackBy\", ctx_r1.trackBy);\n  }\n}\nfunction BarVertical2DComponent__svg_g_6__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 9);\n    i0.ɵɵlistener(\"select\", function BarVertical2DComponent__svg_g_6__svg_g_1_Template_g_select_0_listener($event) {\n      const group_r8 = i0.ɵɵrestoreView(_r7).$implicit;\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onClick($event, group_r8));\n    })(\"activate\", function BarVertical2DComponent__svg_g_6__svg_g_1_Template_g_activate_0_listener($event) {\n      const group_r8 = i0.ɵɵrestoreView(_r7).$implicit;\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onActivate($event, group_r8));\n    })(\"deactivate\", function BarVertical2DComponent__svg_g_6__svg_g_1_Template_g_deactivate_0_listener($event) {\n      const group_r8 = i0.ɵɵrestoreView(_r7).$implicit;\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onDeactivate($event, group_r8));\n    })(\"dataLabelHeightChanged\", function BarVertical2DComponent__svg_g_6__svg_g_1_Template_g_dataLabelHeightChanged_0_listener($event) {\n      const index_r9 = i0.ɵɵrestoreView(_r7).index;\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onDataLabelMaxHeightChanged($event, index_r9));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const group_r8 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"activeEntries\", ctx_r1.activeEntries)(\"xScale\", ctx_r1.innerScale)(\"yScale\", ctx_r1.valueScale)(\"colors\", ctx_r1.colors)(\"series\", group_r8.series)(\"dims\", ctx_r1.dims)(\"gradient\", ctx_r1.gradient)(\"tooltipDisabled\", ctx_r1.tooltipDisabled)(\"tooltipTemplate\", ctx_r1.tooltipTemplate)(\"showDataLabel\", ctx_r1.showDataLabel)(\"dataLabelFormatting\", ctx_r1.dataLabelFormatting)(\"seriesName\", group_r8.name)(\"roundEdges\", ctx_r1.roundEdges)(\"animations\", ctx_r1.animations)(\"noBarWhenZero\", ctx_r1.noBarWhenZero);\n    i0.ɵɵattribute(\"transform\", ctx_r1.groupTransform(group_r8));\n  }\n}\nfunction BarVertical2DComponent__svg_g_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, BarVertical2DComponent__svg_g_6__svg_g_1_Template, 1, 16, \"g\", 8);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.results)(\"ngForTrackBy\", ctx_r1.trackBy);\n  }\n}\nfunction BarVerticalNormalizedComponent__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 5);\n    i0.ɵɵlistener(\"dimensionsChanged\", function BarVerticalNormalizedComponent__svg_g_2_Template_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.updateXAxisHeight($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"xScale\", ctx_r1.xScale)(\"dims\", ctx_r1.dims)(\"showLabel\", ctx_r1.showXAxisLabel)(\"labelText\", ctx_r1.xAxisLabel)(\"trimTicks\", ctx_r1.trimXAxisTicks)(\"rotateTicks\", ctx_r1.rotateXAxisTicks)(\"maxTickLength\", ctx_r1.maxXAxisTickLength)(\"tickFormatting\", ctx_r1.xAxisTickFormatting)(\"ticks\", ctx_r1.xAxisTicks)(\"wrapTicks\", ctx_r1.wrapTicks);\n  }\n}\nfunction BarVerticalNormalizedComponent__svg_g_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 6);\n    i0.ɵɵlistener(\"dimensionsChanged\", function BarVerticalNormalizedComponent__svg_g_3_Template_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.updateYAxisWidth($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"yScale\", ctx_r1.yScale)(\"dims\", ctx_r1.dims)(\"showGridLines\", ctx_r1.showGridLines)(\"showLabel\", ctx_r1.showYAxisLabel)(\"labelText\", ctx_r1.yAxisLabel)(\"trimTicks\", ctx_r1.trimYAxisTicks)(\"maxTickLength\", ctx_r1.maxYAxisTickLength)(\"tickFormatting\", ctx_r1.yAxisTickFormatting)(\"ticks\", ctx_r1.yAxisTicks)(\"wrapTicks\", ctx_r1.wrapTicks);\n  }\n}\nfunction BarVerticalNormalizedComponent__svg_g_4__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"g\", 8);\n    i0.ɵɵlistener(\"select\", function BarVerticalNormalizedComponent__svg_g_4__svg_g_1_Template_g_select_1_listener($event) {\n      const group_r5 = i0.ɵɵrestoreView(_r4).$implicit;\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onClick($event, group_r5));\n    })(\"activate\", function BarVerticalNormalizedComponent__svg_g_4__svg_g_1_Template_g_activate_1_listener($event) {\n      const group_r5 = i0.ɵɵrestoreView(_r4).$implicit;\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onActivate($event, group_r5));\n    })(\"deactivate\", function BarVerticalNormalizedComponent__svg_g_4__svg_g_1_Template_g_deactivate_1_listener($event) {\n      const group_r5 = i0.ɵɵrestoreView(_r4).$implicit;\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onDeactivate($event, group_r5));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const group_r5 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"@animationState\", \"active\");\n    i0.ɵɵattribute(\"transform\", ctx_r1.groupTransform(group_r5));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"type\", ctx_r1.barChartType.Normalized)(\"xScale\", ctx_r1.xScale)(\"yScale\", ctx_r1.yScale)(\"activeEntries\", ctx_r1.activeEntries)(\"colors\", ctx_r1.colors)(\"series\", group_r5.series)(\"dims\", ctx_r1.dims)(\"gradient\", ctx_r1.gradient)(\"tooltipDisabled\", ctx_r1.tooltipDisabled)(\"tooltipTemplate\", ctx_r1.tooltipTemplate)(\"seriesName\", group_r5.name)(\"animations\", ctx_r1.animations)(\"noBarWhenZero\", ctx_r1.noBarWhenZero);\n  }\n}\nfunction BarVerticalNormalizedComponent__svg_g_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, BarVerticalNormalizedComponent__svg_g_4__svg_g_1_Template, 2, 15, \"g\", 7);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.results)(\"ngForTrackBy\", ctx_r1.trackBy);\n  }\n}\nfunction BarVerticalNormalizedComponent__svg_g_5__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"g\", 8);\n    i0.ɵɵlistener(\"select\", function BarVerticalNormalizedComponent__svg_g_5__svg_g_1_Template_g_select_1_listener($event) {\n      const group_r7 = i0.ɵɵrestoreView(_r6).$implicit;\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onClick($event, group_r7));\n    })(\"activate\", function BarVerticalNormalizedComponent__svg_g_5__svg_g_1_Template_g_activate_1_listener($event) {\n      const group_r7 = i0.ɵɵrestoreView(_r6).$implicit;\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onActivate($event, group_r7));\n    })(\"deactivate\", function BarVerticalNormalizedComponent__svg_g_5__svg_g_1_Template_g_deactivate_1_listener($event) {\n      const group_r7 = i0.ɵɵrestoreView(_r6).$implicit;\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onDeactivate($event, group_r7));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const group_r7 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵattribute(\"transform\", ctx_r1.groupTransform(group_r7));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"type\", ctx_r1.barChartType.Normalized)(\"xScale\", ctx_r1.xScale)(\"yScale\", ctx_r1.yScale)(\"activeEntries\", ctx_r1.activeEntries)(\"colors\", ctx_r1.colors)(\"series\", group_r7.series)(\"dims\", ctx_r1.dims)(\"gradient\", ctx_r1.gradient)(\"tooltipDisabled\", ctx_r1.tooltipDisabled)(\"tooltipTemplate\", ctx_r1.tooltipTemplate)(\"seriesName\", group_r7.name)(\"animations\", ctx_r1.animations)(\"noBarWhenZero\", ctx_r1.noBarWhenZero);\n  }\n}\nfunction BarVerticalNormalizedComponent__svg_g_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, BarVerticalNormalizedComponent__svg_g_5__svg_g_1_Template, 2, 14, \"g\", 7);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.results)(\"ngForTrackBy\", ctx_r1.trackBy);\n  }\n}\nfunction BarVerticalStackedComponent__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 5);\n    i0.ɵɵlistener(\"dimensionsChanged\", function BarVerticalStackedComponent__svg_g_2_Template_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.updateXAxisHeight($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"xScale\", ctx_r1.xScale)(\"dims\", ctx_r1.dims)(\"showLabel\", ctx_r1.showXAxisLabel)(\"labelText\", ctx_r1.xAxisLabel)(\"trimTicks\", ctx_r1.trimXAxisTicks)(\"rotateTicks\", ctx_r1.rotateXAxisTicks)(\"maxTickLength\", ctx_r1.maxXAxisTickLength)(\"tickFormatting\", ctx_r1.xAxisTickFormatting)(\"ticks\", ctx_r1.xAxisTicks)(\"xAxisOffset\", ctx_r1.dataLabelMaxHeight.negative)(\"wrapTicks\", ctx_r1.wrapTicks);\n  }\n}\nfunction BarVerticalStackedComponent__svg_g_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 6);\n    i0.ɵɵlistener(\"dimensionsChanged\", function BarVerticalStackedComponent__svg_g_3_Template_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.updateYAxisWidth($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"yScale\", ctx_r1.yScale)(\"dims\", ctx_r1.dims)(\"showGridLines\", ctx_r1.showGridLines)(\"showLabel\", ctx_r1.showYAxisLabel)(\"labelText\", ctx_r1.yAxisLabel)(\"trimTicks\", ctx_r1.trimYAxisTicks)(\"maxTickLength\", ctx_r1.maxYAxisTickLength)(\"tickFormatting\", ctx_r1.yAxisTickFormatting)(\"ticks\", ctx_r1.yAxisTicks)(\"wrapTicks\", ctx_r1.wrapTicks);\n  }\n}\nfunction BarVerticalStackedComponent__svg_g_4__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"g\", 8);\n    i0.ɵɵlistener(\"select\", function BarVerticalStackedComponent__svg_g_4__svg_g_1_Template_g_select_1_listener($event) {\n      const group_r5 = i0.ɵɵrestoreView(_r4).$implicit;\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onClick($event, group_r5));\n    })(\"activate\", function BarVerticalStackedComponent__svg_g_4__svg_g_1_Template_g_activate_1_listener($event) {\n      const group_r5 = i0.ɵɵrestoreView(_r4).$implicit;\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onActivate($event, group_r5));\n    })(\"deactivate\", function BarVerticalStackedComponent__svg_g_4__svg_g_1_Template_g_deactivate_1_listener($event) {\n      const group_r5 = i0.ɵɵrestoreView(_r4).$implicit;\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onDeactivate($event, group_r5));\n    })(\"dataLabelHeightChanged\", function BarVerticalStackedComponent__svg_g_4__svg_g_1_Template_g_dataLabelHeightChanged_1_listener($event) {\n      const index_r6 = i0.ɵɵrestoreView(_r4).index;\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onDataLabelMaxHeightChanged($event, index_r6));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const group_r5 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"@animationState\", \"active\");\n    i0.ɵɵattribute(\"transform\", ctx_r1.groupTransform(group_r5));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"type\", ctx_r1.barChartType.Stacked)(\"xScale\", ctx_r1.xScale)(\"yScale\", ctx_r1.yScale)(\"activeEntries\", ctx_r1.activeEntries)(\"colors\", ctx_r1.colors)(\"series\", group_r5.series)(\"dims\", ctx_r1.dims)(\"gradient\", ctx_r1.gradient)(\"tooltipDisabled\", ctx_r1.tooltipDisabled)(\"tooltipTemplate\", ctx_r1.tooltipTemplate)(\"showDataLabel\", ctx_r1.showDataLabel)(\"dataLabelFormatting\", ctx_r1.dataLabelFormatting)(\"seriesName\", group_r5.name)(\"animations\", ctx_r1.animations)(\"noBarWhenZero\", ctx_r1.noBarWhenZero);\n  }\n}\nfunction BarVerticalStackedComponent__svg_g_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, BarVerticalStackedComponent__svg_g_4__svg_g_1_Template, 2, 17, \"g\", 7);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.results)(\"ngForTrackBy\", ctx_r1.trackBy);\n  }\n}\nfunction BarVerticalStackedComponent__svg_g_5__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"g\", 8);\n    i0.ɵɵlistener(\"select\", function BarVerticalStackedComponent__svg_g_5__svg_g_1_Template_g_select_1_listener($event) {\n      const group_r8 = i0.ɵɵrestoreView(_r7).$implicit;\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onClick($event, group_r8));\n    })(\"activate\", function BarVerticalStackedComponent__svg_g_5__svg_g_1_Template_g_activate_1_listener($event) {\n      const group_r8 = i0.ɵɵrestoreView(_r7).$implicit;\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onActivate($event, group_r8));\n    })(\"deactivate\", function BarVerticalStackedComponent__svg_g_5__svg_g_1_Template_g_deactivate_1_listener($event) {\n      const group_r8 = i0.ɵɵrestoreView(_r7).$implicit;\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onDeactivate($event, group_r8));\n    })(\"dataLabelHeightChanged\", function BarVerticalStackedComponent__svg_g_5__svg_g_1_Template_g_dataLabelHeightChanged_1_listener($event) {\n      const index_r9 = i0.ɵɵrestoreView(_r7).index;\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onDataLabelMaxHeightChanged($event, index_r9));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const group_r8 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵattribute(\"transform\", ctx_r1.groupTransform(group_r8));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"type\", ctx_r1.barChartType.Stacked)(\"xScale\", ctx_r1.xScale)(\"yScale\", ctx_r1.yScale)(\"activeEntries\", ctx_r1.activeEntries)(\"colors\", ctx_r1.colors)(\"series\", group_r8.series)(\"dims\", ctx_r1.dims)(\"gradient\", ctx_r1.gradient)(\"tooltipDisabled\", ctx_r1.tooltipDisabled)(\"tooltipTemplate\", ctx_r1.tooltipTemplate)(\"showDataLabel\", ctx_r1.showDataLabel)(\"dataLabelFormatting\", ctx_r1.dataLabelFormatting)(\"seriesName\", group_r8.name)(\"animations\", ctx_r1.animations)(\"noBarWhenZero\", ctx_r1.noBarWhenZero);\n  }\n}\nfunction BarVerticalStackedComponent__svg_g_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, BarVerticalStackedComponent__svg_g_5__svg_g_1_Template, 2, 16, \"g\", 7);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.results)(\"ngForTrackBy\", ctx_r1.trackBy);\n  }\n}\nconst _c30 = [\"ngx-charts-box\", \"\"];\nfunction BoxComponent__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"g\", 5);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"orientation\", ctx_r0.BarOrientation.Vertical)(\"name\", ctx_r0.gradientId)(\"stops\", ctx_r0.gradientStops);\n  }\n}\nfunction BoxComponent__svg_line_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"line\", 6);\n  }\n  if (rf & 2) {\n    const line_r2 = ctx.$implicit;\n    const i_r3 = ctx.index;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"hidden\", ctx_r0.hideBar);\n    i0.ɵɵattribute(\"x1\", line_r2.v1.x)(\"y1\", line_r2.v1.y)(\"x2\", line_r2.v2.x)(\"y2\", line_r2.v2.y)(\"stroke\", ctx_r0.strokeColor)(\"stroke-width\", i_r3 === 2 ? ctx_r0.medianLineWidth : ctx_r0.whiskerStrokeWidth)(\"mask\", i_r3 ? undefined : ctx_r0.maskLine);\n  }\n}\nconst _c31 = [\"ngx-charts-box-series\", \"\"];\nfunction BoxChartComponent__svg_g_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"g\", 5);\n    i0.ɵɵlistener(\"activate\", function BoxChartComponent__svg_g_5_Template_g_activate_1_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onActivate($event));\n    })(\"deactivate\", function BoxChartComponent__svg_g_5_Template_g_deactivate_1_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onDeactivate($event));\n    })(\"select\", function BoxChartComponent__svg_g_5_Template_g_select_1_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onClick($event));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const result_r3 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"xScale\", ctx_r1.xScale)(\"yScale\", ctx_r1.yScale)(\"colors\", ctx_r1.colors)(\"roundEdges\", ctx_r1.roundEdges)(\"strokeColor\", ctx_r1.strokeColor)(\"strokeWidth\", ctx_r1.strokeWidth)(\"tooltipDisabled\", ctx_r1.tooltipDisabled)(\"tooltipTemplate\", ctx_r1.tooltipTemplate)(\"series\", result_r3)(\"dims\", ctx_r1.dims)(\"animations\", ctx_r1.animations)(\"gradient\", ctx_r1.gradient);\n  }\n}\nconst _c32 = [\"ngx-charts-bubble-series\", \"\"];\nfunction BubbleSeriesComponent__svg_g_0__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 2);\n    i0.ɵɵlistener(\"select\", function BubbleSeriesComponent__svg_g_0__svg_g_2_Template_g_select_0_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const circle_r2 = i0.ɵɵnextContext().$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.onClick(circle_r2.data));\n    })(\"activate\", function BubbleSeriesComponent__svg_g_0__svg_g_2_Template_g_activate_0_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const circle_r2 = i0.ɵɵnextContext().$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.activateCircle(circle_r2));\n    })(\"deactivate\", function BubbleSeriesComponent__svg_g_0__svg_g_2_Template_g_deactivate_0_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const circle_r2 = i0.ɵɵnextContext().$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.deactivateCircle(circle_r2));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const circle_r2 = i0.ɵɵnextContext().$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"opacity\", circle_r2.opacity);\n    i0.ɵɵclassProp(\"active\", circle_r2.isActive);\n    i0.ɵɵproperty(\"@animationState\", \"active\")(\"cx\", 0)(\"cy\", 0)(\"r\", circle_r2.radius)(\"fill\", circle_r2.color)(\"pointerEvents\", \"all\")(\"data\", circle_r2.value)(\"classNames\", circle_r2.classNames)(\"tooltipDisabled\", ctx_r2.tooltipDisabled)(\"tooltipPlacement\", ctx_r2.placementTypes.Top)(\"tooltipType\", ctx_r2.styleTypes.tooltip)(\"tooltipTitle\", ctx_r2.tooltipTemplate ? undefined : ctx_r2.getTooltipText(circle_r2))(\"tooltipTemplate\", ctx_r2.tooltipTemplate)(\"tooltipContext\", circle_r2.data);\n  }\n}\nfunction BubbleSeriesComponent__svg_g_0__svg_g_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 2);\n    i0.ɵɵlistener(\"select\", function BubbleSeriesComponent__svg_g_0__svg_g_3_Template_g_select_0_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const circle_r2 = i0.ɵɵnextContext().$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.onClick(circle_r2.data));\n    })(\"activate\", function BubbleSeriesComponent__svg_g_0__svg_g_3_Template_g_activate_0_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const circle_r2 = i0.ɵɵnextContext().$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.activateCircle(circle_r2));\n    })(\"deactivate\", function BubbleSeriesComponent__svg_g_0__svg_g_3_Template_g_deactivate_0_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const circle_r2 = i0.ɵɵnextContext().$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.deactivateCircle(circle_r2));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const circle_r2 = i0.ɵɵnextContext().$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"opacity\", circle_r2.opacity);\n    i0.ɵɵclassProp(\"active\", circle_r2.isActive);\n    i0.ɵɵproperty(\"cx\", 0)(\"cy\", 0)(\"r\", circle_r2.radius)(\"fill\", circle_r2.color)(\"pointerEvents\", \"all\")(\"data\", circle_r2.value)(\"classNames\", circle_r2.classNames)(\"tooltipDisabled\", ctx_r2.tooltipDisabled)(\"tooltipPlacement\", ctx_r2.placementTypes.Top)(\"tooltipType\", ctx_r2.styleTypes.tooltip)(\"tooltipTitle\", ctx_r2.tooltipTemplate ? undefined : ctx_r2.getTooltipText(circle_r2))(\"tooltipTemplate\", ctx_r2.tooltipTemplate)(\"tooltipContext\", circle_r2.data);\n  }\n}\nfunction BubbleSeriesComponent__svg_g_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"g\");\n    i0.ɵɵtemplate(2, BubbleSeriesComponent__svg_g_0__svg_g_2_Template, 1, 18, \"g\", 1)(3, BubbleSeriesComponent__svg_g_0__svg_g_3_Template, 1, 17, \"g\", 1);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const circle_r2 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵattribute(\"transform\", circle_r2.transform);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r2.isSSR);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.isSSR);\n  }\n}\nfunction BubbleChartComponent__svg_g_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 6);\n    i0.ɵɵlistener(\"dimensionsChanged\", function BubbleChartComponent__svg_g_5_Template_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.updateXAxisHeight($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"showGridLines\", ctx_r1.showGridLines)(\"dims\", ctx_r1.dims)(\"xScale\", ctx_r1.xScale)(\"showLabel\", ctx_r1.showXAxisLabel)(\"labelText\", ctx_r1.xAxisLabel)(\"trimTicks\", ctx_r1.trimXAxisTicks)(\"rotateTicks\", ctx_r1.rotateXAxisTicks)(\"maxTickLength\", ctx_r1.maxXAxisTickLength)(\"tickFormatting\", ctx_r1.xAxisTickFormatting)(\"ticks\", ctx_r1.xAxisTicks)(\"wrapTicks\", ctx_r1.wrapTicks);\n  }\n}\nfunction BubbleChartComponent__svg_g_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 7);\n    i0.ɵɵlistener(\"dimensionsChanged\", function BubbleChartComponent__svg_g_6_Template_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.updateYAxisWidth($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"showGridLines\", ctx_r1.showGridLines)(\"yScale\", ctx_r1.yScale)(\"dims\", ctx_r1.dims)(\"showLabel\", ctx_r1.showYAxisLabel)(\"labelText\", ctx_r1.yAxisLabel)(\"trimTicks\", ctx_r1.trimYAxisTicks)(\"maxTickLength\", ctx_r1.maxYAxisTickLength)(\"tickFormatting\", ctx_r1.yAxisTickFormatting)(\"ticks\", ctx_r1.yAxisTicks)(\"wrapTicks\", ctx_r1.wrapTicks);\n  }\n}\nfunction BubbleChartComponent__svg_g_8__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"g\", 9);\n    i0.ɵɵlistener(\"select\", function BubbleChartComponent__svg_g_8__svg_g_1_Template_g_select_1_listener($event) {\n      const series_r5 = i0.ɵɵrestoreView(_r4).$implicit;\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onClick($event, series_r5));\n    })(\"activate\", function BubbleChartComponent__svg_g_8__svg_g_1_Template_g_activate_1_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onActivate($event));\n    })(\"deactivate\", function BubbleChartComponent__svg_g_8__svg_g_1_Template_g_deactivate_1_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onDeactivate($event));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const series_r5 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"@animationState\", \"active\");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"xScale\", ctx_r1.xScale)(\"yScale\", ctx_r1.yScale)(\"rScale\", ctx_r1.rScale)(\"xScaleType\", ctx_r1.xScaleType)(\"yScaleType\", ctx_r1.yScaleType)(\"xAxisLabel\", ctx_r1.xAxisLabel)(\"yAxisLabel\", ctx_r1.yAxisLabel)(\"colors\", ctx_r1.colors)(\"data\", series_r5)(\"activeEntries\", ctx_r1.activeEntries)(\"tooltipDisabled\", ctx_r1.tooltipDisabled)(\"tooltipTemplate\", ctx_r1.tooltipTemplate);\n  }\n}\nfunction BubbleChartComponent__svg_g_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, BubbleChartComponent__svg_g_8__svg_g_1_Template, 2, 13, \"g\", 8);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"clip-path\", ctx_r1.clipPath);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.data)(\"ngForTrackBy\", ctx_r1.trackBy);\n  }\n}\nfunction BubbleChartComponent__svg_g_9__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"g\", 9);\n    i0.ɵɵlistener(\"select\", function BubbleChartComponent__svg_g_9__svg_g_1_Template_g_select_1_listener($event) {\n      const series_r7 = i0.ɵɵrestoreView(_r6).$implicit;\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onClick($event, series_r7));\n    })(\"activate\", function BubbleChartComponent__svg_g_9__svg_g_1_Template_g_activate_1_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onActivate($event));\n    })(\"deactivate\", function BubbleChartComponent__svg_g_9__svg_g_1_Template_g_deactivate_1_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onDeactivate($event));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const series_r7 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"xScale\", ctx_r1.xScale)(\"yScale\", ctx_r1.yScale)(\"rScale\", ctx_r1.rScale)(\"xScaleType\", ctx_r1.xScaleType)(\"yScaleType\", ctx_r1.yScaleType)(\"xAxisLabel\", ctx_r1.xAxisLabel)(\"yAxisLabel\", ctx_r1.yAxisLabel)(\"colors\", ctx_r1.colors)(\"data\", series_r7)(\"activeEntries\", ctx_r1.activeEntries)(\"tooltipDisabled\", ctx_r1.tooltipDisabled)(\"tooltipTemplate\", ctx_r1.tooltipTemplate);\n  }\n}\nfunction BubbleChartComponent__svg_g_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, BubbleChartComponent__svg_g_9__svg_g_1_Template, 2, 12, \"g\", 8);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"clip-path\", ctx_r1.clipPath);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.data)(\"ngForTrackBy\", ctx_r1.trackBy);\n  }\n}\nconst _c33 = [\"ngx-charts-heat-map-cell\", \"\"];\nfunction HeatMapCellComponent__svg_defs_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"defs\");\n    i0.ɵɵelement(1, \"g\", 3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"orientation\", ctx_r0.barOrientation.Vertical)(\"name\", ctx_r0.gradientId)(\"stops\", ctx_r0.gradientStops);\n  }\n}\nconst _c34 = [\"ngx-charts-heat-map-cell-series\", \"\"];\nconst _c35 = (a0, a1, a2) => ({\n  series: a0,\n  name: a1,\n  value: a2\n});\nfunction HeatCellSeriesComponent__svg_g_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 1);\n    i0.ɵɵlistener(\"select\", function HeatCellSeriesComponent__svg_g_0_Template_g_select_0_listener() {\n      const c_r2 = i0.ɵɵrestoreView(_r1).$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.onClick(c_r2.cell));\n    })(\"activate\", function HeatCellSeriesComponent__svg_g_0_Template_g_activate_0_listener() {\n      const c_r2 = i0.ɵɵrestoreView(_r1).$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.activate.emit(c_r2.cell));\n    })(\"deactivate\", function HeatCellSeriesComponent__svg_g_0_Template_g_deactivate_0_listener() {\n      const c_r2 = i0.ɵɵrestoreView(_r1).$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.deactivate.emit(c_r2.cell));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const c_r2 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"x\", c_r2.x)(\"y\", c_r2.y)(\"width\", c_r2.width)(\"height\", c_r2.height)(\"fill\", c_r2.fill)(\"data\", c_r2.data)(\"gradient\", ctx_r2.gradient)(\"animations\", ctx_r2.animations)(\"tooltipDisabled\", ctx_r2.tooltipDisabled)(\"tooltipPlacement\", ctx_r2.placementTypes.Top)(\"tooltipType\", ctx_r2.styleTypes.tooltip)(\"tooltipTitle\", ctx_r2.tooltipTemplate ? undefined : ctx_r2.tooltipText(c_r2))(\"tooltipTemplate\", ctx_r2.tooltipTemplate)(\"tooltipContext\", i0.ɵɵpureFunction3(14, _c35, c_r2.series, c_r2.label, c_r2.data));\n  }\n}\nfunction HeatMapComponent__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 6);\n    i0.ɵɵlistener(\"dimensionsChanged\", function HeatMapComponent__svg_g_2_Template_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.updateXAxisHeight($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"xScale\", ctx_r1.xScale)(\"dims\", ctx_r1.dims)(\"showLabel\", ctx_r1.showXAxisLabel)(\"labelText\", ctx_r1.xAxisLabel)(\"trimTicks\", ctx_r1.trimXAxisTicks)(\"rotateTicks\", ctx_r1.rotateXAxisTicks)(\"maxTickLength\", ctx_r1.maxXAxisTickLength)(\"tickFormatting\", ctx_r1.xAxisTickFormatting)(\"ticks\", ctx_r1.xAxisTicks)(\"wrapTicks\", ctx_r1.wrapTicks);\n  }\n}\nfunction HeatMapComponent__svg_g_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 7);\n    i0.ɵɵlistener(\"dimensionsChanged\", function HeatMapComponent__svg_g_3_Template_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.updateYAxisWidth($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"yScale\", ctx_r1.yScale)(\"dims\", ctx_r1.dims)(\"showLabel\", ctx_r1.showYAxisLabel)(\"labelText\", ctx_r1.yAxisLabel)(\"trimTicks\", ctx_r1.trimYAxisTicks)(\"maxTickLength\", ctx_r1.maxYAxisTickLength)(\"tickFormatting\", ctx_r1.yAxisTickFormatting)(\"ticks\", ctx_r1.yAxisTicks)(\"wrapTicks\", ctx_r1.wrapTicks);\n  }\n}\nfunction HeatMapComponent__svg_rect_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"rect\");\n  }\n  if (rf & 2) {\n    const rect_r4 = ctx.$implicit;\n    i0.ɵɵattribute(\"x\", rect_r4.x)(\"y\", rect_r4.y)(\"rx\", rect_r4.rx)(\"width\", rect_r4.width)(\"height\", rect_r4.height)(\"fill\", rect_r4.fill);\n  }\n}\nconst _c36 = [\"ngx-charts-line\", \"\"];\nfunction LineComponent__svg_g_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵelement(1, \"path\", 1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"@animationState\", \"active\");\n    i0.ɵɵattribute(\"d\", ctx_r0.initialPath)(\"fill\", ctx_r0.fill)(\"stroke\", ctx_r0.stroke);\n  }\n}\nfunction LineComponent__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵelement(1, \"path\", 1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵattribute(\"d\", ctx_r0.initialPath)(\"fill\", ctx_r0.fill)(\"stroke\", ctx_r0.stroke);\n  }\n}\nconst _c37 = [\"ngx-charts-line-series\", \"\"];\nfunction LineSeriesComponent__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"g\", 4);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"orientation\", ctx_r0.barOrientation.Vertical)(\"name\", ctx_r0.gradientId)(\"stops\", ctx_r0.gradientStops);\n  }\n}\nfunction LineSeriesComponent__svg_g_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"g\", 5);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"active\", ctx_r0.isActive(ctx_r0.data))(\"inactive\", ctx_r0.isInactive(ctx_r0.data));\n    i0.ɵɵproperty(\"data\", ctx_r0.data)(\"path\", ctx_r0.outerPath)(\"fill\", ctx_r0.hasGradient ? ctx_r0.gradientUrl : ctx_r0.colors.getColor(ctx_r0.data.name))(\"opacity\", ctx_r0.rangeFillOpacity)(\"animations\", ctx_r0.animations);\n  }\n}\nfunction LineChartComponent__svg_g_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 7);\n    i0.ɵɵlistener(\"dimensionsChanged\", function LineChartComponent__svg_g_5_Template_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.updateXAxisHeight($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"xScale\", ctx_r1.xScale)(\"dims\", ctx_r1.dims)(\"showGridLines\", ctx_r1.showGridLines)(\"showLabel\", ctx_r1.showXAxisLabel)(\"labelText\", ctx_r1.xAxisLabel)(\"trimTicks\", ctx_r1.trimXAxisTicks)(\"rotateTicks\", ctx_r1.rotateXAxisTicks)(\"maxTickLength\", ctx_r1.maxXAxisTickLength)(\"tickFormatting\", ctx_r1.xAxisTickFormatting)(\"ticks\", ctx_r1.xAxisTicks)(\"wrapTicks\", ctx_r1.wrapTicks);\n  }\n}\nfunction LineChartComponent__svg_g_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 8);\n    i0.ɵɵlistener(\"dimensionsChanged\", function LineChartComponent__svg_g_6_Template_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.updateYAxisWidth($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"yScale\", ctx_r1.yScale)(\"dims\", ctx_r1.dims)(\"showGridLines\", ctx_r1.showGridLines)(\"showLabel\", ctx_r1.showYAxisLabel)(\"labelText\", ctx_r1.yAxisLabel)(\"trimTicks\", ctx_r1.trimYAxisTicks)(\"maxTickLength\", ctx_r1.maxYAxisTickLength)(\"tickFormatting\", ctx_r1.yAxisTickFormatting)(\"ticks\", ctx_r1.yAxisTicks)(\"referenceLines\", ctx_r1.referenceLines)(\"showRefLines\", ctx_r1.showRefLines)(\"showRefLabels\", ctx_r1.showRefLabels)(\"wrapTicks\", ctx_r1.wrapTicks);\n  }\n}\nfunction LineChartComponent__svg_g_8__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵelement(1, \"g\", 10);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const series_r4 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"@animationState\", \"active\");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"xScale\", ctx_r1.xScale)(\"yScale\", ctx_r1.yScale)(\"colors\", ctx_r1.colors)(\"data\", series_r4)(\"activeEntries\", ctx_r1.activeEntries)(\"scaleType\", ctx_r1.scaleType)(\"curve\", ctx_r1.curve)(\"rangeFillOpacity\", ctx_r1.rangeFillOpacity)(\"hasRange\", ctx_r1.hasRange)(\"animations\", ctx_r1.animations);\n  }\n}\nfunction LineChartComponent__svg_g_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, LineChartComponent__svg_g_8__svg_g_1_Template, 2, 11, \"g\", 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.results)(\"ngForTrackBy\", ctx_r1.trackBy);\n  }\n}\nfunction LineChartComponent__svg_g_9__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵelement(1, \"g\", 10);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const series_r5 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"xScale\", ctx_r1.xScale)(\"yScale\", ctx_r1.yScale)(\"colors\", ctx_r1.colors)(\"data\", series_r5)(\"activeEntries\", ctx_r1.activeEntries)(\"scaleType\", ctx_r1.scaleType)(\"curve\", ctx_r1.curve)(\"rangeFillOpacity\", ctx_r1.rangeFillOpacity)(\"hasRange\", ctx_r1.hasRange)(\"animations\", ctx_r1.animations);\n  }\n}\nfunction LineChartComponent__svg_g_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, LineChartComponent__svg_g_9__svg_g_1_Template, 2, 10, \"g\", 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.results)(\"ngForTrackBy\", ctx_r1.trackBy);\n  }\n}\nfunction LineChartComponent__svg_g_10__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"g\", 14);\n    i0.ɵɵlistener(\"select\", function LineChartComponent__svg_g_10__svg_g_2_Template_g_select_1_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onClick($event));\n    })(\"activate\", function LineChartComponent__svg_g_10__svg_g_2_Template_g_activate_1_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onActivate($event));\n    })(\"deactivate\", function LineChartComponent__svg_g_10__svg_g_2_Template_g_deactivate_1_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onDeactivate($event));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const series_r8 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"xScale\", ctx_r1.xScale)(\"yScale\", ctx_r1.yScale)(\"colors\", ctx_r1.colors)(\"data\", series_r8)(\"scaleType\", ctx_r1.scaleType)(\"visibleValue\", ctx_r1.hoveredVertical)(\"activeEntries\", ctx_r1.activeEntries)(\"tooltipDisabled\", ctx_r1.tooltipDisabled)(\"tooltipTemplate\", ctx_r1.tooltipTemplate);\n  }\n}\nfunction LineChartComponent__svg_g_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 11);\n    i0.ɵɵlistener(\"mouseleave\", function LineChartComponent__svg_g_10_Template_g_mouseleave_0_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.hideCircles());\n    });\n    i0.ɵɵelementStart(1, \"g\", 12);\n    i0.ɵɵlistener(\"hover\", function LineChartComponent__svg_g_10_Template_g_hover_1_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.updateHoveredVertical($event));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(2, LineChartComponent__svg_g_10__svg_g_2_Template, 2, 9, \"g\", 13);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"dims\", ctx_r1.dims)(\"xSet\", ctx_r1.xSet)(\"xScale\", ctx_r1.xScale)(\"yScale\", ctx_r1.yScale)(\"results\", ctx_r1.results)(\"colors\", ctx_r1.colors)(\"tooltipDisabled\", ctx_r1.tooltipDisabled)(\"tooltipTemplate\", ctx_r1.seriesTooltipTemplate);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.results);\n  }\n}\nfunction LineChartComponent__svg_g_11__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵelement(1, \"g\", 16);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const series_r10 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"xScale\", ctx_r1.timelineXScale)(\"yScale\", ctx_r1.timelineYScale)(\"colors\", ctx_r1.colors)(\"data\", series_r10)(\"scaleType\", ctx_r1.scaleType)(\"curve\", ctx_r1.curve)(\"hasRange\", ctx_r1.hasRange)(\"animations\", ctx_r1.animations);\n  }\n}\nfunction LineChartComponent__svg_g_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 15);\n    i0.ɵɵlistener(\"onDomainChange\", function LineChartComponent__svg_g_11_Template_g_onDomainChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.updateDomain($event));\n    });\n    i0.ɵɵtemplate(1, LineChartComponent__svg_g_11__svg_g_1_Template, 2, 8, \"g\", 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"results\", ctx_r1.results)(\"view\", i0.ɵɵpureFunction2(10, _c24, ctx_r1.timelineWidth, ctx_r1.height))(\"height\", ctx_r1.timelineHeight)(\"scheme\", ctx_r1.scheme)(\"customColors\", ctx_r1.customColors)(\"scaleType\", ctx_r1.scaleType)(\"legend\", ctx_r1.legend);\n    i0.ɵɵattribute(\"transform\", ctx_r1.timelineTransform);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.results)(\"ngForTrackBy\", ctx_r1.trackBy);\n  }\n}\nconst _c38 = [\"ngx-charts-pie-label\", \"\"];\nconst _c39 = [\"ngx-charts-polar-series\", \"\"];\nfunction PolarSeriesComponent__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"g\", 4);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"color\", ctx_r0.seriesColor)(\"name\", ctx_r0.gradientId)(\"startOpacity\", 0.25)(\"endOpacity\", 1)(\"stops\", ctx_r0.gradientStops);\n  }\n}\nfunction PolarSeriesComponent__svg_g_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 5);\n    i0.ɵɵlistener(\"select\", function PolarSeriesComponent__svg_g_4_Template_g_select_0_listener() {\n      const circle_r3 = i0.ɵɵrestoreView(_r2).$implicit;\n      const ctx_r0 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r0.select.emit(circle_r3.data));\n    })(\"activate\", function PolarSeriesComponent__svg_g_4_Template_g_activate_0_listener() {\n      const circle_r3 = i0.ɵɵrestoreView(_r2).$implicit;\n      const ctx_r0 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r0.activate.emit({\n        name: circle_r3.data.series\n      }));\n    })(\"deactivate\", function PolarSeriesComponent__svg_g_4_Template_g_deactivate_0_listener() {\n      const circle_r3 = i0.ɵɵrestoreView(_r2).$implicit;\n      const ctx_r0 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r0.deactivate.emit({\n        name: circle_r3.data.series\n      }));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const circle_r3 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"opacity\", ctx_r0.inactive ? 0.2 : 1);\n    i0.ɵɵproperty(\"cx\", circle_r3.cx)(\"cy\", circle_r3.cy)(\"r\", ctx_r0.circleRadius)(\"fill\", circle_r3.color)(\"tooltipDisabled\", ctx_r0.tooltipDisabled)(\"tooltipPlacement\", ctx_r0.placementTypes.Top)(\"tooltipType\", ctx_r0.styleTypes.tooltip)(\"tooltipTitle\", ctx_r0.tooltipTemplate ? undefined : ctx_r0.tooltipText(circle_r3))(\"tooltipTemplate\", ctx_r0.tooltipTemplate)(\"tooltipContext\", circle_r3.data);\n  }\n}\nfunction PolarChartComponent__svg_g_4__svg_circle_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"circle\", 7);\n  }\n  if (rf & 2) {\n    const r_r1 = ctx.$implicit;\n    i0.ɵɵattribute(\"r\", r_r1);\n  }\n}\nfunction PolarChartComponent__svg_g_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, PolarChartComponent__svg_g_4__svg_circle_1_Template, 1, 1, \"circle\", 6);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.radiusTicks);\n  }\n}\nfunction PolarChartComponent__svg_g_5__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"g\", 9);\n  }\n  if (rf & 2) {\n    const tick_r3 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"data\", tick_r3)(\"radius\", ctx_r1.outerRadius)(\"label\", tick_r3.label)(\"max\", ctx_r1.outerRadius)(\"value\", ctx_r1.showGridLines ? 1 : ctx_r1.outerRadius)(\"explodeSlices\", true)(\"animations\", ctx_r1.animations)(\"labelTrim\", ctx_r1.labelTrim)(\"labelTrimSize\", ctx_r1.labelTrimSize);\n  }\n}\nfunction PolarChartComponent__svg_g_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, PolarChartComponent__svg_g_5__svg_g_1_Template, 1, 9, \"g\", 8);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.thetaTicks);\n  }\n}\nfunction PolarChartComponent__svg_g_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 10);\n    i0.ɵɵlistener(\"dimensionsChanged\", function PolarChartComponent__svg_g_6_Template_g_dimensionsChanged_0_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.updateYAxisWidth($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"yScale\", ctx_r1.yAxisScale)(\"dims\", ctx_r1.yAxisDims)(\"showGridLines\", ctx_r1.showGridLines)(\"showLabel\", ctx_r1.showYAxisLabel)(\"labelText\", ctx_r1.yAxisLabel)(\"trimTicks\", ctx_r1.trimYAxisTicks)(\"maxTickLength\", ctx_r1.maxYAxisTickLength)(\"tickFormatting\", ctx_r1.yAxisTickFormatting)(\"wrapTicks\", ctx_r1.wrapTicks);\n    i0.ɵɵattribute(\"transform\", ctx_r1.transformYAxis);\n  }\n}\nfunction PolarChartComponent__svg_g_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"g\", 11);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"label\", ctx_r1.xAxisLabel)(\"offset\", ctx_r1.labelOffset)(\"orient\", ctx_r1.orientation.Bottom)(\"height\", ctx_r1.dims.height)(\"width\", ctx_r1.dims.width);\n  }\n}\nfunction PolarChartComponent__svg_g_8__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"g\", 13);\n    i0.ɵɵlistener(\"select\", function PolarChartComponent__svg_g_8__svg_g_1_Template_g_select_1_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onClick($event));\n    })(\"activate\", function PolarChartComponent__svg_g_8__svg_g_1_Template_g_activate_1_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onActivate($event));\n    })(\"deactivate\", function PolarChartComponent__svg_g_8__svg_g_1_Template_g_deactivate_1_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onDeactivate($event));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const series_r6 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"@animationState\", \"active\");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"gradient\", ctx_r1.gradient)(\"xScale\", ctx_r1.xScale)(\"yScale\", ctx_r1.yScale)(\"colors\", ctx_r1.colors)(\"data\", series_r6)(\"activeEntries\", ctx_r1.activeEntries)(\"scaleType\", ctx_r1.scaleType)(\"curve\", ctx_r1.curve)(\"rangeFillOpacity\", ctx_r1.rangeFillOpacity)(\"animations\", ctx_r1.animations)(\"tooltipDisabled\", ctx_r1.tooltipDisabled)(\"tooltipTemplate\", ctx_r1.tooltipTemplate);\n  }\n}\nfunction PolarChartComponent__svg_g_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, PolarChartComponent__svg_g_8__svg_g_1_Template, 2, 13, \"g\", 12);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"transform\", ctx_r1.transformPlot);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.results)(\"ngForTrackBy\", ctx_r1.trackBy);\n  }\n}\nfunction PolarChartComponent__svg_g_9__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"g\", 13);\n    i0.ɵɵlistener(\"select\", function PolarChartComponent__svg_g_9__svg_g_1_Template_g_select_1_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onClick($event));\n    })(\"activate\", function PolarChartComponent__svg_g_9__svg_g_1_Template_g_activate_1_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onActivate($event));\n    })(\"deactivate\", function PolarChartComponent__svg_g_9__svg_g_1_Template_g_deactivate_1_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onDeactivate($event));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const series_r8 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"gradient\", ctx_r1.gradient)(\"xScale\", ctx_r1.xScale)(\"yScale\", ctx_r1.yScale)(\"colors\", ctx_r1.colors)(\"data\", series_r8)(\"activeEntries\", ctx_r1.activeEntries)(\"scaleType\", ctx_r1.scaleType)(\"curve\", ctx_r1.curve)(\"rangeFillOpacity\", ctx_r1.rangeFillOpacity)(\"animations\", ctx_r1.animations)(\"tooltipDisabled\", ctx_r1.tooltipDisabled)(\"tooltipTemplate\", ctx_r1.tooltipTemplate);\n  }\n}\nfunction PolarChartComponent__svg_g_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, PolarChartComponent__svg_g_9__svg_g_1_Template, 2, 12, \"g\", 12);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"transform\", ctx_r1.transformPlot);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.results)(\"ngForTrackBy\", ctx_r1.trackBy);\n  }\n}\nconst _c40 = [\"ngx-charts-pie-arc\", \"\"];\nfunction PieArcComponent__svg_defs_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"defs\");\n    i0.ɵɵelement(1, \"g\", 3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"color\", ctx_r0.fill)(\"name\", ctx_r0.radialGradientId)(\"startOpacity\", ctx_r0.startOpacity);\n  }\n}\nconst _c41 = [\"ngx-charts-pie-series\", \"\"];\nfunction PieSeriesComponent__svg_g_0__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"g\", 3);\n  }\n  if (rf & 2) {\n    const arc_r2 = i0.ɵɵnextContext().$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"data\", arc_r2)(\"radius\", ctx_r2.outerRadius)(\"color\", ctx_r2.color(arc_r2))(\"label\", ctx_r2.labelText(arc_r2))(\"labelTrim\", ctx_r2.trimLabels)(\"labelTrimSize\", ctx_r2.maxLabelLength)(\"max\", ctx_r2.max)(\"value\", arc_r2.value)(\"explodeSlices\", ctx_r2.explodeSlices)(\"animations\", ctx_r2.animations);\n  }\n}\nfunction PieSeriesComponent__svg_g_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, PieSeriesComponent__svg_g_0__svg_g_1_Template, 1, 10, \"g\", 1);\n    i0.ɵɵelementStart(2, \"g\", 2);\n    i0.ɵɵlistener(\"select\", function PieSeriesComponent__svg_g_0_Template_g_select_2_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.onClick($event));\n    })(\"activate\", function PieSeriesComponent__svg_g_0_Template_g_activate_2_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.activate.emit($event));\n    })(\"deactivate\", function PieSeriesComponent__svg_g_0_Template_g_deactivate_2_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.deactivate.emit($event));\n    })(\"dblclick\", function PieSeriesComponent__svg_g_0_Template_g_dblclick_2_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.dblclick.emit($event));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const arc_r2 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.labelVisible(arc_r2));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"startAngle\", arc_r2.startAngle)(\"endAngle\", arc_r2.endAngle)(\"innerRadius\", ctx_r2.innerRadius)(\"outerRadius\", ctx_r2.outerRadius)(\"fill\", ctx_r2.color(arc_r2))(\"value\", arc_r2.data.value)(\"gradient\", ctx_r2.gradient)(\"data\", arc_r2.data)(\"max\", ctx_r2.max)(\"explodeSlices\", ctx_r2.explodeSlices)(\"isActive\", ctx_r2.isActive(arc_r2.data))(\"animate\", ctx_r2.animations)(\"tooltipDisabled\", ctx_r2.tooltipDisabled)(\"tooltipPlacement\", ctx_r2.placementTypes.Top)(\"tooltipType\", ctx_r2.styleTypes.tooltip)(\"tooltipTitle\", ctx_r2.getTooltipTitle(arc_r2))(\"tooltipTemplate\", ctx_r2.tooltipTemplate)(\"tooltipContext\", arc_r2.data);\n  }\n}\nconst _c42 = \".pie-label{font-size:11px}.pie-label.animation{animation:.75s ease-in fadeIn}@keyframes fadeIn{0%{opacity:0}to{opacity:1}}.pie-label-line{stroke-dasharray:100%}.pie-label-line.animation{animation:3s linear drawOut;transition:d .75s}@keyframes drawOut{0%{stroke-dashoffset:100%}to{stroke-dashoffset:0}}\\n\";\nconst _c43 = [\"ngx-charts-pie-grid-series\", \"\"];\nfunction PieGridSeriesComponent__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 2);\n    i0.ɵɵlistener(\"select\", function PieGridSeriesComponent__svg_g_1_Template_g_select_0_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onClick($event));\n    })(\"activate\", function PieGridSeriesComponent__svg_g_1_Template_g_activate_0_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.activate.emit($event));\n    })(\"deactivate\", function PieGridSeriesComponent__svg_g_1_Template_g_deactivate_0_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.deactivate.emit($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const arc_r3 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"startAngle\", arc_r3.startAngle)(\"endAngle\", arc_r3.endAngle)(\"innerRadius\", ctx_r1.innerRadius)(\"outerRadius\", ctx_r1.outerRadius)(\"fill\", ctx_r1.color(arc_r3))(\"value\", arc_r3.data.value)(\"data\", arc_r3.data)(\"gradient\", false)(\"pointerEvents\", arc_r3.pointerEvents)(\"animate\", arc_r3.animate);\n    i0.ɵɵattribute(\"class\", arc_r3.class);\n  }\n}\nconst _c44 = a0 => ({\n  data: a0\n});\nfunction PieGridComponent__svg_g_2__svg_text_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"text\", 10);\n  }\n  if (rf & 2) {\n    const series_r3 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"countTo\", series_r3.percent)(\"countSuffix\", \"%\");\n  }\n}\nfunction PieGridComponent__svg_g_2__svg_text_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"text\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const series_r3 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", series_r3.percent.toLocaleString(), \" \");\n  }\n}\nfunction PieGridComponent__svg_g_2__svg_text_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"text\", 12);\n  }\n  if (rf & 2) {\n    const series_r3 = i0.ɵɵnextContext().$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"countTo\", series_r3.total)(\"countPrefix\", ctx_r1.label + \": \");\n    i0.ɵɵattribute(\"y\", series_r3.outerRadius);\n  }\n}\nfunction PieGridComponent__svg_g_2__svg_text_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"text\", 13);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const series_r3 = i0.ɵɵnextContext().$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"y\", series_r3.outerRadius);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate2(\" \", ctx_r1.label, \": \", series_r3.total.toLocaleString(), \" \");\n  }\n}\nfunction PieGridComponent__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 3)(1, \"g\", 4);\n    i0.ɵɵlistener(\"select\", function PieGridComponent__svg_g_2_Template_g_select_1_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onClick($event));\n    })(\"activate\", function PieGridComponent__svg_g_2_Template_g_activate_1_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onActivate($event));\n    })(\"deactivate\", function PieGridComponent__svg_g_2_Template_g_deactivate_1_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onDeactivate($event));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(2, PieGridComponent__svg_g_2__svg_text_2_Template, 1, 2, \"text\", 5)(3, PieGridComponent__svg_g_2__svg_text_3_Template, 2, 1, \"text\", 6);\n    i0.ɵɵelementStart(4, \"text\", 7);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(6, PieGridComponent__svg_g_2__svg_text_6_Template, 1, 3, \"text\", 8)(7, PieGridComponent__svg_g_2__svg_text_7_Template, 2, 3, \"text\", 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const series_r3 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"transform\", series_r3.transform);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"colors\", series_r3.colors)(\"data\", series_r3.data)(\"innerRadius\", series_r3.innerRadius)(\"outerRadius\", series_r3.outerRadius)(\"animations\", ctx_r1.animations)(\"tooltipDisabled\", ctx_r1.tooltipDisabled)(\"tooltipPlacement\", ctx_r1.placementTypes.Top)(\"tooltipType\", ctx_r1.styleTypes.tooltip)(\"tooltipTitle\", ctx_r1.tooltipTemplate ? undefined : ctx_r1.tooltipText(i0.ɵɵpureFunction1(17, _c44, series_r3)))(\"tooltipTemplate\", ctx_r1.tooltipTemplate)(\"tooltipContext\", series_r3.data[0].data);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.animations);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.animations);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", series_r3.label, \" \");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.animations);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.animations);\n  }\n}\nconst _c45 = [\"textEl\"];\nconst _c46 = [\"ngx-charts-card\", \"\"];\nfunction CardComponent__svg_path_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"path\", 7);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"fill\", ctx_r1.bandColor)(\"transform\", ctx_r1.transformBand)(\"d\", ctx_r1.bandPath);\n  }\n}\nconst _c47 = [\"ngx-charts-card-series\", \"\"];\nfunction CardSeriesComponent__svg_rect_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"rect\", 2);\n  }\n  if (rf & 2) {\n    const c_r1 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"fill\", ctx_r1.emptyColor);\n    i0.ɵɵattribute(\"x\", c_r1.x)(\"y\", c_r1.y)(\"width\", c_r1.width)(\"height\", c_r1.height);\n  }\n}\nfunction CardSeriesComponent__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 3);\n    i0.ɵɵlistener(\"select\", function CardSeriesComponent__svg_g_1_Template_g_select_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onClick($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const c_r4 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"x\", c_r4.x)(\"y\", c_r4.y)(\"width\", c_r4.width)(\"height\", c_r4.height)(\"color\", c_r4.color)(\"bandColor\", c_r4.bandColor)(\"textColor\", c_r4.textColor)(\"data\", c_r4.data)(\"label\", c_r4.label)(\"medianSize\", ctx_r1.medianSize)(\"valueFormatting\", ctx_r1.valueFormatting)(\"labelFormatting\", ctx_r1.labelFormatting)(\"animations\", ctx_r1.animations);\n  }\n}\nconst _c48 = [\"ngx-charts-tree-map-cell\", \"\"];\nfunction TreeMapCellComponent__svg_defs_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"defs\");\n    i0.ɵɵelement(1, \"g\", 3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"orientation\", ctx_r0.orientation.Vertical)(\"name\", ctx_r0.gradientId)(\"stops\", ctx_r0.gradientStops);\n  }\n}\nfunction TreeMapCellComponent__svg_foreignObject_3_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 8);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"countTo\", ctx_r0.value)(\"valueFormatting\", ctx_r0.valueFormatting);\n  }\n}\nfunction TreeMapCellComponent__svg_foreignObject_3_span_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 9);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.formattedValue, \" \");\n  }\n}\nfunction TreeMapCellComponent__svg_foreignObject_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"foreignObject\", 4);\n    i0.ɵɵnamespaceHTML();\n    i0.ɵɵelementStart(1, \"p\");\n    i0.ɵɵelement(2, \"span\", 5)(3, \"br\");\n    i0.ɵɵtemplate(4, TreeMapCellComponent__svg_foreignObject_3_span_4_Template, 1, 2, \"span\", 6)(5, TreeMapCellComponent__svg_foreignObject_3_span_5_Template, 2, 1, \"span\", 7);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"pointer-events\", \"none\");\n    i0.ɵɵattribute(\"x\", ctx_r0.x)(\"y\", ctx_r0.y)(\"width\", ctx_r0.width)(\"height\", ctx_r0.height);\n    i0.ɵɵadvance();\n    i0.ɵɵstyleProp(\"color\", ctx_r0.getTextColor())(\"height\", ctx_r0.height + \"px\")(\"width\", ctx_r0.width + \"px\");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"innerHTML\", ctx_r0.formattedLabel, i0.ɵɵsanitizeHtml);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.animations);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.animations);\n  }\n}\nconst _c49 = [\"ngx-charts-tree-map-cell-series\", \"\"];\nfunction TreeMapCellSeriesComponent__svg_g_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 1);\n    i0.ɵɵlistener(\"select\", function TreeMapCellSeriesComponent__svg_g_0_Template_g_select_0_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onClick($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const c_r3 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"data\", c_r3.data)(\"x\", c_r3.x)(\"y\", c_r3.y)(\"width\", c_r3.width)(\"height\", c_r3.height)(\"fill\", c_r3.fill)(\"label\", c_r3.label)(\"value\", c_r3.value)(\"valueFormatting\", ctx_r1.valueFormatting)(\"labelFormatting\", ctx_r1.labelFormatting)(\"gradient\", ctx_r1.gradient)(\"animations\", ctx_r1.animations)(\"tooltipDisabled\", ctx_r1.tooltipDisabled)(\"tooltipPlacement\", ctx_r1.placementTypes.Top)(\"tooltipType\", ctx_r1.styleTypes.tooltip)(\"tooltipTitle\", ctx_r1.tooltipTemplate ? undefined : ctx_r1.getTooltipText(c_r3))(\"tooltipTemplate\", ctx_r1.tooltipTemplate)(\"tooltipContext\", c_r3.data);\n  }\n}\nconst _c50 = [\"valueTextEl\"];\nconst _c51 = [\"unitsTextEl\"];\nconst _c52 = () => ({});\nfunction LinearGaugeComponent__svg_line_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"line\", 10);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"transform\", ctx_r1.transformLine)(\"stroke\", ctx_r1.colors.getColor(ctx_r1.units));\n  }\n}\nfunction LinearGaugeComponent__svg_line_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"line\", 11);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"transform\", ctx_r1.transformLine)(\"stroke\", ctx_r1.colors.getColor(ctx_r1.units));\n  }\n}\nconst _c53 = [\"ngx-charts-gauge-arc\", \"\"];\nconst _c54 = [\"ngx-charts-gauge-axis\", \"\"];\nfunction GaugeAxisComponent__svg_g_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 2);\n    i0.ɵɵelement(1, \"path\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const tick_r1 = ctx.$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵattribute(\"d\", tick_r1.line);\n  }\n}\nfunction GaugeAxisComponent__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 2)(1, \"text\", 3);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const tick_r2 = ctx.$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵstyleProp(\"text-anchor\", tick_r2.textAnchor);\n    i0.ɵɵattribute(\"transform\", tick_r2.textTransform);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", tick_r2.text, \" \");\n  }\n}\nfunction GaugeAxisComponent__svg_g_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 4);\n    i0.ɵɵelement(1, \"path\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const tick_r3 = ctx.$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵattribute(\"d\", tick_r3.line);\n  }\n}\nfunction GaugeComponent__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\")(1, \"g\", 6);\n    i0.ɵɵlistener(\"select\", function GaugeComponent__svg_g_2_Template_g_select_1_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onClick($event));\n    })(\"activate\", function GaugeComponent__svg_g_2_Template_g_activate_1_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onActivate($event));\n    })(\"deactivate\", function GaugeComponent__svg_g_2_Template_g_deactivate_1_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onDeactivate($event));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const arc_r3 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"transform\", ctx_r1.rotation);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"backgroundArc\", arc_r3.backgroundArc)(\"valueArc\", arc_r3.valueArc)(\"cornerRadius\", ctx_r1.cornerRadius)(\"colors\", ctx_r1.colors)(\"isActive\", ctx_r1.isActive(arc_r3.valueArc.data))(\"tooltipDisabled\", ctx_r1.tooltipDisabled)(\"tooltipTemplate\", ctx_r1.tooltipTemplate)(\"valueFormatting\", ctx_r1.valueFormatting)(\"animations\", ctx_r1.animations);\n  }\n}\nfunction GaugeComponent__svg_g_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"g\", 7);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"bigSegments\", ctx_r1.bigSegments)(\"smallSegments\", ctx_r1.smallSegments)(\"min\", ctx_r1.min)(\"max\", ctx_r1.max)(\"radius\", ctx_r1.outerRadius)(\"angleSpan\", ctx_r1.angleSpan)(\"valueScale\", ctx_r1.valueScale)(\"startAngle\", ctx_r1.startAngle)(\"tickFormatting\", ctx_r1.axisTickFormatting);\n  }\n}\nfunction GaugeComponent__svg_text_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"text\", 8, 0)(2, \"tspan\", 9);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"tspan\", 10);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"text-anchor\", \"middle\");\n    i0.ɵɵattribute(\"transform\", ctx_r1.textTransform);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r1.displayValue);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r1.units);\n  }\n}\nfunction SankeyComponent__svg_g_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 5)(1, \"defs\")(2, \"linearGradient\", 6);\n    i0.ɵɵelement(3, \"stop\", 7)(4, \"stop\", 8);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"path\", 9);\n    i0.ɵɵlistener(\"click\", function SankeyComponent__svg_g_2_Template_path_click_5_listener() {\n      const link_r2 = i0.ɵɵrestoreView(_r1).$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.select.emit(link_r2.data));\n    })(\"mouseenter\", function SankeyComponent__svg_g_2_Template_path_mouseenter_5_listener() {\n      const link_r2 = i0.ɵɵrestoreView(_r1).$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.activate.emit(link_r2.data));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const link_r2 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"tooltipDisabled\", ctx_r2.tooltipDisabled)(\"tooltipType\", ctx_r2.styleTypes.tooltip)(\"tooltipPlacement\", \"top\")(\"tooltipTitle\", ctx_r2.tooltipTemplate ? undefined : link_r2.tooltip)(\"tooltipTemplate\", ctx_r2.tooltipTemplate)(\"tooltipContext\", link_r2.data);\n    i0.ɵɵadvance(2);\n    i0.ɵɵattribute(\"id\", link_r2.id)(\"x1\", link_r2.source.x1)(\"x2\", link_r2.target.x0);\n    i0.ɵɵadvance();\n    i0.ɵɵattribute(\"stop-color\", link_r2.startColor);\n    i0.ɵɵadvance();\n    i0.ɵɵattribute(\"stop-color\", link_r2.endColor);\n    i0.ɵɵadvance();\n    i0.ɵɵattribute(\"d\", link_r2.path)(\"stroke\", link_r2.gradientFill)(\"stroke-width\", link_r2.strokeWidth);\n  }\n}\nfunction SankeyComponent__svg_g_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\", 10)(1, \"rect\", 11);\n    i0.ɵɵlistener(\"click\", function SankeyComponent__svg_g_3_Template_rect_click_1_listener() {\n      const rect_r5 = i0.ɵɵrestoreView(_r4).$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.select.emit(rect_r5.data));\n    })(\"mouseenter\", function SankeyComponent__svg_g_3_Template_rect_mouseenter_1_listener() {\n      const rect_r5 = i0.ɵɵrestoreView(_r4).$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.activate.emit(rect_r5.data));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const rect_r5 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"transform\", rect_r5.transform);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"tooltipDisabled\", ctx_r2.tooltipDisabled)(\"tooltipType\", ctx_r2.styleTypes.tooltip)(\"tooltipPlacement\", \"top\")(\"tooltipTitle\", ctx_r2.tooltipTemplate ? undefined : rect_r5.tooltip)(\"tooltipTemplate\", ctx_r2.tooltipTemplate)(\"tooltipContext\", rect_r5.data);\n    i0.ɵɵattribute(\"x\", 0)(\"y\", 0)(\"width\", rect_r5.width)(\"height\", rect_r5.height)(\"fill\", rect_r5.fill);\n  }\n}\nfunction SankeyComponent__svg_g_4__svg_text_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"text\", 13);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const rect_r6 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵattribute(\"x\", rect_r6.width + 5)(\"y\", rect_r6.height / 2)(\"text-anchor\", rect_r6.labelAnchor)(\"dx\", rect_r6.labelAnchor === \"end\" ? -25 : 0);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", rect_r6.label, \" \");\n  }\n}\nfunction SankeyComponent__svg_g_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"g\");\n    i0.ɵɵtemplate(1, SankeyComponent__svg_g_4__svg_text_1_Template, 2, 5, \"text\", 12);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const rect_r6 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"transform\", rect_r6.transform);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.showLabels && rect_r6.height > 15);\n  }\n}\nfunction throttle(func, wait, options) {\n  options = options || {};\n  let context;\n  let args;\n  let result;\n  let timeout = null;\n  let previous = 0;\n  function later() {\n    previous = options.leading === false ? 0 : +new Date();\n    timeout = null;\n    result = func.apply(context, args);\n  }\n  return function () {\n    const now = +new Date();\n    if (!previous && options.leading === false) {\n      previous = now;\n    }\n    const remaining = wait - (now - previous);\n    context = this;\n    // eslint-disable-next-line prefer-rest-params\n    args = arguments;\n    if (remaining <= 0) {\n      clearTimeout(timeout);\n      timeout = null;\n      previous = now;\n      result = func.apply(context, args);\n    } else if (!timeout && options.trailing !== false) {\n      timeout = setTimeout(later, remaining);\n    }\n    return result;\n  };\n}\n/**\n * Throttle decorator\n *\n *  class MyClass {\n *    throttleable(10)\n *    myFn() { ... }\n *  }\n */\nfunction throttleable(duration, options) {\n  return function innerDecorator(target, key, descriptor) {\n    return {\n      configurable: true,\n      enumerable: descriptor.enumerable,\n      get: function getter() {\n        Object.defineProperty(this, key, {\n          configurable: true,\n          enumerable: descriptor.enumerable,\n          value: throttle(descriptor.value, duration, options)\n        });\n        return this[key];\n      }\n    };\n  };\n}\nvar PlacementTypes;\n(function (PlacementTypes) {\n  PlacementTypes[\"Top\"] = \"top\";\n  PlacementTypes[\"Bottom\"] = \"bottom\";\n  PlacementTypes[\"Left\"] = \"left\";\n  PlacementTypes[\"Right\"] = \"right\";\n  PlacementTypes[\"Center\"] = \"center\";\n})(PlacementTypes || (PlacementTypes = {}));\nconst caretOffset = 7;\nfunction verticalPosition(elDimensions, popoverDimensions, alignment) {\n  if (alignment === PlacementTypes.Top) {\n    return elDimensions.top - caretOffset;\n  }\n  if (alignment === PlacementTypes.Bottom) {\n    return elDimensions.top + elDimensions.height - popoverDimensions.height + caretOffset;\n  }\n  if (alignment === PlacementTypes.Center) {\n    return elDimensions.top + elDimensions.height / 2 - popoverDimensions.height / 2;\n  }\n  return undefined;\n}\nfunction horizontalPosition(elDimensions, popoverDimensions, alignment) {\n  if (alignment === PlacementTypes.Left) {\n    return elDimensions.left - caretOffset;\n  }\n  if (alignment === PlacementTypes.Right) {\n    return elDimensions.left + elDimensions.width - popoverDimensions.width + caretOffset;\n  }\n  if (alignment === PlacementTypes.Center) {\n    return elDimensions.left + elDimensions.width / 2 - popoverDimensions.width / 2;\n  }\n  return undefined;\n}\n/**\n * Position helper for the popover directive.\n *\n * @export\n */\nclass PositionHelper {\n  /**\n   * Calculate vertical alignment position\n   *\n   * @memberOf PositionHelper\n   */\n  static calculateVerticalAlignment(elDimensions, popoverDimensions, alignment) {\n    let result = verticalPosition(elDimensions, popoverDimensions, alignment);\n    if (result + popoverDimensions.height > window.innerHeight) {\n      result = window.innerHeight - popoverDimensions.height;\n    }\n    return result;\n  }\n  /**\n   * Calculate vertical caret position\n   *\n   * @memberOf PositionHelper\n   */\n  static calculateVerticalCaret(elDimensions, popoverDimensions, caretDimensions, alignment) {\n    let result;\n    if (alignment === PlacementTypes.Top) {\n      result = elDimensions.height / 2 - caretDimensions.height / 2 + caretOffset;\n    }\n    if (alignment === PlacementTypes.Bottom) {\n      result = popoverDimensions.height - elDimensions.height / 2 - caretDimensions.height / 2 - caretOffset;\n    }\n    if (alignment === PlacementTypes.Center) {\n      result = popoverDimensions.height / 2 - caretDimensions.height / 2;\n    }\n    const popoverPosition = verticalPosition(elDimensions, popoverDimensions, alignment);\n    if (popoverPosition + popoverDimensions.height > window.innerHeight) {\n      result += popoverPosition + popoverDimensions.height - window.innerHeight;\n    }\n    return result;\n  }\n  /**\n   * Calculate horz alignment position\n   *\n   * @memberOf PositionHelper\n   */\n  static calculateHorizontalAlignment(elDimensions, popoverDimensions, alignment) {\n    let result = horizontalPosition(elDimensions, popoverDimensions, alignment);\n    if (result + popoverDimensions.width > window.innerWidth) {\n      result = window.innerWidth - popoverDimensions.width;\n    }\n    return result;\n  }\n  /**\n   * Calculate horz caret position\n   *\n   * @memberOf PositionHelper\n   */\n  static calculateHorizontalCaret(elDimensions, popoverDimensions, caretDimensions, alignment) {\n    let result;\n    if (alignment === PlacementTypes.Left) {\n      result = elDimensions.width / 2 - caretDimensions.width / 2 + caretOffset;\n    }\n    if (alignment === PlacementTypes.Right) {\n      result = popoverDimensions.width - elDimensions.width / 2 - caretDimensions.width / 2 - caretOffset;\n    }\n    if (alignment === PlacementTypes.Center) {\n      result = popoverDimensions.width / 2 - caretDimensions.width / 2;\n    }\n    const popoverPosition = horizontalPosition(elDimensions, popoverDimensions, alignment);\n    if (popoverPosition + popoverDimensions.width > window.innerWidth) {\n      result += popoverPosition + popoverDimensions.width - window.innerWidth;\n    }\n    return result;\n  }\n  /**\n   * Checks if the element's position should be flipped\n   *\n   * @memberOf PositionHelper\n   */\n  static shouldFlip(elDimensions, popoverDimensions, placement, spacing) {\n    let flip = false;\n    if (placement === PlacementTypes.Right) {\n      if (elDimensions.left + elDimensions.width + popoverDimensions.width + spacing > window.innerWidth) {\n        flip = true;\n      }\n    }\n    if (placement === PlacementTypes.Left) {\n      if (elDimensions.left - popoverDimensions.width - spacing < 0) {\n        flip = true;\n      }\n    }\n    if (placement === PlacementTypes.Top) {\n      if (elDimensions.top - popoverDimensions.height - spacing < 0) {\n        flip = true;\n      }\n    }\n    if (placement === PlacementTypes.Bottom) {\n      if (elDimensions.top + elDimensions.height + popoverDimensions.height + spacing > window.innerHeight) {\n        flip = true;\n      }\n    }\n    return flip;\n  }\n  /**\n   * Position caret\n   *\n   * @memberOf PositionHelper\n   */\n  static positionCaret(placement, elmDim, hostDim, caretDimensions, alignment) {\n    let top = 0;\n    let left = 0;\n    if (placement === PlacementTypes.Right) {\n      left = -7;\n      top = PositionHelper.calculateVerticalCaret(hostDim, elmDim, caretDimensions, alignment);\n    } else if (placement === PlacementTypes.Left) {\n      left = elmDim.width;\n      top = PositionHelper.calculateVerticalCaret(hostDim, elmDim, caretDimensions, alignment);\n    } else if (placement === PlacementTypes.Top) {\n      top = elmDim.height;\n      left = PositionHelper.calculateHorizontalCaret(hostDim, elmDim, caretDimensions, alignment);\n    } else if (placement === PlacementTypes.Bottom) {\n      top = -7;\n      left = PositionHelper.calculateHorizontalCaret(hostDim, elmDim, caretDimensions, alignment);\n    }\n    return {\n      top,\n      left\n    };\n  }\n  /**\n   * Position content\n   *\n   * @memberOf PositionHelper\n   */\n  static positionContent(placement, elmDim, hostDim, spacing, alignment) {\n    let top = 0;\n    let left = 0;\n    if (placement === PlacementTypes.Right) {\n      left = hostDim.left + hostDim.width + spacing;\n      top = PositionHelper.calculateVerticalAlignment(hostDim, elmDim, alignment);\n    } else if (placement === PlacementTypes.Left) {\n      left = hostDim.left - elmDim.width - spacing;\n      top = PositionHelper.calculateVerticalAlignment(hostDim, elmDim, alignment);\n    } else if (placement === PlacementTypes.Top) {\n      top = hostDim.top - elmDim.height - spacing;\n      left = PositionHelper.calculateHorizontalAlignment(hostDim, elmDim, alignment);\n    } else if (placement === PlacementTypes.Bottom) {\n      top = hostDim.top + hostDim.height + spacing;\n      left = PositionHelper.calculateHorizontalAlignment(hostDim, elmDim, alignment);\n    }\n    return {\n      top,\n      left\n    };\n  }\n  /**\n   * Determine placement based on flip\n   *\n   * @memberOf PositionHelper\n   */\n  static determinePlacement(placement, elmDim, hostDim, spacing) {\n    const shouldFlip = PositionHelper.shouldFlip(hostDim, elmDim, placement, spacing);\n    if (shouldFlip) {\n      if (placement === PlacementTypes.Right) {\n        return PlacementTypes.Left;\n      } else if (placement === PlacementTypes.Left) {\n        return PlacementTypes.Right;\n      } else if (placement === PlacementTypes.Top) {\n        return PlacementTypes.Bottom;\n      } else if (placement === PlacementTypes.Bottom) {\n        return PlacementTypes.Top;\n      }\n    }\n    return placement;\n  }\n}\nclass TooltipContentComponent {\n  constructor(element, renderer, platformId) {\n    this.element = element;\n    this.renderer = renderer;\n    this.platformId = platformId;\n  }\n  get cssClasses() {\n    let clz = 'ngx-charts-tooltip-content';\n    clz += ` position-${this.placement}`;\n    clz += ` type-${this.type}`;\n    clz += ` ${this.cssClass}`;\n    return clz;\n  }\n  ngAfterViewInit() {\n    setTimeout(this.position.bind(this));\n  }\n  position() {\n    if (!isPlatformBrowser(this.platformId)) {\n      return;\n    }\n    const nativeElm = this.element.nativeElement;\n    const hostDim = this.host.nativeElement.getBoundingClientRect();\n    // if no dims were found, never show\n    if (!hostDim.height && !hostDim.width) return;\n    const elmDim = nativeElm.getBoundingClientRect();\n    this.checkFlip(hostDim, elmDim);\n    this.positionContent(nativeElm, hostDim, elmDim);\n    if (this.showCaret) {\n      this.positionCaret(hostDim, elmDim);\n    }\n    // animate its entry\n    setTimeout(() => this.renderer.addClass(nativeElm, 'animate'), 1);\n  }\n  positionContent(nativeElm, hostDim, elmDim) {\n    const {\n      top,\n      left\n    } = PositionHelper.positionContent(this.placement, elmDim, hostDim, this.spacing, this.alignment);\n    this.renderer.setStyle(nativeElm, 'top', `${top}px`);\n    this.renderer.setStyle(nativeElm, 'left', `${left}px`);\n  }\n  positionCaret(hostDim, elmDim) {\n    const caretElm = this.caretElm.nativeElement;\n    const caretDimensions = caretElm.getBoundingClientRect();\n    const {\n      top,\n      left\n    } = PositionHelper.positionCaret(this.placement, elmDim, hostDim, caretDimensions, this.alignment);\n    this.renderer.setStyle(caretElm, 'top', `${top}px`);\n    this.renderer.setStyle(caretElm, 'left', `${left}px`);\n  }\n  checkFlip(hostDim, elmDim) {\n    this.placement = PositionHelper.determinePlacement(this.placement, elmDim, hostDim, this.spacing);\n  }\n  onWindowResize() {\n    this.position();\n  }\n}\nTooltipContentComponent.ɵfac = function TooltipContentComponent_Factory(t) {\n  return new (t || TooltipContentComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(PLATFORM_ID));\n};\nTooltipContentComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: TooltipContentComponent,\n  selectors: [[\"ngx-tooltip-content\"]],\n  viewQuery: function TooltipContentComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.caretElm = _t.first);\n    }\n  },\n  hostVars: 2,\n  hostBindings: function TooltipContentComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"resize\", function TooltipContentComponent_resize_HostBindingHandler() {\n        return ctx.onWindowResize();\n      }, false, i0.ɵɵresolveWindow);\n    }\n    if (rf & 2) {\n      i0.ɵɵclassMap(ctx.cssClasses);\n    }\n  },\n  inputs: {\n    host: \"host\",\n    showCaret: \"showCaret\",\n    type: \"type\",\n    placement: \"placement\",\n    alignment: \"alignment\",\n    spacing: \"spacing\",\n    cssClass: \"cssClass\",\n    title: \"title\",\n    template: \"template\",\n    context: \"context\"\n  },\n  decls: 6,\n  vars: 6,\n  consts: [[\"caretElm\", \"\"], [3, \"hidden\"], [1, \"tooltip-content\"], [4, \"ngIf\"], [3, \"innerHTML\", 4, \"ngIf\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [3, \"innerHTML\"]],\n  template: function TooltipContentComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\");\n      i0.ɵɵelement(1, \"span\", 1, 0);\n      i0.ɵɵelementStart(3, \"div\", 2);\n      i0.ɵɵtemplate(4, TooltipContentComponent_span_4_Template, 2, 4, \"span\", 3)(5, TooltipContentComponent_span_5_Template, 1, 1, \"span\", 4);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance();\n      i0.ɵɵclassMapInterpolate1(\"tooltip-caret position-\", ctx.placement, \"\");\n      i0.ɵɵproperty(\"hidden\", !ctx.showCaret);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", !ctx.title);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngIf\", ctx.title);\n    }\n  },\n  dependencies: [i2.NgIf, i2.NgTemplateOutlet],\n  styles: [\".ngx-charts-tooltip-content{position:fixed;border-radius:3px;z-index:5000;display:block;font-weight:400;opacity:0;pointer-events:none!important}.ngx-charts-tooltip-content.type-popover{background:#fff;color:#060709;border:1px solid #72809b;box-shadow:0 1px 3px #0003,0 1px 1px #00000024,0 2px 1px -1px #0000001f;font-size:13px;padding:4px}.ngx-charts-tooltip-content.type-popover .tooltip-caret{position:absolute;z-index:5001;width:0;height:0}.ngx-charts-tooltip-content.type-popover .tooltip-caret.position-left{border-top:7px solid transparent;border-bottom:7px solid transparent;border-left:7px solid #fff}.ngx-charts-tooltip-content.type-popover .tooltip-caret.position-top{border-left:7px solid transparent;border-right:7px solid transparent;border-top:7px solid #fff}.ngx-charts-tooltip-content.type-popover .tooltip-caret.position-right{border-top:7px solid transparent;border-bottom:7px solid transparent;border-right:7px solid #fff}.ngx-charts-tooltip-content.type-popover .tooltip-caret.position-bottom{border-left:7px solid transparent;border-right:7px solid transparent;border-bottom:7px solid #fff}.ngx-charts-tooltip-content.type-tooltip{color:#fff;background:rgba(0,0,0,.75);font-size:12px;padding:0 10px;text-align:center;pointer-events:auto}.ngx-charts-tooltip-content.type-tooltip .tooltip-caret.position-left{border-top:7px solid transparent;border-bottom:7px solid transparent;border-left:7px solid rgba(0,0,0,.75)}.ngx-charts-tooltip-content.type-tooltip .tooltip-caret.position-top{border-left:7px solid transparent;border-right:7px solid transparent;border-top:7px solid rgba(0,0,0,.75)}.ngx-charts-tooltip-content.type-tooltip .tooltip-caret.position-right{border-top:7px solid transparent;border-bottom:7px solid transparent;border-right:7px solid rgba(0,0,0,.75)}.ngx-charts-tooltip-content.type-tooltip .tooltip-caret.position-bottom{border-left:7px solid transparent;border-right:7px solid transparent;border-bottom:7px solid rgba(0,0,0,.75)}.ngx-charts-tooltip-content .tooltip-label{display:block;line-height:1em;padding:8px 5px 5px;font-size:1em}.ngx-charts-tooltip-content .tooltip-val{display:block;font-size:1.3em;line-height:1em;padding:0 5px 8px}.ngx-charts-tooltip-content .tooltip-caret{position:absolute;z-index:5001;width:0;height:0}.ngx-charts-tooltip-content.position-right{transform:translate(10px)}.ngx-charts-tooltip-content.position-left{transform:translate(-10px)}.ngx-charts-tooltip-content.position-top{transform:translateY(-10px)}.ngx-charts-tooltip-content.position-bottom{transform:translateY(10px)}.ngx-charts-tooltip-content.animate{opacity:1;transition:opacity .3s,transform .3s;transform:translate(0);pointer-events:auto}.area-tooltip-container{padding:5px 0;pointer-events:none}.tooltip-item{text-align:left;line-height:1.2em;padding:5px 0}.tooltip-item .tooltip-item-color{display:inline-block;height:12px;width:12px;margin-right:5px;color:#5b646b;border-radius:3px}\\n\"],\n  encapsulation: 2\n});\n__decorate([throttleable(100)], TooltipContentComponent.prototype, \"onWindowResize\", null);\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TooltipContentComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-tooltip-content',\n      template: `\n    <div>\n      <span #caretElm [hidden]=\"!showCaret\" class=\"tooltip-caret position-{{ this.placement }}\"> </span>\n      <div class=\"tooltip-content\">\n        <span *ngIf=\"!title\">\n          <ng-template [ngTemplateOutlet]=\"template\" [ngTemplateOutletContext]=\"{ model: context }\"> </ng-template>\n        </span>\n        <span *ngIf=\"title\" [innerHTML]=\"title\"> </span>\n      </div>\n    </div>\n  `,\n      encapsulation: ViewEncapsulation.None,\n      styles: [\".ngx-charts-tooltip-content{position:fixed;border-radius:3px;z-index:5000;display:block;font-weight:400;opacity:0;pointer-events:none!important}.ngx-charts-tooltip-content.type-popover{background:#fff;color:#060709;border:1px solid #72809b;box-shadow:0 1px 3px #0003,0 1px 1px #00000024,0 2px 1px -1px #0000001f;font-size:13px;padding:4px}.ngx-charts-tooltip-content.type-popover .tooltip-caret{position:absolute;z-index:5001;width:0;height:0}.ngx-charts-tooltip-content.type-popover .tooltip-caret.position-left{border-top:7px solid transparent;border-bottom:7px solid transparent;border-left:7px solid #fff}.ngx-charts-tooltip-content.type-popover .tooltip-caret.position-top{border-left:7px solid transparent;border-right:7px solid transparent;border-top:7px solid #fff}.ngx-charts-tooltip-content.type-popover .tooltip-caret.position-right{border-top:7px solid transparent;border-bottom:7px solid transparent;border-right:7px solid #fff}.ngx-charts-tooltip-content.type-popover .tooltip-caret.position-bottom{border-left:7px solid transparent;border-right:7px solid transparent;border-bottom:7px solid #fff}.ngx-charts-tooltip-content.type-tooltip{color:#fff;background:rgba(0,0,0,.75);font-size:12px;padding:0 10px;text-align:center;pointer-events:auto}.ngx-charts-tooltip-content.type-tooltip .tooltip-caret.position-left{border-top:7px solid transparent;border-bottom:7px solid transparent;border-left:7px solid rgba(0,0,0,.75)}.ngx-charts-tooltip-content.type-tooltip .tooltip-caret.position-top{border-left:7px solid transparent;border-right:7px solid transparent;border-top:7px solid rgba(0,0,0,.75)}.ngx-charts-tooltip-content.type-tooltip .tooltip-caret.position-right{border-top:7px solid transparent;border-bottom:7px solid transparent;border-right:7px solid rgba(0,0,0,.75)}.ngx-charts-tooltip-content.type-tooltip .tooltip-caret.position-bottom{border-left:7px solid transparent;border-right:7px solid transparent;border-bottom:7px solid rgba(0,0,0,.75)}.ngx-charts-tooltip-content .tooltip-label{display:block;line-height:1em;padding:8px 5px 5px;font-size:1em}.ngx-charts-tooltip-content .tooltip-val{display:block;font-size:1.3em;line-height:1em;padding:0 5px 8px}.ngx-charts-tooltip-content .tooltip-caret{position:absolute;z-index:5001;width:0;height:0}.ngx-charts-tooltip-content.position-right{transform:translate(10px)}.ngx-charts-tooltip-content.position-left{transform:translate(-10px)}.ngx-charts-tooltip-content.position-top{transform:translateY(-10px)}.ngx-charts-tooltip-content.position-bottom{transform:translateY(10px)}.ngx-charts-tooltip-content.animate{opacity:1;transition:opacity .3s,transform .3s;transform:translate(0);pointer-events:auto}.area-tooltip-container{padding:5px 0;pointer-events:none}.tooltip-item{text-align:left;line-height:1.2em;padding:5px 0}.tooltip-item .tooltip-item-color{display:inline-block;height:12px;width:12px;margin-right:5px;color:#5b646b;border-radius:3px}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }];\n  }, {\n    host: [{\n      type: Input\n    }],\n    showCaret: [{\n      type: Input\n    }],\n    type: [{\n      type: Input\n    }],\n    placement: [{\n      type: Input\n    }],\n    alignment: [{\n      type: Input\n    }],\n    spacing: [{\n      type: Input\n    }],\n    cssClass: [{\n      type: Input\n    }],\n    title: [{\n      type: Input\n    }],\n    template: [{\n      type: Input\n    }],\n    context: [{\n      type: Input\n    }],\n    caretElm: [{\n      type: ViewChild,\n      args: ['caretElm']\n    }],\n    cssClasses: [{\n      type: HostBinding,\n      args: ['class']\n    }],\n    onWindowResize: [{\n      type: HostListener,\n      args: ['window:resize']\n    }]\n  });\n})();\nclass InjectionRegisteryService {\n  constructor(injectionService) {\n    this.injectionService = injectionService;\n    this.defaults = {};\n    this.components = new Map();\n  }\n  getByType(type = this.type) {\n    return this.components.get(type);\n  }\n  create(bindings) {\n    return this.createByType(this.type, bindings);\n  }\n  createByType(type, bindings) {\n    bindings = this.assignDefaults(bindings);\n    const component = this.injectComponent(type, bindings);\n    this.register(type, component);\n    return component;\n  }\n  destroy(instance) {\n    const compsByType = this.components.get(instance.componentType);\n    if (compsByType && compsByType.length) {\n      const idx = compsByType.indexOf(instance);\n      if (idx > -1) {\n        const component = compsByType[idx];\n        component.destroy();\n        compsByType.splice(idx, 1);\n      }\n    }\n  }\n  destroyAll() {\n    this.destroyByType(this.type);\n  }\n  destroyByType(type) {\n    const comps = this.components.get(type);\n    if (comps && comps.length) {\n      let i = comps.length - 1;\n      while (i >= 0) {\n        this.destroy(comps[i--]);\n      }\n    }\n  }\n  injectComponent(type, bindings) {\n    return this.injectionService.appendComponent(type, bindings);\n  }\n  assignDefaults(bindings) {\n    const inputs = {\n      ...this.defaults.inputs\n    };\n    const outputs = {\n      ...this.defaults.outputs\n    };\n    if (!bindings.inputs && !bindings.outputs) {\n      bindings = {\n        inputs: bindings\n      };\n    }\n    if (inputs) {\n      bindings.inputs = {\n        ...inputs,\n        ...bindings.inputs\n      };\n    }\n    if (outputs) {\n      bindings.outputs = {\n        ...outputs,\n        ...bindings.outputs\n      };\n    }\n    return bindings;\n  }\n  register(type, component) {\n    if (!this.components.has(type)) {\n      this.components.set(type, []);\n    }\n    const types = this.components.get(type);\n    types.push(component);\n  }\n}\nfunction isViewContainerRef(x) {\n  return x.element;\n}\n/**\n * Injection service is a helper to append components\n * dynamically to a known location in the DOM, most\n * noteably for dialogs/tooltips appending to body.\n *\n * @export\n */\nclass InjectionService {\n  constructor(applicationRef, componentFactoryResolver, injector) {\n    this.applicationRef = applicationRef;\n    this.componentFactoryResolver = componentFactoryResolver;\n    this.injector = injector;\n  }\n  /**\n   * Sets a default global root view container. This is useful for\n   * things like ngUpgrade that doesn't have a ApplicationRef root.\n   *\n   * @param container\n   */\n  static setGlobalRootViewContainer(container) {\n    InjectionService.globalRootViewContainer = container;\n  }\n  /**\n   * Gets the root view container to inject the component to.\n   *\n   * @memberOf InjectionService\n   */\n  getRootViewContainer() {\n    if (this._container) return this._container;\n    if (InjectionService.globalRootViewContainer) return InjectionService.globalRootViewContainer;\n    if (this.applicationRef.components.length) return this.applicationRef.components[0];\n    throw new Error('View Container not found! ngUpgrade needs to manually set this via setRootViewContainer or setGlobalRootViewContainer.');\n  }\n  /**\n   * Overrides the default root view container. This is useful for\n   * things like ngUpgrade that doesn't have a ApplicationRef root.\n   *\n   * @param container\n   *\n   * @memberOf InjectionService\n   */\n  setRootViewContainer(container) {\n    this._container = container;\n  }\n  /**\n   * Gets the html element for a component ref.\n   *\n   * @param componentRef\n   *\n   * @memberOf InjectionService\n   */\n  getComponentRootNode(component) {\n    if (isViewContainerRef(component)) {\n      return component.element.nativeElement;\n    }\n    if (component.hostView && component.hostView.rootNodes.length > 0) {\n      return component.hostView.rootNodes[0];\n    }\n    // the top most component root node has no `hostView`\n    return component.location.nativeElement;\n  }\n  /**\n   * Gets the root component container html element.\n   *\n   * @memberOf InjectionService\n   */\n  getRootViewContainerNode(component) {\n    return this.getComponentRootNode(component);\n  }\n  /**\n   * Projects the bindings onto the component\n   *\n   * @param component\n   * @param options\n   *\n   * @memberOf InjectionService\n   */\n  projectComponentBindings(component, bindings) {\n    if (bindings) {\n      if (bindings.inputs !== undefined) {\n        const bindingKeys = Object.getOwnPropertyNames(bindings.inputs);\n        for (const bindingName of bindingKeys) {\n          component.instance[bindingName] = bindings.inputs[bindingName];\n        }\n      }\n      if (bindings.outputs !== undefined) {\n        const eventKeys = Object.getOwnPropertyNames(bindings.outputs);\n        for (const eventName of eventKeys) {\n          component.instance[eventName] = bindings.outputs[eventName];\n        }\n      }\n    }\n    return component;\n  }\n  /**\n   * Appends a component to a adjacent location\n   *\n   * @param componentClass\n   * @param [options={}]\n   * @param [location]\n   *\n   * @memberOf InjectionService\n   */\n  appendComponent(componentClass, bindings = {}, location) {\n    if (!location) location = this.getRootViewContainer();\n    const appendLocation = this.getComponentRootNode(location);\n    const portalHost = new DomPortalOutlet(appendLocation, this.componentFactoryResolver, this.applicationRef, this.injector);\n    const portal = new ComponentPortal(componentClass);\n    const componentRef = portalHost.attach(portal);\n    this.projectComponentBindings(componentRef, bindings);\n    return componentRef;\n  }\n}\nInjectionService.globalRootViewContainer = null;\nInjectionService.ɵfac = function InjectionService_Factory(t) {\n  return new (t || InjectionService)(i0.ɵɵinject(i0.ApplicationRef), i0.ɵɵinject(i0.ComponentFactoryResolver), i0.ɵɵinject(i0.Injector));\n};\nInjectionService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: InjectionService,\n  factory: InjectionService.ɵfac\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(InjectionService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: i0.ApplicationRef\n    }, {\n      type: i0.ComponentFactoryResolver\n    }, {\n      type: i0.Injector\n    }];\n  }, null);\n})();\nclass TooltipService extends InjectionRegisteryService {\n  constructor(injectionService) {\n    super(injectionService);\n    this.type = TooltipContentComponent;\n  }\n}\nTooltipService.ɵfac = function TooltipService_Factory(t) {\n  return new (t || TooltipService)(i0.ɵɵinject(InjectionService));\n};\nTooltipService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: TooltipService,\n  factory: TooltipService.ɵfac\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TooltipService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: InjectionService\n    }];\n  }, null);\n})();\nvar LegendPosition;\n(function (LegendPosition) {\n  LegendPosition[\"Right\"] = \"right\";\n  LegendPosition[\"Below\"] = \"below\";\n})(LegendPosition || (LegendPosition = {}));\nvar LegendType;\n(function (LegendType) {\n  LegendType[\"ScaleLegend\"] = \"scaleLegend\";\n  LegendType[\"Legend\"] = \"legend\";\n})(LegendType || (LegendType = {}));\nvar ScaleType;\n(function (ScaleType) {\n  ScaleType[\"Time\"] = \"time\";\n  ScaleType[\"Linear\"] = \"linear\";\n  ScaleType[\"Ordinal\"] = \"ordinal\";\n  ScaleType[\"Quantile\"] = \"quantile\";\n})(ScaleType || (ScaleType = {}));\nclass ScaleLegendComponent {\n  constructor() {\n    this.horizontal = false;\n  }\n  ngOnChanges(changes) {\n    const gradientValues = this.gradientString(this.colors.range(), this.colors.domain());\n    const direction = this.horizontal ? 'right' : 'bottom';\n    this.gradient = `linear-gradient(to ${direction}, ${gradientValues})`;\n  }\n  /**\n   * Generates the string used in the gradient stylesheet properties\n   * @param colors array of colors\n   * @param splits array of splits on a scale of (0, 1)\n   */\n  gradientString(colors, splits) {\n    // add the 100%\n    splits.push(1);\n    const pairs = [];\n    colors.reverse().forEach((c, i) => {\n      pairs.push(`${c} ${Math.round(splits[i] * 100)}%`);\n    });\n    return pairs.join(', ');\n  }\n}\nScaleLegendComponent.ɵfac = function ScaleLegendComponent_Factory(t) {\n  return new (t || ScaleLegendComponent)();\n};\nScaleLegendComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ScaleLegendComponent,\n  selectors: [[\"ngx-charts-scale-legend\"]],\n  inputs: {\n    valueRange: \"valueRange\",\n    colors: \"colors\",\n    height: \"height\",\n    width: \"width\",\n    horizontal: \"horizontal\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 8,\n  vars: 10,\n  consts: [[1, \"scale-legend\"], [1, \"scale-legend-label\"], [1, \"scale-legend-wrap\"]],\n  template: function ScaleLegendComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"span\");\n      i0.ɵɵtext(3);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(4, \"div\", 2);\n      i0.ɵɵelementStart(5, \"div\", 1)(6, \"span\");\n      i0.ɵɵtext(7);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵstyleProp(\"height\", ctx.horizontal ? undefined : ctx.height, \"px\")(\"width\", ctx.width, \"px\");\n      i0.ɵɵclassProp(\"horizontal-legend\", ctx.horizontal);\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate(ctx.valueRange[1].toLocaleString());\n      i0.ɵɵadvance();\n      i0.ɵɵstyleProp(\"background\", ctx.gradient);\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate(ctx.valueRange[0].toLocaleString());\n    }\n  },\n  styles: [\".chart-legend{display:inline-block;padding:0;width:auto!important}.chart-legend .scale-legend{text-align:center;display:flex;flex-direction:column}.chart-legend .scale-legend-wrap{display:inline-block;flex:1;width:30px;border-radius:5px;margin:0 auto}.chart-legend .scale-legend-label{font-size:12px}.chart-legend .horizontal-legend.scale-legend{flex-direction:row}.chart-legend .horizontal-legend .scale-legend-wrap{width:auto;height:30px;margin:0 16px}\\n\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ScaleLegendComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-scale-legend',\n      template: `\n    <div\n      class=\"scale-legend\"\n      [class.horizontal-legend]=\"horizontal\"\n      [style.height.px]=\"horizontal ? undefined : height\"\n      [style.width.px]=\"width\"\n    >\n      <div class=\"scale-legend-label\">\n        <span>{{ valueRange[1].toLocaleString() }}</span>\n      </div>\n      <div class=\"scale-legend-wrap\" [style.background]=\"gradient\"></div>\n      <div class=\"scale-legend-label\">\n        <span>{{ valueRange[0].toLocaleString() }}</span>\n      </div>\n    </div>\n  `,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\".chart-legend{display:inline-block;padding:0;width:auto!important}.chart-legend .scale-legend{text-align:center;display:flex;flex-direction:column}.chart-legend .scale-legend-wrap{display:inline-block;flex:1;width:30px;border-radius:5px;margin:0 auto}.chart-legend .scale-legend-label{font-size:12px}.chart-legend .horizontal-legend.scale-legend{flex-direction:row}.chart-legend .horizontal-legend .scale-legend-wrap{width:auto;height:30px;margin:0 16px}\\n\"]\n    }]\n  }], null, {\n    valueRange: [{\n      type: Input\n    }],\n    colors: [{\n      type: Input\n    }],\n    height: [{\n      type: Input\n    }],\n    width: [{\n      type: Input\n    }],\n    horizontal: [{\n      type: Input\n    }]\n  });\n})();\n\n/**\n * Formats a label given a date, number or string.\n *\n * @export\n */\nfunction formatLabel(label) {\n  if (label instanceof Date) {\n    label = label.toLocaleDateString();\n  } else {\n    label = label.toLocaleString();\n  }\n  return label;\n}\n/**\n * Escapes a label.\n *\n * @export\n */\nfunction escapeLabel(label) {\n  return label.toLocaleString().replace(/[&'`\"<>]/g, match => {\n    return {\n      '&': '&amp;',\n      // tslint:disable-next-line: quotemark\n      \"'\": '&#x27;',\n      '`': '&#x60;',\n      '\"': '&quot;',\n      '<': '&lt;',\n      '>': '&gt;'\n    }[match];\n  });\n}\nclass LegendEntryComponent {\n  constructor() {\n    this.isActive = false;\n    this.select = new EventEmitter();\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.toggle = new EventEmitter();\n  }\n  get trimmedLabel() {\n    return this.formattedLabel || '(empty)';\n  }\n  onMouseEnter() {\n    this.activate.emit({\n      name: this.label\n    });\n  }\n  onMouseLeave() {\n    this.deactivate.emit({\n      name: this.label\n    });\n  }\n}\nLegendEntryComponent.ɵfac = function LegendEntryComponent_Factory(t) {\n  return new (t || LegendEntryComponent)();\n};\nLegendEntryComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: LegendEntryComponent,\n  selectors: [[\"ngx-charts-legend-entry\"]],\n  hostBindings: function LegendEntryComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"mouseenter\", function LegendEntryComponent_mouseenter_HostBindingHandler() {\n        return ctx.onMouseEnter();\n      })(\"mouseleave\", function LegendEntryComponent_mouseleave_HostBindingHandler() {\n        return ctx.onMouseLeave();\n      });\n    }\n  },\n  inputs: {\n    color: \"color\",\n    label: \"label\",\n    formattedLabel: \"formattedLabel\",\n    isActive: \"isActive\"\n  },\n  outputs: {\n    select: \"select\",\n    activate: \"activate\",\n    deactivate: \"deactivate\",\n    toggle: \"toggle\"\n  },\n  decls: 4,\n  vars: 6,\n  consts: [[\"tabindex\", \"-1\", 3, \"click\", \"title\"], [1, \"legend-label-color\", 3, \"click\"], [1, \"legend-label-text\"]],\n  template: function LegendEntryComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"span\", 0);\n      i0.ɵɵlistener(\"click\", function LegendEntryComponent_Template_span_click_0_listener() {\n        return ctx.select.emit(ctx.formattedLabel);\n      });\n      i0.ɵɵelementStart(1, \"span\", 1);\n      i0.ɵɵlistener(\"click\", function LegendEntryComponent_Template_span_click_1_listener() {\n        return ctx.toggle.emit(ctx.formattedLabel);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"span\", 2);\n      i0.ɵɵtext(3);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"active\", ctx.isActive);\n      i0.ɵɵproperty(\"title\", ctx.formattedLabel);\n      i0.ɵɵadvance();\n      i0.ɵɵstyleProp(\"background-color\", ctx.color);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\" \", ctx.trimmedLabel, \" \");\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LegendEntryComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-legend-entry',\n      template: `\n    <span [title]=\"formattedLabel\" tabindex=\"-1\" [class.active]=\"isActive\" (click)=\"select.emit(formattedLabel)\">\n      <span class=\"legend-label-color\" [style.background-color]=\"color\" (click)=\"toggle.emit(formattedLabel)\"> </span>\n      <span class=\"legend-label-text\">\n        {{ trimmedLabel }}\n      </span>\n    </span>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, {\n    color: [{\n      type: Input\n    }],\n    label: [{\n      type: Input\n    }],\n    formattedLabel: [{\n      type: Input\n    }],\n    isActive: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    toggle: [{\n      type: Output\n    }],\n    onMouseEnter: [{\n      type: HostListener,\n      args: ['mouseenter']\n    }],\n    onMouseLeave: [{\n      type: HostListener,\n      args: ['mouseleave']\n    }]\n  });\n})();\nclass LegendComponent {\n  constructor(cd) {\n    this.cd = cd;\n    this.horizontal = false;\n    this.labelClick = new EventEmitter();\n    this.labelActivate = new EventEmitter();\n    this.labelDeactivate = new EventEmitter();\n    this.legendEntries = [];\n  }\n  ngOnChanges(changes) {\n    this.update();\n  }\n  update() {\n    this.cd.markForCheck();\n    this.legendEntries = this.getLegendEntries();\n  }\n  getLegendEntries() {\n    const items = [];\n    for (const label of this.data) {\n      const formattedLabel = formatLabel(label);\n      const idx = items.findIndex(i => {\n        return i.label === formattedLabel;\n      });\n      if (idx === -1) {\n        items.push({\n          label,\n          formattedLabel,\n          color: this.colors.getColor(label)\n        });\n      }\n    }\n    return items;\n  }\n  isActive(entry) {\n    if (!this.activeEntries) return false;\n    const item = this.activeEntries.find(d => {\n      return entry.label === d.name;\n    });\n    return item !== undefined;\n  }\n  activate(item) {\n    this.labelActivate.emit(item);\n  }\n  deactivate(item) {\n    this.labelDeactivate.emit(item);\n  }\n  trackBy(index, item) {\n    return item.label;\n  }\n}\nLegendComponent.ɵfac = function LegendComponent_Factory(t) {\n  return new (t || LegendComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\nLegendComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: LegendComponent,\n  selectors: [[\"ngx-charts-legend\"]],\n  inputs: {\n    data: \"data\",\n    title: \"title\",\n    colors: \"colors\",\n    height: \"height\",\n    width: \"width\",\n    activeEntries: \"activeEntries\",\n    horizontal: \"horizontal\"\n  },\n  outputs: {\n    labelClick: \"labelClick\",\n    labelActivate: \"labelActivate\",\n    labelDeactivate: \"labelDeactivate\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 5,\n  vars: 9,\n  consts: [[\"class\", \"legend-title\", 4, \"ngIf\"], [1, \"legend-wrap\"], [1, \"legend-labels\"], [\"class\", \"legend-label\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [1, \"legend-title\"], [1, \"legend-title-text\"], [1, \"legend-label\"], [3, \"select\", \"activate\", \"deactivate\", \"label\", \"formattedLabel\", \"color\", \"isActive\"]],\n  template: function LegendComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\");\n      i0.ɵɵtemplate(1, LegendComponent_header_1_Template, 3, 1, \"header\", 0);\n      i0.ɵɵelementStart(2, \"div\", 1)(3, \"ul\", 2);\n      i0.ɵɵtemplate(4, LegendComponent_li_4_Template, 2, 4, \"li\", 3);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵstyleProp(\"width\", ctx.width, \"px\");\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngIf\", (ctx.title == null ? null : ctx.title.length) > 0);\n      i0.ɵɵadvance(2);\n      i0.ɵɵstyleProp(\"max-height\", ctx.height - 45, \"px\");\n      i0.ɵɵclassProp(\"horizontal-legend\", ctx.horizontal);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngForOf\", ctx.legendEntries)(\"ngForTrackBy\", ctx.trackBy);\n    }\n  },\n  dependencies: [LegendEntryComponent, i2.NgIf, i2.NgForOf],\n  styles: [\".chart-legend{display:inline-block;padding:0;width:auto!important}.chart-legend .legend-title{white-space:nowrap;overflow:hidden;margin-left:10px;margin-bottom:5px;font-size:14px;font-weight:700}.chart-legend ul,.chart-legend li{padding:0;margin:0;list-style:none}.chart-legend .horizontal-legend li{display:inline-block}.chart-legend .legend-wrap{width:calc(100% - 10px)}.chart-legend .legend-labels{line-height:85%;list-style:none;text-align:left;float:left;width:100%;border-radius:3px;overflow-y:auto;overflow-x:hidden;white-space:nowrap;background:rgba(0,0,0,.05)}.chart-legend .legend-label{cursor:pointer;font-size:90%;margin:8px;color:#afb7c8}.chart-legend .legend-label:hover{color:#000;transition:.2s}.chart-legend .legend-label .active .legend-label-text{color:#000}.chart-legend .legend-label-color{display:inline-block;height:15px;width:15px;margin-right:5px;color:#5b646b;border-radius:3px}.chart-legend .legend-label-text{display:inline-block;vertical-align:top;line-height:15px;font-size:12px;width:calc(100% - 20px);text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.chart-legend .legend-title-text{vertical-align:bottom;display:inline-block;line-height:16px;overflow:hidden;white-space:nowrap;text-overflow:ellipsis}\\n\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LegendComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-legend',\n      template: `\n    <div [style.width.px]=\"width\">\n      <header class=\"legend-title\" *ngIf=\"title?.length > 0\">\n        <span class=\"legend-title-text\">{{ title }}</span>\n      </header>\n      <div class=\"legend-wrap\">\n        <ul class=\"legend-labels\" [class.horizontal-legend]=\"horizontal\" [style.max-height.px]=\"height - 45\">\n          <li *ngFor=\"let entry of legendEntries; trackBy: trackBy\" class=\"legend-label\">\n            <ngx-charts-legend-entry\n              [label]=\"entry.label\"\n              [formattedLabel]=\"entry.formattedLabel\"\n              [color]=\"entry.color\"\n              [isActive]=\"isActive(entry)\"\n              (select)=\"labelClick.emit($event)\"\n              (activate)=\"activate($event)\"\n              (deactivate)=\"deactivate($event)\"\n            >\n            </ngx-charts-legend-entry>\n          </li>\n        </ul>\n      </div>\n    </div>\n  `,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\".chart-legend{display:inline-block;padding:0;width:auto!important}.chart-legend .legend-title{white-space:nowrap;overflow:hidden;margin-left:10px;margin-bottom:5px;font-size:14px;font-weight:700}.chart-legend ul,.chart-legend li{padding:0;margin:0;list-style:none}.chart-legend .horizontal-legend li{display:inline-block}.chart-legend .legend-wrap{width:calc(100% - 10px)}.chart-legend .legend-labels{line-height:85%;list-style:none;text-align:left;float:left;width:100%;border-radius:3px;overflow-y:auto;overflow-x:hidden;white-space:nowrap;background:rgba(0,0,0,.05)}.chart-legend .legend-label{cursor:pointer;font-size:90%;margin:8px;color:#afb7c8}.chart-legend .legend-label:hover{color:#000;transition:.2s}.chart-legend .legend-label .active .legend-label-text{color:#000}.chart-legend .legend-label-color{display:inline-block;height:15px;width:15px;margin-right:5px;color:#5b646b;border-radius:3px}.chart-legend .legend-label-text{display:inline-block;vertical-align:top;line-height:15px;font-size:12px;width:calc(100% - 20px);text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.chart-legend .legend-title-text{vertical-align:bottom;display:inline-block;line-height:16px;overflow:hidden;white-space:nowrap;text-overflow:ellipsis}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: i0.ChangeDetectorRef\n    }];\n  }, {\n    data: [{\n      type: Input\n    }],\n    title: [{\n      type: Input\n    }],\n    colors: [{\n      type: Input\n    }],\n    height: [{\n      type: Input\n    }],\n    width: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    horizontal: [{\n      type: Input\n    }],\n    labelClick: [{\n      type: Output\n    }],\n    labelActivate: [{\n      type: Output\n    }],\n    labelDeactivate: [{\n      type: Output\n    }]\n  });\n})();\nclass ChartComponent {\n  constructor() {\n    this.showLegend = false;\n    this.animations = true;\n    this.legendLabelClick = new EventEmitter();\n    this.legendLabelActivate = new EventEmitter();\n    this.legendLabelDeactivate = new EventEmitter();\n    this.LegendPosition = LegendPosition;\n    this.LegendType = LegendType;\n  }\n  ngOnChanges(changes) {\n    this.update();\n  }\n  update() {\n    let legendColumns = 0;\n    if (this.showLegend) {\n      this.legendType = this.getLegendType();\n      if (!this.legendOptions || this.legendOptions.position === LegendPosition.Right) {\n        if (this.legendType === LegendType.ScaleLegend) {\n          legendColumns = 1;\n        } else {\n          legendColumns = 2;\n        }\n      }\n    }\n    const chartColumns = 12 - legendColumns;\n    this.chartWidth = Math.floor(this.view[0] * chartColumns / 12.0);\n    this.legendWidth = !this.legendOptions || this.legendOptions.position === LegendPosition.Right ? Math.floor(this.view[0] * legendColumns / 12.0) : this.chartWidth;\n  }\n  getLegendType() {\n    return this.legendOptions.scaleType === ScaleType.Linear ? LegendType.ScaleLegend : LegendType.Legend;\n  }\n}\nChartComponent.ɵfac = function ChartComponent_Factory(t) {\n  return new (t || ChartComponent)();\n};\nChartComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ChartComponent,\n  selectors: [[\"ngx-charts-chart\"]],\n  inputs: {\n    view: \"view\",\n    showLegend: \"showLegend\",\n    legendOptions: \"legendOptions\",\n    legendType: \"legendType\",\n    activeEntries: \"activeEntries\",\n    animations: \"animations\"\n  },\n  outputs: {\n    legendLabelClick: \"legendLabelClick\",\n    legendLabelActivate: \"legendLabelActivate\",\n    legendLabelDeactivate: \"legendLabelDeactivate\"\n  },\n  features: [i0.ɵɵProvidersFeature([TooltipService]), i0.ɵɵNgOnChangesFeature],\n  ngContentSelectors: _c2,\n  decls: 5,\n  vars: 8,\n  consts: [[1, \"ngx-charts-outer\"], [1, \"ngx-charts\"], [\"class\", \"chart-legend\", 3, \"horizontal\", \"valueRange\", \"colors\", \"height\", \"width\", 4, \"ngIf\"], [\"class\", \"chart-legend\", 3, \"horizontal\", \"data\", \"title\", \"colors\", \"height\", \"width\", \"activeEntries\", \"labelClick\", \"labelActivate\", \"labelDeactivate\", 4, \"ngIf\"], [1, \"chart-legend\", 3, \"horizontal\", \"valueRange\", \"colors\", \"height\", \"width\"], [1, \"chart-legend\", 3, \"labelClick\", \"labelActivate\", \"labelDeactivate\", \"horizontal\", \"data\", \"title\", \"colors\", \"height\", \"width\", \"activeEntries\"]],\n  template: function ChartComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"svg\", 1);\n      i0.ɵɵprojection(2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(3, ChartComponent_ngx_charts_scale_legend_3_Template, 1, 5, \"ngx-charts-scale-legend\", 2)(4, ChartComponent_ngx_charts_legend_4_Template, 1, 7, \"ngx-charts-legend\", 3);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵstyleProp(\"width\", ctx.view[0], \"px\")(\"height\", ctx.view[1], \"px\");\n      i0.ɵɵadvance();\n      i0.ɵɵattribute(\"width\", ctx.chartWidth)(\"height\", ctx.view[1]);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.showLegend && ctx.legendType === ctx.LegendType.ScaleLegend);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngIf\", ctx.showLegend && ctx.legendType === ctx.LegendType.Legend);\n    }\n  },\n  dependencies: [ScaleLegendComponent, LegendComponent, i2.NgIf],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ChartComponent, [{\n    type: Component,\n    args: [{\n      providers: [TooltipService],\n      selector: 'ngx-charts-chart',\n      template: `\n    <div class=\"ngx-charts-outer\" [style.width.px]=\"view[0]\" [style.height.px]=\"view[1]\">\n      <svg class=\"ngx-charts\" [attr.width]=\"chartWidth\" [attr.height]=\"view[1]\">\n        <ng-content></ng-content>\n      </svg>\n      <ngx-charts-scale-legend\n        *ngIf=\"showLegend && legendType === LegendType.ScaleLegend\"\n        class=\"chart-legend\"\n        [horizontal]=\"legendOptions && legendOptions.position === LegendPosition.Below\"\n        [valueRange]=\"legendOptions.domain\"\n        [colors]=\"legendOptions.colors\"\n        [height]=\"view[1]\"\n        [width]=\"legendWidth\"\n      >\n      </ngx-charts-scale-legend>\n      <ngx-charts-legend\n        *ngIf=\"showLegend && legendType === LegendType.Legend\"\n        class=\"chart-legend\"\n        [horizontal]=\"legendOptions && legendOptions.position === LegendPosition.Below\"\n        [data]=\"legendOptions.domain\"\n        [title]=\"legendOptions.title\"\n        [colors]=\"legendOptions.colors\"\n        [height]=\"view[1]\"\n        [width]=\"legendWidth\"\n        [activeEntries]=\"activeEntries\"\n        (labelClick)=\"legendLabelClick.emit($event)\"\n        (labelActivate)=\"legendLabelActivate.emit($event)\"\n        (labelDeactivate)=\"legendLabelDeactivate.emit($event)\"\n      >\n      </ngx-charts-legend>\n    </div>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, {\n    view: [{\n      type: Input\n    }],\n    showLegend: [{\n      type: Input\n    }],\n    legendOptions: [{\n      type: Input\n    }],\n    legendType: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }],\n    legendLabelClick: [{\n      type: Output\n    }],\n    legendLabelActivate: [{\n      type: Output\n    }],\n    legendLabelDeactivate: [{\n      type: Output\n    }]\n  });\n})();\n\n/**\n * Visibility Observer\n */\nclass VisibilityObserver {\n  constructor(element, zone) {\n    this.element = element;\n    this.zone = zone;\n    this.visible = new EventEmitter();\n    this.isVisible = false;\n    this.runCheck();\n  }\n  destroy() {\n    clearTimeout(this.timeout);\n  }\n  onVisibilityChange() {\n    // trigger zone recalc for columns\n    this.zone.run(() => {\n      this.isVisible = true;\n      this.visible.emit(true);\n    });\n  }\n  runCheck() {\n    const check = () => {\n      if (!this.element) {\n        return;\n      }\n      // https://davidwalsh.name/offsetheight-visibility\n      const {\n        offsetHeight,\n        offsetWidth\n      } = this.element.nativeElement;\n      if (offsetHeight && offsetWidth) {\n        clearTimeout(this.timeout);\n        this.onVisibilityChange();\n      } else {\n        clearTimeout(this.timeout);\n        this.zone.runOutsideAngular(() => {\n          this.timeout = setTimeout(() => check(), 100);\n        });\n      }\n    };\n    this.zone.runOutsideAngular(() => {\n      this.timeout = setTimeout(() => check());\n    });\n  }\n}\nVisibilityObserver.ɵfac = function VisibilityObserver_Factory(t) {\n  return new (t || VisibilityObserver)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone));\n};\nVisibilityObserver.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: VisibilityObserver,\n  selectors: [[\"visibility-observer\"]],\n  outputs: {\n    visible: \"visible\"\n  }\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(VisibilityObserver, [{\n    type: Directive,\n    args: [{\n      selector: 'visibility-observer'\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.NgZone\n    }];\n  }, {\n    visible: [{\n      type: Output\n    }]\n  });\n})();\nfunction isDate(value) {\n  return toString.call(value) === '[object Date]';\n}\nfunction isNumber(value) {\n  return typeof value === 'number';\n}\nclass BaseChartComponent {\n  constructor(chartElement, zone, cd, platformId) {\n    this.chartElement = chartElement;\n    this.zone = zone;\n    this.cd = cd;\n    this.platformId = platformId;\n    this.scheme = 'cool';\n    this.schemeType = ScaleType.Ordinal;\n    this.animations = true;\n    this.select = new EventEmitter();\n  }\n  ngOnInit() {\n    if (isPlatformServer(this.platformId)) {\n      this.animations = false;\n    }\n  }\n  ngAfterViewInit() {\n    this.bindWindowResizeEvent();\n    // listen for visibility of the element for hidden by default scenario\n    this.visibilityObserver = new VisibilityObserver(this.chartElement, this.zone);\n    this.visibilityObserver.visible.subscribe(this.update.bind(this));\n  }\n  ngOnDestroy() {\n    this.unbindEvents();\n    if (this.visibilityObserver) {\n      this.visibilityObserver.visible.unsubscribe();\n      this.visibilityObserver.destroy();\n    }\n  }\n  ngOnChanges(changes) {\n    this.update();\n  }\n  update() {\n    if (this.results) {\n      this.results = this.cloneData(this.results);\n    } else {\n      this.results = [];\n    }\n    if (this.view) {\n      this.width = this.view[0];\n      this.height = this.view[1];\n    } else {\n      const dims = this.getContainerDims();\n      if (dims) {\n        this.width = dims.width;\n        this.height = dims.height;\n      }\n    }\n    // default values if width or height are 0 or undefined\n    if (!this.width) {\n      this.width = 600;\n    }\n    if (!this.height) {\n      this.height = 400;\n    }\n    this.width = Math.floor(this.width);\n    this.height = Math.floor(this.height);\n    if (this.cd) {\n      this.cd.markForCheck();\n    }\n  }\n  getContainerDims() {\n    let width;\n    let height;\n    const hostElem = this.chartElement.nativeElement;\n    if (isPlatformBrowser(this.platformId) && hostElem.parentNode !== null) {\n      // Get the container dimensions\n      const dims = hostElem.parentNode.getBoundingClientRect();\n      width = dims.width;\n      height = dims.height;\n    }\n    if (width && height) {\n      return {\n        width,\n        height\n      };\n    }\n    return null;\n  }\n  /**\n   * Converts all date objects that appear as name\n   * into formatted date strings\n   */\n  formatDates() {\n    for (let i = 0; i < this.results.length; i++) {\n      const g = this.results[i];\n      g.label = g.name;\n      if (isDate(g.label)) {\n        g.label = g.label.toLocaleDateString();\n      }\n      if (g.series) {\n        for (let j = 0; j < g.series.length; j++) {\n          const d = g.series[j];\n          d.label = d.name;\n          if (isDate(d.label)) {\n            d.label = d.label.toLocaleDateString();\n          }\n        }\n      }\n    }\n  }\n  unbindEvents() {\n    if (this.resizeSubscription) {\n      this.resizeSubscription.unsubscribe();\n    }\n  }\n  bindWindowResizeEvent() {\n    if (!isPlatformBrowser(this.platformId)) {\n      return;\n    }\n    const source = fromEvent(window, 'resize');\n    const subscription = source.pipe(debounceTime(200)).subscribe(e => {\n      this.update();\n      if (this.cd) {\n        this.cd.markForCheck();\n      }\n    });\n    this.resizeSubscription = subscription;\n  }\n  /**\n   * Clones the data into a new object\n   *\n   * @memberOf BaseChart\n   */\n  cloneData(data) {\n    const results = [];\n    for (const item of data) {\n      const copy = {};\n      if (item['name'] !== undefined) {\n        copy['name'] = item['name'];\n      }\n      if (item['value'] !== undefined) {\n        copy['value'] = item['value'];\n      }\n      if (item['series'] !== undefined) {\n        copy['series'] = [];\n        for (const seriesItem of item['series']) {\n          const seriesItemCopy = Object.assign({}, seriesItem);\n          copy['series'].push(seriesItemCopy);\n        }\n      }\n      if (item['extra'] !== undefined) {\n        copy['extra'] = JSON.parse(JSON.stringify(item['extra']));\n      }\n      if (item['source'] !== undefined) {\n        copy['source'] = item['source'];\n      }\n      if (item['target'] !== undefined) {\n        copy['target'] = item['target'];\n      }\n      results.push(copy);\n    }\n    return results;\n  }\n}\nBaseChartComponent.ɵfac = function BaseChartComponent_Factory(t) {\n  return new (t || BaseChartComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(PLATFORM_ID));\n};\nBaseChartComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: BaseChartComponent,\n  selectors: [[\"base-chart\"]],\n  inputs: {\n    results: \"results\",\n    view: \"view\",\n    scheme: \"scheme\",\n    schemeType: \"schemeType\",\n    customColors: \"customColors\",\n    animations: \"animations\"\n  },\n  outputs: {\n    select: \"select\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 1,\n  vars: 0,\n  template: function BaseChartComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"div\");\n    }\n  },\n  encapsulation: 2\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BaseChartComponent, [{\n    type: Component,\n    args: [{\n      selector: 'base-chart',\n      template: ` <div></div> `\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.NgZone\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }];\n  }, {\n    results: [{\n      type: Input\n    }],\n    view: [{\n      type: Input\n    }],\n    scheme: [{\n      type: Input\n    }],\n    schemeType: [{\n      type: Input\n    }],\n    customColors: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }]\n  });\n})();\nvar Orientation;\n(function (Orientation) {\n  Orientation[\"Top\"] = \"top\";\n  Orientation[\"Bottom\"] = \"bottom\";\n  Orientation[\"Left\"] = \"left\";\n  Orientation[\"Right\"] = \"right\";\n})(Orientation || (Orientation = {}));\nclass AxisLabelComponent {\n  constructor(element) {\n    this.textHeight = 25;\n    this.margin = 5;\n    this.element = element.nativeElement;\n  }\n  ngOnChanges(changes) {\n    this.update();\n  }\n  update() {\n    this.strokeWidth = '0.01';\n    this.textAnchor = 'middle';\n    this.transform = '';\n    switch (this.orient) {\n      case Orientation.Top:\n        this.y = this.offset;\n        this.x = this.width / 2;\n        break;\n      case Orientation.Bottom:\n        this.y = this.offset;\n        this.x = this.width / 2;\n        break;\n      case Orientation.Left:\n        this.y = -(this.offset + this.textHeight + this.margin);\n        this.x = -this.height / 2;\n        this.transform = 'rotate(270)';\n        break;\n      case Orientation.Right:\n        this.y = this.offset + this.margin;\n        this.x = -this.height / 2;\n        this.transform = 'rotate(270)';\n        break;\n      default:\n    }\n  }\n}\nAxisLabelComponent.ɵfac = function AxisLabelComponent_Factory(t) {\n  return new (t || AxisLabelComponent)(i0.ɵɵdirectiveInject(i0.ElementRef));\n};\nAxisLabelComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: AxisLabelComponent,\n  selectors: [[\"g\", \"ngx-charts-axis-label\", \"\"]],\n  inputs: {\n    orient: \"orient\",\n    label: \"label\",\n    offset: \"offset\",\n    width: \"width\",\n    height: \"height\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c3,\n  decls: 2,\n  vars: 6,\n  template: function AxisLabelComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(0, \"text\");\n      i0.ɵɵtext(1);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵattribute(\"stroke-width\", ctx.strokeWidth)(\"x\", ctx.x)(\"y\", ctx.y)(\"text-anchor\", ctx.textAnchor)(\"transform\", ctx.transform);\n      i0.ɵɵadvance();\n      i0.ɵɵtextInterpolate1(\" \", ctx.label, \" \");\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AxisLabelComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-axis-label]',\n      template: `\n    <svg:text\n      [attr.stroke-width]=\"strokeWidth\"\n      [attr.x]=\"x\"\n      [attr.y]=\"y\"\n      [attr.text-anchor]=\"textAnchor\"\n      [attr.transform]=\"transform\"\n    >\n      {{ label }}\n    </svg:text>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }];\n  }, {\n    orient: [{\n      type: Input\n    }],\n    label: [{\n      type: Input\n    }],\n    offset: [{\n      type: Input\n    }],\n    width: [{\n      type: Input\n    }],\n    height: [{\n      type: Input\n    }]\n  });\n})();\nfunction trimLabel(s, max = 16) {\n  if (typeof s !== 'string') {\n    if (typeof s === 'number') {\n      return s + '';\n    } else {\n      return '';\n    }\n  }\n  s = s.trim();\n  if (s.length <= max) {\n    return s;\n  } else {\n    return `${s.slice(0, max)}...`;\n  }\n}\nfunction reduceTicks(ticks, maxTicks) {\n  if (ticks.length > maxTicks) {\n    const reduced = [];\n    const modulus = Math.floor(ticks.length / maxTicks);\n    for (let i = 0; i < ticks.length; i++) {\n      if (i % modulus === 0) {\n        reduced.push(ticks[i]);\n      }\n    }\n    ticks = reduced;\n  }\n  return ticks;\n}\nfunction getTickLines(label, maxLength, maxLines) {\n  const labelString = (label || '').toString();\n  let totalLines = [];\n  if (/\\s/.test(labelString)) {\n    totalLines = labelString.split(/\\s+/).reduce((lines, line) => {\n      const last = (lines.pop() || '') + ' ';\n      return last.length + line.length > maxLength ? [...lines, last.trim(), line.trim()] : [...lines, last + line];\n    }, []);\n  } else {\n    let startIndex = 0;\n    while (startIndex < labelString.length) {\n      totalLines.push(labelString.substring(startIndex, startIndex + maxLength));\n      startIndex += maxLength;\n    }\n  }\n  if (totalLines.length > maxLines) {\n    totalLines = totalLines.splice(0, maxLines);\n    totalLines[totalLines.length - 1] += '...';\n  }\n  return totalLines;\n}\nvar TextAnchor;\n(function (TextAnchor) {\n  TextAnchor[\"Start\"] = \"start\";\n  TextAnchor[\"Middle\"] = \"middle\";\n  TextAnchor[\"End\"] = \"end\";\n})(TextAnchor || (TextAnchor = {}));\nclass XAxisTicksComponent {\n  constructor(platformId) {\n    this.platformId = platformId;\n    this.tickArguments = [5];\n    this.tickStroke = '#ccc';\n    this.trimTicks = true;\n    this.maxTickLength = 16;\n    this.showGridLines = false;\n    this.rotateTicks = true;\n    this.wrapTicks = false;\n    this.dimensionsChanged = new EventEmitter();\n    this.verticalSpacing = 20;\n    this.rotateLabels = false;\n    this.innerTickSize = 6;\n    this.outerTickSize = 6;\n    this.tickPadding = 3;\n    this.textAnchor = TextAnchor.Middle;\n    this.maxTicksLength = 0;\n    this.maxAllowedLength = 16;\n    this.height = 0;\n    this.approxHeight = 10;\n    this.maxPossibleLengthForTickIfWrapped = 16;\n  }\n  get isWrapTicksSupported() {\n    return this.wrapTicks && this.scale.step;\n  }\n  ngOnChanges(changes) {\n    this.update();\n  }\n  ngAfterViewInit() {\n    setTimeout(() => this.updateDims());\n  }\n  updateDims() {\n    if (!isPlatformBrowser(this.platformId)) {\n      // for SSR, use approximate value instead of measured\n      this.dimensionsChanged.emit({\n        height: this.approxHeight\n      });\n      return;\n    }\n    const height = parseInt(this.ticksElement.nativeElement.getBoundingClientRect().height, 10);\n    if (height !== this.height) {\n      this.height = height;\n      this.dimensionsChanged.emit({\n        height: this.height\n      });\n      setTimeout(() => this.updateDims());\n    }\n  }\n  update() {\n    const scale = this.scale;\n    this.ticks = this.getTicks();\n    if (this.tickFormatting) {\n      this.tickFormat = this.tickFormatting;\n    } else if (scale.tickFormat) {\n      // eslint-disable-next-line prefer-spread\n      this.tickFormat = scale.tickFormat.apply(scale, this.tickArguments);\n    } else {\n      this.tickFormat = function (d) {\n        if (d.constructor.name === 'Date') {\n          return d.toLocaleDateString();\n        }\n        return d.toLocaleString();\n      };\n    }\n    const angle = this.rotateTicks ? this.getRotationAngle(this.ticks) : null;\n    this.adjustedScale = this.scale.bandwidth ? function (d) {\n      return this.scale(d) + this.scale.bandwidth() * 0.5;\n    } : this.scale;\n    this.textTransform = '';\n    if (angle && angle !== 0) {\n      this.textTransform = `rotate(${angle})`;\n      this.textAnchor = TextAnchor.End;\n      this.verticalSpacing = 10;\n    } else {\n      this.textAnchor = TextAnchor.Middle;\n    }\n    setTimeout(() => this.updateDims());\n  }\n  getRotationAngle(ticks) {\n    let angle = 0;\n    this.maxTicksLength = 0;\n    for (let i = 0; i < ticks.length; i++) {\n      const tick = this.tickFormat(ticks[i]).toString();\n      let tickLength = tick.length;\n      if (this.trimTicks) {\n        tickLength = this.tickTrim(tick).length;\n      }\n      if (tickLength > this.maxTicksLength) {\n        this.maxTicksLength = tickLength;\n      }\n    }\n    const len = Math.min(this.maxTicksLength, this.maxAllowedLength);\n    const charWidth = 7; // need to measure this\n    const wordWidth = len * charWidth;\n    let baseWidth = wordWidth;\n    const maxBaseWidth = Math.floor(this.width / ticks.length);\n    // calculate optimal angle\n    while (baseWidth > maxBaseWidth && angle > -90) {\n      angle -= 30;\n      baseWidth = Math.cos(angle * (Math.PI / 180)) * wordWidth;\n    }\n    let labelHeight = 14;\n    if (this.isWrapTicksSupported) {\n      const longestTick = this.ticks.reduce((earlier, current) => current.length > earlier.length ? current : earlier, '');\n      const tickLines = this.tickChunks(longestTick);\n      labelHeight = 14 * (tickLines.length || 1);\n      this.maxPossibleLengthForTickIfWrapped = this.getMaxPossibleLengthForTick(longestTick);\n    }\n    const requiredHeight = angle !== 0 ? Math.max(Math.abs(Math.sin(angle * Math.PI / 180)) * this.maxTickLength * charWidth, 10) : labelHeight;\n    this.approxHeight = Math.min(requiredHeight, 200);\n    return angle;\n  }\n  getTicks() {\n    let ticks;\n    const maxTicks = this.getMaxTicks(20);\n    const maxScaleTicks = this.getMaxTicks(100);\n    if (this.tickValues) {\n      ticks = this.tickValues;\n    } else if (this.scale.ticks) {\n      ticks = this.scale.ticks.apply(this.scale, [maxScaleTicks]);\n    } else {\n      ticks = this.scale.domain();\n      ticks = reduceTicks(ticks, maxTicks);\n    }\n    return ticks;\n  }\n  getMaxTicks(tickWidth) {\n    return Math.floor(this.width / tickWidth);\n  }\n  tickTransform(tick) {\n    return 'translate(' + this.adjustedScale(tick) + ',' + this.verticalSpacing + ')';\n  }\n  gridLineTransform() {\n    return `translate(0,${-this.verticalSpacing - 5})`;\n  }\n  tickTrim(label) {\n    return this.trimTicks ? trimLabel(label, this.maxTickLength) : label;\n  }\n  getMaxPossibleLengthForTick(longestLabel) {\n    if (this.scale.bandwidth) {\n      const averageCharacterWidth = 7; // approximate char width\n      const maxCharacters = Math.floor(this.scale.bandwidth() / averageCharacterWidth);\n      const truncatedText = longestLabel.slice(0, maxCharacters);\n      return Math.max(truncatedText.length, this.maxTickLength);\n    }\n    return this.maxTickLength;\n  }\n  tickChunks(label) {\n    if (label.toString().length > this.maxTickLength && this.scale.bandwidth) {\n      const maxAllowedLines = 5;\n      let maxLines = this.rotateTicks ? Math.floor(this.scale.step() / 14) : maxAllowedLines;\n      if (maxLines <= 1) {\n        return [this.tickTrim(label)];\n      }\n      let possibleStringLength = Math.max(this.maxPossibleLengthForTickIfWrapped, this.maxTickLength);\n      if (!isPlatformBrowser(this.platformId)) {\n        possibleStringLength = Math.floor(Math.min(this.approxHeight / maxAllowedLines, Math.max(this.maxPossibleLengthForTickIfWrapped, this.maxTickLength)));\n      }\n      maxLines = Math.min(maxLines, maxAllowedLines);\n      const lines = getTickLines(label, possibleStringLength, maxLines < 1 ? 1 : maxLines);\n      return lines;\n    }\n    return [this.tickTrim(label)];\n  }\n}\nXAxisTicksComponent.ɵfac = function XAxisTicksComponent_Factory(t) {\n  return new (t || XAxisTicksComponent)(i0.ɵɵdirectiveInject(PLATFORM_ID));\n};\nXAxisTicksComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: XAxisTicksComponent,\n  selectors: [[\"g\", \"ngx-charts-x-axis-ticks\", \"\"]],\n  viewQuery: function XAxisTicksComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c4, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.ticksElement = _t.first);\n    }\n  },\n  inputs: {\n    scale: \"scale\",\n    orient: \"orient\",\n    tickArguments: \"tickArguments\",\n    tickValues: \"tickValues\",\n    tickStroke: \"tickStroke\",\n    trimTicks: \"trimTicks\",\n    maxTickLength: \"maxTickLength\",\n    tickFormatting: \"tickFormatting\",\n    showGridLines: \"showGridLines\",\n    gridLineHeight: \"gridLineHeight\",\n    width: \"width\",\n    rotateTicks: \"rotateTicks\",\n    wrapTicks: \"wrapTicks\"\n  },\n  outputs: {\n    dimensionsChanged: \"dimensionsChanged\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c5,\n  decls: 4,\n  vars: 2,\n  consts: [[\"ticksel\", \"\"], [\"tmplMultilineTick\", \"\"], [\"tmplSinglelineTick\", \"\"], [\"class\", \"tick\", 4, \"ngFor\", \"ngForOf\"], [4, \"ngFor\", \"ngForOf\"], [1, \"tick\"], [4, \"ngIf\"], [\"stroke-width\", \"0.01\", \"font-size\", \"12px\"], [4, \"ngIf\", \"ngIfThen\", \"ngIfElse\"], [\"x\", \"0\", 4, \"ngFor\", \"ngForOf\"], [\"x\", \"0\"], [\"y2\", \"0\", 1, \"gridline-path\", \"gridline-path-vertical\"]],\n  template: function XAxisTicksComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(0, \"g\", null, 0);\n      i0.ɵɵtemplate(2, XAxisTicksComponent__svg_g_2_Template, 2, 2, \"g\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(3, XAxisTicksComponent__svg_g_3_Template, 2, 2, \"g\", 4);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.ticks);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngForOf\", ctx.ticks);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(XAxisTicksComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-x-axis-ticks]',\n      template: `\n    <svg:g #ticksel>\n      <svg:g *ngFor=\"let tick of ticks\" class=\"tick\" [attr.transform]=\"tickTransform(tick)\">\n        <ng-container *ngIf=\"tickFormat(tick) as tickFormatted\">\n          <title>{{ tickFormatted }}</title>\n          <svg:text\n            stroke-width=\"0.01\"\n            font-size=\"12px\"\n            [attr.text-anchor]=\"textAnchor\"\n            [attr.transform]=\"textTransform\"\n          >\n            <ng-container *ngIf=\"isWrapTicksSupported; then tmplMultilineTick; else tmplSinglelineTick\"></ng-container>\n          </svg:text>\n\n          <ng-template #tmplMultilineTick>\n            <ng-container *ngIf=\"tickChunks(tick) as tickLines\">\n              <svg:tspan *ngFor=\"let tickLine of tickLines; let i = index\" x=\"0\" [attr.y]=\"i * 12\">\n                {{ tickLine }}\n              </svg:tspan>\n            </ng-container>\n          </ng-template>\n\n          <ng-template #tmplSinglelineTick>\n            {{ tickTrim(tickFormatted) }}\n          </ng-template>\n        </ng-container>\n      </svg:g>\n    </svg:g>\n\n    <svg:g *ngFor=\"let tick of ticks\" [attr.transform]=\"tickTransform(tick)\">\n      <svg:g *ngIf=\"showGridLines\" [attr.transform]=\"gridLineTransform()\">\n        <svg:line class=\"gridline-path gridline-path-vertical\" [attr.y1]=\"-gridLineHeight\" y2=\"0\" />\n      </svg:g>\n    </svg:g>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }];\n  }, {\n    scale: [{\n      type: Input\n    }],\n    orient: [{\n      type: Input\n    }],\n    tickArguments: [{\n      type: Input\n    }],\n    tickValues: [{\n      type: Input\n    }],\n    tickStroke: [{\n      type: Input\n    }],\n    trimTicks: [{\n      type: Input\n    }],\n    maxTickLength: [{\n      type: Input\n    }],\n    tickFormatting: [{\n      type: Input\n    }],\n    showGridLines: [{\n      type: Input\n    }],\n    gridLineHeight: [{\n      type: Input\n    }],\n    width: [{\n      type: Input\n    }],\n    rotateTicks: [{\n      type: Input\n    }],\n    wrapTicks: [{\n      type: Input\n    }],\n    dimensionsChanged: [{\n      type: Output\n    }],\n    ticksElement: [{\n      type: ViewChild,\n      args: ['ticksel']\n    }]\n  });\n})();\nclass XAxisComponent {\n  constructor() {\n    this.rotateTicks = true;\n    this.showGridLines = false;\n    this.xOrient = Orientation.Bottom;\n    this.xAxisOffset = 0;\n    this.wrapTicks = false;\n    this.dimensionsChanged = new EventEmitter();\n    this.xAxisClassName = 'x axis';\n    this.labelOffset = 0;\n    this.fill = 'none';\n    this.stroke = 'stroke';\n    this.tickStroke = '#ccc';\n    this.strokeWidth = 'none';\n    this.padding = 5;\n    this.orientation = Orientation;\n  }\n  ngOnChanges(changes) {\n    this.update();\n  }\n  update() {\n    this.transform = `translate(0,${this.xAxisOffset + this.padding + this.dims.height})`;\n    if (typeof this.xAxisTickCount !== 'undefined') {\n      this.tickArguments = [this.xAxisTickCount];\n    }\n  }\n  emitTicksHeight({\n    height\n  }) {\n    const newLabelOffset = height + 25 + 5;\n    if (newLabelOffset !== this.labelOffset) {\n      this.labelOffset = newLabelOffset;\n      setTimeout(() => {\n        this.dimensionsChanged.emit({\n          height\n        });\n      }, 0);\n    }\n  }\n}\nXAxisComponent.ɵfac = function XAxisComponent_Factory(t) {\n  return new (t || XAxisComponent)();\n};\nXAxisComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: XAxisComponent,\n  selectors: [[\"g\", \"ngx-charts-x-axis\", \"\"]],\n  viewQuery: function XAxisComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(XAxisTicksComponent, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.ticksComponent = _t.first);\n    }\n  },\n  inputs: {\n    xScale: \"xScale\",\n    dims: \"dims\",\n    trimTicks: \"trimTicks\",\n    rotateTicks: \"rotateTicks\",\n    maxTickLength: \"maxTickLength\",\n    tickFormatting: \"tickFormatting\",\n    showGridLines: \"showGridLines\",\n    showLabel: \"showLabel\",\n    labelText: \"labelText\",\n    ticks: \"ticks\",\n    xAxisTickCount: \"xAxisTickCount\",\n    xOrient: \"xOrient\",\n    xAxisOffset: \"xAxisOffset\",\n    wrapTicks: \"wrapTicks\"\n  },\n  outputs: {\n    dimensionsChanged: \"dimensionsChanged\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c6,\n  decls: 3,\n  vars: 4,\n  consts: [[\"ngx-charts-x-axis-ticks\", \"\", 3, \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"tickArguments\", \"tickStroke\", \"scale\", \"orient\", \"showGridLines\", \"gridLineHeight\", \"width\", \"tickValues\", \"wrapTicks\", \"dimensionsChanged\", 4, \"ngIf\"], [\"ngx-charts-axis-label\", \"\", 3, \"label\", \"offset\", \"orient\", \"height\", \"width\", 4, \"ngIf\"], [\"ngx-charts-x-axis-ticks\", \"\", 3, \"dimensionsChanged\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"tickArguments\", \"tickStroke\", \"scale\", \"orient\", \"showGridLines\", \"gridLineHeight\", \"width\", \"tickValues\", \"wrapTicks\"], [\"ngx-charts-axis-label\", \"\", 3, \"label\", \"offset\", \"orient\", \"height\", \"width\"]],\n  template: function XAxisComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(0, \"g\");\n      i0.ɵɵtemplate(1, XAxisComponent__svg_g_1_Template, 1, 13, \"g\", 0)(2, XAxisComponent__svg_g_2_Template, 1, 5, \"g\", 1);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵattribute(\"class\", ctx.xAxisClassName)(\"transform\", ctx.transform);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngIf\", ctx.xScale);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngIf\", ctx.showLabel);\n    }\n  },\n  dependencies: [XAxisTicksComponent, AxisLabelComponent, i2.NgIf],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(XAxisComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-x-axis]',\n      template: `\n    <svg:g [attr.class]=\"xAxisClassName\" [attr.transform]=\"transform\">\n      <svg:g\n        ngx-charts-x-axis-ticks\n        *ngIf=\"xScale\"\n        [trimTicks]=\"trimTicks\"\n        [rotateTicks]=\"rotateTicks\"\n        [maxTickLength]=\"maxTickLength\"\n        [tickFormatting]=\"tickFormatting\"\n        [tickArguments]=\"tickArguments\"\n        [tickStroke]=\"tickStroke\"\n        [scale]=\"xScale\"\n        [orient]=\"xOrient\"\n        [showGridLines]=\"showGridLines\"\n        [gridLineHeight]=\"dims.height\"\n        [width]=\"dims.width\"\n        [tickValues]=\"ticks\"\n        [wrapTicks]=\"wrapTicks\"\n        (dimensionsChanged)=\"emitTicksHeight($event)\"\n      />\n      <svg:g\n        ngx-charts-axis-label\n        *ngIf=\"showLabel\"\n        [label]=\"labelText\"\n        [offset]=\"labelOffset\"\n        [orient]=\"orientation.Bottom\"\n        [height]=\"dims.height\"\n        [width]=\"dims.width\"\n      ></svg:g>\n    </svg:g>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, {\n    xScale: [{\n      type: Input\n    }],\n    dims: [{\n      type: Input\n    }],\n    trimTicks: [{\n      type: Input\n    }],\n    rotateTicks: [{\n      type: Input\n    }],\n    maxTickLength: [{\n      type: Input\n    }],\n    tickFormatting: [{\n      type: Input\n    }],\n    showGridLines: [{\n      type: Input\n    }],\n    showLabel: [{\n      type: Input\n    }],\n    labelText: [{\n      type: Input\n    }],\n    ticks: [{\n      type: Input\n    }],\n    xAxisTickCount: [{\n      type: Input\n    }],\n    xOrient: [{\n      type: Input\n    }],\n    xAxisOffset: [{\n      type: Input\n    }],\n    wrapTicks: [{\n      type: Input\n    }],\n    dimensionsChanged: [{\n      type: Output\n    }],\n    ticksComponent: [{\n      type: ViewChild,\n      args: [XAxisTicksComponent]\n    }]\n  });\n})();\n\n/**\n * Generates a rounded rectanglar path\n *\n * @export\n * @param x, y, w, h, r, tl, tr, bl, br\n */\nfunction roundedRect(x, y, w, h, r, [tl, tr, bl, br]) {\n  let retval = '';\n  w = Math.floor(w);\n  h = Math.floor(h);\n  w = w === 0 ? 1 : w;\n  h = h === 0 ? 1 : h;\n  retval = `M${[x + r, y]}`;\n  retval += `h${w - 2 * r}`;\n  if (tr) {\n    retval += `a${[r, r]} 0 0 1 ${[r, r]}`;\n  } else {\n    retval += `h${r}v${r}`;\n  }\n  retval += `v${h - 2 * r}`;\n  if (br) {\n    retval += `a${[r, r]} 0 0 1 ${[-r, r]}`;\n  } else {\n    retval += `v${r}h${-r}`;\n  }\n  retval += `h${2 * r - w}`;\n  if (bl) {\n    retval += `a${[r, r]} 0 0 1 ${[-r, -r]}`;\n  } else {\n    retval += `h${-r}v${-r}`;\n  }\n  retval += `v${2 * r - h}`;\n  if (tl) {\n    retval += `a${[r, r]} 0 0 1 ${[r, -r]}`;\n  } else {\n    retval += `v${-r}h${r}`;\n  }\n  retval += `z`;\n  return retval;\n}\nclass YAxisTicksComponent {\n  constructor(platformId) {\n    this.platformId = platformId;\n    this.tickArguments = [5];\n    this.tickStroke = '#ccc';\n    this.trimTicks = true;\n    this.maxTickLength = 16;\n    this.showGridLines = false;\n    this.showRefLabels = false;\n    this.showRefLines = false;\n    this.wrapTicks = false;\n    this.dimensionsChanged = new EventEmitter();\n    this.innerTickSize = 6;\n    this.tickPadding = 3;\n    this.verticalSpacing = 20;\n    this.textAnchor = TextAnchor.Middle;\n    this.width = 0;\n    this.outerTickSize = 6;\n    this.rotateLabels = false;\n    this.referenceLineLength = 0;\n    this.Orientation = Orientation;\n  }\n  ngOnChanges(changes) {\n    this.update();\n  }\n  ngAfterViewInit() {\n    setTimeout(() => this.updateDims());\n  }\n  updateDims() {\n    if (!isPlatformBrowser(this.platformId)) {\n      // for SSR, use approximate value instead of measured\n      this.width = this.getApproximateAxisWidth();\n      this.dimensionsChanged.emit({\n        width: this.width\n      });\n      return;\n    }\n    const width = parseInt(this.ticksElement.nativeElement.getBoundingClientRect().width, 10);\n    if (width !== this.width) {\n      this.width = width;\n      this.dimensionsChanged.emit({\n        width\n      });\n      setTimeout(() => this.updateDims());\n    }\n  }\n  update() {\n    const scale = this.scale;\n    const sign = this.orient === Orientation.Top || this.orient === Orientation.Right ? -1 : 1;\n    this.tickSpacing = Math.max(this.innerTickSize, 0) + this.tickPadding;\n    this.ticks = this.getTicks();\n    if (this.tickFormatting) {\n      this.tickFormat = this.tickFormatting;\n    } else if (scale.tickFormat) {\n      // eslint-disable-next-line prefer-spread\n      this.tickFormat = scale.tickFormat.apply(scale, this.tickArguments);\n    } else {\n      this.tickFormat = function (d) {\n        if (d.constructor.name === 'Date') {\n          return d.toLocaleDateString();\n        }\n        return d.toLocaleString();\n      };\n    }\n    this.adjustedScale = scale.bandwidth ? d => {\n      // position the tick to middle considering number of lines of the tick\n      const positionMiddle = scale(d) + scale.bandwidth() * 0.5;\n      if (this.wrapTicks && d.toString().length > this.maxTickLength) {\n        const chunksLength = this.tickChunks(d).length;\n        if (chunksLength === 1) {\n          return positionMiddle;\n        }\n        const bandWidth = scale.bandwidth();\n        const heightOfLines = chunksLength * 8;\n        const availableFreeSpace = bandWidth * 0.5 - heightOfLines * 0.5;\n        return scale(d) + availableFreeSpace;\n      }\n      return positionMiddle;\n    } : scale;\n    if (this.showRefLines && this.referenceLines) {\n      this.setReferencelines();\n    }\n    switch (this.orient) {\n      case Orientation.Top:\n        this.transform = function (tick) {\n          return 'translate(' + this.adjustedScale(tick) + ',0)';\n        };\n        this.textAnchor = TextAnchor.Middle;\n        this.y2 = this.innerTickSize * sign;\n        this.y1 = this.tickSpacing * sign;\n        this.dy = sign < 0 ? '0em' : '.71em';\n        break;\n      case Orientation.Bottom:\n        this.transform = function (tick) {\n          return 'translate(' + this.adjustedScale(tick) + ',0)';\n        };\n        this.textAnchor = TextAnchor.Middle;\n        this.y2 = this.innerTickSize * sign;\n        this.y1 = this.tickSpacing * sign;\n        this.dy = sign < 0 ? '0em' : '.71em';\n        break;\n      case Orientation.Left:\n        this.transform = function (tick) {\n          return 'translate(0,' + this.adjustedScale(tick) + ')';\n        };\n        this.textAnchor = TextAnchor.End;\n        this.x2 = this.innerTickSize * -sign;\n        this.x1 = this.tickSpacing * -sign;\n        this.dy = '.32em';\n        break;\n      case Orientation.Right:\n        this.transform = function (tick) {\n          return 'translate(0,' + this.adjustedScale(tick) + ')';\n        };\n        this.textAnchor = TextAnchor.Start;\n        this.x2 = this.innerTickSize * -sign;\n        this.x1 = this.tickSpacing * -sign;\n        this.dy = '.32em';\n        break;\n      default:\n    }\n    setTimeout(() => this.updateDims());\n  }\n  setReferencelines() {\n    this.refMin = this.adjustedScale(Math.min.apply(null, this.referenceLines.map(item => item.value)));\n    this.refMax = this.adjustedScale(Math.max.apply(null, this.referenceLines.map(item => item.value)));\n    this.referenceLineLength = this.referenceLines.length;\n    this.referenceAreaPath = roundedRect(0, this.refMax, this.gridLineWidth, this.refMin - this.refMax, 0, [false, false, false, false]);\n  }\n  getTicks() {\n    let ticks;\n    const maxTicks = this.getMaxTicks(20);\n    const maxScaleTicks = this.getMaxTicks(50);\n    if (this.tickValues) {\n      ticks = this.tickValues;\n    } else if (this.scale.ticks) {\n      ticks = this.scale.ticks.apply(this.scale, [maxScaleTicks]);\n    } else {\n      ticks = this.scale.domain();\n      ticks = reduceTicks(ticks, maxTicks);\n    }\n    return ticks;\n  }\n  getMaxTicks(tickHeight) {\n    return Math.floor(this.height / tickHeight);\n  }\n  tickTransform(tick) {\n    return `translate(${this.adjustedScale(tick)},${this.verticalSpacing})`;\n  }\n  gridLineTransform() {\n    return `translate(5,0)`;\n  }\n  tickTrim(label) {\n    return this.trimTicks ? trimLabel(label, this.maxTickLength) : label;\n  }\n  getApproximateAxisWidth() {\n    const maxChars = Math.max(...this.ticks.map(t => this.tickTrim(this.tickFormat(t)).length));\n    const charWidth = 7;\n    return maxChars * charWidth;\n  }\n  tickChunks(label) {\n    if (label.toString().length > this.maxTickLength && this.scale.bandwidth) {\n      // for y-axis the width of the tick is fixed\n      const preferredWidth = this.maxTickLength;\n      const maxLines = Math.floor(this.scale.bandwidth() / 15);\n      if (maxLines <= 1) {\n        return [this.tickTrim(label)];\n      }\n      return getTickLines(label, preferredWidth, Math.min(maxLines, 5));\n    }\n    return [this.tickFormat(label)];\n  }\n}\nYAxisTicksComponent.ɵfac = function YAxisTicksComponent_Factory(t) {\n  return new (t || YAxisTicksComponent)(i0.ɵɵdirectiveInject(PLATFORM_ID));\n};\nYAxisTicksComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: YAxisTicksComponent,\n  selectors: [[\"g\", \"ngx-charts-y-axis-ticks\", \"\"]],\n  viewQuery: function YAxisTicksComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c4, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.ticksElement = _t.first);\n    }\n  },\n  inputs: {\n    scale: \"scale\",\n    orient: \"orient\",\n    tickArguments: \"tickArguments\",\n    tickValues: \"tickValues\",\n    tickStroke: \"tickStroke\",\n    trimTicks: \"trimTicks\",\n    maxTickLength: \"maxTickLength\",\n    tickFormatting: \"tickFormatting\",\n    showGridLines: \"showGridLines\",\n    gridLineWidth: \"gridLineWidth\",\n    height: \"height\",\n    referenceLines: \"referenceLines\",\n    showRefLabels: \"showRefLabels\",\n    showRefLines: \"showRefLines\",\n    wrapTicks: \"wrapTicks\"\n  },\n  outputs: {\n    dimensionsChanged: \"dimensionsChanged\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c7,\n  decls: 6,\n  vars: 4,\n  consts: [[\"ticksel\", \"\"], [\"tmplMultilineTick\", \"\"], [\"tmplSinglelineTick\", \"\"], [\"class\", \"tick\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"reference-area\", 4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"], [1, \"tick\"], [4, \"ngIf\"], [\"stroke-width\", \"0.01\"], [4, \"ngIf\", \"ngIfThen\", \"ngIfElse\"], [4, \"ngIf\", \"ngIfElse\"], [\"x\", \"0\", 4, \"ngFor\", \"ngForOf\"], [\"x\", \"0\"], [1, \"reference-area\"], [\"class\", \"gridline-path gridline-path-horizontal\", \"x1\", \"0\", 4, \"ngIf\"], [\"x1\", \"0\", 1, \"gridline-path\", \"gridline-path-horizontal\"], [\"x1\", \"0\", 1, \"refline-path\", \"gridline-path-horizontal\"], [1, \"refline-label\"]],\n  template: function YAxisTicksComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(0, \"g\", null, 0);\n      i0.ɵɵtemplate(2, YAxisTicksComponent__svg_g_2_Template, 2, 2, \"g\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(3, YAxisTicksComponent__svg_path_3_Template, 1, 2, \"path\", 4)(4, YAxisTicksComponent__svg_g_4_Template, 2, 2, \"g\", 5)(5, YAxisTicksComponent__svg_g_5_Template, 2, 1, \"g\", 5);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.ticks);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngIf\", ctx.referenceLineLength > 1 && ctx.refMax && ctx.refMin && ctx.showRefLines);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngForOf\", ctx.ticks);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngForOf\", ctx.referenceLines);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(YAxisTicksComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-y-axis-ticks]',\n      template: `\n    <svg:g #ticksel>\n      <svg:g *ngFor=\"let tick of ticks\" class=\"tick\" [attr.transform]=\"transform(tick)\">\n        <ng-container *ngIf=\"tickFormat(tick) as tickFormatted\">\n          <title>{{ tickFormatted }}</title>\n          <svg:text\n            stroke-width=\"0.01\"\n            [attr.dy]=\"dy\"\n            [attr.x]=\"x1\"\n            [attr.y]=\"y1\"\n            [attr.text-anchor]=\"textAnchor\"\n            [style.font-size]=\"'12px'\"\n          >\n            <ng-container *ngIf=\"wrapTicks; then tmplMultilineTick; else tmplSinglelineTick\"></ng-container>\n          </svg:text>\n\n          <ng-template #tmplMultilineTick>\n            <ng-container *ngIf=\"tickChunks(tick) as tickLines\">\n              <ng-container *ngIf=\"tickLines.length > 1; else tmplSinglelineTick\">\n                <svg:tspan *ngFor=\"let tickLine of tickLines; let i = index\" x=\"0\" [attr.y]=\"i * (8 + tickSpacing)\">\n                  {{ tickLine }}\n                </svg:tspan>\n              </ng-container>\n            </ng-container>\n          </ng-template>\n\n          <ng-template #tmplSinglelineTick>\n            {{ tickTrim(tickFormatted) }}\n          </ng-template>\n        </ng-container>\n      </svg:g>\n    </svg:g>\n\n    <svg:path\n      *ngIf=\"referenceLineLength > 1 && refMax && refMin && showRefLines\"\n      class=\"reference-area\"\n      [attr.d]=\"referenceAreaPath\"\n      [attr.transform]=\"gridLineTransform()\"\n    />\n    <svg:g *ngFor=\"let tick of ticks\" [attr.transform]=\"transform(tick)\">\n      <svg:g *ngIf=\"showGridLines\" [attr.transform]=\"gridLineTransform()\">\n        <svg:line\n          *ngIf=\"orient === Orientation.Left\"\n          class=\"gridline-path gridline-path-horizontal\"\n          x1=\"0\"\n          [attr.x2]=\"gridLineWidth\"\n        />\n        <svg:line\n          *ngIf=\"orient === Orientation.Right\"\n          class=\"gridline-path gridline-path-horizontal\"\n          x1=\"0\"\n          [attr.x2]=\"-gridLineWidth\"\n        />\n      </svg:g>\n    </svg:g>\n\n    <svg:g *ngFor=\"let refLine of referenceLines\">\n      <svg:g *ngIf=\"showRefLines\" [attr.transform]=\"transform(refLine.value)\">\n        <svg:line\n          class=\"refline-path gridline-path-horizontal\"\n          x1=\"0\"\n          [attr.x2]=\"gridLineWidth\"\n          [attr.transform]=\"gridLineTransform()\"\n        />\n        <svg:g *ngIf=\"showRefLabels\">\n          <title>{{ tickTrim(tickFormat(refLine.value)) }}</title>\n          <svg:text\n            class=\"refline-label\"\n            [attr.dy]=\"dy\"\n            [attr.y]=\"-6\"\n            [attr.x]=\"gridLineWidth\"\n            [attr.text-anchor]=\"textAnchor\"\n          >\n            {{ refLine.name }}\n          </svg:text>\n        </svg:g>\n      </svg:g>\n    </svg:g>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }];\n  }, {\n    scale: [{\n      type: Input\n    }],\n    orient: [{\n      type: Input\n    }],\n    tickArguments: [{\n      type: Input\n    }],\n    tickValues: [{\n      type: Input\n    }],\n    tickStroke: [{\n      type: Input\n    }],\n    trimTicks: [{\n      type: Input\n    }],\n    maxTickLength: [{\n      type: Input\n    }],\n    tickFormatting: [{\n      type: Input\n    }],\n    showGridLines: [{\n      type: Input\n    }],\n    gridLineWidth: [{\n      type: Input\n    }],\n    height: [{\n      type: Input\n    }],\n    referenceLines: [{\n      type: Input\n    }],\n    showRefLabels: [{\n      type: Input\n    }],\n    showRefLines: [{\n      type: Input\n    }],\n    wrapTicks: [{\n      type: Input\n    }],\n    dimensionsChanged: [{\n      type: Output\n    }],\n    ticksElement: [{\n      type: ViewChild,\n      args: ['ticksel']\n    }]\n  });\n})();\nclass YAxisComponent {\n  constructor() {\n    this.showGridLines = false;\n    this.yOrient = Orientation.Left;\n    this.yAxisOffset = 0;\n    this.wrapTicks = false;\n    this.dimensionsChanged = new EventEmitter();\n    this.yAxisClassName = 'y axis';\n    this.labelOffset = 15;\n    this.fill = 'none';\n    this.stroke = '#CCC';\n    this.tickStroke = '#CCC';\n    this.strokeWidth = 1;\n    this.padding = 5;\n  }\n  ngOnChanges(changes) {\n    this.update();\n  }\n  update() {\n    this.offset = -(this.yAxisOffset + this.padding);\n    if (this.yOrient === Orientation.Right) {\n      this.labelOffset = 65;\n      this.transform = `translate(${this.offset + this.dims.width} , 0)`;\n    } else {\n      this.transform = `translate(${this.offset} , 0)`;\n    }\n    if (this.yAxisTickCount !== undefined) {\n      this.tickArguments = [this.yAxisTickCount];\n    }\n  }\n  emitTicksWidth({\n    width\n  }) {\n    if (width !== this.labelOffset && this.yOrient === Orientation.Right) {\n      this.labelOffset = width + this.labelOffset;\n      setTimeout(() => {\n        this.dimensionsChanged.emit({\n          width\n        });\n      }, 0);\n    } else if (width !== this.labelOffset) {\n      this.labelOffset = width;\n      setTimeout(() => {\n        this.dimensionsChanged.emit({\n          width\n        });\n      }, 0);\n    }\n  }\n}\nYAxisComponent.ɵfac = function YAxisComponent_Factory(t) {\n  return new (t || YAxisComponent)();\n};\nYAxisComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: YAxisComponent,\n  selectors: [[\"g\", \"ngx-charts-y-axis\", \"\"]],\n  viewQuery: function YAxisComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(YAxisTicksComponent, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.ticksComponent = _t.first);\n    }\n  },\n  inputs: {\n    yScale: \"yScale\",\n    dims: \"dims\",\n    trimTicks: \"trimTicks\",\n    maxTickLength: \"maxTickLength\",\n    tickFormatting: \"tickFormatting\",\n    ticks: \"ticks\",\n    showGridLines: \"showGridLines\",\n    showLabel: \"showLabel\",\n    labelText: \"labelText\",\n    yAxisTickCount: \"yAxisTickCount\",\n    yOrient: \"yOrient\",\n    referenceLines: \"referenceLines\",\n    showRefLines: \"showRefLines\",\n    showRefLabels: \"showRefLabels\",\n    yAxisOffset: \"yAxisOffset\",\n    wrapTicks: \"wrapTicks\"\n  },\n  outputs: {\n    dimensionsChanged: \"dimensionsChanged\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c8,\n  decls: 3,\n  vars: 4,\n  consts: [[\"ngx-charts-y-axis-ticks\", \"\", 3, \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"tickArguments\", \"tickValues\", \"tickStroke\", \"scale\", \"orient\", \"showGridLines\", \"gridLineWidth\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"height\", \"wrapTicks\", \"dimensionsChanged\", 4, \"ngIf\"], [\"ngx-charts-axis-label\", \"\", 3, \"label\", \"offset\", \"orient\", \"height\", \"width\", 4, \"ngIf\"], [\"ngx-charts-y-axis-ticks\", \"\", 3, \"dimensionsChanged\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"tickArguments\", \"tickValues\", \"tickStroke\", \"scale\", \"orient\", \"showGridLines\", \"gridLineWidth\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"height\", \"wrapTicks\"], [\"ngx-charts-axis-label\", \"\", 3, \"label\", \"offset\", \"orient\", \"height\", \"width\"]],\n  template: function YAxisComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(0, \"g\");\n      i0.ɵɵtemplate(1, YAxisComponent__svg_g_1_Template, 1, 15, \"g\", 0)(2, YAxisComponent__svg_g_2_Template, 1, 5, \"g\", 1);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵattribute(\"class\", ctx.yAxisClassName)(\"transform\", ctx.transform);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngIf\", ctx.yScale);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngIf\", ctx.showLabel);\n    }\n  },\n  dependencies: [YAxisTicksComponent, AxisLabelComponent, i2.NgIf],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(YAxisComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-y-axis]',\n      template: `\n    <svg:g [attr.class]=\"yAxisClassName\" [attr.transform]=\"transform\">\n      <svg:g\n        ngx-charts-y-axis-ticks\n        *ngIf=\"yScale\"\n        [trimTicks]=\"trimTicks\"\n        [maxTickLength]=\"maxTickLength\"\n        [tickFormatting]=\"tickFormatting\"\n        [tickArguments]=\"tickArguments\"\n        [tickValues]=\"ticks\"\n        [tickStroke]=\"tickStroke\"\n        [scale]=\"yScale\"\n        [orient]=\"yOrient\"\n        [showGridLines]=\"showGridLines\"\n        [gridLineWidth]=\"dims.width\"\n        [referenceLines]=\"referenceLines\"\n        [showRefLines]=\"showRefLines\"\n        [showRefLabels]=\"showRefLabels\"\n        [height]=\"dims.height\"\n        [wrapTicks]=\"wrapTicks\"\n        (dimensionsChanged)=\"emitTicksWidth($event)\"\n      />\n\n      <svg:g\n        ngx-charts-axis-label\n        *ngIf=\"showLabel\"\n        [label]=\"labelText\"\n        [offset]=\"labelOffset\"\n        [orient]=\"yOrient\"\n        [height]=\"dims.height\"\n        [width]=\"dims.width\"\n      ></svg:g>\n    </svg:g>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, {\n    yScale: [{\n      type: Input\n    }],\n    dims: [{\n      type: Input\n    }],\n    trimTicks: [{\n      type: Input\n    }],\n    maxTickLength: [{\n      type: Input\n    }],\n    tickFormatting: [{\n      type: Input\n    }],\n    ticks: [{\n      type: Input\n    }],\n    showGridLines: [{\n      type: Input\n    }],\n    showLabel: [{\n      type: Input\n    }],\n    labelText: [{\n      type: Input\n    }],\n    yAxisTickCount: [{\n      type: Input\n    }],\n    yOrient: [{\n      type: Input\n    }],\n    referenceLines: [{\n      type: Input\n    }],\n    showRefLines: [{\n      type: Input\n    }],\n    showRefLabels: [{\n      type: Input\n    }],\n    yAxisOffset: [{\n      type: Input\n    }],\n    wrapTicks: [{\n      type: Input\n    }],\n    dimensionsChanged: [{\n      type: Output\n    }],\n    ticksComponent: [{\n      type: ViewChild,\n      args: [YAxisTicksComponent]\n    }]\n  });\n})();\nclass AxesModule {}\nAxesModule.ɵfac = function AxesModule_Factory(t) {\n  return new (t || AxesModule)();\n};\nAxesModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: AxesModule\n});\nAxesModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule]]\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AxesModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      declarations: [AxisLabelComponent, XAxisComponent, XAxisTicksComponent, YAxisComponent, YAxisTicksComponent],\n      exports: [AxisLabelComponent, XAxisComponent, XAxisTicksComponent, YAxisComponent, YAxisTicksComponent]\n    }]\n  }], null, null);\n})();\nvar StyleTypes;\n(function (StyleTypes) {\n  StyleTypes[\"popover\"] = \"popover\";\n  StyleTypes[\"tooltip\"] = \"tooltip\";\n})(StyleTypes || (StyleTypes = {}));\nvar ShowTypes;\n(function (ShowTypes) {\n  ShowTypes[ShowTypes[\"all\"] = 'all'] = \"all\";\n  ShowTypes[ShowTypes[\"focus\"] = 'focus'] = \"focus\";\n  ShowTypes[ShowTypes[\"mouseover\"] = 'mouseover'] = \"mouseover\";\n})(ShowTypes || (ShowTypes = {}));\nclass TooltipDirective {\n  constructor(tooltipService, viewContainerRef, renderer) {\n    this.tooltipService = tooltipService;\n    this.viewContainerRef = viewContainerRef;\n    this.renderer = renderer;\n    this.tooltipCssClass = '';\n    this.tooltipAppendToBody = true;\n    this.tooltipSpacing = 10;\n    this.tooltipDisabled = false;\n    this.tooltipShowCaret = true;\n    this.tooltipPlacement = PlacementTypes.Top;\n    this.tooltipAlignment = PlacementTypes.Center;\n    this.tooltipType = StyleTypes.popover;\n    this.tooltipCloseOnClickOutside = true;\n    this.tooltipCloseOnMouseLeave = true;\n    this.tooltipHideTimeout = 300;\n    this.tooltipShowTimeout = 100;\n    this.tooltipShowEvent = ShowTypes.all;\n    this.tooltipImmediateExit = false;\n    this.show = new EventEmitter();\n    this.hide = new EventEmitter();\n  }\n  get listensForFocus() {\n    return this.tooltipShowEvent === ShowTypes.all || this.tooltipShowEvent === ShowTypes.focus;\n  }\n  get listensForHover() {\n    return this.tooltipShowEvent === ShowTypes.all || this.tooltipShowEvent === ShowTypes.mouseover;\n  }\n  ngOnDestroy() {\n    this.hideTooltip(true);\n  }\n  onFocus() {\n    if (this.listensForFocus) {\n      this.showTooltip();\n    }\n  }\n  onBlur() {\n    if (this.listensForFocus) {\n      this.hideTooltip(true);\n    }\n  }\n  onMouseEnter() {\n    if (this.listensForHover) {\n      this.showTooltip();\n    }\n  }\n  onMouseLeave(target) {\n    if (this.listensForHover && this.tooltipCloseOnMouseLeave) {\n      clearTimeout(this.timeout);\n      if (this.component) {\n        const contentDom = this.component.instance.element.nativeElement;\n        const contains = contentDom.contains(target);\n        if (contains) return;\n      }\n      this.hideTooltip(this.tooltipImmediateExit);\n    }\n  }\n  onMouseClick() {\n    if (this.listensForHover) {\n      this.hideTooltip(true);\n    }\n  }\n  showTooltip(immediate) {\n    if (this.component || this.tooltipDisabled) return;\n    const time = immediate ? 0 : this.tooltipShowTimeout + (navigator.userAgent.match(/\\(i[^;]+;( U;)? CPU.+Mac OS X/) ? 400 : 0);\n    clearTimeout(this.timeout);\n    this.timeout = setTimeout(() => {\n      this.tooltipService.destroyAll();\n      const options = this.createBoundOptions();\n      this.component = this.tooltipService.create(options);\n      // add a tiny timeout to avoid event re-triggers\n      setTimeout(() => {\n        if (this.component) {\n          this.addHideListeners(this.component.instance.element.nativeElement);\n        }\n      }, 10);\n      this.show.emit(true);\n    }, time);\n  }\n  addHideListeners(tooltip) {\n    // on mouse enter, cancel the hide triggered by the leave\n    this.mouseEnterContentEvent = this.renderer.listen(tooltip, 'mouseenter', () => {\n      clearTimeout(this.timeout);\n    });\n    // content mouse leave listener\n    if (this.tooltipCloseOnMouseLeave) {\n      this.mouseLeaveContentEvent = this.renderer.listen(tooltip, 'mouseleave', () => {\n        this.hideTooltip(this.tooltipImmediateExit);\n      });\n    }\n    // content close on click outside\n    if (this.tooltipCloseOnClickOutside) {\n      this.documentClickEvent = this.renderer.listen('window', 'click', event => {\n        const contains = tooltip.contains(event.target);\n        if (!contains) this.hideTooltip();\n      });\n    }\n  }\n  hideTooltip(immediate = false) {\n    if (!this.component) return;\n    const destroyFn = () => {\n      // remove events\n      if (this.mouseLeaveContentEvent) this.mouseLeaveContentEvent();\n      if (this.mouseEnterContentEvent) this.mouseEnterContentEvent();\n      if (this.documentClickEvent) this.documentClickEvent();\n      // emit events\n      this.hide.emit(true);\n      // destroy component\n      this.tooltipService.destroy(this.component);\n      this.component = undefined;\n    };\n    clearTimeout(this.timeout);\n    if (!immediate) {\n      this.timeout = setTimeout(destroyFn, this.tooltipHideTimeout);\n    } else {\n      destroyFn();\n    }\n  }\n  createBoundOptions() {\n    return {\n      title: this.tooltipTitle,\n      template: this.tooltipTemplate,\n      host: this.viewContainerRef.element,\n      placement: this.tooltipPlacement,\n      alignment: this.tooltipAlignment,\n      type: this.tooltipType,\n      showCaret: this.tooltipShowCaret,\n      cssClass: this.tooltipCssClass,\n      spacing: this.tooltipSpacing,\n      context: this.tooltipContext\n    };\n  }\n}\nTooltipDirective.ɵfac = function TooltipDirective_Factory(t) {\n  return new (t || TooltipDirective)(i0.ɵɵdirectiveInject(TooltipService), i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(i0.Renderer2));\n};\nTooltipDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: TooltipDirective,\n  selectors: [[\"\", \"ngx-tooltip\", \"\"]],\n  hostBindings: function TooltipDirective_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"focusin\", function TooltipDirective_focusin_HostBindingHandler() {\n        return ctx.onFocus();\n      })(\"blur\", function TooltipDirective_blur_HostBindingHandler() {\n        return ctx.onBlur();\n      })(\"mouseenter\", function TooltipDirective_mouseenter_HostBindingHandler() {\n        return ctx.onMouseEnter();\n      })(\"mouseleave\", function TooltipDirective_mouseleave_HostBindingHandler($event) {\n        return ctx.onMouseLeave($event.target);\n      })(\"click\", function TooltipDirective_click_HostBindingHandler() {\n        return ctx.onMouseClick();\n      });\n    }\n  },\n  inputs: {\n    tooltipCssClass: \"tooltipCssClass\",\n    tooltipTitle: \"tooltipTitle\",\n    tooltipAppendToBody: \"tooltipAppendToBody\",\n    tooltipSpacing: \"tooltipSpacing\",\n    tooltipDisabled: \"tooltipDisabled\",\n    tooltipShowCaret: \"tooltipShowCaret\",\n    tooltipPlacement: \"tooltipPlacement\",\n    tooltipAlignment: \"tooltipAlignment\",\n    tooltipType: \"tooltipType\",\n    tooltipCloseOnClickOutside: \"tooltipCloseOnClickOutside\",\n    tooltipCloseOnMouseLeave: \"tooltipCloseOnMouseLeave\",\n    tooltipHideTimeout: \"tooltipHideTimeout\",\n    tooltipShowTimeout: \"tooltipShowTimeout\",\n    tooltipTemplate: \"tooltipTemplate\",\n    tooltipShowEvent: \"tooltipShowEvent\",\n    tooltipContext: \"tooltipContext\",\n    tooltipImmediateExit: \"tooltipImmediateExit\"\n  },\n  outputs: {\n    show: \"show\",\n    hide: \"hide\"\n  }\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TooltipDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[ngx-tooltip]'\n    }]\n  }], function () {\n    return [{\n      type: TooltipService\n    }, {\n      type: i0.ViewContainerRef\n    }, {\n      type: i0.Renderer2\n    }];\n  }, {\n    tooltipCssClass: [{\n      type: Input\n    }],\n    tooltipTitle: [{\n      type: Input\n    }],\n    tooltipAppendToBody: [{\n      type: Input\n    }],\n    tooltipSpacing: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    tooltipShowCaret: [{\n      type: Input\n    }],\n    tooltipPlacement: [{\n      type: Input\n    }],\n    tooltipAlignment: [{\n      type: Input\n    }],\n    tooltipType: [{\n      type: Input\n    }],\n    tooltipCloseOnClickOutside: [{\n      type: Input\n    }],\n    tooltipCloseOnMouseLeave: [{\n      type: Input\n    }],\n    tooltipHideTimeout: [{\n      type: Input\n    }],\n    tooltipShowTimeout: [{\n      type: Input\n    }],\n    tooltipTemplate: [{\n      type: Input\n    }],\n    tooltipShowEvent: [{\n      type: Input\n    }],\n    tooltipContext: [{\n      type: Input\n    }],\n    tooltipImmediateExit: [{\n      type: Input\n    }],\n    show: [{\n      type: Output\n    }],\n    hide: [{\n      type: Output\n    }],\n    onFocus: [{\n      type: HostListener,\n      args: ['focusin']\n    }],\n    onBlur: [{\n      type: HostListener,\n      args: ['blur']\n    }],\n    onMouseEnter: [{\n      type: HostListener,\n      args: ['mouseenter']\n    }],\n    onMouseLeave: [{\n      type: HostListener,\n      args: ['mouseleave', ['$event.target']]\n    }],\n    onMouseClick: [{\n      type: HostListener,\n      args: ['click']\n    }]\n  });\n})();\nclass TooltipModule {}\nTooltipModule.ɵfac = function TooltipModule_Factory(t) {\n  return new (t || TooltipModule)();\n};\nTooltipModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: TooltipModule\n});\nTooltipModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [InjectionService, TooltipService],\n  imports: [[CommonModule]]\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TooltipModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [TooltipContentComponent, TooltipDirective],\n      providers: [InjectionService, TooltipService],\n      exports: [TooltipContentComponent, TooltipDirective],\n      imports: [CommonModule],\n      entryComponents: [TooltipContentComponent]\n    }]\n  }], null, null);\n})();\nconst cache = {};\n/**\n * Generates a short id.\n *\n * Description:\n *   A 4-character alphanumeric sequence (364 = 1.6 million)\n *   This should only be used for JavaScript specific models.\n *   http://stackoverflow.com/questions/6248666/how-to-generate-short-uid-like-ax4j9z-in-js\n *\n *   Example: `ebgf`\n */\nfunction id() {\n  let newId = ('0000' + (Math.random() * Math.pow(36, 4) << 0).toString(36)).slice(-4);\n  // append a 'a' because neo gets mad\n  newId = `a${newId}`;\n  // ensure not already used\n  if (!cache[newId]) {\n    cache[newId] = true;\n    return newId;\n  }\n  return id();\n}\nvar BarOrientation;\n(function (BarOrientation) {\n  BarOrientation[\"Vertical\"] = \"vertical\";\n  BarOrientation[\"Horizontal\"] = \"horizontal\";\n})(BarOrientation || (BarOrientation = {}));\nclass SvgLinearGradientComponent {\n  constructor() {\n    this.orientation = BarOrientation.Vertical;\n  }\n  ngOnChanges(changes) {\n    this.x1 = '0%';\n    this.x2 = '0%';\n    this.y1 = '0%';\n    this.y2 = '0%';\n    if (this.orientation === BarOrientation.Horizontal) {\n      this.x2 = '100%';\n    } else if (this.orientation === BarOrientation.Vertical) {\n      this.y1 = '100%';\n    }\n  }\n}\nSvgLinearGradientComponent.ɵfac = function SvgLinearGradientComponent_Factory(t) {\n  return new (t || SvgLinearGradientComponent)();\n};\nSvgLinearGradientComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: SvgLinearGradientComponent,\n  selectors: [[\"g\", \"ngx-charts-svg-linear-gradient\", \"\"]],\n  inputs: {\n    orientation: \"orientation\",\n    name: \"name\",\n    stops: \"stops\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c9,\n  decls: 2,\n  vars: 6,\n  consts: [[3, \"id\"], [3, \"stop-color\", \"stop-opacity\", 4, \"ngFor\", \"ngForOf\"]],\n  template: function SvgLinearGradientComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(0, \"linearGradient\", 0);\n      i0.ɵɵtemplate(1, SvgLinearGradientComponent__svg_stop_1_Template, 1, 5, \"stop\", 1);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"id\", ctx.name);\n      i0.ɵɵattribute(\"x1\", ctx.x1)(\"y1\", ctx.y1)(\"x2\", ctx.x2)(\"y2\", ctx.y2);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngForOf\", ctx.stops);\n    }\n  },\n  dependencies: [i2.NgForOf],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SvgLinearGradientComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-svg-linear-gradient]',\n      template: `\n    <svg:linearGradient [id]=\"name\" [attr.x1]=\"x1\" [attr.y1]=\"y1\" [attr.x2]=\"x2\" [attr.y2]=\"y2\">\n      <svg:stop\n        *ngFor=\"let stop of stops\"\n        [attr.offset]=\"stop.offset + '%'\"\n        [style.stop-color]=\"stop.color\"\n        [style.stop-opacity]=\"stop.opacity\"\n      />\n    </svg:linearGradient>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, {\n    orientation: [{\n      type: Input\n    }],\n    name: [{\n      type: Input\n    }],\n    stops: [{\n      type: Input\n    }]\n  });\n})();\nclass CircleComponent {\n  constructor() {\n    this.select = new EventEmitter();\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n  }\n  onClick() {\n    this.select.emit(this.data);\n  }\n  onMouseEnter() {\n    this.activate.emit(this.data);\n  }\n  onMouseLeave() {\n    this.deactivate.emit(this.data);\n  }\n  ngOnChanges(changes) {\n    this.classNames = Array.isArray(this.classNames) ? this.classNames.join(' ') : '';\n    this.classNames += 'circle';\n  }\n}\nCircleComponent.ɵfac = function CircleComponent_Factory(t) {\n  return new (t || CircleComponent)();\n};\nCircleComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: CircleComponent,\n  selectors: [[\"g\", \"ngx-charts-circle\", \"\"]],\n  hostBindings: function CircleComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"click\", function CircleComponent_click_HostBindingHandler() {\n        return ctx.onClick();\n      })(\"mouseenter\", function CircleComponent_mouseenter_HostBindingHandler() {\n        return ctx.onMouseEnter();\n      })(\"mouseleave\", function CircleComponent_mouseleave_HostBindingHandler() {\n        return ctx.onMouseLeave();\n      });\n    }\n  },\n  inputs: {\n    cx: \"cx\",\n    cy: \"cy\",\n    r: \"r\",\n    fill: \"fill\",\n    stroke: \"stroke\",\n    data: \"data\",\n    classNames: \"classNames\",\n    circleOpacity: \"circleOpacity\",\n    pointerEvents: \"pointerEvents\"\n  },\n  outputs: {\n    select: \"select\",\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c10,\n  decls: 1,\n  vars: 8,\n  template: function CircleComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelement(0, \"circle\");\n    }\n    if (rf & 2) {\n      i0.ɵɵattribute(\"cx\", ctx.cx)(\"cy\", ctx.cy)(\"r\", ctx.r)(\"fill\", ctx.fill)(\"stroke\", ctx.stroke)(\"opacity\", ctx.circleOpacity)(\"class\", ctx.classNames)(\"pointer-events\", ctx.pointerEvents);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CircleComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-circle]',\n      template: `\n    <svg:circle\n      [attr.cx]=\"cx\"\n      [attr.cy]=\"cy\"\n      [attr.r]=\"r\"\n      [attr.fill]=\"fill\"\n      [attr.stroke]=\"stroke\"\n      [attr.opacity]=\"circleOpacity\"\n      [attr.class]=\"classNames\"\n      [attr.pointer-events]=\"pointerEvents\"\n    />\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, {\n    cx: [{\n      type: Input\n    }],\n    cy: [{\n      type: Input\n    }],\n    r: [{\n      type: Input\n    }],\n    fill: [{\n      type: Input\n    }],\n    stroke: [{\n      type: Input\n    }],\n    data: [{\n      type: Input\n    }],\n    classNames: [{\n      type: Input\n    }],\n    circleOpacity: [{\n      type: Input\n    }],\n    pointerEvents: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    onClick: [{\n      type: HostListener,\n      args: ['click']\n    }],\n    onMouseEnter: [{\n      type: HostListener,\n      args: ['mouseenter']\n    }],\n    onMouseLeave: [{\n      type: HostListener,\n      args: ['mouseleave']\n    }]\n  });\n})();\nvar SeriesType;\n(function (SeriesType) {\n  SeriesType[\"Standard\"] = \"standard\";\n  SeriesType[\"Stacked\"] = \"stacked\";\n})(SeriesType || (SeriesType = {}));\nclass CircleSeriesComponent {\n  constructor(platformId) {\n    this.platformId = platformId;\n    this.type = SeriesType.Standard;\n    this.tooltipDisabled = false;\n    this.select = new EventEmitter();\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.barVisible = false;\n    this.barOrientation = BarOrientation;\n    this.placementTypes = PlacementTypes;\n    this.styleTypes = StyleTypes;\n    this.isSSR = false;\n  }\n  ngOnInit() {\n    this.gradientId = 'grad' + id().toString();\n    this.gradientFill = `url(#${this.gradientId})`;\n    if (isPlatformServer(this.platformId)) {\n      this.isSSR = true;\n    }\n  }\n  ngOnChanges() {\n    this.update();\n  }\n  update() {\n    this.circle = this.getActiveCircle();\n  }\n  getActiveCircle() {\n    const indexActiveDataPoint = this.data.series.findIndex(d => {\n      const label = d.name;\n      return label && this.visibleValue && label.toString() === this.visibleValue.toString() && d.value !== undefined;\n    });\n    if (indexActiveDataPoint === -1) {\n      // No valid point is 'active/hovered over' at this moment.\n      return undefined;\n    }\n    return this.mapDataPointToCircle(this.data.series[indexActiveDataPoint], indexActiveDataPoint);\n  }\n  mapDataPointToCircle(d, i) {\n    const seriesName = this.data.name;\n    const value = d.value;\n    const label = d.name;\n    const tooltipLabel = formatLabel(label);\n    let cx;\n    if (this.scaleType === ScaleType.Time) {\n      cx = this.xScale(label);\n    } else if (this.scaleType === ScaleType.Linear) {\n      cx = this.xScale(Number(label));\n    } else {\n      cx = this.xScale(label);\n    }\n    const cy = this.yScale(this.type === SeriesType.Standard ? value : d.d1);\n    const radius = 5;\n    const height = this.yScale.range()[0] - cy;\n    const opacity = 1;\n    let color;\n    if (this.colors.scaleType === ScaleType.Linear) {\n      if (this.type === SeriesType.Standard) {\n        color = this.colors.getColor(value);\n      } else {\n        color = this.colors.getColor(d.d1);\n      }\n    } else {\n      color = this.colors.getColor(seriesName);\n    }\n    const data = Object.assign({}, d, {\n      series: seriesName,\n      value,\n      name: label\n    });\n    return {\n      classNames: [`circle-data-${i}`],\n      value,\n      label,\n      data,\n      cx,\n      cy,\n      radius,\n      height,\n      tooltipLabel,\n      color,\n      opacity,\n      seriesName,\n      gradientStops: this.getGradientStops(color),\n      min: d.min,\n      max: d.max\n    };\n  }\n  getTooltipText({\n    tooltipLabel,\n    value,\n    seriesName,\n    min,\n    max\n  }) {\n    return `\n      <span class=\"tooltip-label\">${escapeLabel(seriesName)} • ${escapeLabel(tooltipLabel)}</span>\n      <span class=\"tooltip-val\">${value.toLocaleString()}${this.getTooltipMinMaxText(min, max)}</span>\n    `;\n  }\n  getTooltipMinMaxText(min, max) {\n    if (min !== undefined || max !== undefined) {\n      let result = ' (';\n      if (min !== undefined) {\n        if (max === undefined) {\n          result += '≥';\n        }\n        result += min.toLocaleString();\n        if (max !== undefined) {\n          result += ' - ';\n        }\n      } else if (max !== undefined) {\n        result += '≤';\n      }\n      if (max !== undefined) {\n        result += max.toLocaleString();\n      }\n      result += ')';\n      return result;\n    } else {\n      return '';\n    }\n  }\n  getGradientStops(color) {\n    return [{\n      offset: 0,\n      color,\n      opacity: 0.2\n    }, {\n      offset: 100,\n      color,\n      opacity: 1\n    }];\n  }\n  onClick(data) {\n    this.select.emit(data);\n  }\n  isActive(entry) {\n    if (!this.activeEntries) return false;\n    const item = this.activeEntries.find(d => {\n      return entry.name === d.name;\n    });\n    return item !== undefined;\n  }\n  activateCircle() {\n    this.barVisible = true;\n    this.activate.emit({\n      name: this.data.name\n    });\n  }\n  deactivateCircle() {\n    this.barVisible = false;\n    this.circle.opacity = 0;\n    this.deactivate.emit({\n      name: this.data.name\n    });\n  }\n}\nCircleSeriesComponent.ɵfac = function CircleSeriesComponent_Factory(t) {\n  return new (t || CircleSeriesComponent)(i0.ɵɵdirectiveInject(PLATFORM_ID));\n};\nCircleSeriesComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: CircleSeriesComponent,\n  selectors: [[\"g\", \"ngx-charts-circle-series\", \"\"]],\n  inputs: {\n    data: \"data\",\n    type: \"type\",\n    xScale: \"xScale\",\n    yScale: \"yScale\",\n    colors: \"colors\",\n    scaleType: \"scaleType\",\n    visibleValue: \"visibleValue\",\n    activeEntries: \"activeEntries\",\n    tooltipDisabled: \"tooltipDisabled\",\n    tooltipTemplate: \"tooltipTemplate\"\n  },\n  outputs: {\n    select: \"select\",\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c11,\n  decls: 1,\n  vars: 1,\n  consts: [[4, \"ngIf\"], [\"ngx-charts-svg-linear-gradient\", \"\", 3, \"orientation\", \"name\", \"stops\"], [\"class\", \"tooltip-bar\", 4, \"ngIf\"], [\"ngx-charts-circle\", \"\", \"ngx-tooltip\", \"\", 1, \"circle\", 3, \"select\", \"activate\", \"deactivate\", \"cx\", \"cy\", \"r\", \"fill\", \"pointerEvents\", \"data\", \"classNames\", \"tooltipDisabled\", \"tooltipPlacement\", \"tooltipType\", \"tooltipTitle\", \"tooltipTemplate\", \"tooltipContext\"], [1, \"tooltip-bar\"]],\n  template: function CircleSeriesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, CircleSeriesComponent__svg_g_0_Template, 6, 22, \"g\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.circle);\n    }\n  },\n  dependencies: [SvgLinearGradientComponent, CircleComponent, i2.NgIf, TooltipDirective],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('animationState', [transition(':enter', [style({\n      opacity: 0\n    }), animate(250, style({\n      opacity: 1\n    }))])])]\n  },\n  changeDetection: 0\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CircleSeriesComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-circle-series]',\n      template: `\n    <svg:g *ngIf=\"circle\">\n      <defs>\n        <svg:g\n          ngx-charts-svg-linear-gradient\n          [orientation]=\"barOrientation.Vertical\"\n          [name]=\"gradientId\"\n          [stops]=\"circle.gradientStops\"\n        />\n      </defs>\n      <svg:rect\n        *ngIf=\"!isSSR && barVisible && type === 'standard'\"\n        [@animationState]=\"'active'\"\n        [attr.x]=\"circle.cx - circle.radius\"\n        [attr.y]=\"circle.cy\"\n        [attr.width]=\"circle.radius * 2\"\n        [attr.height]=\"circle.height\"\n        [attr.fill]=\"gradientFill\"\n        class=\"tooltip-bar\"\n      />\n      <svg:rect\n        *ngIf=\"isSSR && barVisible && type === 'standard'\"\n        [attr.x]=\"circle.cx - circle.radius\"\n        [attr.y]=\"circle.cy\"\n        [attr.width]=\"circle.radius * 2\"\n        [attr.height]=\"circle.height\"\n        [attr.fill]=\"gradientFill\"\n        class=\"tooltip-bar\"\n      />\n      <svg:g\n        ngx-charts-circle\n        class=\"circle\"\n        [cx]=\"circle.cx\"\n        [cy]=\"circle.cy\"\n        [r]=\"circle.radius\"\n        [fill]=\"circle.color\"\n        [class.active]=\"isActive({ name: circle.seriesName })\"\n        [pointerEvents]=\"circle.value === 0 ? 'none' : 'all'\"\n        [data]=\"circle.value\"\n        [classNames]=\"circle.classNames\"\n        (select)=\"onClick(circle.data)\"\n        (activate)=\"activateCircle()\"\n        (deactivate)=\"deactivateCircle()\"\n        ngx-tooltip\n        [tooltipDisabled]=\"tooltipDisabled\"\n        [tooltipPlacement]=\"placementTypes.Top\"\n        [tooltipType]=\"styleTypes.tooltip\"\n        [tooltipTitle]=\"tooltipTemplate ? undefined : getTooltipText(circle)\"\n        [tooltipTemplate]=\"tooltipTemplate\"\n        [tooltipContext]=\"circle.data\"\n      />\n    </svg:g>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      animations: [trigger('animationState', [transition(':enter', [style({\n        opacity: 0\n      }), animate(250, style({\n        opacity: 1\n      }))])])]\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }];\n  }, {\n    data: [{\n      type: Input\n    }],\n    type: [{\n      type: Input\n    }],\n    xScale: [{\n      type: Input\n    }],\n    yScale: [{\n      type: Input\n    }],\n    colors: [{\n      type: Input\n    }],\n    scaleType: [{\n      type: Input\n    }],\n    visibleValue: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    tooltipTemplate: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }]\n  });\n})();\nclass GridPanelComponent {}\nGridPanelComponent.ɵfac = function GridPanelComponent_Factory(t) {\n  return new (t || GridPanelComponent)();\n};\nGridPanelComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: GridPanelComponent,\n  selectors: [[\"g\", \"ngx-charts-grid-panel\", \"\"]],\n  inputs: {\n    width: \"width\",\n    height: \"height\",\n    x: \"x\",\n    y: \"y\"\n  },\n  attrs: _c13,\n  decls: 1,\n  vars: 4,\n  consts: [[\"stroke\", \"none\", 1, \"gridpanel\"]],\n  template: function GridPanelComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelement(0, \"rect\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵattribute(\"height\", ctx.height)(\"width\", ctx.width)(\"x\", ctx.x)(\"y\", ctx.y);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GridPanelComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-grid-panel]',\n      template: `\n    <svg:rect [attr.height]=\"height\" [attr.width]=\"width\" [attr.x]=\"x\" [attr.y]=\"y\" stroke=\"none\" class=\"gridpanel\" />\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, {\n    width: [{\n      type: Input\n    }],\n    height: [{\n      type: Input\n    }],\n    x: [{\n      type: Input\n    }],\n    y: [{\n      type: Input\n    }]\n  });\n})();\nvar ClassEnum;\n(function (ClassEnum) {\n  ClassEnum[\"Odd\"] = \"odd\";\n  ClassEnum[\"Even\"] = \"even\";\n})(ClassEnum || (ClassEnum = {}));\nclass GridPanelSeriesComponent {\n  ngOnChanges(changes) {\n    this.update();\n  }\n  update() {\n    this.gridPanels = this.getGridPanels();\n  }\n  getGridPanels() {\n    return this.data.map(d => {\n      let offset;\n      let width;\n      let height;\n      let x;\n      let y;\n      let className = ClassEnum.Odd;\n      if (this.orient === BarOrientation.Vertical) {\n        const position = this.xScale(d.name);\n        const positionIndex = Number.parseInt((position / this.xScale.step()).toString(), 10);\n        if (positionIndex % 2 === 1) {\n          className = ClassEnum.Even;\n        }\n        offset = this.xScale.bandwidth() * this.xScale.paddingInner();\n        width = this.xScale.bandwidth() + offset;\n        height = this.dims.height;\n        x = this.xScale(d.name) - offset / 2;\n        y = 0;\n      } else if (this.orient === BarOrientation.Horizontal) {\n        const position = this.yScale(d.name);\n        const positionIndex = Number.parseInt((position / this.yScale.step()).toString(), 10);\n        if (positionIndex % 2 === 1) {\n          className = ClassEnum.Even;\n        }\n        offset = this.yScale.bandwidth() * this.yScale.paddingInner();\n        width = this.dims.width;\n        height = this.yScale.bandwidth() + offset;\n        x = 0;\n        y = this.yScale(d.name) - offset / 2;\n      }\n      return {\n        name: d.name,\n        class: className,\n        height,\n        width,\n        x,\n        y\n      };\n    });\n  }\n}\nGridPanelSeriesComponent.ɵfac = function GridPanelSeriesComponent_Factory(t) {\n  return new (t || GridPanelSeriesComponent)();\n};\nGridPanelSeriesComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: GridPanelSeriesComponent,\n  selectors: [[\"g\", \"ngx-charts-grid-panel-series\", \"\"]],\n  inputs: {\n    data: \"data\",\n    dims: \"dims\",\n    xScale: \"xScale\",\n    yScale: \"yScale\",\n    orient: \"orient\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c14,\n  decls: 1,\n  vars: 1,\n  consts: [[\"ngx-charts-grid-panel\", \"\", 3, \"height\", \"width\", \"x\", \"y\", \"grid-panel\", \"odd\", \"even\", 4, \"ngFor\", \"ngForOf\"], [\"ngx-charts-grid-panel\", \"\", 3, \"height\", \"width\", \"x\", \"y\"]],\n  template: function GridPanelSeriesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, GridPanelSeriesComponent__svg_g_0_Template, 1, 10, \"g\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngForOf\", ctx.gridPanels);\n    }\n  },\n  dependencies: [GridPanelComponent, i2.NgForOf],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GridPanelSeriesComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-grid-panel-series]',\n      template: `\n    <svg:g\n      ngx-charts-grid-panel\n      *ngFor=\"let gridPanel of gridPanels\"\n      [height]=\"gridPanel.height\"\n      [width]=\"gridPanel.width\"\n      [x]=\"gridPanel.x\"\n      [y]=\"gridPanel.y\"\n      [class.grid-panel]=\"true\"\n      [class.odd]=\"gridPanel.class === 'odd'\"\n      [class.even]=\"gridPanel.class === 'even'\"\n    ></svg:g>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, {\n    data: [{\n      type: Input\n    }],\n    dims: [{\n      type: Input\n    }],\n    xScale: [{\n      type: Input\n    }],\n    yScale: [{\n      type: Input\n    }],\n    orient: [{\n      type: Input\n    }]\n  });\n})();\nclass SvgRadialGradientComponent {\n  constructor() {\n    this.endOpacity = 1;\n    this.cx = 0;\n    this.cy = 0;\n  }\n  get stops() {\n    return this.stopsInput || this.stopsDefault;\n  }\n  set stops(value) {\n    this.stopsInput = value;\n  }\n  ngOnChanges(changes) {\n    this.r = '30%';\n    if ('color' in changes || 'startOpacity' in changes || 'endOpacity' in changes) {\n      this.stopsDefault = [{\n        offset: 0,\n        color: this.color,\n        opacity: this.startOpacity\n      }, {\n        offset: 100,\n        color: this.color,\n        opacity: this.endOpacity\n      }];\n    }\n  }\n}\nSvgRadialGradientComponent.ɵfac = function SvgRadialGradientComponent_Factory(t) {\n  return new (t || SvgRadialGradientComponent)();\n};\nSvgRadialGradientComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: SvgRadialGradientComponent,\n  selectors: [[\"g\", \"ngx-charts-svg-radial-gradient\", \"\"]],\n  inputs: {\n    color: \"color\",\n    name: \"name\",\n    startOpacity: \"startOpacity\",\n    endOpacity: \"endOpacity\",\n    cx: \"cx\",\n    cy: \"cy\",\n    stops: \"stops\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c15,\n  decls: 2,\n  vars: 5,\n  consts: [[\"gradientUnits\", \"userSpaceOnUse\", 3, \"id\"], [3, \"stop-color\", \"stop-opacity\", 4, \"ngFor\", \"ngForOf\"]],\n  template: function SvgRadialGradientComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(0, \"radialGradient\", 0);\n      i0.ɵɵtemplate(1, SvgRadialGradientComponent__svg_stop_1_Template, 1, 5, \"stop\", 1);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"id\", ctx.name);\n      i0.ɵɵattribute(\"cx\", ctx.cx)(\"cy\", ctx.cy)(\"r\", ctx.r);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngForOf\", ctx.stops);\n    }\n  },\n  dependencies: [i2.NgForOf],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SvgRadialGradientComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-svg-radial-gradient]',\n      template: `\n    <svg:radialGradient [id]=\"name\" [attr.cx]=\"cx\" [attr.cy]=\"cy\" [attr.r]=\"r\" gradientUnits=\"userSpaceOnUse\">\n      <svg:stop\n        *ngFor=\"let stop of stops\"\n        [attr.offset]=\"stop.offset + '%'\"\n        [style.stop-color]=\"stop.color\"\n        [style.stop-opacity]=\"stop.opacity\"\n      />\n    </svg:radialGradient>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, {\n    color: [{\n      type: Input\n    }],\n    name: [{\n      type: Input\n    }],\n    startOpacity: [{\n      type: Input\n    }],\n    endOpacity: [{\n      type: Input\n    }],\n    cx: [{\n      type: Input\n    }],\n    cy: [{\n      type: Input\n    }],\n    stops: [{\n      type: Input\n    }]\n  });\n})();\nclass AreaComponent {\n  constructor(element) {\n    this.opacity = 1;\n    this.startOpacity = 0.5;\n    this.endOpacity = 1;\n    this.gradient = false;\n    this.animations = true;\n    this.select = new EventEmitter();\n    this.animationsLoaded = false;\n    this.hasGradient = false;\n    this.barOrientation = BarOrientation;\n    this.element = element.nativeElement;\n  }\n  ngOnChanges() {\n    this.update();\n    if (!this.animationsLoaded) {\n      this.loadAnimation();\n      this.animationsLoaded = true;\n    }\n  }\n  update() {\n    this.gradientId = 'grad' + id().toString();\n    this.gradientFill = `url(#${this.gradientId})`;\n    if (this.gradient || this.stops) {\n      this.gradientStops = this.getGradient();\n      this.hasGradient = true;\n    } else {\n      this.hasGradient = false;\n    }\n    this.updatePathEl();\n  }\n  loadAnimation() {\n    this.areaPath = this.startingPath;\n    setTimeout(this.updatePathEl.bind(this), 100);\n  }\n  updatePathEl() {\n    const node = select(this.element).select('.area');\n    if (this.animations) {\n      node.transition().duration(750).attr('d', this.path);\n    } else {\n      node.attr('d', this.path);\n    }\n  }\n  getGradient() {\n    if (this.stops) {\n      return this.stops;\n    }\n    return [{\n      offset: 0,\n      color: this.fill,\n      opacity: this.startOpacity\n    }, {\n      offset: 100,\n      color: this.fill,\n      opacity: this.endOpacity\n    }];\n  }\n}\nAreaComponent.ɵfac = function AreaComponent_Factory(t) {\n  return new (t || AreaComponent)(i0.ɵɵdirectiveInject(i0.ElementRef));\n};\nAreaComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: AreaComponent,\n  selectors: [[\"g\", \"ngx-charts-area\", \"\"]],\n  inputs: {\n    data: \"data\",\n    path: \"path\",\n    startingPath: \"startingPath\",\n    fill: \"fill\",\n    opacity: \"opacity\",\n    startOpacity: \"startOpacity\",\n    endOpacity: \"endOpacity\",\n    gradient: \"gradient\",\n    stops: \"stops\",\n    animations: \"animations\"\n  },\n  outputs: {\n    select: \"select\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c16,\n  decls: 2,\n  vars: 5,\n  consts: [[4, \"ngIf\"], [1, \"area\"], [\"ngx-charts-svg-linear-gradient\", \"\", 3, \"orientation\", \"name\", \"stops\"]],\n  template: function AreaComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, AreaComponent__svg_defs_0_Template, 2, 3, \"defs\", 0);\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelement(1, \"path\", 1);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.gradient);\n      i0.ɵɵadvance();\n      i0.ɵɵstyleProp(\"opacity\", ctx.opacity);\n      i0.ɵɵattribute(\"d\", ctx.areaPath)(\"fill\", ctx.gradient ? ctx.gradientFill : ctx.fill);\n    }\n  },\n  dependencies: [SvgLinearGradientComponent, i2.NgIf],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AreaComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-area]',\n      template: `\n    <svg:defs *ngIf=\"gradient\">\n      <svg:g\n        ngx-charts-svg-linear-gradient\n        [orientation]=\"barOrientation.Vertical\"\n        [name]=\"gradientId\"\n        [stops]=\"gradientStops\"\n      />\n    </svg:defs>\n    <svg:path class=\"area\" [attr.d]=\"areaPath\" [attr.fill]=\"gradient ? gradientFill : fill\" [style.opacity]=\"opacity\" />\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }];\n  }, {\n    data: [{\n      type: Input\n    }],\n    path: [{\n      type: Input\n    }],\n    startingPath: [{\n      type: Input\n    }],\n    fill: [{\n      type: Input\n    }],\n    opacity: [{\n      type: Input\n    }],\n    startOpacity: [{\n      type: Input\n    }],\n    endOpacity: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    stops: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }]\n  });\n})();\n\n// Robert Penner's easeOutExpo\nfunction easeOutExpo(t, b, c, d) {\n  return c * (-Math.pow(2, -10 * t / d) + 1) * 1024 / 1023 + b;\n}\n/**\n * Counts from a number to the end incrementally.\n */\nfunction count(countFrom, countTo, countDecimals, countDuration, callback) {\n  const startVal = Number(countFrom);\n  const endVal = Number(countTo);\n  const countDown = startVal > endVal;\n  const decimals = Math.max(0, countDecimals);\n  const dec = Math.pow(10, decimals);\n  const duration = Number(countDuration) * 1000;\n  let startTime;\n  function runCount(timestamp) {\n    let frameVal;\n    const progress = timestamp - startTime;\n    if (countDown) {\n      frameVal = startVal - easeOutExpo(progress, 0, startVal - endVal, duration);\n    } else {\n      frameVal = easeOutExpo(progress, startVal, endVal - startVal, duration);\n    }\n    if (countDown) {\n      frameVal = frameVal < endVal ? endVal : frameVal;\n    } else {\n      frameVal = frameVal > endVal ? endVal : frameVal;\n    }\n    frameVal = Math.round(frameVal * dec) / dec;\n    const tick = progress < duration;\n    callback({\n      value: frameVal,\n      progress,\n      timestamp,\n      finished: !tick\n    });\n    if (tick) {\n      return requestAnimationFrame(val => runCount(val));\n    }\n  }\n  return requestAnimationFrame(timestamp => {\n    startTime = timestamp;\n    return runCount(timestamp);\n  });\n}\n/**\n * Determine decimals places\n *\n * @export\n */\nfunction decimalChecker(countTo) {\n  const endVal = Number(countTo);\n  if (endVal % 1 !== 0 && Math.abs(endVal) <= 10) {\n    return 2;\n  }\n  return 0;\n}\n\n/**\n * Count up component\n *\n * Loosely inspired by:\n *  - https://github.com/izupet/angular2-counto\n *  - https://inorganik.github.io/countUp.js/\n *\n * @export\n */\nclass CountUpDirective {\n  constructor(cd, element) {\n    this.cd = cd;\n    this.countDuration = 1;\n    this.countPrefix = '';\n    this.countSuffix = '';\n    this.countChange = new EventEmitter();\n    this.countFinish = new EventEmitter();\n    this.value = '';\n    this._countDecimals = 0;\n    this._countTo = 0;\n    this._countFrom = 0;\n    this.nativeElement = element.nativeElement;\n  }\n  set countDecimals(val) {\n    this._countDecimals = val;\n  }\n  get countDecimals() {\n    if (this._countDecimals) return this._countDecimals;\n    return decimalChecker(this.countTo);\n  }\n  set countTo(val) {\n    this._countTo = parseFloat(val);\n    this.start();\n  }\n  get countTo() {\n    return this._countTo;\n  }\n  set countFrom(val) {\n    this._countFrom = parseFloat(val);\n    this.start();\n  }\n  get countFrom() {\n    return this._countFrom;\n  }\n  ngOnDestroy() {\n    cancelAnimationFrame(this.animationReq);\n  }\n  start() {\n    cancelAnimationFrame(this.animationReq);\n    const valueFormatting = this.valueFormatting || (value => `${this.countPrefix}${value.toLocaleString()}${this.countSuffix}`);\n    const callback = ({\n      value,\n      progress,\n      finished\n    }) => {\n      this.value = valueFormatting(value);\n      this.cd.markForCheck();\n      if (!finished) this.countChange.emit({\n        value: this.value,\n        progress\n      });\n      if (finished) this.countFinish.emit({\n        value: this.value,\n        progress\n      });\n    };\n    this.animationReq = count(this.countFrom, this.countTo, this.countDecimals, this.countDuration, callback);\n  }\n}\nCountUpDirective.ɵfac = function CountUpDirective_Factory(t) {\n  return new (t || CountUpDirective)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.ElementRef));\n};\nCountUpDirective.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: CountUpDirective,\n  selectors: [[\"\", \"ngx-charts-count-up\", \"\"]],\n  inputs: {\n    countDuration: \"countDuration\",\n    countPrefix: \"countPrefix\",\n    countSuffix: \"countSuffix\",\n    valueFormatting: \"valueFormatting\",\n    countDecimals: \"countDecimals\",\n    countTo: \"countTo\",\n    countFrom: \"countFrom\"\n  },\n  outputs: {\n    countChange: \"countChange\",\n    countFinish: \"countFinish\"\n  },\n  attrs: _c17,\n  decls: 1,\n  vars: 1,\n  template: function CountUpDirective_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtext(0);\n    }\n    if (rf & 2) {\n      i0.ɵɵtextInterpolate1(\" \", ctx.value, \" \");\n    }\n  },\n  encapsulation: 2\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CountUpDirective, [{\n    type: Component,\n    args: [{\n      selector: '[ngx-charts-count-up]',\n      template: ` {{ value }} `\n    }]\n  }], function () {\n    return [{\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i0.ElementRef\n    }];\n  }, {\n    countDuration: [{\n      type: Input\n    }],\n    countPrefix: [{\n      type: Input\n    }],\n    countSuffix: [{\n      type: Input\n    }],\n    valueFormatting: [{\n      type: Input\n    }],\n    countDecimals: [{\n      type: Input\n    }],\n    countTo: [{\n      type: Input\n    }],\n    countFrom: [{\n      type: Input\n    }],\n    countChange: [{\n      type: Output\n    }],\n    countFinish: [{\n      type: Output\n    }]\n  });\n})();\n\n// If we don't check whether 'window' and 'global' variables are defined,\n// code will fail in browser/node with 'variable is undefined' error.\nlet root;\nif (typeof window !== 'undefined') {\n  root = window;\n} else if (typeof global !== 'undefined') {\n  root = global;\n}\n// tslint:disable-next-line:variable-name\nconst MouseEvent = root.MouseEvent;\nfunction createMouseEvent(name, bubbles = false, cancelable = true) {\n  // Calling new of an event does not work correctly on IE. The following is a tested workaround\n  // See https://stackoverflow.com/questions/27176983/dispatchevent-not-working-in-ie11\n  if (typeof MouseEvent === 'function') {\n    // Sane browsers\n    return new MouseEvent(name, {\n      bubbles,\n      cancelable\n    });\n  } else {\n    // IE\n    const event = document.createEvent('MouseEvent');\n    event.initEvent(name, bubbles, cancelable);\n    return event;\n  }\n}\nclass TooltipArea {\n  constructor(platformId) {\n    this.platformId = platformId;\n    this.anchorOpacity = 0;\n    this.anchorPos = -1;\n    this.anchorValues = [];\n    this.placementTypes = PlacementTypes;\n    this.styleTypes = StyleTypes;\n    this.showPercentage = false;\n    this.tooltipDisabled = false;\n    this.hover = new EventEmitter();\n  }\n  getValues(xVal) {\n    const results = [];\n    for (const group of this.results) {\n      const item = group.series.find(d => d.name.toString() === xVal.toString());\n      let groupName = group.name;\n      if (groupName instanceof Date) {\n        groupName = groupName.toLocaleDateString();\n      }\n      if (item) {\n        const label = item.name;\n        let val = item.value;\n        if (this.showPercentage) {\n          val = (item.d1 - item.d0).toFixed(2) + '%';\n        }\n        let color;\n        if (this.colors.scaleType === ScaleType.Linear) {\n          let v = val;\n          if (item.d1) {\n            v = item.d1;\n          }\n          color = this.colors.getColor(v);\n        } else {\n          color = this.colors.getColor(group.name);\n        }\n        const data = Object.assign({}, item, {\n          value: val,\n          name: label,\n          series: groupName,\n          min: item.min,\n          max: item.max,\n          color\n        });\n        results.push(data);\n      }\n    }\n    return results;\n  }\n  mouseMove(event) {\n    if (!isPlatformBrowser(this.platformId)) {\n      return;\n    }\n    const xPos = event.pageX - event.target.getBoundingClientRect().left;\n    const closestIndex = this.findClosestPointIndex(xPos);\n    const closestPoint = this.xSet[closestIndex];\n    this.anchorPos = this.xScale(closestPoint);\n    this.anchorPos = Math.max(0, this.anchorPos);\n    this.anchorPos = Math.min(this.dims.width, this.anchorPos);\n    this.anchorValues = this.getValues(closestPoint);\n    if (this.anchorPos !== this.lastAnchorPos) {\n      const ev = createMouseEvent('mouseleave');\n      this.tooltipAnchor.nativeElement.dispatchEvent(ev);\n      this.anchorOpacity = 0.7;\n      this.hover.emit({\n        value: closestPoint\n      });\n      this.showTooltip();\n      this.lastAnchorPos = this.anchorPos;\n    }\n  }\n  findClosestPointIndex(xPos) {\n    let minIndex = 0;\n    let maxIndex = this.xSet.length - 1;\n    let minDiff = Number.MAX_VALUE;\n    let closestIndex = 0;\n    while (minIndex <= maxIndex) {\n      const currentIndex = (minIndex + maxIndex) / 2 | 0;\n      const currentElement = this.xScale(this.xSet[currentIndex]);\n      const curDiff = Math.abs(currentElement - xPos);\n      if (curDiff < minDiff) {\n        minDiff = curDiff;\n        closestIndex = currentIndex;\n      }\n      if (currentElement < xPos) {\n        minIndex = currentIndex + 1;\n      } else if (currentElement > xPos) {\n        maxIndex = currentIndex - 1;\n      } else {\n        minDiff = 0;\n        closestIndex = currentIndex;\n        break;\n      }\n    }\n    return closestIndex;\n  }\n  showTooltip() {\n    const event = createMouseEvent('mouseenter');\n    this.tooltipAnchor.nativeElement.dispatchEvent(event);\n  }\n  hideTooltip() {\n    const event = createMouseEvent('mouseleave');\n    this.tooltipAnchor.nativeElement.dispatchEvent(event);\n    this.anchorOpacity = 0;\n    this.lastAnchorPos = -1;\n  }\n  getToolTipText(tooltipItem) {\n    let result = '';\n    if (tooltipItem.series !== undefined) {\n      result += tooltipItem.series;\n    } else {\n      result += '???';\n    }\n    result += ': ';\n    if (tooltipItem.value !== undefined) {\n      result += tooltipItem.value.toLocaleString();\n    }\n    if (tooltipItem.min !== undefined || tooltipItem.max !== undefined) {\n      result += ' (';\n      if (tooltipItem.min !== undefined) {\n        if (tooltipItem.max === undefined) {\n          result += '≥';\n        }\n        result += tooltipItem.min.toLocaleString();\n        if (tooltipItem.max !== undefined) {\n          result += ' - ';\n        }\n      } else if (tooltipItem.max !== undefined) {\n        result += '≤';\n      }\n      if (tooltipItem.max !== undefined) {\n        result += tooltipItem.max.toLocaleString();\n      }\n      result += ')';\n    }\n    return result;\n  }\n}\nTooltipArea.ɵfac = function TooltipArea_Factory(t) {\n  return new (t || TooltipArea)(i0.ɵɵdirectiveInject(PLATFORM_ID));\n};\nTooltipArea.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: TooltipArea,\n  selectors: [[\"g\", \"ngx-charts-tooltip-area\", \"\"]],\n  viewQuery: function TooltipArea_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c18, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipAnchor = _t.first);\n    }\n  },\n  inputs: {\n    dims: \"dims\",\n    xSet: \"xSet\",\n    xScale: \"xScale\",\n    yScale: \"yScale\",\n    results: \"results\",\n    colors: \"colors\",\n    showPercentage: \"showPercentage\",\n    tooltipDisabled: \"tooltipDisabled\",\n    tooltipTemplate: \"tooltipTemplate\"\n  },\n  outputs: {\n    hover: \"hover\"\n  },\n  attrs: _c19,\n  decls: 6,\n  vars: 18,\n  consts: [[\"defaultTooltipTemplate\", \"\"], [\"tooltipAnchor\", \"\"], [\"y\", \"0\", 1, \"tooltip-area\", 2, \"opacity\", \"0\", \"cursor\", \"'auto'\", 3, \"mousemove\", \"mouseleave\"], [\"y\", \"0\", \"ngx-tooltip\", \"\", 1, \"tooltip-anchor\", 3, \"tooltipDisabled\", \"tooltipPlacement\", \"tooltipType\", \"tooltipSpacing\", \"tooltipTemplate\", \"tooltipContext\", \"tooltipImmediateExit\"], [1, \"area-tooltip-container\"], [\"class\", \"tooltip-item\", 4, \"ngFor\", \"ngForOf\"], [1, \"tooltip-item\"], [1, \"tooltip-item-color\"]],\n  template: function TooltipArea_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r1 = i0.ɵɵgetCurrentView();\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(0, \"g\")(1, \"rect\", 2);\n      i0.ɵɵlistener(\"mousemove\", function TooltipArea_Template_rect_mousemove_1_listener($event) {\n        i0.ɵɵrestoreView(_r1);\n        return i0.ɵɵresetView(ctx.mouseMove($event));\n      })(\"mouseleave\", function TooltipArea_Template_rect_mouseleave_1_listener() {\n        i0.ɵɵrestoreView(_r1);\n        return i0.ɵɵresetView(ctx.hideTooltip());\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(2, TooltipArea__svg_ng_template_2_Template, 2, 1, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵelement(4, \"rect\", 3, 1);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      const defaultTooltipTemplate_r5 = i0.ɵɵreference(3);\n      i0.ɵɵadvance();\n      i0.ɵɵattribute(\"x\", 0)(\"width\", ctx.dims.width)(\"height\", ctx.dims.height);\n      i0.ɵɵadvance(3);\n      i0.ɵɵstyleProp(\"opacity\", ctx.anchorOpacity)(\"pointer-events\", \"none\");\n      i0.ɵɵproperty(\"@animationState\", ctx.anchorOpacity !== 0 ? \"active\" : \"inactive\")(\"tooltipDisabled\", ctx.tooltipDisabled)(\"tooltipPlacement\", ctx.placementTypes.Right)(\"tooltipType\", ctx.styleTypes.tooltip)(\"tooltipSpacing\", 15)(\"tooltipTemplate\", ctx.tooltipTemplate ? ctx.tooltipTemplate : defaultTooltipTemplate_r5)(\"tooltipContext\", ctx.anchorValues)(\"tooltipImmediateExit\", true);\n      i0.ɵɵattribute(\"x\", ctx.anchorPos)(\"width\", 1)(\"height\", ctx.dims.height);\n    }\n  },\n  dependencies: [i2.NgForOf, TooltipDirective],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('animationState', [transition('inactive => active', [style({\n      opacity: 0\n    }), animate(250, style({\n      opacity: 0.7\n    }))]), transition('active => inactive', [style({\n      opacity: 0.7\n    }), animate(250, style({\n      opacity: 0\n    }))])])]\n  },\n  changeDetection: 0\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TooltipArea, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-tooltip-area]',\n      template: `\n    <svg:g>\n      <svg:rect\n        class=\"tooltip-area\"\n        [attr.x]=\"0\"\n        y=\"0\"\n        [attr.width]=\"dims.width\"\n        [attr.height]=\"dims.height\"\n        style=\"opacity: 0; cursor: 'auto';\"\n        (mousemove)=\"mouseMove($event)\"\n        (mouseleave)=\"hideTooltip()\"\n      />\n      <ng-template #defaultTooltipTemplate let-model=\"model\">\n        <xhtml:div class=\"area-tooltip-container\">\n          <xhtml:div *ngFor=\"let tooltipItem of model\" class=\"tooltip-item\">\n            <xhtml:span class=\"tooltip-item-color\" [style.background-color]=\"tooltipItem.color\"></xhtml:span>\n            {{ getToolTipText(tooltipItem) }}\n          </xhtml:div>\n        </xhtml:div>\n      </ng-template>\n      <svg:rect\n        #tooltipAnchor\n        [@animationState]=\"anchorOpacity !== 0 ? 'active' : 'inactive'\"\n        class=\"tooltip-anchor\"\n        [attr.x]=\"anchorPos\"\n        y=\"0\"\n        [attr.width]=\"1\"\n        [attr.height]=\"dims.height\"\n        [style.opacity]=\"anchorOpacity\"\n        [style.pointer-events]=\"'none'\"\n        ngx-tooltip\n        [tooltipDisabled]=\"tooltipDisabled\"\n        [tooltipPlacement]=\"placementTypes.Right\"\n        [tooltipType]=\"styleTypes.tooltip\"\n        [tooltipSpacing]=\"15\"\n        [tooltipTemplate]=\"tooltipTemplate ? tooltipTemplate : defaultTooltipTemplate\"\n        [tooltipContext]=\"anchorValues\"\n        [tooltipImmediateExit]=\"true\"\n      />\n    </svg:g>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      animations: [trigger('animationState', [transition('inactive => active', [style({\n        opacity: 0\n      }), animate(250, style({\n        opacity: 0.7\n      }))]), transition('active => inactive', [style({\n        opacity: 0.7\n      }), animate(250, style({\n        opacity: 0\n      }))])])]\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }];\n  }, {\n    dims: [{\n      type: Input\n    }],\n    xSet: [{\n      type: Input\n    }],\n    xScale: [{\n      type: Input\n    }],\n    yScale: [{\n      type: Input\n    }],\n    results: [{\n      type: Input\n    }],\n    colors: [{\n      type: Input\n    }],\n    showPercentage: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    tooltipTemplate: [{\n      type: Input\n    }],\n    hover: [{\n      type: Output\n    }],\n    tooltipAnchor: [{\n      type: ViewChild,\n      args: ['tooltipAnchor', {\n        static: false\n      }]\n    }]\n  });\n})();\nclass Timeline {\n  constructor(element, cd) {\n    this.cd = cd;\n    this.height = 50;\n    this.select = new EventEmitter();\n    this.onDomainChange = new EventEmitter();\n    this.initialized = false;\n    this.element = element.nativeElement;\n  }\n  ngOnChanges(changes) {\n    this.update();\n    if (!this.initialized) {\n      this.addBrush();\n      this.initialized = true;\n    }\n  }\n  update() {\n    this.dims = this.getDims();\n    this.height = this.dims.height;\n    const offsetY = this.view[1] - this.height;\n    this.xDomain = this.getXDomain();\n    this.xScale = this.getXScale();\n    if (this.brush) {\n      this.updateBrush();\n    }\n    this.transform = `translate(0 , ${offsetY})`;\n    this.filterId = 'filter' + id().toString();\n    this.filter = `url(#${this.filterId})`;\n    this.cd.markForCheck();\n  }\n  getXDomain() {\n    let values = [];\n    for (const results of this.results) {\n      for (const d of results.series) {\n        if (!values.includes(d.name)) {\n          values.push(d.name);\n        }\n      }\n    }\n    let domain = [];\n    if (this.scaleType === ScaleType.Time) {\n      const min = Math.min(...values);\n      const max = Math.max(...values);\n      domain = [min, max];\n    } else if (this.scaleType === ScaleType.Linear) {\n      values = values.map(v => Number(v));\n      const min = Math.min(...values);\n      const max = Math.max(...values);\n      domain = [min, max];\n    } else {\n      domain = values;\n    }\n    return domain;\n  }\n  getXScale() {\n    let scale;\n    if (this.scaleType === ScaleType.Time) {\n      scale = scaleTime().range([0, this.dims.width]).domain(this.xDomain);\n    } else if (this.scaleType === ScaleType.Linear) {\n      scale = scaleLinear().range([0, this.dims.width]).domain(this.xDomain);\n    } else if (this.scaleType === ScaleType.Ordinal) {\n      scale = scalePoint().range([0, this.dims.width]).padding(0.1).domain(this.xDomain);\n    }\n    return scale;\n  }\n  addBrush() {\n    if (this.brush) return;\n    const height = this.height;\n    const width = this.view[0];\n    this.brush = brushX().extent([[0, 0], [width, height]]).on('brush end', ({\n      selection\n    }) => {\n      const newSelection = selection || this.xScale.range();\n      const newDomain = newSelection.map(this.xScale.invert);\n      this.onDomainChange.emit(newDomain);\n      this.cd.markForCheck();\n    });\n    select(this.element).select('.brush').call(this.brush);\n  }\n  updateBrush() {\n    if (!this.brush) return;\n    const height = this.height;\n    const width = this.view[0];\n    this.brush.extent([[0, 0], [width, height]]);\n    select(this.element).select('.brush').call(this.brush);\n    // clear hardcoded properties so they can be defined by CSS\n    select(this.element).select('.selection').attr('fill', undefined).attr('stroke', undefined).attr('fill-opacity', undefined);\n    this.cd.markForCheck();\n  }\n  getDims() {\n    const width = this.view[0];\n    const dims = {\n      width,\n      height: this.height\n    };\n    return dims;\n  }\n}\nTimeline.ɵfac = function Timeline_Factory(t) {\n  return new (t || Timeline)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\nTimeline.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: Timeline,\n  selectors: [[\"g\", \"ngx-charts-timeline\", \"\"]],\n  inputs: {\n    view: \"view\",\n    results: \"results\",\n    scheme: \"scheme\",\n    customColors: \"customColors\",\n    legend: \"legend\",\n    autoScale: \"autoScale\",\n    scaleType: \"scaleType\",\n    height: \"height\"\n  },\n  outputs: {\n    select: \"select\",\n    onDomainChange: \"onDomainChange\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c20,\n  ngContentSelectors: _c2,\n  decls: 7,\n  vars: 4,\n  consts: [[1, \"timeline\"], [\"in\", \"SourceGraphic\", \"type\", \"matrix\", \"values\", \"0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0\"], [1, \"embedded-chart\"], [\"x\", \"0\", \"y\", \"0\", 1, \"brush-background\"], [1, \"brush\"]],\n  template: function Timeline_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(0, \"g\", 0)(1, \"filter\");\n      i0.ɵɵelement(2, \"feColorMatrix\", 1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"g\", 2);\n      i0.ɵɵprojection(4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(5, \"rect\", 3)(6, \"g\", 4);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance();\n      i0.ɵɵattribute(\"id\", ctx.filterId);\n      i0.ɵɵadvance(4);\n      i0.ɵɵattribute(\"width\", ctx.view[0])(\"height\", ctx.height);\n    }\n  },\n  styles: [\".timeline .brush-background{fill:#0000000d}.timeline .brush .selection{fill:#0000001a;stroke-width:1px;stroke:#888}.timeline .brush .handle{fill-opacity:0}.timeline .embedded-chart{opacity:.6}\\n\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Timeline, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-timeline]',\n      template: `\n    <svg:g class=\"timeline\" [attr.transform]=\"transform\">\n      <svg:filter [attr.id]=\"filterId\">\n        <svg:feColorMatrix\n          in=\"SourceGraphic\"\n          type=\"matrix\"\n          values=\"0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0\"\n        />\n      </svg:filter>\n      <svg:g class=\"embedded-chart\">\n        <ng-content></ng-content>\n      </svg:g>\n      <svg:rect x=\"0\" [attr.width]=\"view[0]\" y=\"0\" [attr.height]=\"height\" class=\"brush-background\" />\n      <svg:g class=\"brush\"></svg:g>\n    </svg:g>\n  `,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\".timeline .brush-background{fill:#0000000d}.timeline .brush .selection{fill:#0000001a;stroke-width:1px;stroke:#888}.timeline .brush .handle{fill-opacity:0}.timeline .embedded-chart{opacity:.6}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.ChangeDetectorRef\n    }];\n  }, {\n    view: [{\n      type: Input\n    }],\n    results: [{\n      type: Input\n    }],\n    scheme: [{\n      type: Input\n    }],\n    customColors: [{\n      type: Input\n    }],\n    legend: [{\n      type: Input\n    }],\n    autoScale: [{\n      type: Input\n    }],\n    scaleType: [{\n      type: Input\n    }],\n    height: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }],\n    onDomainChange: [{\n      type: Output\n    }]\n  });\n})();\nclass AdvancedLegendComponent {\n  constructor() {\n    this.label = 'Total';\n    this.animations = true;\n    this.select = new EventEmitter();\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.legendItems = [];\n    this.labelFormatting = label => label;\n    this.percentageFormatting = percentage => percentage;\n    this.defaultValueFormatting = value => value.toLocaleString();\n  }\n  ngOnChanges(changes) {\n    this.update();\n  }\n  getTotal() {\n    return this.data.map(d => Number(d.value)).reduce((sum, d) => sum + d, 0);\n  }\n  update() {\n    this.total = this.getTotal();\n    this.roundedTotal = this.total;\n    this.legendItems = this.getLegendItems();\n  }\n  getLegendItems() {\n    return this.data.map(d => {\n      const label = formatLabel(d.name);\n      const value = d.value;\n      const color = this.colors.getColor(label);\n      const percentage = this.total > 0 ? value / this.total * 100 : 0;\n      const formattedLabel = typeof this.labelFormatting === 'function' ? this.labelFormatting(label) : label;\n      return {\n        _value: value,\n        data: d,\n        value,\n        color,\n        label: formattedLabel,\n        displayLabel: trimLabel(formattedLabel, 20),\n        origialLabel: d.name,\n        percentage: this.percentageFormatting ? this.percentageFormatting(percentage) : percentage.toLocaleString()\n      };\n    });\n  }\n  trackBy(index, item) {\n    return item.label;\n  }\n}\nAdvancedLegendComponent.ɵfac = function AdvancedLegendComponent_Factory(t) {\n  return new (t || AdvancedLegendComponent)();\n};\nAdvancedLegendComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: AdvancedLegendComponent,\n  selectors: [[\"ngx-charts-advanced-legend\"]],\n  inputs: {\n    width: \"width\",\n    data: \"data\",\n    colors: \"colors\",\n    label: \"label\",\n    animations: \"animations\",\n    valueFormatting: \"valueFormatting\",\n    labelFormatting: \"labelFormatting\",\n    percentageFormatting: \"percentageFormatting\"\n  },\n  outputs: {\n    select: \"select\",\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 8,\n  vars: 7,\n  consts: [[1, \"advanced-pie-legend\"], [\"class\", \"total-value\", \"ngx-charts-count-up\", \"\", 3, \"countTo\", \"valueFormatting\", 4, \"ngIf\"], [\"class\", \"total-value\", 4, \"ngIf\"], [1, \"total-label\"], [1, \"legend-items-container\"], [1, \"legend-items\"], [\"tabindex\", \"-1\", \"class\", \"legend-item\", 3, \"mouseenter\", \"mouseleave\", \"click\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-count-up\", \"\", 1, \"total-value\", 3, \"countTo\", \"valueFormatting\"], [1, \"total-value\"], [\"tabindex\", \"-1\", 1, \"legend-item\", 3, \"mouseenter\", \"mouseleave\", \"click\"], [1, \"item-color\"], [\"class\", \"item-value\", \"ngx-charts-count-up\", \"\", 3, \"countTo\", \"valueFormatting\", 4, \"ngIf\"], [\"class\", \"item-value\", 4, \"ngIf\"], [1, \"item-label\"], [\"class\", \"item-percent\", \"ngx-charts-count-up\", \"\", 3, \"countTo\", \"countSuffix\", 4, \"ngIf\"], [\"class\", \"item-percent\", 4, \"ngIf\"], [\"ngx-charts-count-up\", \"\", 1, \"item-value\", 3, \"countTo\", \"valueFormatting\"], [1, \"item-value\"], [\"ngx-charts-count-up\", \"\", 1, \"item-percent\", 3, \"countTo\", \"countSuffix\"], [1, \"item-percent\"]],\n  template: function AdvancedLegendComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtemplate(1, AdvancedLegendComponent_div_1_Template, 1, 2, \"div\", 1)(2, AdvancedLegendComponent_div_2_Template, 2, 1, \"div\", 2);\n      i0.ɵɵelementStart(3, \"div\", 3);\n      i0.ɵɵtext(4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"div\", 4)(6, \"div\", 5);\n      i0.ɵɵtemplate(7, AdvancedLegendComponent_div_7_Template, 8, 7, \"div\", 6);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵstyleProp(\"width\", ctx.width, \"px\");\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngIf\", ctx.animations);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngIf\", !ctx.animations);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\" \", ctx.label, \" \");\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", ctx.legendItems)(\"ngForTrackBy\", ctx.trackBy);\n    }\n  },\n  dependencies: [CountUpDirective, i2.NgIf, i2.NgForOf],\n  styles: [\".advanced-pie-legend{float:left;position:relative;top:50%;transform:translateY(-50%)}.advanced-pie-legend .total-value{font-size:36px}.advanced-pie-legend .total-label{font-size:24px;margin-bottom:19px}.advanced-pie-legend .legend-items-container{width:100%}.advanced-pie-legend .legend-items-container .legend-items{white-space:nowrap;overflow:auto}.advanced-pie-legend .legend-items-container .legend-items .legend-item{margin-right:20px;display:inline-block;cursor:pointer}.advanced-pie-legend .legend-items-container .legend-items .legend-item:focus{outline:none}.advanced-pie-legend .legend-items-container .legend-items .legend-item:hover{color:#000;transition:.2s}.advanced-pie-legend .legend-items-container .legend-items .legend-item .item-value{font-size:24px;margin-top:-6px;margin-left:11px}.advanced-pie-legend .legend-items-container .legend-items .legend-item .item-label{font-size:14px;opacity:.7;margin-left:11px;margin-top:-6px}.advanced-pie-legend .legend-items-container .legend-items .legend-item .item-percent{font-size:24px;opacity:.7;margin-left:11px}.advanced-pie-legend .legend-items-container .legend-items .legend-item .item-color{border-left:4px solid;width:4px;height:42px;float:left;margin-right:7px}\\n\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AdvancedLegendComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-advanced-legend',\n      template: `\n    <div class=\"advanced-pie-legend\" [style.width.px]=\"width\">\n      <div\n        *ngIf=\"animations\"\n        class=\"total-value\"\n        ngx-charts-count-up\n        [countTo]=\"roundedTotal\"\n        [valueFormatting]=\"valueFormatting\"\n      ></div>\n      <div class=\"total-value\" *ngIf=\"!animations\">\n        {{ valueFormatting ? valueFormatting(roundedTotal) : defaultValueFormatting(roundedTotal) }}\n      </div>\n      <div class=\"total-label\">\n        {{ label }}\n      </div>\n      <div class=\"legend-items-container\">\n        <div class=\"legend-items\">\n          <div\n            *ngFor=\"let legendItem of legendItems; trackBy: trackBy\"\n            tabindex=\"-1\"\n            class=\"legend-item\"\n            (mouseenter)=\"activate.emit(legendItem.data)\"\n            (mouseleave)=\"deactivate.emit(legendItem.data)\"\n            (click)=\"select.emit(legendItem.data)\"\n          >\n            <div class=\"item-color\" [style.border-left-color]=\"legendItem.color\"></div>\n            <div\n              *ngIf=\"animations\"\n              class=\"item-value\"\n              ngx-charts-count-up\n              [countTo]=\"legendItem._value\"\n              [valueFormatting]=\"valueFormatting\"\n            ></div>\n            <div *ngIf=\"!animations\" class=\"item-value\">\n              {{ valueFormatting ? valueFormatting(legendItem.value) : defaultValueFormatting(legendItem.value) }}\n            </div>\n            <div class=\"item-label\">{{ legendItem.displayLabel }}</div>\n            <div\n              *ngIf=\"animations\"\n              class=\"item-percent\"\n              ngx-charts-count-up\n              [countTo]=\"legendItem.percentage\"\n              [countSuffix]=\"'%'\"\n            ></div>\n            <div *ngIf=\"!animations\" class=\"item-percent\">{{ legendItem.percentage.toLocaleString() }}%</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  `,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\".advanced-pie-legend{float:left;position:relative;top:50%;transform:translateY(-50%)}.advanced-pie-legend .total-value{font-size:36px}.advanced-pie-legend .total-label{font-size:24px;margin-bottom:19px}.advanced-pie-legend .legend-items-container{width:100%}.advanced-pie-legend .legend-items-container .legend-items{white-space:nowrap;overflow:auto}.advanced-pie-legend .legend-items-container .legend-items .legend-item{margin-right:20px;display:inline-block;cursor:pointer}.advanced-pie-legend .legend-items-container .legend-items .legend-item:focus{outline:none}.advanced-pie-legend .legend-items-container .legend-items .legend-item:hover{color:#000;transition:.2s}.advanced-pie-legend .legend-items-container .legend-items .legend-item .item-value{font-size:24px;margin-top:-6px;margin-left:11px}.advanced-pie-legend .legend-items-container .legend-items .legend-item .item-label{font-size:14px;opacity:.7;margin-left:11px;margin-top:-6px}.advanced-pie-legend .legend-items-container .legend-items .legend-item .item-percent{font-size:24px;opacity:.7;margin-left:11px}.advanced-pie-legend .legend-items-container .legend-items .legend-item .item-color{border-left:4px solid;width:4px;height:42px;float:left;margin-right:7px}\\n\"]\n    }]\n  }], null, {\n    width: [{\n      type: Input\n    }],\n    data: [{\n      type: Input\n    }],\n    colors: [{\n      type: Input\n    }],\n    label: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    valueFormatting: [{\n      type: Input\n    }],\n    labelFormatting: [{\n      type: Input\n    }],\n    percentageFormatting: [{\n      type: Input\n    }]\n  });\n})();\nconst COMPONENTS = [AreaComponent, BaseChartComponent, CountUpDirective, TooltipArea, ChartComponent, LegendComponent, LegendEntryComponent, ScaleLegendComponent, CircleComponent, CircleSeriesComponent, GridPanelComponent, GridPanelSeriesComponent, SvgLinearGradientComponent, SvgRadialGradientComponent, Timeline, AdvancedLegendComponent];\nclass ChartCommonModule {}\nChartCommonModule.ɵfac = function ChartCommonModule_Factory(t) {\n  return new (t || ChartCommonModule)();\n};\nChartCommonModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: ChartCommonModule\n});\nChartCommonModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule, AxesModule, TooltipModule], CommonModule, AxesModule, TooltipModule]\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ChartCommonModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, AxesModule, TooltipModule],\n      declarations: [...COMPONENTS, VisibilityObserver],\n      exports: [CommonModule, AxesModule, TooltipModule, ...COMPONENTS, VisibilityObserver]\n    }]\n  }], null, null);\n})();\nfunction calculateViewDimensions({\n  width,\n  height,\n  margins,\n  showXAxis = false,\n  showYAxis = false,\n  xAxisHeight = 0,\n  yAxisWidth = 0,\n  showXLabel = false,\n  showYLabel = false,\n  showLegend = false,\n  legendType = ScaleType.Ordinal,\n  legendPosition = LegendPosition.Right,\n  columns = 12\n}) {\n  let xOffset = margins[3];\n  let chartWidth = width;\n  let chartHeight = height - margins[0] - margins[2];\n  if (showLegend && legendPosition === LegendPosition.Right) {\n    if (legendType === ScaleType.Ordinal) {\n      columns -= 2;\n    } else {\n      columns -= 1;\n    }\n  }\n  chartWidth = chartWidth * columns / 12;\n  chartWidth = chartWidth - margins[1] - margins[3];\n  if (showXAxis) {\n    chartHeight -= 5;\n    chartHeight -= xAxisHeight;\n    if (showXLabel) {\n      // text height + spacing between axis label and tick labels\n      const offset = 25 + 5;\n      chartHeight -= offset;\n    }\n  }\n  if (showYAxis) {\n    chartWidth -= 5;\n    chartWidth -= yAxisWidth;\n    xOffset += yAxisWidth;\n    xOffset += 10;\n    if (showYLabel) {\n      // text height + spacing between axis label and tick labels\n      const offset = 25 + 5;\n      chartWidth -= offset;\n      xOffset += offset;\n    }\n  }\n  chartWidth = Math.max(0, chartWidth);\n  chartHeight = Math.max(0, chartHeight);\n  return {\n    width: Math.floor(chartWidth),\n    height: Math.floor(chartHeight),\n    xOffset: Math.floor(xOffset)\n  };\n}\nconst colorSets = [{\n  name: 'vivid',\n  selectable: true,\n  group: ScaleType.Ordinal,\n  domain: ['#647c8a', '#3f51b5', '#2196f3', '#00b862', '#afdf0a', '#a7b61a', '#f3e562', '#ff9800', '#ff5722', '#ff4514']\n}, {\n  name: 'natural',\n  selectable: true,\n  group: ScaleType.Ordinal,\n  domain: ['#bf9d76', '#e99450', '#d89f59', '#f2dfa7', '#a5d7c6', '#7794b1', '#afafaf', '#707160', '#ba9383', '#d9d5c3']\n}, {\n  name: 'cool',\n  selectable: true,\n  group: ScaleType.Ordinal,\n  domain: ['#a8385d', '#7aa3e5', '#a27ea8', '#aae3f5', '#adcded', '#a95963', '#8796c0', '#7ed3ed', '#50abcc', '#ad6886']\n}, {\n  name: 'fire',\n  selectable: true,\n  group: ScaleType.Ordinal,\n  domain: ['#ff3d00', '#bf360c', '#ff8f00', '#ff6f00', '#ff5722', '#e65100', '#ffca28', '#ffab00']\n}, {\n  name: 'solar',\n  selectable: true,\n  group: ScaleType.Linear,\n  domain: ['#fff8e1', '#ffecb3', '#ffe082', '#ffd54f', '#ffca28', '#ffc107', '#ffb300', '#ffa000', '#ff8f00', '#ff6f00']\n}, {\n  name: 'air',\n  selectable: true,\n  group: ScaleType.Linear,\n  domain: ['#e1f5fe', '#b3e5fc', '#81d4fa', '#4fc3f7', '#29b6f6', '#03a9f4', '#039be5', '#0288d1', '#0277bd', '#01579b']\n}, {\n  name: 'aqua',\n  selectable: true,\n  group: ScaleType.Linear,\n  domain: ['#e0f7fa', '#b2ebf2', '#80deea', '#4dd0e1', '#26c6da', '#00bcd4', '#00acc1', '#0097a7', '#00838f', '#006064']\n}, {\n  name: 'flame',\n  selectable: false,\n  group: ScaleType.Ordinal,\n  domain: ['#A10A28', '#D3342D', '#EF6D49', '#FAAD67', '#FDDE90', '#DBED91', '#A9D770', '#6CBA67', '#2C9653', '#146738']\n}, {\n  name: 'ocean',\n  selectable: false,\n  group: ScaleType.Ordinal,\n  domain: ['#1D68FB', '#33C0FC', '#4AFFFE', '#AFFFFF', '#FFFC63', '#FDBD2D', '#FC8A25', '#FA4F1E', '#FA141B', '#BA38D1']\n}, {\n  name: 'forest',\n  selectable: false,\n  group: ScaleType.Ordinal,\n  domain: ['#55C22D', '#C1F33D', '#3CC099', '#AFFFFF', '#8CFC9D', '#76CFFA', '#BA60FB', '#EE6490', '#C42A1C', '#FC9F32']\n}, {\n  name: 'horizon',\n  selectable: false,\n  group: ScaleType.Ordinal,\n  domain: ['#2597FB', '#65EBFD', '#99FDD0', '#FCEE4B', '#FEFCFA', '#FDD6E3', '#FCB1A8', '#EF6F7B', '#CB96E8', '#EFDEE0']\n}, {\n  name: 'neons',\n  selectable: false,\n  group: ScaleType.Ordinal,\n  domain: ['#FF3333', '#FF33FF', '#CC33FF', '#0000FF', '#33CCFF', '#33FFFF', '#33FF66', '#CCFF33', '#FFCC00', '#FF6600']\n}, {\n  name: 'picnic',\n  selectable: false,\n  group: ScaleType.Ordinal,\n  domain: ['#FAC51D', '#66BD6D', '#FAA026', '#29BB9C', '#E96B56', '#55ACD2', '#B7332F', '#2C83C9', '#9166B8', '#92E7E8']\n}, {\n  name: 'night',\n  selectable: false,\n  group: ScaleType.Ordinal,\n  domain: ['#2B1B5A', '#501356', '#183356', '#28203F', '#391B3C', '#1E2B3C', '#120634', '#2D0432', '#051932', '#453080', '#75267D', '#2C507D', '#4B3880', '#752F7D', '#35547D']\n}, {\n  name: 'nightLights',\n  selectable: false,\n  group: ScaleType.Ordinal,\n  domain: ['#4e31a5', '#9c25a7', '#3065ab', '#57468b', '#904497', '#46648b', '#32118d', '#a00fb3', '#1052a2', '#6e51bd', '#b63cc3', '#6c97cb', '#8671c1', '#b455be', '#7496c3']\n}];\nclass ColorHelper {\n  constructor(scheme, type, domain, customColors) {\n    if (typeof scheme === 'string') {\n      scheme = colorSets.find(cs => {\n        return cs.name === scheme;\n      });\n    }\n    this.colorDomain = scheme.domain;\n    this.scaleType = type;\n    this.domain = domain;\n    this.customColors = customColors;\n    this.scale = this.generateColorScheme(scheme, type, this.domain);\n  }\n  generateColorScheme(scheme, type, domain) {\n    if (typeof scheme === 'string') {\n      scheme = colorSets.find(cs => {\n        return cs.name === scheme;\n      });\n    }\n    let colorScale;\n    switch (type) {\n      case ScaleType.Quantile:\n        colorScale = scaleQuantile().range(scheme.domain).domain(domain);\n        break;\n      case ScaleType.Ordinal:\n        colorScale = scaleOrdinal().range(scheme.domain).domain(domain);\n        break;\n      case ScaleType.Linear:\n        {\n          const colorDomain = [...scheme.domain];\n          if (colorDomain.length === 1) {\n            colorDomain.push(colorDomain[0]);\n            this.colorDomain = colorDomain;\n          }\n          const points = range(0, 1, 1.0 / colorDomain.length);\n          colorScale = scaleLinear().range(colorDomain).domain(points);\n        }\n        break;\n      default:\n        break;\n    }\n    return colorScale;\n  }\n  getColor(value) {\n    if (value === undefined || value === null) {\n      throw new Error('Value can not be null');\n    }\n    if (this.scaleType === ScaleType.Linear) {\n      const valueScale = scaleLinear().domain(this.domain).range([0, 1]);\n      return this.scale(valueScale(value));\n    } else {\n      if (typeof this.customColors === 'function') {\n        return this.customColors(value);\n      }\n      const formattedValue = value.toString();\n      let found; // todo type customColors\n      if (this.customColors && this.customColors.length > 0) {\n        found = this.customColors.find(mapping => {\n          return mapping.name.toLowerCase() === formattedValue.toLowerCase();\n        });\n      }\n      if (found) {\n        return found.value;\n      } else {\n        return this.scale(value);\n      }\n    }\n  }\n  getLinearGradientStops(value, start) {\n    if (start === undefined) {\n      start = this.domain[0];\n    }\n    const valueScale = scaleLinear().domain(this.domain).range([0, 1]);\n    const colorValueScale = scaleBand().domain(this.colorDomain).range([0, 1]);\n    const endColor = this.getColor(value);\n    // generate the stops\n    const startVal = valueScale(start);\n    const startColor = this.getColor(start);\n    const endVal = valueScale(value);\n    let i = 1;\n    let currentVal = startVal;\n    const stops = [];\n    stops.push({\n      color: startColor,\n      offset: startVal,\n      originalOffset: startVal,\n      opacity: 1\n    });\n    while (currentVal < endVal && i < this.colorDomain.length) {\n      const color = this.colorDomain[i];\n      const offset = colorValueScale(color);\n      if (offset <= startVal) {\n        i++;\n        continue;\n      }\n      if (offset.toFixed(4) >= (endVal - colorValueScale.bandwidth()).toFixed(4)) {\n        break;\n      }\n      stops.push({\n        color,\n        offset,\n        opacity: 1\n      });\n      currentVal = offset;\n      i++;\n    }\n    if (stops[stops.length - 1].offset < 100) {\n      stops.push({\n        color: endColor,\n        offset: endVal,\n        opacity: 1\n      });\n    }\n    if (endVal === startVal) {\n      stops[0].offset = 0;\n      stops[1].offset = 100;\n    } else {\n      // normalize the offsets into percentages\n      if (stops[stops.length - 1].offset !== 100) {\n        for (const s of stops) {\n          s.offset = (s.offset - startVal) / (endVal - startVal) * 100;\n        }\n      }\n    }\n    return stops;\n  }\n}\n\n/**\n * Based on the data, return an array with unique values.\n *\n * @export\n * @returns array\n */\nfunction getUniqueXDomainValues(results) {\n  const valueSet = new Set();\n  for (const result of results) {\n    for (const d of result.series) {\n      valueSet.add(d.name);\n    }\n  }\n  return Array.from(valueSet);\n}\n/**\n * Get the scaleType of enumerable of values.\n * @returns  'time', 'linear' or 'ordinal'\n */\nfunction getScaleType(values, checkDateType = true) {\n  if (checkDateType) {\n    const allDates = values.every(value => value instanceof Date);\n    if (allDates) {\n      return ScaleType.Time;\n    }\n  }\n  const allNumbers = values.every(value => typeof value === 'number');\n  if (allNumbers) {\n    return ScaleType.Linear;\n  }\n  return ScaleType.Ordinal;\n}\nfunction getXDomainArray(values, xScaleMin, xScaleMax) {\n  const scaleType = getScaleType(values);\n  let xSet = [];\n  let domain = [];\n  if (scaleType === ScaleType.Linear) {\n    values = values.map(v => Number(v));\n  }\n  let min;\n  let max;\n  if (scaleType === ScaleType.Time || scaleType === ScaleType.Linear) {\n    const mappedValues = values.map(v => Number(v));\n    min = xScaleMin ? xScaleMin : Math.min(...mappedValues);\n    max = xScaleMax ? xScaleMax : Math.max(...mappedValues);\n  }\n  if (scaleType === ScaleType.Time) {\n    domain = [new Date(min), new Date(max)];\n    xSet = [...values].sort((a, b) => {\n      const aDate = a.getTime();\n      const bDate = b.getTime();\n      if (aDate > bDate) return 1;\n      if (bDate > aDate) return -1;\n      return 0;\n    });\n  } else if (scaleType === ScaleType.Linear) {\n    domain = [min, max];\n    // Use compare function to sort numbers numerically\n    xSet = [...values].sort((a, b) => a - b);\n  } else {\n    domain = values;\n    xSet = values;\n  }\n  return {\n    domain,\n    xSet,\n    scaleType\n  };\n}\nfunction sortLinear(data, property, direction = 'asc') {\n  return data.sort((a, b) => {\n    if (direction === 'asc') {\n      return a[property] - b[property];\n    } else {\n      return b[property] - a[property];\n    }\n  });\n}\nfunction sortByDomain(data, property, direction = 'asc', domain) {\n  return data.sort((a, b) => {\n    const aVal = a[property];\n    const bVal = b[property];\n    const aIdx = domain.indexOf(aVal);\n    const bIdx = domain.indexOf(bVal);\n    if (direction === 'asc') {\n      return aIdx - bIdx;\n    } else {\n      return bIdx - aIdx;\n    }\n  });\n}\nfunction sortByTime(data, property, direction = 'asc') {\n  return data.sort((a, b) => {\n    const aDate = a[property].getTime();\n    const bDate = b[property].getTime();\n    if (direction === 'asc') {\n      if (aDate > bDate) return 1;\n      if (bDate > aDate) return -1;\n      return 0;\n    } else {\n      if (aDate > bDate) return -1;\n      if (bDate > aDate) return 1;\n      return 0;\n    }\n  });\n}\nclass AreaSeriesComponent {\n  constructor() {\n    this.baseValue = 'auto';\n    this.stacked = false;\n    this.normalized = false;\n    this.animations = true;\n    this.select = new EventEmitter();\n  }\n  ngOnChanges(changes) {\n    this.update();\n  }\n  update() {\n    this.updateGradient();\n    let currentArea;\n    let startingArea;\n    const xProperty = d => {\n      const label = d.name;\n      return this.xScale(label);\n    };\n    if (this.stacked || this.normalized) {\n      currentArea = area().x(xProperty).y0((d, i) => this.yScale(d.d0)).y1((d, i) => this.yScale(d.d1));\n      startingArea = area().x(xProperty).y0(d => this.yScale.range()[0]).y1(d => this.yScale.range()[0]);\n    } else {\n      currentArea = area().x(xProperty).y0(() => this.baseValue === 'auto' ? this.yScale.range()[0] : this.yScale(this.baseValue)).y1(d => this.yScale(d.value));\n      startingArea = area().x(xProperty).y0(d => this.baseValue === 'auto' ? this.yScale.range()[0] : this.yScale(this.baseValue)).y1(d => this.baseValue === 'auto' ? this.yScale.range()[0] : this.yScale(this.baseValue));\n    }\n    currentArea.curve(this.curve);\n    startingArea.curve(this.curve);\n    this.opacity = 0.8;\n    let data = this.data.series;\n    if (this.scaleType === ScaleType.Linear) {\n      data = sortLinear(data, 'name');\n    } else if (this.scaleType === ScaleType.Time) {\n      data = sortByTime(data, 'name');\n    } else {\n      data = sortByDomain(data, 'name', 'asc', this.xScale.domain());\n    }\n    this.path = currentArea(data);\n    this.startingPath = startingArea(data);\n  }\n  updateGradient() {\n    if (this.colors.scaleType === ScaleType.Linear) {\n      this.hasGradient = true;\n      if (this.stacked || this.normalized) {\n        const d0values = this.data.series.map(d => d.d0);\n        const d1values = this.data.series.map(d => d.d1);\n        const max = Math.max(...d1values);\n        const min = Math.min(...d0values);\n        this.gradientStops = this.colors.getLinearGradientStops(max, min);\n      } else {\n        const values = this.data.series.map(d => d.value);\n        const max = Math.max(...values);\n        this.gradientStops = this.colors.getLinearGradientStops(max);\n      }\n    } else {\n      this.hasGradient = false;\n      this.gradientStops = undefined;\n    }\n  }\n  isActive(entry) {\n    if (!this.activeEntries) return false;\n    const item = this.activeEntries.find(d => {\n      return entry.name === d.name;\n    });\n    return item !== undefined;\n  }\n  isInactive(entry) {\n    if (!this.activeEntries || this.activeEntries.length === 0) return false;\n    const item = this.activeEntries.find(d => {\n      return entry.name === d.name;\n    });\n    return item === undefined;\n  }\n}\nAreaSeriesComponent.ɵfac = function AreaSeriesComponent_Factory(t) {\n  return new (t || AreaSeriesComponent)();\n};\nAreaSeriesComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: AreaSeriesComponent,\n  selectors: [[\"g\", \"ngx-charts-area-series\", \"\"]],\n  inputs: {\n    data: \"data\",\n    xScale: \"xScale\",\n    yScale: \"yScale\",\n    baseValue: \"baseValue\",\n    colors: \"colors\",\n    scaleType: \"scaleType\",\n    stacked: \"stacked\",\n    normalized: \"normalized\",\n    gradient: \"gradient\",\n    curve: \"curve\",\n    activeEntries: \"activeEntries\",\n    animations: \"animations\"\n  },\n  outputs: {\n    select: \"select\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c21,\n  decls: 1,\n  vars: 12,\n  consts: [[\"ngx-charts-area\", \"\", 1, \"area-series\", 3, \"data\", \"path\", \"fill\", \"stops\", \"startingPath\", \"opacity\", \"gradient\", \"animations\"]],\n  template: function AreaSeriesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelement(0, \"g\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"active\", ctx.isActive(ctx.data))(\"inactive\", ctx.isInactive(ctx.data));\n      i0.ɵɵproperty(\"data\", ctx.data)(\"path\", ctx.path)(\"fill\", ctx.colors.getColor(ctx.data.name))(\"stops\", ctx.gradientStops)(\"startingPath\", ctx.startingPath)(\"opacity\", ctx.opacity)(\"gradient\", ctx.gradient || ctx.hasGradient)(\"animations\", ctx.animations);\n    }\n  },\n  dependencies: [AreaComponent],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AreaSeriesComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-area-series]',\n      template: `\n    <svg:g\n      ngx-charts-area\n      class=\"area-series\"\n      [data]=\"data\"\n      [path]=\"path\"\n      [fill]=\"colors.getColor(data.name)\"\n      [stops]=\"gradientStops\"\n      [startingPath]=\"startingPath\"\n      [opacity]=\"opacity\"\n      [gradient]=\"gradient || hasGradient\"\n      [animations]=\"animations\"\n      [class.active]=\"isActive(data)\"\n      [class.inactive]=\"isInactive(data)\"\n    />\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, {\n    data: [{\n      type: Input\n    }],\n    xScale: [{\n      type: Input\n    }],\n    yScale: [{\n      type: Input\n    }],\n    baseValue: [{\n      type: Input\n    }],\n    colors: [{\n      type: Input\n    }],\n    scaleType: [{\n      type: Input\n    }],\n    stacked: [{\n      type: Input\n    }],\n    normalized: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    curve: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }]\n  });\n})();\nclass AreaChartComponent extends BaseChartComponent {\n  constructor() {\n    super(...arguments);\n    this.legend = false;\n    this.legendTitle = 'Legend';\n    this.legendPosition = LegendPosition.Right;\n    this.xAxis = false;\n    this.yAxis = false;\n    this.baseValue = 'auto';\n    this.autoScale = false;\n    this.timeline = false;\n    this.showGridLines = true;\n    this.curve = curveLinear;\n    this.activeEntries = [];\n    this.trimXAxisTicks = true;\n    this.trimYAxisTicks = true;\n    this.rotateXAxisTicks = true;\n    this.maxXAxisTickLength = 16;\n    this.maxYAxisTickLength = 16;\n    this.roundDomains = false;\n    this.tooltipDisabled = false;\n    this.wrapTicks = false;\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.margin = [10, 20, 10, 20];\n    this.xAxisHeight = 0;\n    this.yAxisWidth = 0;\n    this.timelineHeight = 50;\n    this.timelinePadding = 10;\n    this.trackBy = (index, item) => {\n      return item.name;\n    };\n  }\n  update() {\n    super.update();\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.schemeType,\n      legendPosition: this.legendPosition\n    });\n    if (this.timeline) {\n      this.dims.height -= this.timelineHeight + this.margin[2] + this.timelinePadding;\n    }\n    this.xDomain = this.getXDomain();\n    if (this.filteredDomain) {\n      this.xDomain = this.filteredDomain;\n    }\n    this.yDomain = this.getYDomain();\n    this.seriesDomain = this.getSeriesDomain();\n    this.xScale = this.getXScale(this.xDomain, this.dims.width);\n    this.yScale = this.getYScale(this.yDomain, this.dims.height);\n    this.updateTimeline();\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n    this.transform = `translate(${this.dims.xOffset}, ${this.margin[0]})`;\n    this.clipPathId = 'clip' + id().toString();\n    this.clipPath = `url(#${this.clipPathId})`;\n  }\n  updateTimeline() {\n    if (this.timeline) {\n      this.timelineWidth = this.dims.width;\n      this.timelineXDomain = this.getXDomain();\n      this.timelineXScale = this.getXScale(this.timelineXDomain, this.timelineWidth);\n      this.timelineYScale = this.getYScale(this.yDomain, this.timelineHeight);\n      this.timelineTransform = `translate(${this.dims.xOffset}, ${-this.margin[2]})`;\n    }\n  }\n  getXDomain() {\n    let values = getUniqueXDomainValues(this.results);\n    this.scaleType = getScaleType(values);\n    let domain = [];\n    if (this.scaleType === ScaleType.Linear) {\n      values = values.map(v => Number(v));\n    }\n    let min;\n    let max;\n    if (this.scaleType === ScaleType.Time || this.scaleType === ScaleType.Linear) {\n      min = this.xScaleMin ? this.xScaleMin : Math.min(...values);\n      max = this.xScaleMax ? this.xScaleMax : Math.max(...values);\n    }\n    if (this.scaleType === ScaleType.Time) {\n      domain = [new Date(min), new Date(max)];\n      this.xSet = [...values].sort((a, b) => {\n        const aDate = a.getTime();\n        const bDate = b.getTime();\n        if (aDate > bDate) return 1;\n        if (bDate > aDate) return -1;\n        return 0;\n      });\n    } else if (this.scaleType === ScaleType.Linear) {\n      domain = [min, max];\n      // Use compare function to sort numbers numerically\n      this.xSet = [...values].sort((a, b) => a - b);\n    } else {\n      domain = values;\n      this.xSet = values;\n    }\n    return domain;\n  }\n  getYDomain() {\n    const domain = [];\n    for (const results of this.results) {\n      for (const d of results.series) {\n        if (!domain.includes(d.value)) {\n          domain.push(d.value);\n        }\n      }\n    }\n    const values = [...domain];\n    if (!this.autoScale) {\n      values.push(0);\n    }\n    if (this.baseValue !== 'auto') {\n      values.push(this.baseValue);\n    }\n    const min = this.yScaleMin ? this.yScaleMin : Math.min(...values);\n    const max = this.yScaleMax ? this.yScaleMax : Math.max(...values);\n    return [min, max];\n  }\n  getSeriesDomain() {\n    return this.results.map(d => d.name);\n  }\n  getXScale(domain, width) {\n    let scale;\n    if (this.scaleType === ScaleType.Time) {\n      scale = scaleTime();\n    } else if (this.scaleType === ScaleType.Linear) {\n      scale = scaleLinear();\n    } else if (this.scaleType === ScaleType.Ordinal) {\n      scale = scalePoint().padding(0.1);\n    }\n    scale.range([0, width]).domain(domain);\n    return this.roundDomains ? scale.nice() : scale;\n  }\n  getYScale(domain, height) {\n    const scale = scaleLinear().range([height, 0]).domain(domain);\n    return this.roundDomains ? scale.nice() : scale;\n  }\n  getScaleType(values) {\n    let date = true;\n    let num = true;\n    for (const value of values) {\n      if (isDate(value)) {\n        date = false;\n      }\n      if (isNumber(value)) {\n        num = false;\n      }\n    }\n    if (date) {\n      return ScaleType.Time;\n    }\n    if (num) {\n      return ScaleType.Linear;\n    }\n    return ScaleType.Ordinal;\n  }\n  updateDomain(domain) {\n    this.filteredDomain = domain;\n    this.xDomain = this.filteredDomain;\n    this.xScale = this.getXScale(this.xDomain, this.dims.width);\n  }\n  updateHoveredVertical(item) {\n    this.hoveredVertical = item.value;\n    this.deactivateAll();\n  }\n  hideCircles() {\n    this.hoveredVertical = null;\n    this.deactivateAll();\n  }\n  onClick(data, series) {\n    if (series) {\n      data.series = series.name;\n    }\n    this.select.emit(data);\n  }\n  setColors() {\n    let domain;\n    if (this.schemeType === ScaleType.Ordinal) {\n      domain = this.seriesDomain;\n    } else {\n      domain = this.yDomain;\n    }\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n  }\n  getLegendOptions() {\n    const opts = {\n      scaleType: this.schemeType,\n      colors: undefined,\n      domain: [],\n      title: undefined,\n      position: this.legendPosition\n    };\n    if (opts.scaleType === ScaleType.Ordinal) {\n      opts.domain = this.seriesDomain;\n      opts.colors = this.colors;\n      opts.title = this.legendTitle;\n    } else {\n      opts.domain = this.yDomain;\n      opts.colors = this.colors.scale;\n    }\n    return opts;\n  }\n  updateYAxisWidth({\n    width\n  }) {\n    this.yAxisWidth = width;\n    this.update();\n  }\n  updateXAxisHeight({\n    height\n  }) {\n    this.xAxisHeight = height;\n    this.update();\n  }\n  onActivate(item) {\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value;\n    });\n    if (idx > -1) {\n      return;\n    }\n    this.activeEntries = [item, ...this.activeEntries];\n    this.activate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n  onDeactivate(item) {\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value;\n    });\n    this.activeEntries.splice(idx, 1);\n    this.activeEntries = [...this.activeEntries];\n    this.deactivate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n  deactivateAll() {\n    this.activeEntries = [...this.activeEntries];\n    for (const entry of this.activeEntries) {\n      this.deactivate.emit({\n        value: entry,\n        entries: []\n      });\n    }\n    this.activeEntries = [];\n  }\n}\nAreaChartComponent.ɵfac = /* @__PURE__ */(() => {\n  let ɵAreaChartComponent_BaseFactory;\n  return function AreaChartComponent_Factory(t) {\n    return (ɵAreaChartComponent_BaseFactory || (ɵAreaChartComponent_BaseFactory = i0.ɵɵgetInheritedFactory(AreaChartComponent)))(t || AreaChartComponent);\n  };\n})();\nAreaChartComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: AreaChartComponent,\n  selectors: [[\"ngx-charts-area-chart\"]],\n  contentQueries: function AreaChartComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n      i0.ɵɵcontentQuery(dirIndex, _c23, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.seriesTooltipTemplate = _t.first);\n    }\n  },\n  hostBindings: function AreaChartComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"mouseleave\", function AreaChartComponent_mouseleave_HostBindingHandler() {\n        return ctx.hideCircles();\n      });\n    }\n  },\n  inputs: {\n    legend: \"legend\",\n    legendTitle: \"legendTitle\",\n    legendPosition: \"legendPosition\",\n    xAxis: \"xAxis\",\n    yAxis: \"yAxis\",\n    baseValue: \"baseValue\",\n    autoScale: \"autoScale\",\n    showXAxisLabel: \"showXAxisLabel\",\n    showYAxisLabel: \"showYAxisLabel\",\n    xAxisLabel: \"xAxisLabel\",\n    yAxisLabel: \"yAxisLabel\",\n    timeline: \"timeline\",\n    gradient: \"gradient\",\n    showGridLines: \"showGridLines\",\n    curve: \"curve\",\n    activeEntries: \"activeEntries\",\n    schemeType: \"schemeType\",\n    trimXAxisTicks: \"trimXAxisTicks\",\n    trimYAxisTicks: \"trimYAxisTicks\",\n    rotateXAxisTicks: \"rotateXAxisTicks\",\n    maxXAxisTickLength: \"maxXAxisTickLength\",\n    maxYAxisTickLength: \"maxYAxisTickLength\",\n    xAxisTickFormatting: \"xAxisTickFormatting\",\n    yAxisTickFormatting: \"yAxisTickFormatting\",\n    xAxisTicks: \"xAxisTicks\",\n    yAxisTicks: \"yAxisTicks\",\n    roundDomains: \"roundDomains\",\n    tooltipDisabled: \"tooltipDisabled\",\n    xScaleMin: \"xScaleMin\",\n    xScaleMax: \"xScaleMax\",\n    yScaleMin: \"yScaleMin\",\n    yScaleMax: \"yScaleMax\",\n    wrapTicks: \"wrapTicks\"\n  },\n  outputs: {\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 11,\n  vars: 20,\n  consts: [[3, \"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\", \"view\", \"showLegend\", \"legendOptions\", \"activeEntries\", \"animations\"], [1, \"area-chart\", \"chart\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\", \"dimensionsChanged\", 4, \"ngIf\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\", \"dimensionsChanged\", 4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [3, \"mouseleave\", 4, \"ngIf\"], [\"ngx-charts-timeline\", \"\", 3, \"results\", \"view\", \"height\", \"scheme\", \"customColors\", \"legend\", \"scaleType\", \"onDomainChange\", 4, \"ngIf\"], [\"ngx-charts-x-axis\", \"\", 3, \"dimensionsChanged\", \"xScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\"], [\"ngx-charts-y-axis\", \"\", 3, \"dimensionsChanged\", \"yScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\"], [\"ngx-charts-area-series\", \"\", 3, \"xScale\", \"yScale\", \"baseValue\", \"colors\", \"data\", \"activeEntries\", \"scaleType\", \"gradient\", \"curve\", \"animations\"], [3, \"mouseleave\"], [\"ngx-charts-tooltip-area\", \"\", 3, \"hover\", \"dims\", \"xSet\", \"xScale\", \"yScale\", \"results\", \"colors\", \"tooltipDisabled\", \"tooltipTemplate\"], [4, \"ngFor\", \"ngForOf\"], [\"ngx-charts-circle-series\", \"\", 3, \"select\", \"activate\", \"deactivate\", \"xScale\", \"yScale\", \"colors\", \"activeEntries\", \"data\", \"scaleType\", \"visibleValue\", \"tooltipDisabled\", \"tooltipTemplate\"], [\"ngx-charts-timeline\", \"\", 3, \"onDomainChange\", \"results\", \"view\", \"height\", \"scheme\", \"customColors\", \"legend\", \"scaleType\"], [\"ngx-charts-area-series\", \"\", 3, \"xScale\", \"yScale\", \"baseValue\", \"colors\", \"data\", \"scaleType\", \"gradient\", \"curve\", \"animations\"]],\n  template: function AreaChartComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n      i0.ɵɵlistener(\"legendLabelClick\", function AreaChartComponent_Template_ngx_charts_chart_legendLabelClick_0_listener($event) {\n        return ctx.onClick($event);\n      })(\"legendLabelActivate\", function AreaChartComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener($event) {\n        return ctx.onActivate($event);\n      })(\"legendLabelDeactivate\", function AreaChartComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener($event) {\n        return ctx.onDeactivate($event);\n      });\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"defs\")(2, \"clipPath\");\n      i0.ɵɵelement(3, \"rect\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(4, \"g\", 1);\n      i0.ɵɵtemplate(5, AreaChartComponent__svg_g_5_Template, 1, 11, \"g\", 2)(6, AreaChartComponent__svg_g_6_Template, 1, 10, \"g\", 3);\n      i0.ɵɵelementStart(7, \"g\");\n      i0.ɵɵtemplate(8, AreaChartComponent__svg_g_8_Template, 2, 10, \"g\", 4)(9, AreaChartComponent__svg_g_9_Template, 3, 9, \"g\", 5);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(10, AreaChartComponent__svg_g_10_Template, 2, 13, \"g\", 6);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(17, _c24, ctx.width, ctx.height))(\"showLegend\", ctx.legend)(\"legendOptions\", ctx.legendOptions)(\"activeEntries\", ctx.activeEntries)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(2);\n      i0.ɵɵattribute(\"id\", ctx.clipPathId);\n      i0.ɵɵadvance();\n      i0.ɵɵattribute(\"width\", ctx.dims.width + 10)(\"height\", ctx.dims.height + 10)(\"transform\", \"translate(-5, -5)\");\n      i0.ɵɵadvance();\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngIf\", ctx.xAxis);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngIf\", ctx.yAxis);\n      i0.ɵɵadvance();\n      i0.ɵɵattribute(\"clip-path\", ctx.clipPath);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngForOf\", ctx.results)(\"ngForTrackBy\", ctx.trackBy);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngIf\", !ctx.tooltipDisabled);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngIf\", ctx.timeline && ctx.scaleType != \"ordinal\");\n    }\n  },\n  dependencies: [ChartComponent, XAxisComponent, YAxisComponent, AreaSeriesComponent, TooltipArea, CircleSeriesComponent, Timeline, i2.NgIf, i2.NgForOf],\n  styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AreaChartComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-area-chart',\n      template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:defs>\n        <svg:clipPath [attr.id]=\"clipPathId\">\n          <svg:rect\n            [attr.width]=\"dims.width + 10\"\n            [attr.height]=\"dims.height + 10\"\n            [attr.transform]=\"'translate(-5, -5)'\"\n          />\n        </svg:clipPath>\n      </svg:defs>\n      <svg:g [attr.transform]=\"transform\" class=\"area-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g [attr.clip-path]=\"clipPath\">\n          <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n            <svg:g\n              ngx-charts-area-series\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [baseValue]=\"baseValue\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [activeEntries]=\"activeEntries\"\n              [scaleType]=\"scaleType\"\n              [gradient]=\"gradient\"\n              [curve]=\"curve\"\n              [animations]=\"animations\"\n            />\n          </svg:g>\n\n          <svg:g *ngIf=\"!tooltipDisabled\" (mouseleave)=\"hideCircles()\">\n            <svg:g\n              ngx-charts-tooltip-area\n              [dims]=\"dims\"\n              [xSet]=\"xSet\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [results]=\"results\"\n              [colors]=\"colors\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"seriesTooltipTemplate\"\n              (hover)=\"updateHoveredVertical($event)\"\n            />\n\n            <svg:g *ngFor=\"let series of results\">\n              <svg:g\n                ngx-charts-circle-series\n                [xScale]=\"xScale\"\n                [yScale]=\"yScale\"\n                [colors]=\"colors\"\n                [activeEntries]=\"activeEntries\"\n                [data]=\"series\"\n                [scaleType]=\"scaleType\"\n                [visibleValue]=\"hoveredVertical\"\n                [tooltipDisabled]=\"tooltipDisabled\"\n                [tooltipTemplate]=\"tooltipTemplate\"\n                (select)=\"onClick($event, series)\"\n                (activate)=\"onActivate($event)\"\n                (deactivate)=\"onDeactivate($event)\"\n              />\n            </svg:g>\n          </svg:g>\n        </svg:g>\n      </svg:g>\n      <svg:g\n        ngx-charts-timeline\n        *ngIf=\"timeline && scaleType != 'ordinal'\"\n        [attr.transform]=\"timelineTransform\"\n        [results]=\"results\"\n        [view]=\"[timelineWidth, height]\"\n        [height]=\"timelineHeight\"\n        [scheme]=\"scheme\"\n        [customColors]=\"customColors\"\n        [legend]=\"legend\"\n        [scaleType]=\"scaleType\"\n        (onDomainChange)=\"updateDomain($event)\"\n      >\n        <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n          <svg:g\n            ngx-charts-area-series\n            [xScale]=\"timelineXScale\"\n            [yScale]=\"timelineYScale\"\n            [baseValue]=\"baseValue\"\n            [colors]=\"colors\"\n            [data]=\"series\"\n            [scaleType]=\"scaleType\"\n            [gradient]=\"gradient\"\n            [curve]=\"curve\"\n            [animations]=\"animations\"\n          />\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"]\n    }]\n  }], null, {\n    legend: [{\n      type: Input\n    }],\n    legendTitle: [{\n      type: Input\n    }],\n    legendPosition: [{\n      type: Input\n    }],\n    xAxis: [{\n      type: Input\n    }],\n    yAxis: [{\n      type: Input\n    }],\n    baseValue: [{\n      type: Input\n    }],\n    autoScale: [{\n      type: Input\n    }],\n    showXAxisLabel: [{\n      type: Input\n    }],\n    showYAxisLabel: [{\n      type: Input\n    }],\n    xAxisLabel: [{\n      type: Input\n    }],\n    yAxisLabel: [{\n      type: Input\n    }],\n    timeline: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    showGridLines: [{\n      type: Input\n    }],\n    curve: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    schemeType: [{\n      type: Input\n    }],\n    trimXAxisTicks: [{\n      type: Input\n    }],\n    trimYAxisTicks: [{\n      type: Input\n    }],\n    rotateXAxisTicks: [{\n      type: Input\n    }],\n    maxXAxisTickLength: [{\n      type: Input\n    }],\n    maxYAxisTickLength: [{\n      type: Input\n    }],\n    xAxisTickFormatting: [{\n      type: Input\n    }],\n    yAxisTickFormatting: [{\n      type: Input\n    }],\n    xAxisTicks: [{\n      type: Input\n    }],\n    yAxisTicks: [{\n      type: Input\n    }],\n    roundDomains: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    xScaleMin: [{\n      type: Input\n    }],\n    xScaleMax: [{\n      type: Input\n    }],\n    yScaleMin: [{\n      type: Input\n    }],\n    yScaleMax: [{\n      type: Input\n    }],\n    wrapTicks: [{\n      type: Input\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    tooltipTemplate: [{\n      type: ContentChild,\n      args: ['tooltipTemplate']\n    }],\n    seriesTooltipTemplate: [{\n      type: ContentChild,\n      args: ['seriesTooltipTemplate']\n    }],\n    hideCircles: [{\n      type: HostListener,\n      args: ['mouseleave']\n    }]\n  });\n})();\nclass AreaChartNormalizedComponent extends BaseChartComponent {\n  constructor() {\n    super(...arguments);\n    this.legend = false;\n    this.legendTitle = 'Legend';\n    this.legendPosition = LegendPosition.Right;\n    this.showXAxisLabel = false;\n    this.showYAxisLabel = false;\n    this.showGridLines = true;\n    this.curve = curveLinear;\n    this.activeEntries = [];\n    this.trimXAxisTicks = true;\n    this.trimYAxisTicks = true;\n    this.rotateXAxisTicks = true;\n    this.maxXAxisTickLength = 16;\n    this.maxYAxisTickLength = 16;\n    this.roundDomains = false;\n    this.tooltipDisabled = false;\n    this.wrapTicks = false;\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.yDomain = [0, 100];\n    this.margin = [10, 20, 10, 20];\n    this.xAxisHeight = 0;\n    this.yAxisWidth = 0;\n    this.seriesType = SeriesType;\n    this.timelineHeight = 50;\n    this.timelinePadding = 10;\n    this.trackBy = (index, item) => {\n      return item.name;\n    };\n  }\n  update() {\n    super.update();\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.schemeType,\n      legendPosition: this.legendPosition\n    });\n    if (this.timeline) {\n      this.dims.height -= this.timelineHeight + this.margin[2] + this.timelinePadding;\n    }\n    this.xDomain = this.getXDomain();\n    if (this.filteredDomain) {\n      this.xDomain = this.filteredDomain;\n    }\n    this.seriesDomain = this.getSeriesDomain();\n    this.xScale = this.getXScale(this.xDomain, this.dims.width);\n    this.yScale = this.getYScale(this.yDomain, this.dims.height);\n    for (let i = 0; i < this.xSet.length; i++) {\n      const val = this.xSet[i];\n      let d0 = 0;\n      let total = 0;\n      for (const group of this.results) {\n        const d = group.series.find(item => {\n          let a = item.name;\n          let b = val;\n          if (this.scaleType === ScaleType.Time) {\n            a = a.valueOf();\n            b = b.valueOf();\n          }\n          return a === b;\n        });\n        if (d) {\n          total += d.value;\n        }\n      }\n      for (const group of this.results) {\n        let d = group.series.find(item => {\n          let a = item.name;\n          let b = val;\n          if (this.scaleType === ScaleType.Time) {\n            a = a.valueOf();\n            b = b.valueOf();\n          }\n          return a === b;\n        });\n        if (d) {\n          d.d0 = d0;\n          d.d1 = d0 + d.value;\n          d0 += d.value;\n        } else {\n          d = {\n            name: val,\n            value: 0,\n            d0,\n            d1: d0\n          };\n          group.series.push(d);\n        }\n        if (total > 0) {\n          d.d0 = d.d0 * 100 / total;\n          d.d1 = d.d1 * 100 / total;\n        } else {\n          d.d0 = 0;\n          d.d1 = 0;\n        }\n      }\n    }\n    this.updateTimeline();\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n    this.clipPathId = 'clip' + id().toString();\n    this.clipPath = `url(#${this.clipPathId})`;\n  }\n  updateTimeline() {\n    if (this.timeline) {\n      this.timelineWidth = this.dims.width;\n      this.timelineXDomain = this.getXDomain();\n      this.timelineXScale = this.getXScale(this.timelineXDomain, this.timelineWidth);\n      this.timelineYScale = this.getYScale(this.yDomain, this.timelineHeight);\n      this.timelineTransform = `translate(${this.dims.xOffset}, ${-this.margin[2]})`;\n    }\n  }\n  getXDomain() {\n    let values = getUniqueXDomainValues(this.results);\n    this.scaleType = getScaleType(values);\n    let domain = [];\n    if (this.scaleType === ScaleType.Time) {\n      const min = Math.min(...values);\n      const max = Math.max(...values);\n      domain = [new Date(min), new Date(max)];\n      this.xSet = [...values].sort((a, b) => {\n        const aDate = a.getTime();\n        const bDate = b.getTime();\n        if (aDate > bDate) return 1;\n        if (bDate > aDate) return -1;\n        return 0;\n      });\n    } else if (this.scaleType === ScaleType.Linear) {\n      values = values.map(v => Number(v));\n      const min = Math.min(...values);\n      const max = Math.max(...values);\n      domain = [min, max];\n      // Use compare function to sort numbers numerically\n      this.xSet = [...values].sort((a, b) => a - b);\n    } else {\n      domain = values;\n      this.xSet = values;\n    }\n    return domain;\n  }\n  getSeriesDomain() {\n    return this.results.map(d => d.name);\n  }\n  getXScale(domain, width) {\n    let scale;\n    if (this.scaleType === ScaleType.Time) {\n      scale = scaleTime();\n    } else if (this.scaleType === ScaleType.Linear) {\n      scale = scaleLinear();\n    } else if (this.scaleType === ScaleType.Ordinal) {\n      scale = scalePoint().padding(0.1);\n    }\n    scale.range([0, width]).domain(domain);\n    return this.roundDomains ? scale.nice() : scale;\n  }\n  getYScale(domain, height) {\n    const scale = scaleLinear().range([height, 0]).domain(domain);\n    return this.roundDomains ? scale.nice() : scale;\n  }\n  updateDomain(domain) {\n    this.filteredDomain = domain;\n    this.xDomain = this.filteredDomain;\n    this.xScale = this.getXScale(this.xDomain, this.dims.width);\n  }\n  updateHoveredVertical(item) {\n    this.hoveredVertical = item.value;\n    this.deactivateAll();\n  }\n  hideCircles() {\n    this.hoveredVertical = null;\n    this.deactivateAll();\n  }\n  onClick(data, series) {\n    if (series) {\n      data.series = series.name;\n    }\n    this.select.emit(data);\n  }\n  setColors() {\n    let domain;\n    if (this.schemeType === ScaleType.Ordinal) {\n      domain = this.seriesDomain;\n    } else {\n      domain = this.yDomain;\n    }\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n  }\n  getLegendOptions() {\n    const opts = {\n      scaleType: this.schemeType,\n      colors: undefined,\n      domain: [],\n      title: undefined,\n      position: this.legendPosition\n    };\n    if (opts.scaleType === ScaleType.Ordinal) {\n      opts.domain = this.seriesDomain;\n      opts.colors = this.colors;\n      opts.title = this.legendTitle;\n    } else {\n      opts.domain = this.yDomain;\n      opts.colors = this.colors.scale;\n    }\n    return opts;\n  }\n  updateYAxisWidth({\n    width\n  }) {\n    this.yAxisWidth = width;\n    this.update();\n  }\n  updateXAxisHeight({\n    height\n  }) {\n    this.xAxisHeight = height;\n    this.update();\n  }\n  onActivate(item) {\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value;\n    });\n    if (idx > -1) {\n      return;\n    }\n    this.activeEntries = [item, ...this.activeEntries];\n    this.activate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n  onDeactivate(item) {\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value;\n    });\n    this.activeEntries.splice(idx, 1);\n    this.activeEntries = [...this.activeEntries];\n    this.deactivate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n  deactivateAll() {\n    this.activeEntries = [...this.activeEntries];\n    for (const entry of this.activeEntries) {\n      this.deactivate.emit({\n        value: entry,\n        entries: []\n      });\n    }\n    this.activeEntries = [];\n  }\n}\nAreaChartNormalizedComponent.ɵfac = /* @__PURE__ */(() => {\n  let ɵAreaChartNormalizedComponent_BaseFactory;\n  return function AreaChartNormalizedComponent_Factory(t) {\n    return (ɵAreaChartNormalizedComponent_BaseFactory || (ɵAreaChartNormalizedComponent_BaseFactory = i0.ɵɵgetInheritedFactory(AreaChartNormalizedComponent)))(t || AreaChartNormalizedComponent);\n  };\n})();\nAreaChartNormalizedComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: AreaChartNormalizedComponent,\n  selectors: [[\"ngx-charts-area-chart-normalized\"]],\n  contentQueries: function AreaChartNormalizedComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n      i0.ɵɵcontentQuery(dirIndex, _c23, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.seriesTooltipTemplate = _t.first);\n    }\n  },\n  hostBindings: function AreaChartNormalizedComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"mouseleave\", function AreaChartNormalizedComponent_mouseleave_HostBindingHandler() {\n        return ctx.hideCircles();\n      });\n    }\n  },\n  inputs: {\n    legend: \"legend\",\n    legendTitle: \"legendTitle\",\n    legendPosition: \"legendPosition\",\n    xAxis: \"xAxis\",\n    yAxis: \"yAxis\",\n    showXAxisLabel: \"showXAxisLabel\",\n    showYAxisLabel: \"showYAxisLabel\",\n    xAxisLabel: \"xAxisLabel\",\n    yAxisLabel: \"yAxisLabel\",\n    timeline: \"timeline\",\n    gradient: \"gradient\",\n    showGridLines: \"showGridLines\",\n    curve: \"curve\",\n    activeEntries: \"activeEntries\",\n    schemeType: \"schemeType\",\n    trimXAxisTicks: \"trimXAxisTicks\",\n    trimYAxisTicks: \"trimYAxisTicks\",\n    rotateXAxisTicks: \"rotateXAxisTicks\",\n    maxXAxisTickLength: \"maxXAxisTickLength\",\n    maxYAxisTickLength: \"maxYAxisTickLength\",\n    xAxisTickFormatting: \"xAxisTickFormatting\",\n    yAxisTickFormatting: \"yAxisTickFormatting\",\n    xAxisTicks: \"xAxisTicks\",\n    yAxisTicks: \"yAxisTicks\",\n    roundDomains: \"roundDomains\",\n    tooltipDisabled: \"tooltipDisabled\",\n    wrapTicks: \"wrapTicks\"\n  },\n  outputs: {\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 11,\n  vars: 20,\n  consts: [[3, \"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\", \"view\", \"showLegend\", \"legendOptions\", \"activeEntries\", \"animations\"], [1, \"area-chart\", \"chart\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\", \"dimensionsChanged\", 4, \"ngIf\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\", \"dimensionsChanged\", 4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [3, \"mouseleave\", 4, \"ngIf\"], [\"ngx-charts-timeline\", \"\", 3, \"results\", \"view\", \"height\", \"scheme\", \"customColors\", \"legend\", \"scaleType\", \"onDomainChange\", 4, \"ngIf\"], [\"ngx-charts-x-axis\", \"\", 3, \"dimensionsChanged\", \"xScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\"], [\"ngx-charts-y-axis\", \"\", 3, \"dimensionsChanged\", \"yScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\"], [\"ngx-charts-area-series\", \"\", 3, \"xScale\", \"yScale\", \"colors\", \"data\", \"scaleType\", \"activeEntries\", \"gradient\", \"normalized\", \"curve\", \"animations\"], [3, \"mouseleave\"], [\"ngx-charts-tooltip-area\", \"\", 3, \"hover\", \"dims\", \"xSet\", \"xScale\", \"yScale\", \"results\", \"colors\", \"showPercentage\", \"tooltipDisabled\", \"tooltipTemplate\"], [4, \"ngFor\", \"ngForOf\"], [\"ngx-charts-circle-series\", \"\", 3, \"select\", \"activate\", \"deactivate\", \"type\", \"xScale\", \"yScale\", \"colors\", \"activeEntries\", \"data\", \"scaleType\", \"visibleValue\", \"tooltipDisabled\", \"tooltipTemplate\"], [\"ngx-charts-timeline\", \"\", 3, \"onDomainChange\", \"results\", \"view\", \"height\", \"scheme\", \"customColors\", \"legend\", \"scaleType\"], [\"ngx-charts-area-series\", \"\", 3, \"xScale\", \"yScale\", \"colors\", \"data\", \"scaleType\", \"gradient\", \"normalized\", \"curve\", \"animations\"]],\n  template: function AreaChartNormalizedComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n      i0.ɵɵlistener(\"legendLabelClick\", function AreaChartNormalizedComponent_Template_ngx_charts_chart_legendLabelClick_0_listener($event) {\n        return ctx.onClick($event);\n      })(\"legendLabelActivate\", function AreaChartNormalizedComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener($event) {\n        return ctx.onActivate($event);\n      })(\"legendLabelDeactivate\", function AreaChartNormalizedComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener($event) {\n        return ctx.onDeactivate($event);\n      });\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"defs\")(2, \"clipPath\");\n      i0.ɵɵelement(3, \"rect\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(4, \"g\", 1);\n      i0.ɵɵtemplate(5, AreaChartNormalizedComponent__svg_g_5_Template, 1, 11, \"g\", 2)(6, AreaChartNormalizedComponent__svg_g_6_Template, 1, 10, \"g\", 3);\n      i0.ɵɵelementStart(7, \"g\");\n      i0.ɵɵtemplate(8, AreaChartNormalizedComponent__svg_g_8_Template, 2, 10, \"g\", 4)(9, AreaChartNormalizedComponent__svg_g_9_Template, 3, 10, \"g\", 5);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(10, AreaChartNormalizedComponent__svg_g_10_Template, 2, 13, \"g\", 6);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(17, _c24, ctx.width, ctx.height))(\"showLegend\", ctx.legend)(\"legendOptions\", ctx.legendOptions)(\"activeEntries\", ctx.activeEntries)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(2);\n      i0.ɵɵattribute(\"id\", ctx.clipPathId);\n      i0.ɵɵadvance();\n      i0.ɵɵattribute(\"width\", ctx.dims.width + 10)(\"height\", ctx.dims.height + 10)(\"transform\", \"translate(-5, -5)\");\n      i0.ɵɵadvance();\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngIf\", ctx.xAxis);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngIf\", ctx.yAxis);\n      i0.ɵɵadvance();\n      i0.ɵɵattribute(\"clip-path\", ctx.clipPath);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngForOf\", ctx.results)(\"ngForTrackBy\", ctx.trackBy);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngIf\", !ctx.tooltipDisabled);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngIf\", ctx.timeline && ctx.scaleType != \"ordinal\");\n    }\n  },\n  dependencies: [ChartComponent, XAxisComponent, YAxisComponent, AreaSeriesComponent, TooltipArea, CircleSeriesComponent, Timeline, i2.NgIf, i2.NgForOf],\n  styles: [_c25],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AreaChartNormalizedComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-area-chart-normalized',\n      template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:defs>\n        <svg:clipPath [attr.id]=\"clipPathId\">\n          <svg:rect\n            [attr.width]=\"dims.width + 10\"\n            [attr.height]=\"dims.height + 10\"\n            [attr.transform]=\"'translate(-5, -5)'\"\n          />\n        </svg:clipPath>\n      </svg:defs>\n      <svg:g [attr.transform]=\"transform\" class=\"area-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g [attr.clip-path]=\"clipPath\">\n          <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n            <svg:g\n              ngx-charts-area-series\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [scaleType]=\"scaleType\"\n              [activeEntries]=\"activeEntries\"\n              [gradient]=\"gradient\"\n              [normalized]=\"true\"\n              [curve]=\"curve\"\n              [animations]=\"animations\"\n            />\n          </svg:g>\n\n          <svg:g *ngIf=\"!tooltipDisabled\" (mouseleave)=\"hideCircles()\">\n            <svg:g\n              ngx-charts-tooltip-area\n              [dims]=\"dims\"\n              [xSet]=\"xSet\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [results]=\"results\"\n              [colors]=\"colors\"\n              [showPercentage]=\"true\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"seriesTooltipTemplate\"\n              (hover)=\"updateHoveredVertical($event)\"\n            />\n\n            <svg:g *ngFor=\"let series of results\">\n              <svg:g\n                ngx-charts-circle-series\n                [type]=\"seriesType.Stacked\"\n                [xScale]=\"xScale\"\n                [yScale]=\"yScale\"\n                [colors]=\"colors\"\n                [activeEntries]=\"activeEntries\"\n                [data]=\"series\"\n                [scaleType]=\"scaleType\"\n                [visibleValue]=\"hoveredVertical\"\n                [tooltipDisabled]=\"tooltipDisabled\"\n                [tooltipTemplate]=\"tooltipTemplate\"\n                (select)=\"onClick($event, series)\"\n                (activate)=\"onActivate($event)\"\n                (deactivate)=\"onDeactivate($event)\"\n              />\n            </svg:g>\n          </svg:g>\n        </svg:g>\n      </svg:g>\n      <svg:g\n        ngx-charts-timeline\n        *ngIf=\"timeline && scaleType != 'ordinal'\"\n        [attr.transform]=\"timelineTransform\"\n        [results]=\"results\"\n        [view]=\"[timelineWidth, height]\"\n        [height]=\"timelineHeight\"\n        [scheme]=\"scheme\"\n        [customColors]=\"customColors\"\n        [legend]=\"legend\"\n        [scaleType]=\"scaleType\"\n        (onDomainChange)=\"updateDomain($event)\"\n      >\n        <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n          <svg:g\n            ngx-charts-area-series\n            [xScale]=\"timelineXScale\"\n            [yScale]=\"timelineYScale\"\n            [colors]=\"colors\"\n            [data]=\"series\"\n            [scaleType]=\"scaleType\"\n            [gradient]=\"gradient\"\n            [normalized]=\"true\"\n            [curve]=\"curve\"\n            [animations]=\"animations\"\n          />\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"]\n    }]\n  }], null, {\n    legend: [{\n      type: Input\n    }],\n    legendTitle: [{\n      type: Input\n    }],\n    legendPosition: [{\n      type: Input\n    }],\n    xAxis: [{\n      type: Input\n    }],\n    yAxis: [{\n      type: Input\n    }],\n    showXAxisLabel: [{\n      type: Input\n    }],\n    showYAxisLabel: [{\n      type: Input\n    }],\n    xAxisLabel: [{\n      type: Input\n    }],\n    yAxisLabel: [{\n      type: Input\n    }],\n    timeline: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    showGridLines: [{\n      type: Input\n    }],\n    curve: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    schemeType: [{\n      type: Input\n    }],\n    trimXAxisTicks: [{\n      type: Input\n    }],\n    trimYAxisTicks: [{\n      type: Input\n    }],\n    rotateXAxisTicks: [{\n      type: Input\n    }],\n    maxXAxisTickLength: [{\n      type: Input\n    }],\n    maxYAxisTickLength: [{\n      type: Input\n    }],\n    xAxisTickFormatting: [{\n      type: Input\n    }],\n    yAxisTickFormatting: [{\n      type: Input\n    }],\n    xAxisTicks: [{\n      type: Input\n    }],\n    yAxisTicks: [{\n      type: Input\n    }],\n    roundDomains: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    wrapTicks: [{\n      type: Input\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    tooltipTemplate: [{\n      type: ContentChild,\n      args: ['tooltipTemplate']\n    }],\n    seriesTooltipTemplate: [{\n      type: ContentChild,\n      args: ['seriesTooltipTemplate']\n    }],\n    hideCircles: [{\n      type: HostListener,\n      args: ['mouseleave']\n    }]\n  });\n})();\nclass AreaChartStackedComponent extends BaseChartComponent {\n  constructor() {\n    super(...arguments);\n    this.legend = false;\n    this.legendTitle = 'Legend';\n    this.legendPosition = LegendPosition.Right;\n    this.xAxis = false;\n    this.yAxis = false;\n    this.timeline = false;\n    this.showGridLines = true;\n    this.curve = curveLinear;\n    this.activeEntries = [];\n    this.trimXAxisTicks = true;\n    this.trimYAxisTicks = true;\n    this.rotateXAxisTicks = true;\n    this.maxXAxisTickLength = 16;\n    this.maxYAxisTickLength = 16;\n    this.roundDomains = false;\n    this.tooltipDisabled = false;\n    this.wrapTicks = false;\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.margin = [10, 20, 10, 20];\n    this.xAxisHeight = 0;\n    this.yAxisWidth = 0;\n    this.timelineHeight = 50;\n    this.timelinePadding = 10;\n    this.seriesType = SeriesType;\n  }\n  update() {\n    super.update();\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.schemeType,\n      legendPosition: this.legendPosition\n    });\n    if (this.timeline) {\n      this.dims.height -= this.timelineHeight + this.margin[2] + this.timelinePadding;\n    }\n    this.xDomain = this.getXDomain();\n    if (this.filteredDomain) {\n      this.xDomain = this.filteredDomain;\n    }\n    this.yDomain = this.getYDomain();\n    this.seriesDomain = this.getSeriesDomain();\n    this.xScale = this.getXScale(this.xDomain, this.dims.width);\n    this.yScale = this.getYScale(this.yDomain, this.dims.height);\n    for (let i = 0; i < this.xSet.length; i++) {\n      const val = this.xSet[i];\n      let d0 = 0;\n      for (const group of this.results) {\n        let d = group.series.find(item => {\n          let a = item.name;\n          let b = val;\n          if (this.scaleType === ScaleType.Time) {\n            a = a.valueOf();\n            b = b.valueOf();\n          }\n          return a === b;\n        });\n        if (d) {\n          d.d0 = d0;\n          d.d1 = d0 + d.value;\n          d0 += d.value;\n        } else {\n          d = {\n            name: val,\n            value: 0,\n            d0,\n            d1: d0\n          };\n          group.series.push(d);\n        }\n      }\n    }\n    this.updateTimeline();\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n    this.clipPathId = 'clip' + id().toString();\n    this.clipPath = `url(#${this.clipPathId})`;\n  }\n  updateTimeline() {\n    if (this.timeline) {\n      this.timelineWidth = this.dims.width;\n      this.timelineXDomain = this.getXDomain();\n      this.timelineXScale = this.getXScale(this.timelineXDomain, this.timelineWidth);\n      this.timelineYScale = this.getYScale(this.yDomain, this.timelineHeight);\n      this.timelineTransform = `translate(${this.dims.xOffset}, ${-this.margin[2]})`;\n    }\n  }\n  getXDomain() {\n    let values = getUniqueXDomainValues(this.results);\n    this.scaleType = getScaleType(values);\n    let domain = [];\n    if (this.scaleType === ScaleType.Linear) {\n      values = values.map(v => Number(v));\n    }\n    let min;\n    let max;\n    if (this.scaleType === ScaleType.Time || this.scaleType === ScaleType.Linear) {\n      min = this.xScaleMin ? this.xScaleMin : Math.min(...values);\n      max = this.xScaleMax ? this.xScaleMax : Math.max(...values);\n    }\n    if (this.scaleType === ScaleType.Time) {\n      domain = [new Date(min), new Date(max)];\n      this.xSet = [...values].sort((a, b) => {\n        const aDate = a.getTime();\n        const bDate = b.getTime();\n        if (aDate > bDate) return 1;\n        if (bDate > aDate) return -1;\n        return 0;\n      });\n    } else if (this.scaleType === ScaleType.Linear) {\n      domain = [min, max];\n      // Use compare function to sort numbers numerically\n      this.xSet = [...values].sort((a, b) => a - b);\n    } else {\n      domain = values;\n      this.xSet = values;\n    }\n    return domain;\n  }\n  getYDomain() {\n    const domain = [];\n    for (let i = 0; i < this.xSet.length; i++) {\n      const val = this.xSet[i];\n      let sum = 0;\n      for (const group of this.results) {\n        const d = group.series.find(item => {\n          let a = item.name;\n          let b = val;\n          if (this.scaleType === ScaleType.Time) {\n            a = a.valueOf();\n            b = b.valueOf();\n          }\n          return a === b;\n        });\n        if (d) {\n          sum += d.value;\n        }\n      }\n      domain.push(sum);\n    }\n    const min = this.yScaleMin ? this.yScaleMin : Math.min(0, ...domain);\n    const max = this.yScaleMax ? this.yScaleMax : Math.max(...domain);\n    return [min, max];\n  }\n  getSeriesDomain() {\n    return this.results.map(d => d.name);\n  }\n  getXScale(domain, width) {\n    let scale;\n    if (this.scaleType === ScaleType.Time) {\n      scale = scaleTime();\n    } else if (this.scaleType === ScaleType.Linear) {\n      scale = scaleLinear();\n    } else if (this.scaleType === ScaleType.Ordinal) {\n      scale = scalePoint().padding(0.1);\n    }\n    scale.range([0, width]).domain(domain);\n    return this.roundDomains ? scale.nice() : scale;\n  }\n  getYScale(domain, height) {\n    const scale = scaleLinear().range([height, 0]).domain(domain);\n    return this.roundDomains ? scale.nice() : scale;\n  }\n  updateDomain(domain) {\n    this.filteredDomain = domain;\n    this.xDomain = this.filteredDomain;\n    this.xScale = this.getXScale(this.xDomain, this.dims.width);\n  }\n  updateHoveredVertical(item) {\n    this.hoveredVertical = item.value;\n    this.deactivateAll();\n  }\n  hideCircles() {\n    this.hoveredVertical = null;\n    this.deactivateAll();\n  }\n  onClick(data, series) {\n    if (series) {\n      data.series = series.name;\n    }\n    this.select.emit(data);\n  }\n  trackBy(index, item) {\n    return `${item.name}`;\n  }\n  setColors() {\n    let domain;\n    if (this.schemeType === ScaleType.Ordinal) {\n      domain = this.seriesDomain;\n    } else {\n      domain = this.yDomain;\n    }\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n  }\n  getLegendOptions() {\n    const opts = {\n      scaleType: this.schemeType,\n      colors: undefined,\n      domain: [],\n      title: undefined,\n      position: this.legendPosition\n    };\n    if (opts.scaleType === ScaleType.Ordinal) {\n      opts.domain = this.seriesDomain;\n      opts.colors = this.colors;\n      opts.title = this.legendTitle;\n    } else {\n      opts.domain = this.yDomain;\n      opts.colors = this.colors.scale;\n    }\n    return opts;\n  }\n  updateYAxisWidth({\n    width\n  }) {\n    this.yAxisWidth = width;\n    this.update();\n  }\n  updateXAxisHeight({\n    height\n  }) {\n    this.xAxisHeight = height;\n    this.update();\n  }\n  onActivate(item) {\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value;\n    });\n    if (idx > -1) {\n      return;\n    }\n    this.activeEntries = [item, ...this.activeEntries];\n    this.activate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n  onDeactivate(item) {\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value;\n    });\n    this.activeEntries.splice(idx, 1);\n    this.activeEntries = [...this.activeEntries];\n    this.deactivate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n  deactivateAll() {\n    this.activeEntries = [...this.activeEntries];\n    for (const entry of this.activeEntries) {\n      this.deactivate.emit({\n        value: entry,\n        entries: []\n      });\n    }\n    this.activeEntries = [];\n  }\n}\nAreaChartStackedComponent.ɵfac = /* @__PURE__ */(() => {\n  let ɵAreaChartStackedComponent_BaseFactory;\n  return function AreaChartStackedComponent_Factory(t) {\n    return (ɵAreaChartStackedComponent_BaseFactory || (ɵAreaChartStackedComponent_BaseFactory = i0.ɵɵgetInheritedFactory(AreaChartStackedComponent)))(t || AreaChartStackedComponent);\n  };\n})();\nAreaChartStackedComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: AreaChartStackedComponent,\n  selectors: [[\"ngx-charts-area-chart-stacked\"]],\n  contentQueries: function AreaChartStackedComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n      i0.ɵɵcontentQuery(dirIndex, _c23, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.seriesTooltipTemplate = _t.first);\n    }\n  },\n  hostBindings: function AreaChartStackedComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"mouseleave\", function AreaChartStackedComponent_mouseleave_HostBindingHandler() {\n        return ctx.hideCircles();\n      });\n    }\n  },\n  inputs: {\n    legend: \"legend\",\n    legendTitle: \"legendTitle\",\n    legendPosition: \"legendPosition\",\n    xAxis: \"xAxis\",\n    yAxis: \"yAxis\",\n    showXAxisLabel: \"showXAxisLabel\",\n    showYAxisLabel: \"showYAxisLabel\",\n    xAxisLabel: \"xAxisLabel\",\n    yAxisLabel: \"yAxisLabel\",\n    timeline: \"timeline\",\n    gradient: \"gradient\",\n    showGridLines: \"showGridLines\",\n    curve: \"curve\",\n    activeEntries: \"activeEntries\",\n    schemeType: \"schemeType\",\n    trimXAxisTicks: \"trimXAxisTicks\",\n    trimYAxisTicks: \"trimYAxisTicks\",\n    rotateXAxisTicks: \"rotateXAxisTicks\",\n    maxXAxisTickLength: \"maxXAxisTickLength\",\n    maxYAxisTickLength: \"maxYAxisTickLength\",\n    xAxisTickFormatting: \"xAxisTickFormatting\",\n    yAxisTickFormatting: \"yAxisTickFormatting\",\n    xAxisTicks: \"xAxisTicks\",\n    yAxisTicks: \"yAxisTicks\",\n    roundDomains: \"roundDomains\",\n    tooltipDisabled: \"tooltipDisabled\",\n    xScaleMin: \"xScaleMin\",\n    xScaleMax: \"xScaleMax\",\n    yScaleMin: \"yScaleMin\",\n    yScaleMax: \"yScaleMax\",\n    wrapTicks: \"wrapTicks\"\n  },\n  outputs: {\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 11,\n  vars: 20,\n  consts: [[3, \"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\", \"view\", \"showLegend\", \"legendOptions\", \"activeEntries\", \"animations\"], [1, \"area-chart\", \"chart\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\", \"dimensionsChanged\", 4, \"ngIf\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\", \"dimensionsChanged\", 4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [3, \"mouseleave\", 4, \"ngIf\"], [\"ngx-charts-timeline\", \"\", 3, \"results\", \"view\", \"height\", \"scheme\", \"customColors\", \"legend\", \"scaleType\", \"onDomainChange\", 4, \"ngIf\"], [\"ngx-charts-x-axis\", \"\", 3, \"dimensionsChanged\", \"xScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\"], [\"ngx-charts-y-axis\", \"\", 3, \"dimensionsChanged\", \"yScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\"], [\"ngx-charts-area-series\", \"\", 3, \"xScale\", \"yScale\", \"colors\", \"data\", \"scaleType\", \"gradient\", \"activeEntries\", \"stacked\", \"curve\", \"animations\"], [3, \"mouseleave\"], [\"ngx-charts-tooltip-area\", \"\", 3, \"hover\", \"dims\", \"xSet\", \"xScale\", \"yScale\", \"results\", \"colors\", \"tooltipDisabled\", \"tooltipTemplate\"], [\"ngx-charts-circle-series\", \"\", 3, \"select\", \"activate\", \"deactivate\", \"type\", \"xScale\", \"yScale\", \"colors\", \"activeEntries\", \"data\", \"scaleType\", \"visibleValue\", \"tooltipDisabled\", \"tooltipTemplate\"], [\"ngx-charts-timeline\", \"\", 3, \"onDomainChange\", \"results\", \"view\", \"height\", \"scheme\", \"customColors\", \"legend\", \"scaleType\"], [\"ngx-charts-area-series\", \"\", 3, \"xScale\", \"yScale\", \"colors\", \"data\", \"scaleType\", \"gradient\", \"stacked\", \"curve\", \"animations\"]],\n  template: function AreaChartStackedComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n      i0.ɵɵlistener(\"legendLabelClick\", function AreaChartStackedComponent_Template_ngx_charts_chart_legendLabelClick_0_listener($event) {\n        return ctx.onClick($event);\n      })(\"legendLabelActivate\", function AreaChartStackedComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener($event) {\n        return ctx.onActivate($event);\n      })(\"legendLabelDeactivate\", function AreaChartStackedComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener($event) {\n        return ctx.onDeactivate($event);\n      });\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"defs\")(2, \"clipPath\");\n      i0.ɵɵelement(3, \"rect\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(4, \"g\", 1);\n      i0.ɵɵtemplate(5, AreaChartStackedComponent__svg_g_5_Template, 1, 11, \"g\", 2)(6, AreaChartStackedComponent__svg_g_6_Template, 1, 10, \"g\", 3);\n      i0.ɵɵelementStart(7, \"g\");\n      i0.ɵɵtemplate(8, AreaChartStackedComponent__svg_g_8_Template, 2, 10, \"g\", 4)(9, AreaChartStackedComponent__svg_g_9_Template, 3, 10, \"g\", 5);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(10, AreaChartStackedComponent__svg_g_10_Template, 2, 13, \"g\", 6);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(17, _c24, ctx.width, ctx.height))(\"showLegend\", ctx.legend)(\"legendOptions\", ctx.legendOptions)(\"activeEntries\", ctx.activeEntries)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(2);\n      i0.ɵɵattribute(\"id\", ctx.clipPathId);\n      i0.ɵɵadvance();\n      i0.ɵɵattribute(\"width\", ctx.dims.width + 10)(\"height\", ctx.dims.height + 10)(\"transform\", \"translate(-5, -5)\");\n      i0.ɵɵadvance();\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngIf\", ctx.xAxis);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngIf\", ctx.yAxis);\n      i0.ɵɵadvance();\n      i0.ɵɵattribute(\"clip-path\", ctx.clipPath);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngForOf\", ctx.results)(\"ngForTrackBy\", ctx.trackBy);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngIf\", !ctx.tooltipDisabled);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngIf\", ctx.timeline && ctx.scaleType != \"ordinal\");\n    }\n  },\n  dependencies: [ChartComponent, XAxisComponent, YAxisComponent, AreaSeriesComponent, TooltipArea, CircleSeriesComponent, Timeline, i2.NgIf, i2.NgForOf],\n  styles: [_c25],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AreaChartStackedComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-area-chart-stacked',\n      template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:defs>\n        <svg:clipPath [attr.id]=\"clipPathId\">\n          <svg:rect\n            [attr.width]=\"dims.width + 10\"\n            [attr.height]=\"dims.height + 10\"\n            [attr.transform]=\"'translate(-5, -5)'\"\n          />\n        </svg:clipPath>\n      </svg:defs>\n      <svg:g [attr.transform]=\"transform\" class=\"area-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g [attr.clip-path]=\"clipPath\">\n          <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n            <svg:g\n              ngx-charts-area-series\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [scaleType]=\"scaleType\"\n              [gradient]=\"gradient\"\n              [activeEntries]=\"activeEntries\"\n              [stacked]=\"true\"\n              [curve]=\"curve\"\n              [animations]=\"animations\"\n            />\n          </svg:g>\n\n          <svg:g *ngIf=\"!tooltipDisabled\" (mouseleave)=\"hideCircles()\">\n            <svg:g\n              ngx-charts-tooltip-area\n              [dims]=\"dims\"\n              [xSet]=\"xSet\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [results]=\"results\"\n              [colors]=\"colors\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"seriesTooltipTemplate\"\n              (hover)=\"updateHoveredVertical($event)\"\n            />\n\n            <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n              <svg:g\n                ngx-charts-circle-series\n                [type]=\"seriesType.Stacked\"\n                [xScale]=\"xScale\"\n                [yScale]=\"yScale\"\n                [colors]=\"colors\"\n                [activeEntries]=\"activeEntries\"\n                [data]=\"series\"\n                [scaleType]=\"scaleType\"\n                [visibleValue]=\"hoveredVertical\"\n                [tooltipDisabled]=\"tooltipDisabled\"\n                [tooltipTemplate]=\"tooltipTemplate\"\n                (select)=\"onClick($event, series)\"\n                (activate)=\"onActivate($event)\"\n                (deactivate)=\"onDeactivate($event)\"\n              />\n            </svg:g>\n          </svg:g>\n        </svg:g>\n      </svg:g>\n      <svg:g\n        ngx-charts-timeline\n        *ngIf=\"timeline && scaleType != 'ordinal'\"\n        [attr.transform]=\"timelineTransform\"\n        [results]=\"results\"\n        [view]=\"[timelineWidth, height]\"\n        [height]=\"timelineHeight\"\n        [scheme]=\"scheme\"\n        [customColors]=\"customColors\"\n        [legend]=\"legend\"\n        [scaleType]=\"scaleType\"\n        (onDomainChange)=\"updateDomain($event)\"\n      >\n        <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n          <svg:g\n            ngx-charts-area-series\n            [xScale]=\"timelineXScale\"\n            [yScale]=\"timelineYScale\"\n            [colors]=\"colors\"\n            [data]=\"series\"\n            [scaleType]=\"scaleType\"\n            [gradient]=\"gradient\"\n            [stacked]=\"true\"\n            [curve]=\"curve\"\n            [animations]=\"animations\"\n          />\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"]\n    }]\n  }], null, {\n    legend: [{\n      type: Input\n    }],\n    legendTitle: [{\n      type: Input\n    }],\n    legendPosition: [{\n      type: Input\n    }],\n    xAxis: [{\n      type: Input\n    }],\n    yAxis: [{\n      type: Input\n    }],\n    showXAxisLabel: [{\n      type: Input\n    }],\n    showYAxisLabel: [{\n      type: Input\n    }],\n    xAxisLabel: [{\n      type: Input\n    }],\n    yAxisLabel: [{\n      type: Input\n    }],\n    timeline: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    showGridLines: [{\n      type: Input\n    }],\n    curve: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    schemeType: [{\n      type: Input\n    }],\n    trimXAxisTicks: [{\n      type: Input\n    }],\n    trimYAxisTicks: [{\n      type: Input\n    }],\n    rotateXAxisTicks: [{\n      type: Input\n    }],\n    maxXAxisTickLength: [{\n      type: Input\n    }],\n    maxYAxisTickLength: [{\n      type: Input\n    }],\n    xAxisTickFormatting: [{\n      type: Input\n    }],\n    yAxisTickFormatting: [{\n      type: Input\n    }],\n    xAxisTicks: [{\n      type: Input\n    }],\n    yAxisTicks: [{\n      type: Input\n    }],\n    roundDomains: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    xScaleMin: [{\n      type: Input\n    }],\n    xScaleMax: [{\n      type: Input\n    }],\n    yScaleMin: [{\n      type: Input\n    }],\n    yScaleMax: [{\n      type: Input\n    }],\n    wrapTicks: [{\n      type: Input\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    tooltipTemplate: [{\n      type: ContentChild,\n      args: ['tooltipTemplate']\n    }],\n    seriesTooltipTemplate: [{\n      type: ContentChild,\n      args: ['seriesTooltipTemplate']\n    }],\n    hideCircles: [{\n      type: HostListener,\n      args: ['mouseleave']\n    }]\n  });\n})();\nclass AreaChartModule {}\nAreaChartModule.ɵfac = function AreaChartModule_Factory(t) {\n  return new (t || AreaChartModule)();\n};\nAreaChartModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: AreaChartModule\n});\nAreaChartModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[ChartCommonModule]]\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AreaChartModule, [{\n    type: NgModule,\n    args: [{\n      imports: [ChartCommonModule],\n      declarations: [AreaChartComponent, AreaChartNormalizedComponent, AreaChartStackedComponent, AreaSeriesComponent],\n      exports: [AreaChartComponent, AreaChartNormalizedComponent, AreaChartStackedComponent, AreaSeriesComponent]\n    }]\n  }], null, null);\n})();\nclass BarComponent {\n  constructor(element) {\n    this.roundEdges = true;\n    this.gradient = false;\n    this.offset = 0;\n    this.isActive = false;\n    this.animations = true;\n    this.noBarWhenZero = true;\n    this.select = new EventEmitter();\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.hasGradient = false;\n    this.hideBar = false;\n    this.element = element.nativeElement;\n  }\n  ngOnChanges(changes) {\n    if (changes.roundEdges) {\n      this.loadAnimation();\n    }\n    this.update();\n  }\n  update() {\n    this.gradientId = 'grad' + id().toString();\n    this.gradientFill = `url(#${this.gradientId})`;\n    if (this.gradient || this.stops) {\n      this.gradientStops = this.getGradient();\n      this.hasGradient = true;\n    } else {\n      this.hasGradient = false;\n    }\n    this.updatePathEl();\n    this.checkToHideBar();\n  }\n  loadAnimation() {\n    this.path = this.getStartingPath();\n    setTimeout(this.update.bind(this), 100);\n  }\n  updatePathEl() {\n    const node = select(this.element).select('.bar');\n    const path = this.getPath();\n    if (this.animations) {\n      node.transition().duration(500).attr('d', path);\n    } else {\n      node.attr('d', path);\n    }\n  }\n  getGradient() {\n    if (this.stops) {\n      return this.stops;\n    }\n    return [{\n      offset: 0,\n      color: this.fill,\n      opacity: this.getStartOpacity()\n    }, {\n      offset: 100,\n      color: this.fill,\n      opacity: 1\n    }];\n  }\n  getStartingPath() {\n    if (!this.animations) {\n      return this.getPath();\n    }\n    let radius = this.getRadius();\n    let path;\n    if (this.roundEdges) {\n      if (this.orientation === BarOrientation.Vertical) {\n        radius = Math.min(this.height, radius);\n        path = roundedRect(this.x, this.y + this.height, this.width, 1, 0, this.edges);\n      } else if (this.orientation === BarOrientation.Horizontal) {\n        radius = Math.min(this.width, radius);\n        path = roundedRect(this.x, this.y, 1, this.height, 0, this.edges);\n      }\n    } else {\n      if (this.orientation === BarOrientation.Vertical) {\n        path = roundedRect(this.x, this.y + this.height, this.width, 1, 0, this.edges);\n      } else if (this.orientation === BarOrientation.Horizontal) {\n        path = roundedRect(this.x, this.y, 1, this.height, 0, this.edges);\n      }\n    }\n    return path;\n  }\n  getPath() {\n    let radius = this.getRadius();\n    let path;\n    if (this.roundEdges) {\n      if (this.orientation === BarOrientation.Vertical) {\n        radius = Math.min(this.height, radius);\n        path = roundedRect(this.x, this.y, this.width, this.height, radius, this.edges);\n      } else if (this.orientation === BarOrientation.Horizontal) {\n        radius = Math.min(this.width, radius);\n        path = roundedRect(this.x, this.y, this.width, this.height, radius, this.edges);\n      }\n    } else {\n      path = roundedRect(this.x, this.y, this.width, this.height, radius, this.edges);\n    }\n    return path;\n  }\n  getRadius() {\n    let radius = 0;\n    if (this.roundEdges && this.height > 5 && this.width > 5) {\n      radius = Math.floor(Math.min(5, this.height / 2, this.width / 2));\n    }\n    return radius;\n  }\n  getStartOpacity() {\n    if (this.roundEdges) {\n      return 0.2;\n    } else {\n      return 0.5;\n    }\n  }\n  get edges() {\n    let edges = [false, false, false, false];\n    if (this.roundEdges) {\n      if (this.orientation === BarOrientation.Vertical) {\n        if (this.data.value > 0) {\n          edges = [true, true, false, false];\n        } else {\n          edges = [false, false, true, true];\n        }\n      } else if (this.orientation === BarOrientation.Horizontal) {\n        if (this.data.value > 0) {\n          edges = [false, true, false, true];\n        } else {\n          edges = [true, false, true, false];\n        }\n      }\n    }\n    return edges;\n  }\n  onMouseEnter() {\n    this.activate.emit(this.data);\n  }\n  onMouseLeave() {\n    this.deactivate.emit(this.data);\n  }\n  checkToHideBar() {\n    this.hideBar = this.noBarWhenZero && (this.orientation === BarOrientation.Vertical && this.height === 0 || this.orientation === BarOrientation.Horizontal && this.width === 0);\n  }\n}\nBarComponent.ɵfac = function BarComponent_Factory(t) {\n  return new (t || BarComponent)(i0.ɵɵdirectiveInject(i0.ElementRef));\n};\nBarComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: BarComponent,\n  selectors: [[\"g\", \"ngx-charts-bar\", \"\"]],\n  hostBindings: function BarComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"mouseenter\", function BarComponent_mouseenter_HostBindingHandler() {\n        return ctx.onMouseEnter();\n      })(\"mouseleave\", function BarComponent_mouseleave_HostBindingHandler() {\n        return ctx.onMouseLeave();\n      });\n    }\n  },\n  inputs: {\n    fill: \"fill\",\n    data: \"data\",\n    width: \"width\",\n    height: \"height\",\n    x: \"x\",\n    y: \"y\",\n    orientation: \"orientation\",\n    roundEdges: \"roundEdges\",\n    gradient: \"gradient\",\n    offset: \"offset\",\n    isActive: \"isActive\",\n    stops: \"stops\",\n    animations: \"animations\",\n    ariaLabel: \"ariaLabel\",\n    noBarWhenZero: \"noBarWhenZero\"\n  },\n  outputs: {\n    select: \"select\",\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c26,\n  decls: 2,\n  vars: 8,\n  consts: [[4, \"ngIf\"], [\"stroke\", \"none\", \"role\", \"img\", \"tabIndex\", \"-1\", 1, \"bar\", 3, \"click\"], [\"ngx-charts-svg-linear-gradient\", \"\", 3, \"orientation\", \"name\", \"stops\"]],\n  template: function BarComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, BarComponent__svg_defs_0_Template, 2, 3, \"defs\", 0);\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"path\", 1);\n      i0.ɵɵlistener(\"click\", function BarComponent_Template_path_click_1_listener() {\n        return ctx.select.emit(ctx.data);\n      });\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.hasGradient);\n      i0.ɵɵadvance();\n      i0.ɵɵclassProp(\"active\", ctx.isActive)(\"hidden\", ctx.hideBar);\n      i0.ɵɵattribute(\"d\", ctx.path)(\"aria-label\", ctx.ariaLabel)(\"fill\", ctx.hasGradient ? ctx.gradientFill : ctx.fill);\n    }\n  },\n  dependencies: [SvgLinearGradientComponent, i2.NgIf],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BarComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-bar]',\n      template: `\n    <svg:defs *ngIf=\"hasGradient\">\n      <svg:g ngx-charts-svg-linear-gradient [orientation]=\"orientation\" [name]=\"gradientId\" [stops]=\"gradientStops\" />\n    </svg:defs>\n    <svg:path\n      class=\"bar\"\n      stroke=\"none\"\n      role=\"img\"\n      tabIndex=\"-1\"\n      [class.active]=\"isActive\"\n      [class.hidden]=\"hideBar\"\n      [attr.d]=\"path\"\n      [attr.aria-label]=\"ariaLabel\"\n      [attr.fill]=\"hasGradient ? gradientFill : fill\"\n      (click)=\"select.emit(data)\"\n    />\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }];\n  }, {\n    fill: [{\n      type: Input\n    }],\n    data: [{\n      type: Input\n    }],\n    width: [{\n      type: Input\n    }],\n    height: [{\n      type: Input\n    }],\n    x: [{\n      type: Input\n    }],\n    y: [{\n      type: Input\n    }],\n    orientation: [{\n      type: Input\n    }],\n    roundEdges: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    offset: [{\n      type: Input\n    }],\n    isActive: [{\n      type: Input\n    }],\n    stops: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }],\n    ariaLabel: [{\n      type: Input\n    }],\n    noBarWhenZero: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    onMouseEnter: [{\n      type: HostListener,\n      args: ['mouseenter']\n    }],\n    onMouseLeave: [{\n      type: HostListener,\n      args: ['mouseleave']\n    }]\n  });\n})();\nvar BarChartType;\n(function (BarChartType) {\n  BarChartType[\"Standard\"] = \"standard\";\n  BarChartType[\"Normalized\"] = \"normalized\";\n  BarChartType[\"Stacked\"] = \"stacked\";\n})(BarChartType || (BarChartType = {}));\nvar D0Types;\n(function (D0Types) {\n  D0Types[\"positive\"] = \"positive\";\n  D0Types[\"negative\"] = \"negative\";\n})(D0Types || (D0Types = {}));\nclass BarLabelComponent {\n  constructor(element) {\n    this.dimensionsChanged = new EventEmitter();\n    this.horizontalPadding = 2;\n    this.verticalPadding = 5;\n    this.element = element.nativeElement;\n  }\n  ngOnChanges(changes) {\n    this.update();\n  }\n  getSize() {\n    const h = this.element.getBoundingClientRect().height;\n    const w = this.element.getBoundingClientRect().width;\n    return {\n      height: h,\n      width: w,\n      negative: this.value < 0\n    };\n  }\n  ngAfterViewInit() {\n    this.dimensionsChanged.emit(this.getSize());\n  }\n  update() {\n    if (this.valueFormatting) {\n      this.formatedValue = this.valueFormatting(this.value);\n    } else {\n      this.formatedValue = formatLabel(this.value);\n    }\n    if (this.orientation === 'horizontal') {\n      this.x = this.barX + this.barWidth;\n      // if the value is negative then it's on the left of the x0.\n      // we need to put the data label in front of the bar\n      if (this.value < 0) {\n        this.x = this.x - this.horizontalPadding;\n        this.textAnchor = 'end';\n      } else {\n        this.x = this.x + this.horizontalPadding;\n        this.textAnchor = 'start';\n      }\n      this.y = this.barY + this.barHeight / 2;\n    } else {\n      // orientation must be \"vertical\"\n      this.x = this.barX + this.barWidth / 2;\n      this.y = this.barY + this.barHeight;\n      if (this.value < 0) {\n        this.y = this.y + this.verticalPadding;\n        this.textAnchor = 'end';\n      } else {\n        this.y = this.y - this.verticalPadding;\n        this.textAnchor = 'start';\n      }\n      this.transform = `rotate(-45, ${this.x} , ${this.y})`;\n    }\n  }\n}\nBarLabelComponent.ɵfac = function BarLabelComponent_Factory(t) {\n  return new (t || BarLabelComponent)(i0.ɵɵdirectiveInject(i0.ElementRef));\n};\nBarLabelComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: BarLabelComponent,\n  selectors: [[\"g\", \"ngx-charts-bar-label\", \"\"]],\n  inputs: {\n    value: \"value\",\n    valueFormatting: \"valueFormatting\",\n    barX: \"barX\",\n    barY: \"barY\",\n    barWidth: \"barWidth\",\n    barHeight: \"barHeight\",\n    orientation: \"orientation\"\n  },\n  outputs: {\n    dimensionsChanged: \"dimensionsChanged\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c27,\n  decls: 2,\n  vars: 5,\n  consts: [[\"alignment-baseline\", \"middle\", 1, \"textDataLabel\"]],\n  template: function BarLabelComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(0, \"text\", 0);\n      i0.ɵɵtext(1);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵattribute(\"text-anchor\", ctx.textAnchor)(\"transform\", ctx.transform)(\"x\", ctx.x)(\"y\", ctx.y);\n      i0.ɵɵadvance();\n      i0.ɵɵtextInterpolate1(\" \", ctx.formatedValue, \" \");\n    }\n  },\n  styles: [\".textDataLabel[_ngcontent-%COMP%]{font-size:11px}\"],\n  changeDetection: 0\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BarLabelComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-bar-label]',\n      template: `\n    <svg:text\n      class=\"textDataLabel\"\n      alignment-baseline=\"middle\"\n      [attr.text-anchor]=\"textAnchor\"\n      [attr.transform]=\"transform\"\n      [attr.x]=\"x\"\n      [attr.y]=\"y\"\n    >\n      {{ formatedValue }}\n    </svg:text>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\".textDataLabel{font-size:11px}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }];\n  }, {\n    value: [{\n      type: Input\n    }],\n    valueFormatting: [{\n      type: Input\n    }],\n    barX: [{\n      type: Input\n    }],\n    barY: [{\n      type: Input\n    }],\n    barWidth: [{\n      type: Input\n    }],\n    barHeight: [{\n      type: Input\n    }],\n    orientation: [{\n      type: Input\n    }],\n    dimensionsChanged: [{\n      type: Output\n    }]\n  });\n})();\nclass SeriesHorizontal {\n  constructor() {\n    this.type = BarChartType.Standard;\n    this.tooltipDisabled = false;\n    this.animations = true;\n    this.showDataLabel = false;\n    this.noBarWhenZero = true;\n    this.select = new EventEmitter();\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.dataLabelWidthChanged = new EventEmitter();\n    this.barsForDataLabels = [];\n    this.barOrientation = BarOrientation;\n  }\n  ngOnChanges(changes) {\n    this.update();\n  }\n  update() {\n    this.updateTooltipSettings();\n    const d0 = {\n      [D0Types.positive]: 0,\n      [D0Types.negative]: 0\n    };\n    let d0Type;\n    d0Type = D0Types.positive;\n    let total;\n    if (this.type === BarChartType.Normalized) {\n      total = this.series.map(d => d.value).reduce((sum, d) => sum + d, 0);\n    }\n    const xScaleMin = Math.max(this.xScale.domain()[0], 0);\n    this.bars = this.series.map(d => {\n      let value = d.value;\n      const label = this.getLabel(d);\n      const formattedLabel = formatLabel(label);\n      const roundEdges = this.roundEdges;\n      d0Type = value > 0 ? D0Types.positive : D0Types.negative;\n      const bar = {\n        value,\n        label,\n        roundEdges,\n        data: d,\n        formattedLabel\n      };\n      bar.height = this.yScale.bandwidth();\n      if (this.type === BarChartType.Standard) {\n        bar.width = Math.abs(this.xScale(value) - this.xScale(xScaleMin));\n        if (value < 0) {\n          bar.x = this.xScale(value);\n        } else {\n          bar.x = this.xScale(xScaleMin);\n        }\n        bar.y = this.yScale(label);\n      } else if (this.type === BarChartType.Stacked) {\n        const offset0 = d0[d0Type];\n        const offset1 = offset0 + value;\n        d0[d0Type] += value;\n        bar.width = this.xScale(offset1) - this.xScale(offset0);\n        bar.x = this.xScale(offset0);\n        bar.y = 0;\n        bar.offset0 = offset0;\n        bar.offset1 = offset1;\n      } else if (this.type === BarChartType.Normalized) {\n        let offset0 = d0[d0Type];\n        let offset1 = offset0 + value;\n        d0[d0Type] += value;\n        if (total > 0) {\n          offset0 = offset0 * 100 / total;\n          offset1 = offset1 * 100 / total;\n        } else {\n          offset0 = 0;\n          offset1 = 0;\n        }\n        bar.width = this.xScale(offset1) - this.xScale(offset0);\n        bar.x = this.xScale(offset0);\n        bar.y = 0;\n        bar.offset0 = offset0;\n        bar.offset1 = offset1;\n        value = (offset1 - offset0).toFixed(2) + '%';\n      }\n      if (this.colors.scaleType === ScaleType.Ordinal) {\n        bar.color = this.colors.getColor(label);\n      } else {\n        if (this.type === BarChartType.Standard) {\n          bar.color = this.colors.getColor(value);\n          bar.gradientStops = this.colors.getLinearGradientStops(value);\n        } else {\n          bar.color = this.colors.getColor(bar.offset1);\n          bar.gradientStops = this.colors.getLinearGradientStops(bar.offset1, bar.offset0);\n        }\n      }\n      let tooltipLabel = formattedLabel;\n      bar.ariaLabel = formattedLabel + ' ' + value.toLocaleString();\n      if (this.seriesName !== null && this.seriesName !== undefined) {\n        tooltipLabel = `${this.seriesName} • ${formattedLabel}`;\n        bar.data.series = this.seriesName;\n        bar.ariaLabel = this.seriesName + ' ' + bar.ariaLabel;\n      }\n      bar.tooltipText = this.tooltipDisabled ? undefined : `\n        <span class=\"tooltip-label\">${escapeLabel(tooltipLabel)}</span>\n        <span class=\"tooltip-val\">${this.dataLabelFormatting ? this.dataLabelFormatting(value) : value.toLocaleString()}</span>\n      `;\n      return bar;\n    });\n    this.updateDataLabels();\n  }\n  updateDataLabels() {\n    if (this.type === BarChartType.Stacked) {\n      this.barsForDataLabels = [];\n      const section = {};\n      section.series = this.seriesName;\n      const totalPositive = this.series.map(d => d.value).reduce((sum, d) => d > 0 ? sum + d : sum, 0);\n      const totalNegative = this.series.map(d => d.value).reduce((sum, d) => d < 0 ? sum + d : sum, 0);\n      section.total = totalPositive + totalNegative;\n      section.x = 0;\n      section.y = 0;\n      // if total is positive then we show it on the right, otherwise on the left\n      if (section.total > 0) {\n        section.width = this.xScale(totalPositive);\n      } else {\n        section.width = this.xScale(totalNegative);\n      }\n      section.height = this.yScale.bandwidth();\n      this.barsForDataLabels.push(section);\n    } else {\n      this.barsForDataLabels = this.series.map(d => {\n        const section = {};\n        section.series = this.seriesName ?? d.label;\n        section.total = d.value;\n        section.x = this.xScale(0);\n        section.y = this.yScale(d.label);\n        section.width = this.xScale(section.total) - this.xScale(0);\n        section.height = this.yScale.bandwidth();\n        return section;\n      });\n    }\n  }\n  updateTooltipSettings() {\n    this.tooltipPlacement = this.tooltipDisabled ? undefined : PlacementTypes.Top;\n    this.tooltipType = this.tooltipDisabled ? undefined : StyleTypes.tooltip;\n  }\n  isActive(entry) {\n    if (!this.activeEntries) return false;\n    const item = this.activeEntries.find(active => {\n      return entry.name === active.name && entry.value === active.value;\n    });\n    return item !== undefined;\n  }\n  getLabel(dataItem) {\n    if (dataItem.label) {\n      return dataItem.label;\n    }\n    return dataItem.name;\n  }\n  trackBy(index, bar) {\n    return bar.label;\n  }\n  trackDataLabelBy(index, barLabel) {\n    return index + '#' + barLabel.series + '#' + barLabel.total;\n  }\n  click(data) {\n    this.select.emit(data);\n  }\n}\nSeriesHorizontal.ɵfac = function SeriesHorizontal_Factory(t) {\n  return new (t || SeriesHorizontal)();\n};\nSeriesHorizontal.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: SeriesHorizontal,\n  selectors: [[\"g\", \"ngx-charts-series-horizontal\", \"\"]],\n  inputs: {\n    dims: \"dims\",\n    type: \"type\",\n    series: \"series\",\n    xScale: \"xScale\",\n    yScale: \"yScale\",\n    colors: \"colors\",\n    tooltipDisabled: \"tooltipDisabled\",\n    gradient: \"gradient\",\n    activeEntries: \"activeEntries\",\n    seriesName: \"seriesName\",\n    tooltipTemplate: \"tooltipTemplate\",\n    roundEdges: \"roundEdges\",\n    animations: \"animations\",\n    showDataLabel: \"showDataLabel\",\n    dataLabelFormatting: \"dataLabelFormatting\",\n    noBarWhenZero: \"noBarWhenZero\"\n  },\n  outputs: {\n    select: \"select\",\n    activate: \"activate\",\n    deactivate: \"deactivate\",\n    dataLabelWidthChanged: \"dataLabelWidthChanged\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c28,\n  decls: 2,\n  vars: 3,\n  consts: [[\"ngx-charts-bar\", \"\", \"ngx-tooltip\", \"\", 3, \"width\", \"height\", \"x\", \"y\", \"fill\", \"stops\", \"data\", \"orientation\", \"roundEdges\", \"gradient\", \"isActive\", \"ariaLabel\", \"animations\", \"tooltipDisabled\", \"tooltipPlacement\", \"tooltipType\", \"tooltipTitle\", \"tooltipTemplate\", \"tooltipContext\", \"noBarWhenZero\", \"select\", \"activate\", \"deactivate\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [4, \"ngIf\"], [\"ngx-charts-bar\", \"\", \"ngx-tooltip\", \"\", 3, \"select\", \"activate\", \"deactivate\", \"width\", \"height\", \"x\", \"y\", \"fill\", \"stops\", \"data\", \"orientation\", \"roundEdges\", \"gradient\", \"isActive\", \"ariaLabel\", \"animations\", \"tooltipDisabled\", \"tooltipPlacement\", \"tooltipType\", \"tooltipTitle\", \"tooltipTemplate\", \"tooltipContext\", \"noBarWhenZero\"], [\"ngx-charts-bar-label\", \"\", 3, \"barX\", \"barY\", \"barWidth\", \"barHeight\", \"value\", \"valueFormatting\", \"orientation\", \"dimensionsChanged\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-bar-label\", \"\", 3, \"dimensionsChanged\", \"barX\", \"barY\", \"barWidth\", \"barHeight\", \"value\", \"valueFormatting\", \"orientation\"]],\n  template: function SeriesHorizontal_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, SeriesHorizontal__svg_g_0_Template, 1, 21, \"g\", 0)(1, SeriesHorizontal__svg_g_1_Template, 2, 2, \"g\", 1);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngForOf\", ctx.bars)(\"ngForTrackBy\", ctx.trackBy);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngIf\", ctx.showDataLabel);\n    }\n  },\n  dependencies: [BarComponent, BarLabelComponent, i2.NgForOf, TooltipDirective, i2.NgIf],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('animationState', [transition(':leave', [style({\n      opacity: 1\n    }), animate(500, style({\n      opacity: 0\n    }))])])]\n  },\n  changeDetection: 0\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SeriesHorizontal, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-series-horizontal]',\n      template: `\n    <svg:g\n      ngx-charts-bar\n      *ngFor=\"let bar of bars; trackBy: trackBy\"\n      [@animationState]=\"'active'\"\n      [width]=\"bar.width\"\n      [height]=\"bar.height\"\n      [x]=\"bar.x\"\n      [y]=\"bar.y\"\n      [fill]=\"bar.color\"\n      [stops]=\"bar.gradientStops\"\n      [data]=\"bar.data\"\n      [orientation]=\"barOrientation.Horizontal\"\n      [roundEdges]=\"bar.roundEdges\"\n      (select)=\"click($event)\"\n      [gradient]=\"gradient\"\n      [isActive]=\"isActive(bar.data)\"\n      [ariaLabel]=\"bar.ariaLabel\"\n      [animations]=\"animations\"\n      (activate)=\"activate.emit($event)\"\n      (deactivate)=\"deactivate.emit($event)\"\n      ngx-tooltip\n      [tooltipDisabled]=\"tooltipDisabled\"\n      [tooltipPlacement]=\"tooltipPlacement\"\n      [tooltipType]=\"tooltipType\"\n      [tooltipTitle]=\"tooltipTemplate ? undefined : bar.tooltipText\"\n      [tooltipTemplate]=\"tooltipTemplate\"\n      [tooltipContext]=\"bar.data\"\n      [noBarWhenZero]=\"noBarWhenZero\"\n    ></svg:g>\n    <svg:g *ngIf=\"showDataLabel\">\n      <svg:g\n        ngx-charts-bar-label\n        *ngFor=\"let b of barsForDataLabels; let i = index; trackBy: trackDataLabelBy\"\n        [barX]=\"b.x\"\n        [barY]=\"b.y\"\n        [barWidth]=\"b.width\"\n        [barHeight]=\"b.height\"\n        [value]=\"b.total\"\n        [valueFormatting]=\"dataLabelFormatting\"\n        [orientation]=\"barOrientation.Horizontal\"\n        (dimensionsChanged)=\"dataLabelWidthChanged.emit({ size: $event, index: i })\"\n      />\n    </svg:g>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      animations: [trigger('animationState', [transition(':leave', [style({\n        opacity: 1\n      }), animate(500, style({\n        opacity: 0\n      }))])])]\n    }]\n  }], null, {\n    dims: [{\n      type: Input\n    }],\n    type: [{\n      type: Input\n    }],\n    series: [{\n      type: Input\n    }],\n    xScale: [{\n      type: Input\n    }],\n    yScale: [{\n      type: Input\n    }],\n    colors: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    seriesName: [{\n      type: Input\n    }],\n    tooltipTemplate: [{\n      type: Input\n    }],\n    roundEdges: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }],\n    showDataLabel: [{\n      type: Input\n    }],\n    dataLabelFormatting: [{\n      type: Input\n    }],\n    noBarWhenZero: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    dataLabelWidthChanged: [{\n      type: Output\n    }]\n  });\n})();\nclass BarHorizontalComponent extends BaseChartComponent {\n  constructor() {\n    super(...arguments);\n    this.legend = false;\n    this.legendTitle = 'Legend';\n    this.legendPosition = LegendPosition.Right;\n    this.tooltipDisabled = false;\n    this.showGridLines = true;\n    this.activeEntries = [];\n    this.trimXAxisTicks = true;\n    this.trimYAxisTicks = true;\n    this.rotateXAxisTicks = true;\n    this.maxXAxisTickLength = 16;\n    this.maxYAxisTickLength = 16;\n    this.barPadding = 8;\n    this.roundDomains = false;\n    this.roundEdges = true;\n    this.showDataLabel = false;\n    this.noBarWhenZero = true;\n    this.wrapTicks = false;\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.margin = [10, 20, 10, 20];\n    this.xAxisHeight = 0;\n    this.yAxisWidth = 0;\n    this.dataLabelMaxWidth = {\n      negative: 0,\n      positive: 0\n    };\n  }\n  update() {\n    super.update();\n    if (!this.showDataLabel) {\n      this.dataLabelMaxWidth = {\n        negative: 0,\n        positive: 0\n      };\n    }\n    this.margin = [10, 20 + this.dataLabelMaxWidth.positive, 10, 20 + this.dataLabelMaxWidth.negative];\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.schemeType,\n      legendPosition: this.legendPosition\n    });\n    this.formatDates();\n    this.xScale = this.getXScale();\n    this.yScale = this.getYScale();\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n  }\n  getXScale() {\n    this.xDomain = this.getXDomain();\n    const scale = scaleLinear().range([0, this.dims.width]).domain(this.xDomain);\n    return this.roundDomains ? scale.nice() : scale;\n  }\n  getYScale() {\n    this.yDomain = this.getYDomain();\n    const spacing = this.yDomain.length / (this.dims.height / this.barPadding + 1);\n    return scaleBand().rangeRound([0, this.dims.height]).paddingInner(spacing).domain(this.yDomain);\n  }\n  getXDomain() {\n    const values = this.results.map(d => d.value);\n    const min = this.xScaleMin ? Math.min(this.xScaleMin, ...values) : Math.min(0, ...values);\n    const max = this.xScaleMax ? Math.max(this.xScaleMax, ...values) : Math.max(0, ...values);\n    return [min, max];\n  }\n  getYDomain() {\n    return this.results.map(d => d.label);\n  }\n  onClick(data) {\n    this.select.emit(data);\n  }\n  setColors() {\n    let domain;\n    if (this.schemeType === ScaleType.Ordinal) {\n      domain = this.yDomain;\n    } else {\n      domain = this.xDomain;\n    }\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n  }\n  getLegendOptions() {\n    const opts = {\n      scaleType: this.schemeType,\n      colors: undefined,\n      domain: [],\n      title: undefined,\n      position: this.legendPosition\n    };\n    if (opts.scaleType === 'ordinal') {\n      opts.domain = this.yDomain;\n      opts.colors = this.colors;\n      opts.title = this.legendTitle;\n    } else {\n      opts.domain = this.xDomain;\n      opts.colors = this.colors.scale;\n    }\n    return opts;\n  }\n  updateYAxisWidth({\n    width\n  }) {\n    this.yAxisWidth = width;\n    this.update();\n  }\n  updateXAxisHeight({\n    height\n  }) {\n    this.xAxisHeight = height;\n    this.update();\n  }\n  onDataLabelMaxWidthChanged(event) {\n    if (event.size.negative) {\n      this.dataLabelMaxWidth.negative = Math.max(this.dataLabelMaxWidth.negative, event.size.width);\n    } else {\n      this.dataLabelMaxWidth.positive = Math.max(this.dataLabelMaxWidth.positive, event.size.width);\n    }\n    if (event.index === this.results.length - 1) {\n      setTimeout(() => this.update());\n    }\n  }\n  onActivate(item, fromLegend = false) {\n    item = this.results.find(d => {\n      if (fromLegend) {\n        return d.label === item.name;\n      } else {\n        return d.name === item.name;\n      }\n    });\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value && d.series === item.series;\n    });\n    if (idx > -1) {\n      return;\n    }\n    this.activeEntries = [item, ...this.activeEntries];\n    this.activate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n  onDeactivate(item, fromLegend = false) {\n    item = this.results.find(d => {\n      if (fromLegend) {\n        return d.label === item.name;\n      } else {\n        return d.name === item.name;\n      }\n    });\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value && d.series === item.series;\n    });\n    this.activeEntries.splice(idx, 1);\n    this.activeEntries = [...this.activeEntries];\n    this.deactivate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n}\nBarHorizontalComponent.ɵfac = /* @__PURE__ */(() => {\n  let ɵBarHorizontalComponent_BaseFactory;\n  return function BarHorizontalComponent_Factory(t) {\n    return (ɵBarHorizontalComponent_BaseFactory || (ɵBarHorizontalComponent_BaseFactory = i0.ɵɵgetInheritedFactory(BarHorizontalComponent)))(t || BarHorizontalComponent);\n  };\n})();\nBarHorizontalComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: BarHorizontalComponent,\n  selectors: [[\"ngx-charts-bar-horizontal\"]],\n  contentQueries: function BarHorizontalComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n    }\n  },\n  inputs: {\n    legend: \"legend\",\n    legendTitle: \"legendTitle\",\n    legendPosition: \"legendPosition\",\n    xAxis: \"xAxis\",\n    yAxis: \"yAxis\",\n    showXAxisLabel: \"showXAxisLabel\",\n    showYAxisLabel: \"showYAxisLabel\",\n    xAxisLabel: \"xAxisLabel\",\n    yAxisLabel: \"yAxisLabel\",\n    tooltipDisabled: \"tooltipDisabled\",\n    gradient: \"gradient\",\n    showGridLines: \"showGridLines\",\n    activeEntries: \"activeEntries\",\n    schemeType: \"schemeType\",\n    trimXAxisTicks: \"trimXAxisTicks\",\n    trimYAxisTicks: \"trimYAxisTicks\",\n    rotateXAxisTicks: \"rotateXAxisTicks\",\n    maxXAxisTickLength: \"maxXAxisTickLength\",\n    maxYAxisTickLength: \"maxYAxisTickLength\",\n    xAxisTickFormatting: \"xAxisTickFormatting\",\n    yAxisTickFormatting: \"yAxisTickFormatting\",\n    xAxisTicks: \"xAxisTicks\",\n    yAxisTicks: \"yAxisTicks\",\n    barPadding: \"barPadding\",\n    roundDomains: \"roundDomains\",\n    roundEdges: \"roundEdges\",\n    xScaleMax: \"xScaleMax\",\n    xScaleMin: \"xScaleMin\",\n    showDataLabel: \"showDataLabel\",\n    dataLabelFormatting: \"dataLabelFormatting\",\n    noBarWhenZero: \"noBarWhenZero\",\n    wrapTicks: \"wrapTicks\"\n  },\n  outputs: {\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 5,\n  vars: 25,\n  consts: [[3, \"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\", \"view\", \"showLegend\", \"legendOptions\", \"activeEntries\", \"animations\"], [1, \"bar-chart\", \"chart\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\", \"dimensionsChanged\", 4, \"ngIf\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"yAxisOffset\", \"wrapTicks\", \"dimensionsChanged\", 4, \"ngIf\"], [\"ngx-charts-series-horizontal\", \"\", 3, \"select\", \"activate\", \"deactivate\", \"dataLabelWidthChanged\", \"xScale\", \"yScale\", \"colors\", \"series\", \"dims\", \"gradient\", \"tooltipDisabled\", \"tooltipTemplate\", \"activeEntries\", \"roundEdges\", \"animations\", \"showDataLabel\", \"dataLabelFormatting\", \"noBarWhenZero\"], [\"ngx-charts-x-axis\", \"\", 3, \"dimensionsChanged\", \"xScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\"], [\"ngx-charts-y-axis\", \"\", 3, \"dimensionsChanged\", \"yScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"yAxisOffset\", \"wrapTicks\"]],\n  template: function BarHorizontalComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n      i0.ɵɵlistener(\"legendLabelClick\", function BarHorizontalComponent_Template_ngx_charts_chart_legendLabelClick_0_listener($event) {\n        return ctx.onClick($event);\n      })(\"legendLabelActivate\", function BarHorizontalComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener($event) {\n        return ctx.onActivate($event, true);\n      })(\"legendLabelDeactivate\", function BarHorizontalComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener($event) {\n        return ctx.onDeactivate($event, true);\n      });\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"g\", 1);\n      i0.ɵɵtemplate(2, BarHorizontalComponent__svg_g_2_Template, 1, 11, \"g\", 2)(3, BarHorizontalComponent__svg_g_3_Template, 1, 10, \"g\", 3);\n      i0.ɵɵelementStart(4, \"g\", 4);\n      i0.ɵɵlistener(\"select\", function BarHorizontalComponent_Template_g_select_4_listener($event) {\n        return ctx.onClick($event);\n      })(\"activate\", function BarHorizontalComponent_Template_g_activate_4_listener($event) {\n        return ctx.onActivate($event);\n      })(\"deactivate\", function BarHorizontalComponent_Template_g_deactivate_4_listener($event) {\n        return ctx.onDeactivate($event);\n      })(\"dataLabelWidthChanged\", function BarHorizontalComponent_Template_g_dataLabelWidthChanged_4_listener($event) {\n        return ctx.onDataLabelMaxWidthChanged($event);\n      });\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(22, _c24, ctx.width, ctx.height))(\"showLegend\", ctx.legend)(\"legendOptions\", ctx.legendOptions)(\"activeEntries\", ctx.activeEntries)(\"animations\", ctx.animations);\n      i0.ɵɵadvance();\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngIf\", ctx.xAxis);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngIf\", ctx.yAxis);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"xScale\", ctx.xScale)(\"yScale\", ctx.yScale)(\"colors\", ctx.colors)(\"series\", ctx.results)(\"dims\", ctx.dims)(\"gradient\", ctx.gradient)(\"tooltipDisabled\", ctx.tooltipDisabled)(\"tooltipTemplate\", ctx.tooltipTemplate)(\"activeEntries\", ctx.activeEntries)(\"roundEdges\", ctx.roundEdges)(\"animations\", ctx.animations)(\"showDataLabel\", ctx.showDataLabel)(\"dataLabelFormatting\", ctx.dataLabelFormatting)(\"noBarWhenZero\", ctx.noBarWhenZero);\n    }\n  },\n  dependencies: [ChartComponent, XAxisComponent, YAxisComponent, SeriesHorizontal, i2.NgIf],\n  styles: [_c25],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BarHorizontalComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-bar-horizontal',\n      template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, true)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [yAxisOffset]=\"dataLabelMaxWidth.negative\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-series-horizontal\n          [xScale]=\"xScale\"\n          [yScale]=\"yScale\"\n          [colors]=\"colors\"\n          [series]=\"results\"\n          [dims]=\"dims\"\n          [gradient]=\"gradient\"\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [activeEntries]=\"activeEntries\"\n          [roundEdges]=\"roundEdges\"\n          [animations]=\"animations\"\n          [showDataLabel]=\"showDataLabel\"\n          [dataLabelFormatting]=\"dataLabelFormatting\"\n          [noBarWhenZero]=\"noBarWhenZero\"\n          (select)=\"onClick($event)\"\n          (activate)=\"onActivate($event)\"\n          (deactivate)=\"onDeactivate($event)\"\n          (dataLabelWidthChanged)=\"onDataLabelMaxWidthChanged($event)\"\n        ></svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"]\n    }]\n  }], null, {\n    legend: [{\n      type: Input\n    }],\n    legendTitle: [{\n      type: Input\n    }],\n    legendPosition: [{\n      type: Input\n    }],\n    xAxis: [{\n      type: Input\n    }],\n    yAxis: [{\n      type: Input\n    }],\n    showXAxisLabel: [{\n      type: Input\n    }],\n    showYAxisLabel: [{\n      type: Input\n    }],\n    xAxisLabel: [{\n      type: Input\n    }],\n    yAxisLabel: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    showGridLines: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    schemeType: [{\n      type: Input\n    }],\n    trimXAxisTicks: [{\n      type: Input\n    }],\n    trimYAxisTicks: [{\n      type: Input\n    }],\n    rotateXAxisTicks: [{\n      type: Input\n    }],\n    maxXAxisTickLength: [{\n      type: Input\n    }],\n    maxYAxisTickLength: [{\n      type: Input\n    }],\n    xAxisTickFormatting: [{\n      type: Input\n    }],\n    yAxisTickFormatting: [{\n      type: Input\n    }],\n    xAxisTicks: [{\n      type: Input\n    }],\n    yAxisTicks: [{\n      type: Input\n    }],\n    barPadding: [{\n      type: Input\n    }],\n    roundDomains: [{\n      type: Input\n    }],\n    roundEdges: [{\n      type: Input\n    }],\n    xScaleMax: [{\n      type: Input\n    }],\n    xScaleMin: [{\n      type: Input\n    }],\n    showDataLabel: [{\n      type: Input\n    }],\n    dataLabelFormatting: [{\n      type: Input\n    }],\n    noBarWhenZero: [{\n      type: Input\n    }],\n    wrapTicks: [{\n      type: Input\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    tooltipTemplate: [{\n      type: ContentChild,\n      args: ['tooltipTemplate']\n    }]\n  });\n})();\nclass BarHorizontal2DComponent extends BaseChartComponent {\n  constructor() {\n    super(...arguments);\n    this.legend = false;\n    this.legendTitle = 'Legend';\n    this.legendPosition = LegendPosition.Right;\n    this.tooltipDisabled = false;\n    this.showGridLines = true;\n    this.activeEntries = [];\n    this.trimXAxisTicks = true;\n    this.trimYAxisTicks = true;\n    this.rotateXAxisTicks = true;\n    this.maxXAxisTickLength = 16;\n    this.maxYAxisTickLength = 16;\n    this.groupPadding = 16;\n    this.barPadding = 8;\n    this.roundDomains = false;\n    this.roundEdges = true;\n    this.showDataLabel = false;\n    this.noBarWhenZero = true;\n    this.wrapTicks = false;\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.margin = [10, 20, 10, 20];\n    this.xAxisHeight = 0;\n    this.yAxisWidth = 0;\n    this.dataLabelMaxWidth = {\n      negative: 0,\n      positive: 0\n    };\n    this.isSSR = false;\n    this.barOrientation = BarOrientation;\n    this.trackBy = (index, item) => {\n      return item.name;\n    };\n  }\n  ngOnInit() {\n    if (isPlatformServer(this.platformId)) {\n      this.isSSR = true;\n    }\n  }\n  update() {\n    super.update();\n    if (!this.showDataLabel) {\n      this.dataLabelMaxWidth = {\n        negative: 0,\n        positive: 0\n      };\n    }\n    this.margin = [10, 20 + this.dataLabelMaxWidth.positive, 10, 20 + this.dataLabelMaxWidth.negative];\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.schemeType,\n      legendPosition: this.legendPosition\n    });\n    this.formatDates();\n    this.groupDomain = this.getGroupDomain();\n    this.innerDomain = this.getInnerDomain();\n    this.valueDomain = this.getValueDomain();\n    this.groupScale = this.getGroupScale();\n    this.innerScale = this.getInnerScale();\n    this.valueScale = this.getValueScale();\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n  }\n  getGroupScale() {\n    const spacing = this.groupDomain.length / (this.dims.height / this.groupPadding + 1);\n    return scaleBand().rangeRound([0, this.dims.height]).paddingInner(spacing).paddingOuter(spacing / 2).domain(this.groupDomain);\n  }\n  getInnerScale() {\n    const height = this.groupScale.bandwidth();\n    const spacing = this.innerDomain.length / (height / this.barPadding + 1);\n    return scaleBand().rangeRound([0, height]).paddingInner(spacing).domain(this.innerDomain);\n  }\n  getValueScale() {\n    const scale = scaleLinear().range([0, this.dims.width]).domain(this.valueDomain);\n    return this.roundDomains ? scale.nice() : scale;\n  }\n  getGroupDomain() {\n    const domain = [];\n    for (const group of this.results) {\n      if (!domain.includes(group.label)) {\n        domain.push(group.label);\n      }\n    }\n    return domain;\n  }\n  getInnerDomain() {\n    const domain = [];\n    for (const group of this.results) {\n      for (const d of group.series) {\n        if (!domain.includes(d.label)) {\n          domain.push(d.label);\n        }\n      }\n    }\n    return domain;\n  }\n  getValueDomain() {\n    const domain = [];\n    for (const group of this.results) {\n      for (const d of group.series) {\n        if (!domain.includes(d.value)) {\n          domain.push(d.value);\n        }\n      }\n    }\n    const min = Math.min(0, ...domain);\n    const max = this.xScaleMax ? Math.max(this.xScaleMax, ...domain) : Math.max(0, ...domain);\n    return [min, max];\n  }\n  groupTransform(group) {\n    return `translate(0, ${this.groupScale(group.label)})`;\n  }\n  onClick(data, group) {\n    if (group) {\n      data.series = group.name;\n    }\n    this.select.emit(data);\n  }\n  setColors() {\n    let domain;\n    if (this.schemeType === ScaleType.Ordinal) {\n      domain = this.innerDomain;\n    } else {\n      domain = this.valueDomain;\n    }\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n  }\n  getLegendOptions() {\n    const opts = {\n      scaleType: this.schemeType,\n      colors: undefined,\n      domain: [],\n      title: undefined,\n      position: this.legendPosition\n    };\n    if (opts.scaleType === ScaleType.Ordinal) {\n      opts.domain = this.innerDomain;\n      opts.colors = this.colors;\n      opts.title = this.legendTitle;\n    } else {\n      opts.domain = this.valueDomain;\n      opts.colors = this.colors.scale;\n    }\n    return opts;\n  }\n  updateYAxisWidth({\n    width\n  }) {\n    this.yAxisWidth = width;\n    this.update();\n  }\n  updateXAxisHeight({\n    height\n  }) {\n    this.xAxisHeight = height;\n    this.update();\n  }\n  onDataLabelMaxWidthChanged(event, groupIndex) {\n    if (event.size.negative) {\n      this.dataLabelMaxWidth.negative = Math.max(this.dataLabelMaxWidth.negative, event.size.width);\n    } else {\n      this.dataLabelMaxWidth.positive = Math.max(this.dataLabelMaxWidth.positive, event.size.width);\n    }\n    if (groupIndex === this.results.length - 1) {\n      setTimeout(() => this.update());\n    }\n  }\n  onActivate(event, group, fromLegend = false) {\n    const item = Object.assign({}, event);\n    if (group) {\n      item.series = group.name;\n    }\n    const items = this.results.map(g => g.series).flat().filter(i => {\n      if (fromLegend) {\n        return i.label === item.name;\n      } else {\n        return i.name === item.name && i.series === item.series;\n      }\n    });\n    this.activeEntries = [...items];\n    this.activate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n  onDeactivate(event, group, fromLegend = false) {\n    const item = Object.assign({}, event);\n    if (group) {\n      item.series = group.name;\n    }\n    this.activeEntries = this.activeEntries.filter(i => {\n      if (fromLegend) {\n        return i.label !== item.name;\n      } else {\n        return !(i.name === item.name && i.series === item.series);\n      }\n    });\n    this.deactivate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n}\nBarHorizontal2DComponent.ɵfac = /* @__PURE__ */(() => {\n  let ɵBarHorizontal2DComponent_BaseFactory;\n  return function BarHorizontal2DComponent_Factory(t) {\n    return (ɵBarHorizontal2DComponent_BaseFactory || (ɵBarHorizontal2DComponent_BaseFactory = i0.ɵɵgetInheritedFactory(BarHorizontal2DComponent)))(t || BarHorizontal2DComponent);\n  };\n})();\nBarHorizontal2DComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: BarHorizontal2DComponent,\n  selectors: [[\"ngx-charts-bar-horizontal-2d\"]],\n  contentQueries: function BarHorizontal2DComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n    }\n  },\n  inputs: {\n    legend: \"legend\",\n    legendTitle: \"legendTitle\",\n    legendPosition: \"legendPosition\",\n    xAxis: \"xAxis\",\n    yAxis: \"yAxis\",\n    showXAxisLabel: \"showXAxisLabel\",\n    showYAxisLabel: \"showYAxisLabel\",\n    xAxisLabel: \"xAxisLabel\",\n    yAxisLabel: \"yAxisLabel\",\n    tooltipDisabled: \"tooltipDisabled\",\n    gradient: \"gradient\",\n    showGridLines: \"showGridLines\",\n    activeEntries: \"activeEntries\",\n    schemeType: \"schemeType\",\n    trimXAxisTicks: \"trimXAxisTicks\",\n    trimYAxisTicks: \"trimYAxisTicks\",\n    rotateXAxisTicks: \"rotateXAxisTicks\",\n    maxXAxisTickLength: \"maxXAxisTickLength\",\n    maxYAxisTickLength: \"maxYAxisTickLength\",\n    xAxisTickFormatting: \"xAxisTickFormatting\",\n    yAxisTickFormatting: \"yAxisTickFormatting\",\n    xAxisTicks: \"xAxisTicks\",\n    yAxisTicks: \"yAxisTicks\",\n    groupPadding: \"groupPadding\",\n    barPadding: \"barPadding\",\n    roundDomains: \"roundDomains\",\n    roundEdges: \"roundEdges\",\n    xScaleMax: \"xScaleMax\",\n    showDataLabel: \"showDataLabel\",\n    dataLabelFormatting: \"dataLabelFormatting\",\n    noBarWhenZero: \"noBarWhenZero\",\n    wrapTicks: \"wrapTicks\"\n  },\n  outputs: {\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 7,\n  vars: 18,\n  consts: [[3, \"legendLabelActivate\", \"legendLabelDeactivate\", \"legendLabelClick\", \"view\", \"showLegend\", \"legendOptions\", \"activeEntries\", \"animations\"], [1, \"bar-chart\", \"chart\"], [\"ngx-charts-grid-panel-series\", \"\", 3, \"xScale\", \"yScale\", \"data\", \"dims\", \"orient\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\", \"dimensionsChanged\", 4, \"ngIf\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"yAxisOffset\", \"wrapTicks\", \"dimensionsChanged\", 4, \"ngIf\"], [4, \"ngIf\"], [\"ngx-charts-x-axis\", \"\", 3, \"dimensionsChanged\", \"xScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\"], [\"ngx-charts-y-axis\", \"\", 3, \"dimensionsChanged\", \"yScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"yAxisOffset\", \"wrapTicks\"], [4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-series-horizontal\", \"\", 3, \"select\", \"activate\", \"deactivate\", \"dataLabelWidthChanged\", \"xScale\", \"activeEntries\", \"yScale\", \"colors\", \"series\", \"dims\", \"gradient\", \"tooltipDisabled\", \"tooltipTemplate\", \"seriesName\", \"roundEdges\", \"animations\", \"showDataLabel\", \"dataLabelFormatting\", \"noBarWhenZero\"]],\n  template: function BarHorizontal2DComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n      i0.ɵɵlistener(\"legendLabelActivate\", function BarHorizontal2DComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener($event) {\n        return ctx.onActivate($event, undefined, true);\n      })(\"legendLabelDeactivate\", function BarHorizontal2DComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener($event) {\n        return ctx.onDeactivate($event, undefined, true);\n      })(\"legendLabelClick\", function BarHorizontal2DComponent_Template_ngx_charts_chart_legendLabelClick_0_listener($event) {\n        return ctx.onClick($event);\n      });\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"g\", 1);\n      i0.ɵɵelement(2, \"g\", 2);\n      i0.ɵɵtemplate(3, BarHorizontal2DComponent__svg_g_3_Template, 1, 11, \"g\", 3)(4, BarHorizontal2DComponent__svg_g_4_Template, 1, 10, \"g\", 4)(5, BarHorizontal2DComponent__svg_g_5_Template, 2, 2, \"g\", 5)(6, BarHorizontal2DComponent__svg_g_6_Template, 2, 2, \"g\", 5);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(15, _c24, ctx.width, ctx.height))(\"showLegend\", ctx.legend)(\"legendOptions\", ctx.legendOptions)(\"activeEntries\", ctx.activeEntries)(\"animations\", ctx.animations);\n      i0.ɵɵadvance();\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"xScale\", ctx.valueScale)(\"yScale\", ctx.groupScale)(\"data\", ctx.results)(\"dims\", ctx.dims)(\"orient\", ctx.barOrientation.Horizontal);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngIf\", ctx.xAxis);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngIf\", ctx.yAxis);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngIf\", !ctx.isSSR);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngIf\", ctx.isSSR);\n    }\n  },\n  dependencies: [ChartComponent, GridPanelSeriesComponent, XAxisComponent, YAxisComponent, SeriesHorizontal, i2.NgIf, i2.NgForOf],\n  styles: [_c25],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('animationState', [transition(':leave', [style({\n      opacity: 1,\n      transform: '*'\n    }), animate(500, style({\n      opacity: 0,\n      transform: 'scale(0)'\n    }))])])]\n  },\n  changeDetection: 0\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BarHorizontal2DComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-bar-horizontal-2d',\n      template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, undefined, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, undefined, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-grid-panel-series\n          [xScale]=\"valueScale\"\n          [yScale]=\"groupScale\"\n          [data]=\"results\"\n          [dims]=\"dims\"\n          [orient]=\"barOrientation.Horizontal\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"valueScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"groupScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [yAxisOffset]=\"dataLabelMaxWidth.negative\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n\n        <svg:g *ngIf=\"!isSSR\">\n          <svg:g\n            *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n            [@animationState]=\"'active'\"\n            [attr.transform]=\"groupTransform(group)\"\n          >\n            <svg:g\n              ngx-charts-series-horizontal\n              [xScale]=\"valueScale\"\n              [activeEntries]=\"activeEntries\"\n              [yScale]=\"innerScale\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [roundEdges]=\"roundEdges\"\n              [animations]=\"animations\"\n              [showDataLabel]=\"showDataLabel\"\n              [dataLabelFormatting]=\"dataLabelFormatting\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n              (dataLabelWidthChanged)=\"onDataLabelMaxWidthChanged($event, index)\"\n            />\n          </svg:g>\n        </svg:g>\n        <svg:g *ngIf=\"isSSR\">\n          <svg:g\n            *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n            [attr.transform]=\"groupTransform(group)\"\n          >\n            <svg:g\n              ngx-charts-series-horizontal\n              [xScale]=\"valueScale\"\n              [activeEntries]=\"activeEntries\"\n              [yScale]=\"innerScale\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [roundEdges]=\"roundEdges\"\n              [animations]=\"animations\"\n              [showDataLabel]=\"showDataLabel\"\n              [dataLabelFormatting]=\"dataLabelFormatting\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n              (dataLabelWidthChanged)=\"onDataLabelMaxWidthChanged($event, index)\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      animations: [trigger('animationState', [transition(':leave', [style({\n        opacity: 1,\n        transform: '*'\n      }), animate(500, style({\n        opacity: 0,\n        transform: 'scale(0)'\n      }))])])],\n      styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"]\n    }]\n  }], null, {\n    legend: [{\n      type: Input\n    }],\n    legendTitle: [{\n      type: Input\n    }],\n    legendPosition: [{\n      type: Input\n    }],\n    xAxis: [{\n      type: Input\n    }],\n    yAxis: [{\n      type: Input\n    }],\n    showXAxisLabel: [{\n      type: Input\n    }],\n    showYAxisLabel: [{\n      type: Input\n    }],\n    xAxisLabel: [{\n      type: Input\n    }],\n    yAxisLabel: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    showGridLines: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    schemeType: [{\n      type: Input\n    }],\n    trimXAxisTicks: [{\n      type: Input\n    }],\n    trimYAxisTicks: [{\n      type: Input\n    }],\n    rotateXAxisTicks: [{\n      type: Input\n    }],\n    maxXAxisTickLength: [{\n      type: Input\n    }],\n    maxYAxisTickLength: [{\n      type: Input\n    }],\n    xAxisTickFormatting: [{\n      type: Input\n    }],\n    yAxisTickFormatting: [{\n      type: Input\n    }],\n    xAxisTicks: [{\n      type: Input\n    }],\n    yAxisTicks: [{\n      type: Input\n    }],\n    groupPadding: [{\n      type: Input\n    }],\n    barPadding: [{\n      type: Input\n    }],\n    roundDomains: [{\n      type: Input\n    }],\n    roundEdges: [{\n      type: Input\n    }],\n    xScaleMax: [{\n      type: Input\n    }],\n    showDataLabel: [{\n      type: Input\n    }],\n    dataLabelFormatting: [{\n      type: Input\n    }],\n    noBarWhenZero: [{\n      type: Input\n    }],\n    wrapTicks: [{\n      type: Input\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    tooltipTemplate: [{\n      type: ContentChild,\n      args: ['tooltipTemplate']\n    }]\n  });\n})();\nclass BarHorizontalNormalizedComponent extends BaseChartComponent {\n  constructor() {\n    super(...arguments);\n    this.legend = false;\n    this.legendTitle = 'Legend';\n    this.legendPosition = LegendPosition.Right;\n    this.tooltipDisabled = false;\n    this.showGridLines = true;\n    this.activeEntries = [];\n    this.trimXAxisTicks = true;\n    this.trimYAxisTicks = true;\n    this.rotateXAxisTicks = true;\n    this.maxXAxisTickLength = 16;\n    this.maxYAxisTickLength = 16;\n    this.barPadding = 8;\n    this.roundDomains = false;\n    this.noBarWhenZero = true;\n    this.wrapTicks = false;\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.valueDomain = [0, 100];\n    this.margin = [10, 20, 10, 20];\n    this.xAxisHeight = 0;\n    this.yAxisWidth = 0;\n    this.barChartType = BarChartType;\n    this.isSSR = false;\n    this.trackBy = (index, item) => {\n      return item.name;\n    };\n  }\n  ngOnInit() {\n    if (isPlatformServer(this.platformId)) {\n      this.isSSR = true;\n    }\n  }\n  update() {\n    super.update();\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.schemeType,\n      legendPosition: this.legendPosition\n    });\n    this.formatDates();\n    this.groupDomain = this.getGroupDomain();\n    this.innerDomain = this.getInnerDomain();\n    this.xScale = this.getXScale();\n    this.yScale = this.getYScale();\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n  }\n  getGroupDomain() {\n    const domain = [];\n    for (const group of this.results) {\n      if (!domain.includes(group.label)) {\n        domain.push(group.label);\n      }\n    }\n    return domain;\n  }\n  getInnerDomain() {\n    const domain = [];\n    for (const group of this.results) {\n      for (const d of group.series) {\n        if (!domain.includes(d.label)) {\n          domain.push(d.label);\n        }\n      }\n    }\n    return domain;\n  }\n  getYScale() {\n    const spacing = this.groupDomain.length / (this.dims.height / this.barPadding + 1);\n    return scaleBand().rangeRound([0, this.dims.height]).paddingInner(spacing).domain(this.groupDomain);\n  }\n  getXScale() {\n    const scale = scaleLinear().range([0, this.dims.width]).domain(this.valueDomain);\n    return this.roundDomains ? scale.nice() : scale;\n  }\n  groupTransform(group) {\n    return `translate(0, ${this.yScale(group.name)})`;\n  }\n  onClick(data, group) {\n    if (group) {\n      data.series = group.name;\n    }\n    this.select.emit(data);\n  }\n  setColors() {\n    let domain;\n    if (this.schemeType === ScaleType.Ordinal) {\n      domain = this.innerDomain;\n    } else {\n      domain = this.valueDomain;\n    }\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n  }\n  getLegendOptions() {\n    const opts = {\n      scaleType: this.schemeType,\n      colors: undefined,\n      domain: [],\n      title: undefined,\n      position: this.legendPosition\n    };\n    if (opts.scaleType === ScaleType.Ordinal) {\n      opts.domain = this.innerDomain;\n      opts.colors = this.colors;\n      opts.title = this.legendTitle;\n    } else {\n      opts.domain = this.valueDomain;\n      opts.colors = this.colors.scale;\n    }\n    return opts;\n  }\n  updateYAxisWidth({\n    width\n  }) {\n    this.yAxisWidth = width;\n    this.update();\n  }\n  updateXAxisHeight({\n    height\n  }) {\n    this.xAxisHeight = height;\n    this.update();\n  }\n  onActivate(event, group, fromLegend = false) {\n    const item = Object.assign({}, event);\n    if (group) {\n      item.series = group.name;\n    }\n    const items = this.results.map(g => g.series).flat().filter(i => {\n      if (fromLegend) {\n        return i.label === item.name;\n      } else {\n        return i.name === item.name && i.series === item.series;\n      }\n    });\n    this.activeEntries = [...items];\n    this.activate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n  onDeactivate(event, group, fromLegend = false) {\n    const item = Object.assign({}, event);\n    if (group) {\n      item.series = group.name;\n    }\n    this.activeEntries = this.activeEntries.filter(i => {\n      if (fromLegend) {\n        return i.label !== item.name;\n      } else {\n        return !(i.name === item.name && i.series === item.series);\n      }\n    });\n    this.deactivate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n}\nBarHorizontalNormalizedComponent.ɵfac = /* @__PURE__ */(() => {\n  let ɵBarHorizontalNormalizedComponent_BaseFactory;\n  return function BarHorizontalNormalizedComponent_Factory(t) {\n    return (ɵBarHorizontalNormalizedComponent_BaseFactory || (ɵBarHorizontalNormalizedComponent_BaseFactory = i0.ɵɵgetInheritedFactory(BarHorizontalNormalizedComponent)))(t || BarHorizontalNormalizedComponent);\n  };\n})();\nBarHorizontalNormalizedComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: BarHorizontalNormalizedComponent,\n  selectors: [[\"ngx-charts-bar-horizontal-normalized\"]],\n  contentQueries: function BarHorizontalNormalizedComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n    }\n  },\n  inputs: {\n    legend: \"legend\",\n    legendTitle: \"legendTitle\",\n    legendPosition: \"legendPosition\",\n    xAxis: \"xAxis\",\n    yAxis: \"yAxis\",\n    showXAxisLabel: \"showXAxisLabel\",\n    showYAxisLabel: \"showYAxisLabel\",\n    xAxisLabel: \"xAxisLabel\",\n    yAxisLabel: \"yAxisLabel\",\n    tooltipDisabled: \"tooltipDisabled\",\n    gradient: \"gradient\",\n    showGridLines: \"showGridLines\",\n    activeEntries: \"activeEntries\",\n    schemeType: \"schemeType\",\n    trimXAxisTicks: \"trimXAxisTicks\",\n    trimYAxisTicks: \"trimYAxisTicks\",\n    rotateXAxisTicks: \"rotateXAxisTicks\",\n    maxXAxisTickLength: \"maxXAxisTickLength\",\n    maxYAxisTickLength: \"maxYAxisTickLength\",\n    xAxisTickFormatting: \"xAxisTickFormatting\",\n    yAxisTickFormatting: \"yAxisTickFormatting\",\n    xAxisTicks: \"xAxisTicks\",\n    yAxisTicks: \"yAxisTicks\",\n    barPadding: \"barPadding\",\n    roundDomains: \"roundDomains\",\n    noBarWhenZero: \"noBarWhenZero\",\n    wrapTicks: \"wrapTicks\"\n  },\n  outputs: {\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 6,\n  vars: 13,\n  consts: [[3, \"legendLabelActivate\", \"legendLabelDeactivate\", \"legendLabelClick\", \"view\", \"showLegend\", \"legendOptions\", \"activeEntries\", \"animations\"], [1, \"bar-chart\", \"chart\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\", \"dimensionsChanged\", 4, \"ngIf\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\", \"dimensionsChanged\", 4, \"ngIf\"], [4, \"ngIf\"], [\"ngx-charts-x-axis\", \"\", 3, \"dimensionsChanged\", \"xScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\"], [\"ngx-charts-y-axis\", \"\", 3, \"dimensionsChanged\", \"yScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\"], [4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-series-horizontal\", \"\", 3, \"select\", \"activate\", \"deactivate\", \"type\", \"xScale\", \"yScale\", \"activeEntries\", \"colors\", \"series\", \"dims\", \"gradient\", \"tooltipDisabled\", \"tooltipTemplate\", \"seriesName\", \"animations\", \"noBarWhenZero\"]],\n  template: function BarHorizontalNormalizedComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n      i0.ɵɵlistener(\"legendLabelActivate\", function BarHorizontalNormalizedComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener($event) {\n        return ctx.onActivate($event, undefined, true);\n      })(\"legendLabelDeactivate\", function BarHorizontalNormalizedComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener($event) {\n        return ctx.onDeactivate($event, undefined, true);\n      })(\"legendLabelClick\", function BarHorizontalNormalizedComponent_Template_ngx_charts_chart_legendLabelClick_0_listener($event) {\n        return ctx.onClick($event);\n      });\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"g\", 1);\n      i0.ɵɵtemplate(2, BarHorizontalNormalizedComponent__svg_g_2_Template, 1, 11, \"g\", 2)(3, BarHorizontalNormalizedComponent__svg_g_3_Template, 1, 9, \"g\", 3)(4, BarHorizontalNormalizedComponent__svg_g_4_Template, 2, 2, \"g\", 4)(5, BarHorizontalNormalizedComponent__svg_g_5_Template, 2, 2, \"g\", 4);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(10, _c24, ctx.width, ctx.height))(\"showLegend\", ctx.legend)(\"legendOptions\", ctx.legendOptions)(\"activeEntries\", ctx.activeEntries)(\"animations\", ctx.animations);\n      i0.ɵɵadvance();\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngIf\", ctx.xAxis);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngIf\", ctx.yAxis);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngIf\", !ctx.isSSR);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngIf\", ctx.isSSR);\n    }\n  },\n  dependencies: [ChartComponent, XAxisComponent, YAxisComponent, SeriesHorizontal, i2.NgIf, i2.NgForOf],\n  styles: [_c25],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('animationState', [transition(':leave', [style({\n      opacity: 1,\n      transform: '*'\n    }), animate(500, style({\n      opacity: 0,\n      transform: 'scale(0)'\n    }))])])]\n  },\n  changeDetection: 0\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BarHorizontalNormalizedComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-bar-horizontal-normalized',\n      template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, undefined, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, undefined, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g *ngIf=\"!isSSR\">\n          <svg:g\n            *ngFor=\"let group of results; trackBy: trackBy\"\n            [@animationState]=\"'active'\"\n            [attr.transform]=\"groupTransform(group)\"\n          >\n            <svg:g\n              ngx-charts-series-horizontal\n              [type]=\"barChartType.Normalized\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [activeEntries]=\"activeEntries\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [animations]=\"animations\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n            />\n          </svg:g>\n        </svg:g>\n        <svg:g *ngIf=\"isSSR\">\n          <svg:g *ngFor=\"let group of results; trackBy: trackBy\" [attr.transform]=\"groupTransform(group)\">\n            <svg:g\n              ngx-charts-series-horizontal\n              [type]=\"barChartType.Normalized\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [activeEntries]=\"activeEntries\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [animations]=\"animations\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      animations: [trigger('animationState', [transition(':leave', [style({\n        opacity: 1,\n        transform: '*'\n      }), animate(500, style({\n        opacity: 0,\n        transform: 'scale(0)'\n      }))])])],\n      styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"]\n    }]\n  }], null, {\n    legend: [{\n      type: Input\n    }],\n    legendTitle: [{\n      type: Input\n    }],\n    legendPosition: [{\n      type: Input\n    }],\n    xAxis: [{\n      type: Input\n    }],\n    yAxis: [{\n      type: Input\n    }],\n    showXAxisLabel: [{\n      type: Input\n    }],\n    showYAxisLabel: [{\n      type: Input\n    }],\n    xAxisLabel: [{\n      type: Input\n    }],\n    yAxisLabel: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    showGridLines: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    schemeType: [{\n      type: Input\n    }],\n    trimXAxisTicks: [{\n      type: Input\n    }],\n    trimYAxisTicks: [{\n      type: Input\n    }],\n    rotateXAxisTicks: [{\n      type: Input\n    }],\n    maxXAxisTickLength: [{\n      type: Input\n    }],\n    maxYAxisTickLength: [{\n      type: Input\n    }],\n    xAxisTickFormatting: [{\n      type: Input\n    }],\n    yAxisTickFormatting: [{\n      type: Input\n    }],\n    xAxisTicks: [{\n      type: Input\n    }],\n    yAxisTicks: [{\n      type: Input\n    }],\n    barPadding: [{\n      type: Input\n    }],\n    roundDomains: [{\n      type: Input\n    }],\n    noBarWhenZero: [{\n      type: Input\n    }],\n    wrapTicks: [{\n      type: Input\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    tooltipTemplate: [{\n      type: ContentChild,\n      args: ['tooltipTemplate']\n    }]\n  });\n})();\nclass BarHorizontalStackedComponent extends BaseChartComponent {\n  constructor() {\n    super(...arguments);\n    this.legend = false;\n    this.legendTitle = 'Legend';\n    this.legendPosition = LegendPosition.Right;\n    this.tooltipDisabled = false;\n    this.showGridLines = true;\n    this.activeEntries = [];\n    this.trimXAxisTicks = true;\n    this.trimYAxisTicks = true;\n    this.rotateXAxisTicks = true;\n    this.maxXAxisTickLength = 16;\n    this.maxYAxisTickLength = 16;\n    this.barPadding = 8;\n    this.roundDomains = false;\n    this.showDataLabel = false;\n    this.noBarWhenZero = true;\n    this.wrapTicks = false;\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.margin = [10, 20, 10, 20];\n    this.xAxisHeight = 0;\n    this.yAxisWidth = 0;\n    this.dataLabelMaxWidth = {\n      negative: 0,\n      positive: 0\n    };\n    this.barChartType = BarChartType;\n    this.isSSR = false;\n    this.trackBy = (index, item) => {\n      return item.name;\n    };\n  }\n  ngOnInit() {\n    if (isPlatformServer(this.platformId)) {\n      this.isSSR = true;\n    }\n  }\n  update() {\n    super.update();\n    if (!this.showDataLabel) {\n      this.dataLabelMaxWidth = {\n        negative: 0,\n        positive: 0\n      };\n    }\n    this.margin = [10, 20 + this.dataLabelMaxWidth.positive, 10, 20 + this.dataLabelMaxWidth.negative];\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.schemeType,\n      legendPosition: this.legendPosition\n    });\n    this.formatDates();\n    this.groupDomain = this.getGroupDomain();\n    this.innerDomain = this.getInnerDomain();\n    this.valueDomain = this.getValueDomain();\n    this.xScale = this.getXScale();\n    this.yScale = this.getYScale();\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n  }\n  getGroupDomain() {\n    const domain = [];\n    for (const group of this.results) {\n      if (!domain.includes(group.label)) {\n        domain.push(group.label);\n      }\n    }\n    return domain;\n  }\n  getInnerDomain() {\n    const domain = [];\n    for (const group of this.results) {\n      for (const d of group.series) {\n        if (!domain.includes(d.label)) {\n          domain.push(d.label);\n        }\n      }\n    }\n    return domain;\n  }\n  getValueDomain() {\n    const domain = [];\n    let smallest = 0;\n    let biggest = 0;\n    for (const group of this.results) {\n      let smallestSum = 0;\n      let biggestSum = 0;\n      for (const d of group.series) {\n        if (d.value < 0) {\n          smallestSum += d.value;\n        } else {\n          biggestSum += d.value;\n        }\n        smallest = d.value < smallest ? d.value : smallest;\n        biggest = d.value > biggest ? d.value : biggest;\n      }\n      domain.push(smallestSum);\n      domain.push(biggestSum);\n    }\n    domain.push(smallest);\n    domain.push(biggest);\n    const min = Math.min(0, ...domain);\n    const max = this.xScaleMax ? Math.max(this.xScaleMax, ...domain) : Math.max(...domain);\n    return [min, max];\n  }\n  getYScale() {\n    const spacing = this.groupDomain.length / (this.dims.height / this.barPadding + 1);\n    return scaleBand().rangeRound([0, this.dims.height]).paddingInner(spacing).domain(this.groupDomain);\n  }\n  getXScale() {\n    const scale = scaleLinear().range([0, this.dims.width]).domain(this.valueDomain);\n    return this.roundDomains ? scale.nice() : scale;\n  }\n  groupTransform(group) {\n    return `translate(0, ${this.yScale(group.name)})`;\n  }\n  onClick(data, group) {\n    if (group) {\n      data.series = group.name;\n    }\n    this.select.emit(data);\n  }\n  setColors() {\n    let domain;\n    if (this.schemeType === ScaleType.Ordinal) {\n      domain = this.innerDomain;\n    } else {\n      domain = this.valueDomain;\n    }\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n  }\n  getLegendOptions() {\n    const opts = {\n      scaleType: this.schemeType,\n      colors: undefined,\n      domain: [],\n      title: undefined,\n      position: this.legendPosition\n    };\n    if (opts.scaleType === ScaleType.Ordinal) {\n      opts.domain = this.innerDomain;\n      opts.colors = this.colors;\n      opts.title = this.legendTitle;\n    } else {\n      opts.domain = this.valueDomain;\n      opts.colors = this.colors.scale;\n    }\n    return opts;\n  }\n  updateYAxisWidth({\n    width\n  }) {\n    this.yAxisWidth = width;\n    this.update();\n  }\n  updateXAxisHeight({\n    height\n  }) {\n    this.xAxisHeight = height;\n    this.update();\n  }\n  onDataLabelMaxWidthChanged(event, groupIndex) {\n    if (event.size.negative) {\n      this.dataLabelMaxWidth.negative = Math.max(this.dataLabelMaxWidth.negative, event.size.width);\n    } else {\n      this.dataLabelMaxWidth.positive = Math.max(this.dataLabelMaxWidth.positive, event.size.width);\n    }\n    if (groupIndex === this.results.length - 1) {\n      setTimeout(() => this.update());\n    }\n  }\n  onActivate(event, group, fromLegend = false) {\n    const item = Object.assign({}, event);\n    if (group) {\n      item.series = group.name;\n    }\n    const items = this.results.map(g => g.series).flat().filter(i => {\n      if (fromLegend) {\n        return i.label === item.name;\n      } else {\n        return i.name === item.name && i.series === item.series;\n      }\n    });\n    this.activeEntries = [...items];\n    this.activate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n  onDeactivate(event, group, fromLegend = false) {\n    const item = Object.assign({}, event);\n    if (group) {\n      item.series = group.name;\n    }\n    this.activeEntries = this.activeEntries.filter(i => {\n      if (fromLegend) {\n        return i.label !== item.name;\n      } else {\n        return !(i.name === item.name && i.series === item.series);\n      }\n    });\n    this.deactivate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n}\nBarHorizontalStackedComponent.ɵfac = /* @__PURE__ */(() => {\n  let ɵBarHorizontalStackedComponent_BaseFactory;\n  return function BarHorizontalStackedComponent_Factory(t) {\n    return (ɵBarHorizontalStackedComponent_BaseFactory || (ɵBarHorizontalStackedComponent_BaseFactory = i0.ɵɵgetInheritedFactory(BarHorizontalStackedComponent)))(t || BarHorizontalStackedComponent);\n  };\n})();\nBarHorizontalStackedComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: BarHorizontalStackedComponent,\n  selectors: [[\"ngx-charts-bar-horizontal-stacked\"]],\n  contentQueries: function BarHorizontalStackedComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n    }\n  },\n  inputs: {\n    legend: \"legend\",\n    legendTitle: \"legendTitle\",\n    legendPosition: \"legendPosition\",\n    xAxis: \"xAxis\",\n    yAxis: \"yAxis\",\n    showXAxisLabel: \"showXAxisLabel\",\n    showYAxisLabel: \"showYAxisLabel\",\n    xAxisLabel: \"xAxisLabel\",\n    yAxisLabel: \"yAxisLabel\",\n    tooltipDisabled: \"tooltipDisabled\",\n    gradient: \"gradient\",\n    showGridLines: \"showGridLines\",\n    activeEntries: \"activeEntries\",\n    schemeType: \"schemeType\",\n    trimXAxisTicks: \"trimXAxisTicks\",\n    trimYAxisTicks: \"trimYAxisTicks\",\n    rotateXAxisTicks: \"rotateXAxisTicks\",\n    maxXAxisTickLength: \"maxXAxisTickLength\",\n    maxYAxisTickLength: \"maxYAxisTickLength\",\n    xAxisTickFormatting: \"xAxisTickFormatting\",\n    yAxisTickFormatting: \"yAxisTickFormatting\",\n    xAxisTicks: \"xAxisTicks\",\n    yAxisTicks: \"yAxisTicks\",\n    barPadding: \"barPadding\",\n    roundDomains: \"roundDomains\",\n    xScaleMax: \"xScaleMax\",\n    showDataLabel: \"showDataLabel\",\n    dataLabelFormatting: \"dataLabelFormatting\",\n    noBarWhenZero: \"noBarWhenZero\",\n    wrapTicks: \"wrapTicks\"\n  },\n  outputs: {\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 6,\n  vars: 13,\n  consts: [[3, \"legendLabelActivate\", \"legendLabelDeactivate\", \"legendLabelClick\", \"view\", \"showLegend\", \"legendOptions\", \"activeEntries\", \"animations\"], [1, \"bar-chart\", \"chart\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\", \"dimensionsChanged\", 4, \"ngIf\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"yAxisOffset\", \"wrapTicks\", \"dimensionsChanged\", 4, \"ngIf\"], [4, \"ngIf\"], [\"ngx-charts-x-axis\", \"\", 3, \"dimensionsChanged\", \"xScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\"], [\"ngx-charts-y-axis\", \"\", 3, \"dimensionsChanged\", \"yScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"yAxisOffset\", \"wrapTicks\"], [4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-series-horizontal\", \"\", 3, \"select\", \"activate\", \"deactivate\", \"dataLabelWidthChanged\", \"type\", \"xScale\", \"yScale\", \"colors\", \"series\", \"activeEntries\", \"dims\", \"gradient\", \"tooltipDisabled\", \"tooltipTemplate\", \"seriesName\", \"animations\", \"showDataLabel\", \"dataLabelFormatting\", \"noBarWhenZero\"]],\n  template: function BarHorizontalStackedComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n      i0.ɵɵlistener(\"legendLabelActivate\", function BarHorizontalStackedComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener($event) {\n        return ctx.onActivate($event, undefined, true);\n      })(\"legendLabelDeactivate\", function BarHorizontalStackedComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener($event) {\n        return ctx.onDeactivate($event, undefined, true);\n      })(\"legendLabelClick\", function BarHorizontalStackedComponent_Template_ngx_charts_chart_legendLabelClick_0_listener($event) {\n        return ctx.onClick($event);\n      });\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"g\", 1);\n      i0.ɵɵtemplate(2, BarHorizontalStackedComponent__svg_g_2_Template, 1, 11, \"g\", 2)(3, BarHorizontalStackedComponent__svg_g_3_Template, 1, 10, \"g\", 3)(4, BarHorizontalStackedComponent__svg_g_4_Template, 2, 2, \"g\", 4)(5, BarHorizontalStackedComponent__svg_g_5_Template, 2, 2, \"g\", 4);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(10, _c24, ctx.width, ctx.height))(\"showLegend\", ctx.legend)(\"legendOptions\", ctx.legendOptions)(\"activeEntries\", ctx.activeEntries)(\"animations\", ctx.animations);\n      i0.ɵɵadvance();\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngIf\", ctx.xAxis);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngIf\", ctx.yAxis);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngIf\", !ctx.isSSR);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngIf\", ctx.isSSR);\n    }\n  },\n  dependencies: [ChartComponent, XAxisComponent, YAxisComponent, SeriesHorizontal, i2.NgIf, i2.NgForOf],\n  styles: [_c25],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('animationState', [transition(':leave', [style({\n      opacity: 1,\n      transform: '*'\n    }), animate(500, style({\n      opacity: 0,\n      transform: 'scale(0)'\n    }))])])]\n  },\n  changeDetection: 0\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BarHorizontalStackedComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-bar-horizontal-stacked',\n      template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, undefined, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, undefined, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [yAxisOffset]=\"dataLabelMaxWidth.negative\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g *ngIf=\"!isSSR\">\n          <svg:g\n            *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n            [@animationState]=\"'active'\"\n            [attr.transform]=\"groupTransform(group)\"\n          >\n            <svg:g\n              ngx-charts-series-horizontal\n              [type]=\"barChartType.Stacked\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [activeEntries]=\"activeEntries\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [animations]=\"animations\"\n              [showDataLabel]=\"showDataLabel\"\n              [dataLabelFormatting]=\"dataLabelFormatting\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n              (dataLabelWidthChanged)=\"onDataLabelMaxWidthChanged($event, index)\"\n            />\n          </svg:g>\n        </svg:g>\n        <svg:g *ngIf=\"isSSR\">\n          <svg:g\n            *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n            [attr.transform]=\"groupTransform(group)\"\n          >\n            <svg:g\n              ngx-charts-series-horizontal\n              [type]=\"barChartType.Stacked\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [activeEntries]=\"activeEntries\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [animations]=\"animations\"\n              [showDataLabel]=\"showDataLabel\"\n              [dataLabelFormatting]=\"dataLabelFormatting\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n              (dataLabelWidthChanged)=\"onDataLabelMaxWidthChanged($event, index)\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      animations: [trigger('animationState', [transition(':leave', [style({\n        opacity: 1,\n        transform: '*'\n      }), animate(500, style({\n        opacity: 0,\n        transform: 'scale(0)'\n      }))])])],\n      styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"]\n    }]\n  }], null, {\n    legend: [{\n      type: Input\n    }],\n    legendTitle: [{\n      type: Input\n    }],\n    legendPosition: [{\n      type: Input\n    }],\n    xAxis: [{\n      type: Input\n    }],\n    yAxis: [{\n      type: Input\n    }],\n    showXAxisLabel: [{\n      type: Input\n    }],\n    showYAxisLabel: [{\n      type: Input\n    }],\n    xAxisLabel: [{\n      type: Input\n    }],\n    yAxisLabel: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    showGridLines: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    schemeType: [{\n      type: Input\n    }],\n    trimXAxisTicks: [{\n      type: Input\n    }],\n    trimYAxisTicks: [{\n      type: Input\n    }],\n    rotateXAxisTicks: [{\n      type: Input\n    }],\n    maxXAxisTickLength: [{\n      type: Input\n    }],\n    maxYAxisTickLength: [{\n      type: Input\n    }],\n    xAxisTickFormatting: [{\n      type: Input\n    }],\n    yAxisTickFormatting: [{\n      type: Input\n    }],\n    xAxisTicks: [{\n      type: Input\n    }],\n    yAxisTicks: [{\n      type: Input\n    }],\n    barPadding: [{\n      type: Input\n    }],\n    roundDomains: [{\n      type: Input\n    }],\n    xScaleMax: [{\n      type: Input\n    }],\n    showDataLabel: [{\n      type: Input\n    }],\n    dataLabelFormatting: [{\n      type: Input\n    }],\n    noBarWhenZero: [{\n      type: Input\n    }],\n    wrapTicks: [{\n      type: Input\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    tooltipTemplate: [{\n      type: ContentChild,\n      args: ['tooltipTemplate']\n    }]\n  });\n})();\nclass SeriesVerticalComponent {\n  constructor(platformId) {\n    this.platformId = platformId;\n    this.type = BarChartType.Standard;\n    this.tooltipDisabled = false;\n    this.animations = true;\n    this.showDataLabel = false;\n    this.noBarWhenZero = true;\n    this.select = new EventEmitter();\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.dataLabelHeightChanged = new EventEmitter();\n    this.barsForDataLabels = [];\n    this.barOrientation = BarOrientation;\n    this.isSSR = false;\n  }\n  ngOnInit() {\n    if (isPlatformServer(this.platformId)) {\n      this.isSSR = true;\n    }\n  }\n  ngOnChanges(changes) {\n    this.update();\n  }\n  update() {\n    this.updateTooltipSettings();\n    let width;\n    if (this.series.length) {\n      width = this.xScale.bandwidth();\n    }\n    width = Math.round(width);\n    const yScaleMin = Math.max(this.yScale.domain()[0], 0);\n    const d0 = {\n      [D0Types.positive]: 0,\n      [D0Types.negative]: 0\n    };\n    let d0Type = D0Types.positive;\n    let total;\n    if (this.type === BarChartType.Normalized) {\n      total = this.series.map(d => d.value).reduce((sum, d) => sum + d, 0);\n    }\n    this.bars = this.series.map((d, index) => {\n      let value = d.value;\n      const label = this.getLabel(d);\n      const formattedLabel = formatLabel(label);\n      const roundEdges = this.roundEdges;\n      d0Type = value > 0 ? D0Types.positive : D0Types.negative;\n      const bar = {\n        value,\n        label,\n        roundEdges,\n        data: d,\n        width,\n        formattedLabel,\n        height: 0,\n        x: 0,\n        y: 0\n      };\n      if (this.type === BarChartType.Standard) {\n        bar.height = Math.abs(this.yScale(value) - this.yScale(yScaleMin));\n        bar.x = this.xScale(label);\n        if (value < 0) {\n          bar.y = this.yScale(0);\n        } else {\n          bar.y = this.yScale(value);\n        }\n      } else if (this.type === BarChartType.Stacked) {\n        const offset0 = d0[d0Type];\n        const offset1 = offset0 + value;\n        d0[d0Type] += value;\n        bar.height = this.yScale(offset0) - this.yScale(offset1);\n        bar.x = 0;\n        bar.y = this.yScale(offset1);\n        bar.offset0 = offset0;\n        bar.offset1 = offset1;\n      } else if (this.type === BarChartType.Normalized) {\n        let offset0 = d0[d0Type];\n        let offset1 = offset0 + value;\n        d0[d0Type] += value;\n        if (total > 0) {\n          offset0 = offset0 * 100 / total;\n          offset1 = offset1 * 100 / total;\n        } else {\n          offset0 = 0;\n          offset1 = 0;\n        }\n        bar.height = this.yScale(offset0) - this.yScale(offset1);\n        bar.x = 0;\n        bar.y = this.yScale(offset1);\n        bar.offset0 = offset0;\n        bar.offset1 = offset1;\n        value = (offset1 - offset0).toFixed(2) + '%';\n      }\n      if (this.colors.scaleType === ScaleType.Ordinal) {\n        bar.color = this.colors.getColor(label);\n      } else {\n        if (this.type === BarChartType.Standard) {\n          bar.color = this.colors.getColor(value);\n          bar.gradientStops = this.colors.getLinearGradientStops(value);\n        } else {\n          bar.color = this.colors.getColor(bar.offset1);\n          bar.gradientStops = this.colors.getLinearGradientStops(bar.offset1, bar.offset0);\n        }\n      }\n      let tooltipLabel = formattedLabel;\n      bar.ariaLabel = formattedLabel + ' ' + value.toLocaleString();\n      if (this.seriesName !== null && this.seriesName !== undefined) {\n        tooltipLabel = `${this.seriesName} • ${formattedLabel}`;\n        bar.data.series = this.seriesName;\n        bar.ariaLabel = this.seriesName + ' ' + bar.ariaLabel;\n      }\n      bar.tooltipText = this.tooltipDisabled ? undefined : `\n        <span class=\"tooltip-label\">${escapeLabel(tooltipLabel)}</span>\n        <span class=\"tooltip-val\">${this.dataLabelFormatting ? this.dataLabelFormatting(value) : value.toLocaleString()}</span>\n      `;\n      return bar;\n    });\n    this.updateDataLabels();\n  }\n  updateDataLabels() {\n    if (this.type === BarChartType.Stacked) {\n      this.barsForDataLabels = [];\n      const section = {};\n      section.series = this.seriesName;\n      const totalPositive = this.series.map(d => d.value).reduce((sum, d) => d > 0 ? sum + d : sum, 0);\n      const totalNegative = this.series.map(d => d.value).reduce((sum, d) => d < 0 ? sum + d : sum, 0);\n      section.total = totalPositive + totalNegative;\n      section.x = 0;\n      section.y = 0;\n      if (section.total > 0) {\n        section.height = this.yScale(totalPositive);\n      } else {\n        section.height = this.yScale(totalNegative);\n      }\n      section.width = this.xScale.bandwidth();\n      this.barsForDataLabels.push(section);\n    } else {\n      this.barsForDataLabels = this.series.map(d => {\n        const section = {};\n        section.series = this.seriesName ?? d.label;\n        section.total = d.value;\n        section.x = this.xScale(d.label);\n        section.y = this.yScale(0);\n        section.height = this.yScale(section.total) - this.yScale(0);\n        section.width = this.xScale.bandwidth();\n        return section;\n      });\n    }\n  }\n  updateTooltipSettings() {\n    this.tooltipPlacement = this.tooltipDisabled ? undefined : PlacementTypes.Top;\n    this.tooltipType = this.tooltipDisabled ? undefined : StyleTypes.tooltip;\n  }\n  isActive(entry) {\n    if (!this.activeEntries) return false;\n    const item = this.activeEntries.find(active => {\n      return entry.name === active.name && entry.value === active.value;\n    });\n    return item !== undefined;\n  }\n  onClick(data) {\n    this.select.emit(data);\n  }\n  getLabel(dataItem) {\n    if (dataItem.label) {\n      return dataItem.label;\n    }\n    return dataItem.name;\n  }\n  trackBy(index, bar) {\n    return bar.label;\n  }\n  trackDataLabelBy(index, barLabel) {\n    return index + '#' + barLabel.series + '#' + barLabel.total;\n  }\n}\nSeriesVerticalComponent.ɵfac = function SeriesVerticalComponent_Factory(t) {\n  return new (t || SeriesVerticalComponent)(i0.ɵɵdirectiveInject(PLATFORM_ID));\n};\nSeriesVerticalComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: SeriesVerticalComponent,\n  selectors: [[\"g\", \"ngx-charts-series-vertical\", \"\"]],\n  inputs: {\n    dims: \"dims\",\n    type: \"type\",\n    series: \"series\",\n    xScale: \"xScale\",\n    yScale: \"yScale\",\n    colors: \"colors\",\n    gradient: \"gradient\",\n    activeEntries: \"activeEntries\",\n    seriesName: \"seriesName\",\n    tooltipDisabled: \"tooltipDisabled\",\n    tooltipTemplate: \"tooltipTemplate\",\n    roundEdges: \"roundEdges\",\n    animations: \"animations\",\n    showDataLabel: \"showDataLabel\",\n    dataLabelFormatting: \"dataLabelFormatting\",\n    noBarWhenZero: \"noBarWhenZero\"\n  },\n  outputs: {\n    select: \"select\",\n    activate: \"activate\",\n    deactivate: \"deactivate\",\n    dataLabelHeightChanged: \"dataLabelHeightChanged\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c29,\n  decls: 3,\n  vars: 3,\n  consts: [[4, \"ngIf\"], [\"ngx-charts-bar\", \"\", \"ngx-tooltip\", \"\", 3, \"width\", \"height\", \"x\", \"y\", \"fill\", \"stops\", \"data\", \"orientation\", \"roundEdges\", \"gradient\", \"ariaLabel\", \"isActive\", \"tooltipDisabled\", \"tooltipPlacement\", \"tooltipType\", \"tooltipTitle\", \"tooltipTemplate\", \"tooltipContext\", \"noBarWhenZero\", \"animations\", \"select\", \"activate\", \"deactivate\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-bar\", \"\", \"ngx-tooltip\", \"\", 3, \"select\", \"activate\", \"deactivate\", \"width\", \"height\", \"x\", \"y\", \"fill\", \"stops\", \"data\", \"orientation\", \"roundEdges\", \"gradient\", \"ariaLabel\", \"isActive\", \"tooltipDisabled\", \"tooltipPlacement\", \"tooltipType\", \"tooltipTitle\", \"tooltipTemplate\", \"tooltipContext\", \"noBarWhenZero\", \"animations\"], [\"ngx-charts-bar-label\", \"\", 3, \"barX\", \"barY\", \"barWidth\", \"barHeight\", \"value\", \"valueFormatting\", \"orientation\", \"dimensionsChanged\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-bar-label\", \"\", 3, \"dimensionsChanged\", \"barX\", \"barY\", \"barWidth\", \"barHeight\", \"value\", \"valueFormatting\", \"orientation\"]],\n  template: function SeriesVerticalComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, SeriesVerticalComponent__svg_g_0_Template, 2, 2, \"g\", 0)(1, SeriesVerticalComponent__svg_g_1_Template, 2, 2, \"g\", 0)(2, SeriesVerticalComponent__svg_g_2_Template, 2, 2, \"g\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", !ctx.isSSR);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngIf\", ctx.isSSR);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngIf\", ctx.showDataLabel);\n    }\n  },\n  dependencies: [BarComponent, BarLabelComponent, i2.NgIf, i2.NgForOf, TooltipDirective],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('animationState', [transition(':leave', [style({\n      opacity: 1\n    }), animate(500, style({\n      opacity: 0\n    }))])])]\n  },\n  changeDetection: 0\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SeriesVerticalComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-series-vertical]',\n      template: `\n    <svg:g *ngIf=\"!isSSR\">\n      <svg:g\n        ngx-charts-bar\n        *ngFor=\"let bar of bars; trackBy: trackBy\"\n        [@animationState]=\"'active'\"\n        [@.disabled]=\"!animations\"\n        [width]=\"bar.width\"\n        [height]=\"bar.height\"\n        [x]=\"bar.x\"\n        [y]=\"bar.y\"\n        [fill]=\"bar.color\"\n        [stops]=\"bar.gradientStops\"\n        [data]=\"bar.data\"\n        [orientation]=\"barOrientation.Vertical\"\n        [roundEdges]=\"bar.roundEdges\"\n        [gradient]=\"gradient\"\n        [ariaLabel]=\"bar.ariaLabel\"\n        [isActive]=\"isActive(bar.data)\"\n        (select)=\"onClick($event)\"\n        (activate)=\"activate.emit($event)\"\n        (deactivate)=\"deactivate.emit($event)\"\n        ngx-tooltip\n        [tooltipDisabled]=\"tooltipDisabled\"\n        [tooltipPlacement]=\"tooltipPlacement\"\n        [tooltipType]=\"tooltipType\"\n        [tooltipTitle]=\"tooltipTemplate ? undefined : bar.tooltipText\"\n        [tooltipTemplate]=\"tooltipTemplate\"\n        [tooltipContext]=\"bar.data\"\n        [noBarWhenZero]=\"noBarWhenZero\"\n        [animations]=\"animations\"\n      ></svg:g>\n    </svg:g>\n    <svg:g *ngIf=\"isSSR\">\n      <svg:g\n        ngx-charts-bar\n        *ngFor=\"let bar of bars; trackBy: trackBy\"\n        [width]=\"bar.width\"\n        [height]=\"bar.height\"\n        [x]=\"bar.x\"\n        [y]=\"bar.y\"\n        [fill]=\"bar.color\"\n        [stops]=\"bar.gradientStops\"\n        [data]=\"bar.data\"\n        [orientation]=\"barOrientation.Vertical\"\n        [roundEdges]=\"bar.roundEdges\"\n        [gradient]=\"gradient\"\n        [ariaLabel]=\"bar.ariaLabel\"\n        [isActive]=\"isActive(bar.data)\"\n        (select)=\"onClick($event)\"\n        (activate)=\"activate.emit($event)\"\n        (deactivate)=\"deactivate.emit($event)\"\n        ngx-tooltip\n        [tooltipDisabled]=\"tooltipDisabled\"\n        [tooltipPlacement]=\"tooltipPlacement\"\n        [tooltipType]=\"tooltipType\"\n        [tooltipTitle]=\"tooltipTemplate ? undefined : bar.tooltipText\"\n        [tooltipTemplate]=\"tooltipTemplate\"\n        [tooltipContext]=\"bar.data\"\n        [noBarWhenZero]=\"noBarWhenZero\"\n        [animations]=\"animations\"\n      ></svg:g>\n    </svg:g>\n    <svg:g *ngIf=\"showDataLabel\">\n      <svg:g\n        ngx-charts-bar-label\n        *ngFor=\"let b of barsForDataLabels; let i = index; trackBy: trackDataLabelBy\"\n        [barX]=\"b.x\"\n        [barY]=\"b.y\"\n        [barWidth]=\"b.width\"\n        [barHeight]=\"b.height\"\n        [value]=\"b.total\"\n        [valueFormatting]=\"dataLabelFormatting\"\n        [orientation]=\"barOrientation.Vertical\"\n        (dimensionsChanged)=\"dataLabelHeightChanged.emit({ size: $event, index: i })\"\n      />\n    </svg:g>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      animations: [trigger('animationState', [transition(':leave', [style({\n        opacity: 1\n      }), animate(500, style({\n        opacity: 0\n      }))])])]\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }];\n  }, {\n    dims: [{\n      type: Input\n    }],\n    type: [{\n      type: Input\n    }],\n    series: [{\n      type: Input\n    }],\n    xScale: [{\n      type: Input\n    }],\n    yScale: [{\n      type: Input\n    }],\n    colors: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    seriesName: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    tooltipTemplate: [{\n      type: Input\n    }],\n    roundEdges: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }],\n    showDataLabel: [{\n      type: Input\n    }],\n    dataLabelFormatting: [{\n      type: Input\n    }],\n    noBarWhenZero: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    dataLabelHeightChanged: [{\n      type: Output\n    }]\n  });\n})();\nclass BarVerticalComponent extends BaseChartComponent {\n  constructor() {\n    super(...arguments);\n    this.legend = false;\n    this.legendTitle = 'Legend';\n    this.legendPosition = LegendPosition.Right;\n    this.tooltipDisabled = false;\n    this.showGridLines = true;\n    this.activeEntries = [];\n    this.trimXAxisTicks = true;\n    this.trimYAxisTicks = true;\n    this.rotateXAxisTicks = true;\n    this.maxXAxisTickLength = 16;\n    this.maxYAxisTickLength = 16;\n    this.barPadding = 8;\n    this.roundDomains = false;\n    this.roundEdges = true;\n    this.showDataLabel = false;\n    this.noBarWhenZero = true;\n    this.wrapTicks = false;\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.margin = [10, 20, 10, 20];\n    this.xAxisHeight = 0;\n    this.yAxisWidth = 0;\n    this.dataLabelMaxHeight = {\n      negative: 0,\n      positive: 0\n    };\n  }\n  update() {\n    super.update();\n    if (!this.showDataLabel) {\n      this.dataLabelMaxHeight = {\n        negative: 0,\n        positive: 0\n      };\n    }\n    this.margin = [10 + this.dataLabelMaxHeight.positive, 20, 10 + this.dataLabelMaxHeight.negative, 20];\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.schemeType,\n      legendPosition: this.legendPosition\n    });\n    this.formatDates();\n    if (this.showDataLabel) {\n      this.dims.height -= this.dataLabelMaxHeight.negative;\n    }\n    this.xScale = this.getXScale();\n    this.yScale = this.getYScale();\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0] + this.dataLabelMaxHeight.negative})`;\n  }\n  getXScale() {\n    this.xDomain = this.getXDomain();\n    const spacing = this.xDomain.length / (this.dims.width / this.barPadding + 1);\n    return scaleBand().range([0, this.dims.width]).paddingInner(spacing).domain(this.xDomain);\n  }\n  getYScale() {\n    this.yDomain = this.getYDomain();\n    const scale = scaleLinear().range([this.dims.height, 0]).domain(this.yDomain);\n    return this.roundDomains ? scale.nice() : scale;\n  }\n  getXDomain() {\n    return this.results.map(d => d.label);\n  }\n  getYDomain() {\n    const values = this.results.map(d => d.value);\n    let min = this.yScaleMin ? Math.min(this.yScaleMin, ...values) : Math.min(0, ...values);\n    if (this.yAxisTicks && !this.yAxisTicks.some(isNaN)) {\n      min = Math.min(min, ...this.yAxisTicks);\n    }\n    let max = this.yScaleMax ? Math.max(this.yScaleMax, ...values) : Math.max(0, ...values);\n    if (this.yAxisTicks && !this.yAxisTicks.some(isNaN)) {\n      max = Math.max(max, ...this.yAxisTicks);\n    }\n    return [min, max];\n  }\n  onClick(data) {\n    this.select.emit(data);\n  }\n  setColors() {\n    let domain;\n    if (this.schemeType === ScaleType.Ordinal) {\n      domain = this.xDomain;\n    } else {\n      domain = this.yDomain;\n    }\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n  }\n  getLegendOptions() {\n    const opts = {\n      scaleType: this.schemeType,\n      colors: undefined,\n      domain: [],\n      title: undefined,\n      position: this.legendPosition\n    };\n    if (opts.scaleType === ScaleType.Ordinal) {\n      opts.domain = this.xDomain;\n      opts.colors = this.colors;\n      opts.title = this.legendTitle;\n    } else {\n      opts.domain = this.yDomain;\n      opts.colors = this.colors.scale;\n    }\n    return opts;\n  }\n  updateYAxisWidth({\n    width\n  }) {\n    this.yAxisWidth = width;\n    this.update();\n  }\n  updateXAxisHeight({\n    height\n  }) {\n    this.xAxisHeight = height;\n    this.update();\n  }\n  onDataLabelMaxHeightChanged(event) {\n    if (event.size.negative) {\n      this.dataLabelMaxHeight.negative = Math.max(this.dataLabelMaxHeight.negative, event.size.height);\n    } else {\n      this.dataLabelMaxHeight.positive = Math.max(this.dataLabelMaxHeight.positive, event.size.height);\n    }\n    if (event.index === this.results.length - 1) {\n      setTimeout(() => this.update());\n    }\n  }\n  onActivate(item, fromLegend = false) {\n    item = this.results.find(d => {\n      if (fromLegend) {\n        return d.label === item.name;\n      } else {\n        return d.name === item.name;\n      }\n    });\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value && d.series === item.series;\n    });\n    if (idx > -1) {\n      return;\n    }\n    this.activeEntries = [item, ...this.activeEntries];\n    this.activate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n  onDeactivate(item, fromLegend = false) {\n    item = this.results.find(d => {\n      if (fromLegend) {\n        return d.label === item.name;\n      } else {\n        return d.name === item.name;\n      }\n    });\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value && d.series === item.series;\n    });\n    this.activeEntries.splice(idx, 1);\n    this.activeEntries = [...this.activeEntries];\n    this.deactivate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n}\nBarVerticalComponent.ɵfac = /* @__PURE__ */(() => {\n  let ɵBarVerticalComponent_BaseFactory;\n  return function BarVerticalComponent_Factory(t) {\n    return (ɵBarVerticalComponent_BaseFactory || (ɵBarVerticalComponent_BaseFactory = i0.ɵɵgetInheritedFactory(BarVerticalComponent)))(t || BarVerticalComponent);\n  };\n})();\nBarVerticalComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: BarVerticalComponent,\n  selectors: [[\"ngx-charts-bar-vertical\"]],\n  contentQueries: function BarVerticalComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n    }\n  },\n  inputs: {\n    legend: \"legend\",\n    legendTitle: \"legendTitle\",\n    legendPosition: \"legendPosition\",\n    xAxis: \"xAxis\",\n    yAxis: \"yAxis\",\n    showXAxisLabel: \"showXAxisLabel\",\n    showYAxisLabel: \"showYAxisLabel\",\n    xAxisLabel: \"xAxisLabel\",\n    yAxisLabel: \"yAxisLabel\",\n    tooltipDisabled: \"tooltipDisabled\",\n    gradient: \"gradient\",\n    showGridLines: \"showGridLines\",\n    activeEntries: \"activeEntries\",\n    schemeType: \"schemeType\",\n    trimXAxisTicks: \"trimXAxisTicks\",\n    trimYAxisTicks: \"trimYAxisTicks\",\n    rotateXAxisTicks: \"rotateXAxisTicks\",\n    maxXAxisTickLength: \"maxXAxisTickLength\",\n    maxYAxisTickLength: \"maxYAxisTickLength\",\n    xAxisTickFormatting: \"xAxisTickFormatting\",\n    yAxisTickFormatting: \"yAxisTickFormatting\",\n    xAxisTicks: \"xAxisTicks\",\n    yAxisTicks: \"yAxisTicks\",\n    barPadding: \"barPadding\",\n    roundDomains: \"roundDomains\",\n    roundEdges: \"roundEdges\",\n    yScaleMax: \"yScaleMax\",\n    yScaleMin: \"yScaleMin\",\n    showDataLabel: \"showDataLabel\",\n    dataLabelFormatting: \"dataLabelFormatting\",\n    noBarWhenZero: \"noBarWhenZero\",\n    wrapTicks: \"wrapTicks\"\n  },\n  outputs: {\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 5,\n  vars: 25,\n  consts: [[3, \"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\", \"view\", \"showLegend\", \"legendOptions\", \"activeEntries\", \"animations\"], [1, \"bar-chart\", \"chart\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"xAxisOffset\", \"wrapTicks\", \"dimensionsChanged\", 4, \"ngIf\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\", \"dimensionsChanged\", 4, \"ngIf\"], [\"ngx-charts-series-vertical\", \"\", 3, \"activate\", \"deactivate\", \"select\", \"dataLabelHeightChanged\", \"xScale\", \"yScale\", \"colors\", \"series\", \"dims\", \"gradient\", \"tooltipDisabled\", \"tooltipTemplate\", \"showDataLabel\", \"dataLabelFormatting\", \"activeEntries\", \"roundEdges\", \"animations\", \"noBarWhenZero\"], [\"ngx-charts-x-axis\", \"\", 3, \"dimensionsChanged\", \"xScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"xAxisOffset\", \"wrapTicks\"], [\"ngx-charts-y-axis\", \"\", 3, \"dimensionsChanged\", \"yScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\"]],\n  template: function BarVerticalComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n      i0.ɵɵlistener(\"legendLabelClick\", function BarVerticalComponent_Template_ngx_charts_chart_legendLabelClick_0_listener($event) {\n        return ctx.onClick($event);\n      })(\"legendLabelActivate\", function BarVerticalComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener($event) {\n        return ctx.onActivate($event, true);\n      })(\"legendLabelDeactivate\", function BarVerticalComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener($event) {\n        return ctx.onDeactivate($event, true);\n      });\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"g\", 1);\n      i0.ɵɵtemplate(2, BarVerticalComponent__svg_g_2_Template, 1, 12, \"g\", 2)(3, BarVerticalComponent__svg_g_3_Template, 1, 10, \"g\", 3);\n      i0.ɵɵelementStart(4, \"g\", 4);\n      i0.ɵɵlistener(\"activate\", function BarVerticalComponent_Template_g_activate_4_listener($event) {\n        return ctx.onActivate($event);\n      })(\"deactivate\", function BarVerticalComponent_Template_g_deactivate_4_listener($event) {\n        return ctx.onDeactivate($event);\n      })(\"select\", function BarVerticalComponent_Template_g_select_4_listener($event) {\n        return ctx.onClick($event);\n      })(\"dataLabelHeightChanged\", function BarVerticalComponent_Template_g_dataLabelHeightChanged_4_listener($event) {\n        return ctx.onDataLabelMaxHeightChanged($event);\n      });\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(22, _c24, ctx.width, ctx.height))(\"showLegend\", ctx.legend)(\"legendOptions\", ctx.legendOptions)(\"activeEntries\", ctx.activeEntries)(\"animations\", ctx.animations);\n      i0.ɵɵadvance();\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngIf\", ctx.xAxis);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngIf\", ctx.yAxis);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"xScale\", ctx.xScale)(\"yScale\", ctx.yScale)(\"colors\", ctx.colors)(\"series\", ctx.results)(\"dims\", ctx.dims)(\"gradient\", ctx.gradient)(\"tooltipDisabled\", ctx.tooltipDisabled)(\"tooltipTemplate\", ctx.tooltipTemplate)(\"showDataLabel\", ctx.showDataLabel)(\"dataLabelFormatting\", ctx.dataLabelFormatting)(\"activeEntries\", ctx.activeEntries)(\"roundEdges\", ctx.roundEdges)(\"animations\", ctx.animations)(\"noBarWhenZero\", ctx.noBarWhenZero);\n    }\n  },\n  dependencies: [ChartComponent, XAxisComponent, YAxisComponent, SeriesVerticalComponent, i2.NgIf],\n  styles: [_c25],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BarVerticalComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-bar-vertical',\n      template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, true)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [xAxisOffset]=\"dataLabelMaxHeight.negative\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-series-vertical\n          [xScale]=\"xScale\"\n          [yScale]=\"yScale\"\n          [colors]=\"colors\"\n          [series]=\"results\"\n          [dims]=\"dims\"\n          [gradient]=\"gradient\"\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [showDataLabel]=\"showDataLabel\"\n          [dataLabelFormatting]=\"dataLabelFormatting\"\n          [activeEntries]=\"activeEntries\"\n          [roundEdges]=\"roundEdges\"\n          [animations]=\"animations\"\n          [noBarWhenZero]=\"noBarWhenZero\"\n          (activate)=\"onActivate($event)\"\n          (deactivate)=\"onDeactivate($event)\"\n          (select)=\"onClick($event)\"\n          (dataLabelHeightChanged)=\"onDataLabelMaxHeightChanged($event)\"\n        ></svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"]\n    }]\n  }], null, {\n    legend: [{\n      type: Input\n    }],\n    legendTitle: [{\n      type: Input\n    }],\n    legendPosition: [{\n      type: Input\n    }],\n    xAxis: [{\n      type: Input\n    }],\n    yAxis: [{\n      type: Input\n    }],\n    showXAxisLabel: [{\n      type: Input\n    }],\n    showYAxisLabel: [{\n      type: Input\n    }],\n    xAxisLabel: [{\n      type: Input\n    }],\n    yAxisLabel: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    showGridLines: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    schemeType: [{\n      type: Input\n    }],\n    trimXAxisTicks: [{\n      type: Input\n    }],\n    trimYAxisTicks: [{\n      type: Input\n    }],\n    rotateXAxisTicks: [{\n      type: Input\n    }],\n    maxXAxisTickLength: [{\n      type: Input\n    }],\n    maxYAxisTickLength: [{\n      type: Input\n    }],\n    xAxisTickFormatting: [{\n      type: Input\n    }],\n    yAxisTickFormatting: [{\n      type: Input\n    }],\n    xAxisTicks: [{\n      type: Input\n    }],\n    yAxisTicks: [{\n      type: Input\n    }],\n    barPadding: [{\n      type: Input\n    }],\n    roundDomains: [{\n      type: Input\n    }],\n    roundEdges: [{\n      type: Input\n    }],\n    yScaleMax: [{\n      type: Input\n    }],\n    yScaleMin: [{\n      type: Input\n    }],\n    showDataLabel: [{\n      type: Input\n    }],\n    dataLabelFormatting: [{\n      type: Input\n    }],\n    noBarWhenZero: [{\n      type: Input\n    }],\n    wrapTicks: [{\n      type: Input\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    tooltipTemplate: [{\n      type: ContentChild,\n      args: ['tooltipTemplate']\n    }]\n  });\n})();\nclass BarVertical2DComponent extends BaseChartComponent {\n  constructor() {\n    super(...arguments);\n    this.legend = false;\n    this.legendTitle = 'Legend';\n    this.legendPosition = LegendPosition.Right;\n    this.tooltipDisabled = false;\n    this.scaleType = ScaleType.Ordinal;\n    this.showGridLines = true;\n    this.activeEntries = [];\n    this.trimXAxisTicks = true;\n    this.trimYAxisTicks = true;\n    this.rotateXAxisTicks = true;\n    this.maxXAxisTickLength = 16;\n    this.maxYAxisTickLength = 16;\n    this.groupPadding = 16;\n    this.barPadding = 8;\n    this.roundDomains = false;\n    this.roundEdges = true;\n    this.showDataLabel = false;\n    this.noBarWhenZero = true;\n    this.wrapTicks = false;\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.margin = [10, 20, 10, 20];\n    this.xAxisHeight = 0;\n    this.yAxisWidth = 0;\n    this.dataLabelMaxHeight = {\n      negative: 0,\n      positive: 0\n    };\n    this.isSSR = false;\n    this.barOrientation = BarOrientation;\n    this.trackBy = (index, item) => {\n      return item.name;\n    };\n  }\n  ngOnInit() {\n    if (isPlatformServer(this.platformId)) {\n      this.isSSR = true;\n    }\n  }\n  update() {\n    super.update();\n    if (!this.showDataLabel) {\n      this.dataLabelMaxHeight = {\n        negative: 0,\n        positive: 0\n      };\n    }\n    this.margin = [10 + this.dataLabelMaxHeight.positive, 20, 10 + this.dataLabelMaxHeight.negative, 20];\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.schemeType,\n      legendPosition: this.legendPosition\n    });\n    if (this.showDataLabel) {\n      this.dims.height -= this.dataLabelMaxHeight.negative;\n    }\n    this.formatDates();\n    this.groupDomain = this.getGroupDomain();\n    this.innerDomain = this.getInnerDomain();\n    this.valueDomain = this.getValueDomain();\n    this.groupScale = this.getGroupScale();\n    this.innerScale = this.getInnerScale();\n    this.valueScale = this.getValueScale();\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0] + this.dataLabelMaxHeight.negative})`;\n  }\n  onDataLabelMaxHeightChanged(event, groupIndex) {\n    if (event.size.negative) {\n      this.dataLabelMaxHeight.negative = Math.max(this.dataLabelMaxHeight.negative, event.size.height);\n    } else {\n      this.dataLabelMaxHeight.positive = Math.max(this.dataLabelMaxHeight.positive, event.size.height);\n    }\n    if (groupIndex === this.results.length - 1) {\n      setTimeout(() => this.update());\n    }\n  }\n  getGroupScale() {\n    const spacing = this.groupDomain.length / (this.dims.height / this.groupPadding + 1);\n    return scaleBand().rangeRound([0, this.dims.width]).paddingInner(spacing).paddingOuter(spacing / 2).domain(this.groupDomain);\n  }\n  getInnerScale() {\n    const width = this.groupScale.bandwidth();\n    const spacing = this.innerDomain.length / (width / this.barPadding + 1);\n    return scaleBand().rangeRound([0, width]).paddingInner(spacing).domain(this.innerDomain);\n  }\n  getValueScale() {\n    const scale = scaleLinear().range([this.dims.height, 0]).domain(this.valueDomain);\n    return this.roundDomains ? scale.nice() : scale;\n  }\n  getGroupDomain() {\n    const domain = [];\n    for (const group of this.results) {\n      if (!domain.includes(group.label)) {\n        domain.push(group.label);\n      }\n    }\n    return domain;\n  }\n  getInnerDomain() {\n    const domain = [];\n    for (const group of this.results) {\n      for (const d of group.series) {\n        if (!domain.includes(d.label)) {\n          domain.push(d.label);\n        }\n      }\n    }\n    return domain;\n  }\n  getValueDomain() {\n    const domain = [];\n    for (const group of this.results) {\n      for (const d of group.series) {\n        if (!domain.includes(d.value)) {\n          domain.push(d.value);\n        }\n      }\n    }\n    const min = Math.min(0, ...domain);\n    const max = this.yScaleMax ? Math.max(this.yScaleMax, ...domain) : Math.max(0, ...domain);\n    return [min, max];\n  }\n  groupTransform(group) {\n    return `translate(${this.groupScale(group.label)}, 0)`;\n  }\n  onClick(data, group) {\n    if (group) {\n      data.series = group.name;\n    }\n    this.select.emit(data);\n  }\n  setColors() {\n    let domain;\n    if (this.schemeType === ScaleType.Ordinal) {\n      domain = this.innerDomain;\n    } else {\n      domain = this.valueDomain;\n    }\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n  }\n  getLegendOptions() {\n    const opts = {\n      scaleType: this.schemeType,\n      colors: undefined,\n      domain: [],\n      title: undefined,\n      position: this.legendPosition\n    };\n    if (opts.scaleType === ScaleType.Ordinal) {\n      opts.domain = this.innerDomain;\n      opts.colors = this.colors;\n      opts.title = this.legendTitle;\n    } else {\n      opts.domain = this.valueDomain;\n      opts.colors = this.colors.scale;\n    }\n    return opts;\n  }\n  updateYAxisWidth({\n    width\n  }) {\n    this.yAxisWidth = width;\n    this.update();\n  }\n  updateXAxisHeight({\n    height\n  }) {\n    this.xAxisHeight = height;\n    this.update();\n  }\n  onActivate(event, group, fromLegend = false) {\n    const item = Object.assign({}, event);\n    if (group) {\n      item.series = group.name;\n    }\n    const items = this.results.map(g => g.series).flat().filter(i => {\n      if (fromLegend) {\n        return i.label === item.name;\n      } else {\n        return i.name === item.name && i.series === item.series;\n      }\n    });\n    this.activeEntries = [...items];\n    this.activate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n  onDeactivate(event, group, fromLegend = false) {\n    const item = Object.assign({}, event);\n    if (group) {\n      item.series = group.name;\n    }\n    this.activeEntries = this.activeEntries.filter(i => {\n      if (fromLegend) {\n        return i.label !== item.name;\n      } else {\n        return !(i.name === item.name && i.series === item.series);\n      }\n    });\n    this.deactivate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n}\nBarVertical2DComponent.ɵfac = /* @__PURE__ */(() => {\n  let ɵBarVertical2DComponent_BaseFactory;\n  return function BarVertical2DComponent_Factory(t) {\n    return (ɵBarVertical2DComponent_BaseFactory || (ɵBarVertical2DComponent_BaseFactory = i0.ɵɵgetInheritedFactory(BarVertical2DComponent)))(t || BarVertical2DComponent);\n  };\n})();\nBarVertical2DComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: BarVertical2DComponent,\n  selectors: [[\"ngx-charts-bar-vertical-2d\"]],\n  contentQueries: function BarVertical2DComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n    }\n  },\n  inputs: {\n    legend: \"legend\",\n    legendTitle: \"legendTitle\",\n    legendPosition: \"legendPosition\",\n    xAxis: \"xAxis\",\n    yAxis: \"yAxis\",\n    showXAxisLabel: \"showXAxisLabel\",\n    showYAxisLabel: \"showYAxisLabel\",\n    xAxisLabel: \"xAxisLabel\",\n    yAxisLabel: \"yAxisLabel\",\n    tooltipDisabled: \"tooltipDisabled\",\n    scaleType: \"scaleType\",\n    gradient: \"gradient\",\n    showGridLines: \"showGridLines\",\n    activeEntries: \"activeEntries\",\n    schemeType: \"schemeType\",\n    trimXAxisTicks: \"trimXAxisTicks\",\n    trimYAxisTicks: \"trimYAxisTicks\",\n    rotateXAxisTicks: \"rotateXAxisTicks\",\n    maxXAxisTickLength: \"maxXAxisTickLength\",\n    maxYAxisTickLength: \"maxYAxisTickLength\",\n    xAxisTickFormatting: \"xAxisTickFormatting\",\n    yAxisTickFormatting: \"yAxisTickFormatting\",\n    xAxisTicks: \"xAxisTicks\",\n    yAxisTicks: \"yAxisTicks\",\n    groupPadding: \"groupPadding\",\n    barPadding: \"barPadding\",\n    roundDomains: \"roundDomains\",\n    roundEdges: \"roundEdges\",\n    yScaleMax: \"yScaleMax\",\n    showDataLabel: \"showDataLabel\",\n    dataLabelFormatting: \"dataLabelFormatting\",\n    noBarWhenZero: \"noBarWhenZero\",\n    wrapTicks: \"wrapTicks\"\n  },\n  outputs: {\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 7,\n  vars: 18,\n  consts: [[3, \"legendLabelActivate\", \"legendLabelDeactivate\", \"legendLabelClick\", \"view\", \"showLegend\", \"legendOptions\", \"activeEntries\", \"animations\"], [1, \"bar-chart\", \"chart\"], [\"ngx-charts-grid-panel-series\", \"\", 3, \"xScale\", \"yScale\", \"data\", \"dims\", \"orient\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"xAxisOffset\", \"wrapTicks\", \"dimensionsChanged\", 4, \"ngIf\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\", \"dimensionsChanged\", 4, \"ngIf\"], [4, \"ngIf\"], [\"ngx-charts-x-axis\", \"\", 3, \"dimensionsChanged\", \"xScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"xAxisOffset\", \"wrapTicks\"], [\"ngx-charts-y-axis\", \"\", 3, \"dimensionsChanged\", \"yScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\"], [\"ngx-charts-series-vertical\", \"\", 3, \"activeEntries\", \"xScale\", \"yScale\", \"colors\", \"series\", \"dims\", \"gradient\", \"tooltipDisabled\", \"tooltipTemplate\", \"showDataLabel\", \"dataLabelFormatting\", \"seriesName\", \"roundEdges\", \"animations\", \"noBarWhenZero\", \"select\", \"activate\", \"deactivate\", \"dataLabelHeightChanged\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-series-vertical\", \"\", 3, \"select\", \"activate\", \"deactivate\", \"dataLabelHeightChanged\", \"activeEntries\", \"xScale\", \"yScale\", \"colors\", \"series\", \"dims\", \"gradient\", \"tooltipDisabled\", \"tooltipTemplate\", \"showDataLabel\", \"dataLabelFormatting\", \"seriesName\", \"roundEdges\", \"animations\", \"noBarWhenZero\"]],\n  template: function BarVertical2DComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n      i0.ɵɵlistener(\"legendLabelActivate\", function BarVertical2DComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener($event) {\n        return ctx.onActivate($event, undefined, true);\n      })(\"legendLabelDeactivate\", function BarVertical2DComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener($event) {\n        return ctx.onDeactivate($event, undefined, true);\n      })(\"legendLabelClick\", function BarVertical2DComponent_Template_ngx_charts_chart_legendLabelClick_0_listener($event) {\n        return ctx.onClick($event);\n      });\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"g\", 1);\n      i0.ɵɵelement(2, \"g\", 2);\n      i0.ɵɵtemplate(3, BarVertical2DComponent__svg_g_3_Template, 1, 11, \"g\", 3)(4, BarVertical2DComponent__svg_g_4_Template, 1, 10, \"g\", 4)(5, BarVertical2DComponent__svg_g_5_Template, 2, 2, \"g\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(6, BarVertical2DComponent__svg_g_6_Template, 2, 2, \"g\", 5);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(15, _c24, ctx.width, ctx.height))(\"showLegend\", ctx.legend)(\"legendOptions\", ctx.legendOptions)(\"activeEntries\", ctx.activeEntries)(\"animations\", ctx.animations);\n      i0.ɵɵadvance();\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"xScale\", ctx.groupScale)(\"yScale\", ctx.valueScale)(\"data\", ctx.results)(\"dims\", ctx.dims)(\"orient\", ctx.barOrientation.Vertical);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngIf\", ctx.xAxis);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngIf\", ctx.yAxis);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngIf\", !ctx.isSSR);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngIf\", ctx.isSSR);\n    }\n  },\n  dependencies: [ChartComponent, GridPanelSeriesComponent, XAxisComponent, YAxisComponent, SeriesVerticalComponent, i2.NgIf, i2.NgForOf],\n  styles: [_c25],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('animationState', [transition(':leave', [style({\n      opacity: 1,\n      transform: '*'\n    }), animate(500, style({\n      opacity: 0,\n      transform: 'scale(0)'\n    }))])])]\n  },\n  changeDetection: 0\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BarVertical2DComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-bar-vertical-2d',\n      template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, undefined, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, undefined, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-grid-panel-series\n          [xScale]=\"groupScale\"\n          [yScale]=\"valueScale\"\n          [data]=\"results\"\n          [dims]=\"dims\"\n          [orient]=\"barOrientation.Vertical\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"groupScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [xAxisOffset]=\"dataLabelMaxHeight.negative\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"valueScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g *ngIf=\"!isSSR\">\n          <svg:g\n            ngx-charts-series-vertical\n            *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n            [@animationState]=\"'active'\"\n            [attr.transform]=\"groupTransform(group)\"\n            [activeEntries]=\"activeEntries\"\n            [xScale]=\"innerScale\"\n            [yScale]=\"valueScale\"\n            [colors]=\"colors\"\n            [series]=\"group.series\"\n            [dims]=\"dims\"\n            [gradient]=\"gradient\"\n            [tooltipDisabled]=\"tooltipDisabled\"\n            [tooltipTemplate]=\"tooltipTemplate\"\n            [showDataLabel]=\"showDataLabel\"\n            [dataLabelFormatting]=\"dataLabelFormatting\"\n            [seriesName]=\"group.name\"\n            [roundEdges]=\"roundEdges\"\n            [animations]=\"animations\"\n            [noBarWhenZero]=\"noBarWhenZero\"\n            (select)=\"onClick($event, group)\"\n            (activate)=\"onActivate($event, group)\"\n            (deactivate)=\"onDeactivate($event, group)\"\n            (dataLabelHeightChanged)=\"onDataLabelMaxHeightChanged($event, index)\"\n          />\n        </svg:g>\n      </svg:g>\n      <svg:g *ngIf=\"isSSR\">\n        <svg:g\n          ngx-charts-series-vertical\n          *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n          [attr.transform]=\"groupTransform(group)\"\n          [activeEntries]=\"activeEntries\"\n          [xScale]=\"innerScale\"\n          [yScale]=\"valueScale\"\n          [colors]=\"colors\"\n          [series]=\"group.series\"\n          [dims]=\"dims\"\n          [gradient]=\"gradient\"\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [showDataLabel]=\"showDataLabel\"\n          [dataLabelFormatting]=\"dataLabelFormatting\"\n          [seriesName]=\"group.name\"\n          [roundEdges]=\"roundEdges\"\n          [animations]=\"animations\"\n          [noBarWhenZero]=\"noBarWhenZero\"\n          (select)=\"onClick($event, group)\"\n          (activate)=\"onActivate($event, group)\"\n          (deactivate)=\"onDeactivate($event, group)\"\n          (dataLabelHeightChanged)=\"onDataLabelMaxHeightChanged($event, index)\"\n        />\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      animations: [trigger('animationState', [transition(':leave', [style({\n        opacity: 1,\n        transform: '*'\n      }), animate(500, style({\n        opacity: 0,\n        transform: 'scale(0)'\n      }))])])],\n      styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"]\n    }]\n  }], null, {\n    legend: [{\n      type: Input\n    }],\n    legendTitle: [{\n      type: Input\n    }],\n    legendPosition: [{\n      type: Input\n    }],\n    xAxis: [{\n      type: Input\n    }],\n    yAxis: [{\n      type: Input\n    }],\n    showXAxisLabel: [{\n      type: Input\n    }],\n    showYAxisLabel: [{\n      type: Input\n    }],\n    xAxisLabel: [{\n      type: Input\n    }],\n    yAxisLabel: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    scaleType: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    showGridLines: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    schemeType: [{\n      type: Input\n    }],\n    trimXAxisTicks: [{\n      type: Input\n    }],\n    trimYAxisTicks: [{\n      type: Input\n    }],\n    rotateXAxisTicks: [{\n      type: Input\n    }],\n    maxXAxisTickLength: [{\n      type: Input\n    }],\n    maxYAxisTickLength: [{\n      type: Input\n    }],\n    xAxisTickFormatting: [{\n      type: Input\n    }],\n    yAxisTickFormatting: [{\n      type: Input\n    }],\n    xAxisTicks: [{\n      type: Input\n    }],\n    yAxisTicks: [{\n      type: Input\n    }],\n    groupPadding: [{\n      type: Input\n    }],\n    barPadding: [{\n      type: Input\n    }],\n    roundDomains: [{\n      type: Input\n    }],\n    roundEdges: [{\n      type: Input\n    }],\n    yScaleMax: [{\n      type: Input\n    }],\n    showDataLabel: [{\n      type: Input\n    }],\n    dataLabelFormatting: [{\n      type: Input\n    }],\n    noBarWhenZero: [{\n      type: Input\n    }],\n    wrapTicks: [{\n      type: Input\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    tooltipTemplate: [{\n      type: ContentChild,\n      args: ['tooltipTemplate']\n    }]\n  });\n})();\nclass BarVerticalNormalizedComponent extends BaseChartComponent {\n  constructor() {\n    super(...arguments);\n    this.legend = false;\n    this.legendTitle = 'Legend';\n    this.legendPosition = LegendPosition.Right;\n    this.tooltipDisabled = false;\n    this.showGridLines = true;\n    this.activeEntries = [];\n    this.trimXAxisTicks = true;\n    this.trimYAxisTicks = true;\n    this.rotateXAxisTicks = true;\n    this.maxXAxisTickLength = 16;\n    this.maxYAxisTickLength = 16;\n    this.barPadding = 8;\n    this.roundDomains = false;\n    this.noBarWhenZero = true;\n    this.wrapTicks = false;\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.valueDomain = [0, 100];\n    this.margin = [10, 20, 10, 20];\n    this.xAxisHeight = 0;\n    this.yAxisWidth = 0;\n    this.isSSR = false;\n    this.barChartType = BarChartType;\n    this.trackBy = (index, item) => {\n      return item.name;\n    };\n  }\n  ngOnInit() {\n    if (isPlatformServer(this.platformId)) {\n      this.isSSR = true;\n    }\n  }\n  update() {\n    super.update();\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.schemeType,\n      legendPosition: this.legendPosition\n    });\n    this.formatDates();\n    this.groupDomain = this.getGroupDomain();\n    this.innerDomain = this.getInnerDomain();\n    this.xScale = this.getXScale();\n    this.yScale = this.getYScale();\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n  }\n  getGroupDomain() {\n    const domain = [];\n    for (const group of this.results) {\n      if (!domain.includes(group.label)) {\n        domain.push(group.label);\n      }\n    }\n    return domain;\n  }\n  getInnerDomain() {\n    const domain = [];\n    for (const group of this.results) {\n      for (const d of group.series) {\n        if (!domain.includes(d.label)) {\n          domain.push(d.label);\n        }\n      }\n    }\n    return domain;\n  }\n  getXScale() {\n    const spacing = this.groupDomain.length / (this.dims.width / this.barPadding + 1);\n    return scaleBand().rangeRound([0, this.dims.width]).paddingInner(spacing).domain(this.groupDomain);\n  }\n  getYScale() {\n    const scale = scaleLinear().range([this.dims.height, 0]).domain(this.valueDomain);\n    return this.roundDomains ? scale.nice() : scale;\n  }\n  groupTransform(group) {\n    return `translate(${this.xScale(group.name)}, 0)`;\n  }\n  onClick(data, group) {\n    if (group) {\n      data.series = group.name;\n    }\n    this.select.emit(data);\n  }\n  setColors() {\n    let domain;\n    if (this.schemeType === ScaleType.Ordinal) {\n      domain = this.innerDomain;\n    } else {\n      domain = this.valueDomain;\n    }\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n  }\n  getLegendOptions() {\n    const opts = {\n      scaleType: this.schemeType,\n      colors: undefined,\n      domain: [],\n      title: undefined,\n      position: this.legendPosition\n    };\n    if (opts.scaleType === ScaleType.Ordinal) {\n      opts.domain = this.innerDomain;\n      opts.colors = this.colors;\n      opts.title = this.legendTitle;\n    } else {\n      opts.domain = this.valueDomain;\n      opts.colors = this.colors.scale;\n    }\n    return opts;\n  }\n  updateYAxisWidth({\n    width\n  }) {\n    this.yAxisWidth = width;\n    this.update();\n  }\n  updateXAxisHeight({\n    height\n  }) {\n    this.xAxisHeight = height;\n    this.update();\n  }\n  onActivate(event, group, fromLegend = false) {\n    const item = Object.assign({}, event);\n    if (group) {\n      item.series = group.name;\n    }\n    const items = this.results.map(g => g.series).flat().filter(i => {\n      if (fromLegend) {\n        return i.label === item.name;\n      } else {\n        return i.name === item.name && i.series === item.series;\n      }\n    });\n    this.activeEntries = [...items];\n    this.activate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n  onDeactivate(event, group, fromLegend = false) {\n    const item = Object.assign({}, event);\n    if (group) {\n      item.series = group.name;\n    }\n    this.activeEntries = this.activeEntries.filter(i => {\n      if (fromLegend) {\n        return i.label !== item.name;\n      } else {\n        return !(i.name === item.name && i.series === item.series);\n      }\n    });\n    this.deactivate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n}\nBarVerticalNormalizedComponent.ɵfac = /* @__PURE__ */(() => {\n  let ɵBarVerticalNormalizedComponent_BaseFactory;\n  return function BarVerticalNormalizedComponent_Factory(t) {\n    return (ɵBarVerticalNormalizedComponent_BaseFactory || (ɵBarVerticalNormalizedComponent_BaseFactory = i0.ɵɵgetInheritedFactory(BarVerticalNormalizedComponent)))(t || BarVerticalNormalizedComponent);\n  };\n})();\nBarVerticalNormalizedComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: BarVerticalNormalizedComponent,\n  selectors: [[\"ngx-charts-bar-vertical-normalized\"]],\n  contentQueries: function BarVerticalNormalizedComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n    }\n  },\n  inputs: {\n    legend: \"legend\",\n    legendTitle: \"legendTitle\",\n    legendPosition: \"legendPosition\",\n    xAxis: \"xAxis\",\n    yAxis: \"yAxis\",\n    showXAxisLabel: \"showXAxisLabel\",\n    showYAxisLabel: \"showYAxisLabel\",\n    xAxisLabel: \"xAxisLabel\",\n    yAxisLabel: \"yAxisLabel\",\n    tooltipDisabled: \"tooltipDisabled\",\n    gradient: \"gradient\",\n    showGridLines: \"showGridLines\",\n    activeEntries: \"activeEntries\",\n    schemeType: \"schemeType\",\n    trimXAxisTicks: \"trimXAxisTicks\",\n    trimYAxisTicks: \"trimYAxisTicks\",\n    rotateXAxisTicks: \"rotateXAxisTicks\",\n    maxXAxisTickLength: \"maxXAxisTickLength\",\n    maxYAxisTickLength: \"maxYAxisTickLength\",\n    xAxisTickFormatting: \"xAxisTickFormatting\",\n    yAxisTickFormatting: \"yAxisTickFormatting\",\n    xAxisTicks: \"xAxisTicks\",\n    yAxisTicks: \"yAxisTicks\",\n    barPadding: \"barPadding\",\n    roundDomains: \"roundDomains\",\n    noBarWhenZero: \"noBarWhenZero\",\n    wrapTicks: \"wrapTicks\"\n  },\n  outputs: {\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 6,\n  vars: 13,\n  consts: [[3, \"legendLabelActivate\", \"legendLabelDeactivate\", \"legendLabelClick\", \"view\", \"showLegend\", \"legendOptions\", \"activeEntries\", \"animations\"], [1, \"bar-chart\", \"chart\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\", \"dimensionsChanged\", 4, \"ngIf\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\", \"dimensionsChanged\", 4, \"ngIf\"], [4, \"ngIf\"], [\"ngx-charts-x-axis\", \"\", 3, \"dimensionsChanged\", \"xScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\"], [\"ngx-charts-y-axis\", \"\", 3, \"dimensionsChanged\", \"yScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\"], [4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-series-vertical\", \"\", 3, \"select\", \"activate\", \"deactivate\", \"type\", \"xScale\", \"yScale\", \"activeEntries\", \"colors\", \"series\", \"dims\", \"gradient\", \"tooltipDisabled\", \"tooltipTemplate\", \"seriesName\", \"animations\", \"noBarWhenZero\"]],\n  template: function BarVerticalNormalizedComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n      i0.ɵɵlistener(\"legendLabelActivate\", function BarVerticalNormalizedComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener($event) {\n        return ctx.onActivate($event, undefined, true);\n      })(\"legendLabelDeactivate\", function BarVerticalNormalizedComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener($event) {\n        return ctx.onDeactivate($event, undefined, true);\n      })(\"legendLabelClick\", function BarVerticalNormalizedComponent_Template_ngx_charts_chart_legendLabelClick_0_listener($event) {\n        return ctx.onClick($event);\n      });\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"g\", 1);\n      i0.ɵɵtemplate(2, BarVerticalNormalizedComponent__svg_g_2_Template, 1, 10, \"g\", 2)(3, BarVerticalNormalizedComponent__svg_g_3_Template, 1, 10, \"g\", 3)(4, BarVerticalNormalizedComponent__svg_g_4_Template, 2, 2, \"g\", 4)(5, BarVerticalNormalizedComponent__svg_g_5_Template, 2, 2, \"g\", 4);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(10, _c24, ctx.width, ctx.height))(\"showLegend\", ctx.legend)(\"legendOptions\", ctx.legendOptions)(\"activeEntries\", ctx.activeEntries)(\"animations\", ctx.animations);\n      i0.ɵɵadvance();\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngIf\", ctx.xAxis);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngIf\", ctx.yAxis);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngIf\", !ctx.isSSR);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngIf\", ctx.isSSR);\n    }\n  },\n  dependencies: [ChartComponent, XAxisComponent, YAxisComponent, SeriesVerticalComponent, i2.NgIf, i2.NgForOf],\n  styles: [_c25],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('animationState', [transition(':leave', [style({\n      opacity: 1,\n      transform: '*'\n    }), animate(500, style({\n      opacity: 0,\n      transform: 'scale(0)'\n    }))])])]\n  },\n  changeDetection: 0\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BarVerticalNormalizedComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-bar-vertical-normalized',\n      template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, undefined, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, undefined, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g *ngIf=\"!isSSR\">\n          <svg:g\n            *ngFor=\"let group of results; trackBy: trackBy\"\n            [@animationState]=\"'active'\"\n            [attr.transform]=\"groupTransform(group)\"\n          >\n            <svg:g\n              ngx-charts-series-vertical\n              [type]=\"barChartType.Normalized\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [activeEntries]=\"activeEntries\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [animations]=\"animations\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n            />\n          </svg:g>\n        </svg:g>\n        <svg:g *ngIf=\"isSSR\">\n          <svg:g *ngFor=\"let group of results; trackBy: trackBy\" [attr.transform]=\"groupTransform(group)\">\n            <svg:g\n              ngx-charts-series-vertical\n              [type]=\"barChartType.Normalized\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [activeEntries]=\"activeEntries\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [animations]=\"animations\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      animations: [trigger('animationState', [transition(':leave', [style({\n        opacity: 1,\n        transform: '*'\n      }), animate(500, style({\n        opacity: 0,\n        transform: 'scale(0)'\n      }))])])],\n      styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"]\n    }]\n  }], null, {\n    legend: [{\n      type: Input\n    }],\n    legendTitle: [{\n      type: Input\n    }],\n    legendPosition: [{\n      type: Input\n    }],\n    xAxis: [{\n      type: Input\n    }],\n    yAxis: [{\n      type: Input\n    }],\n    showXAxisLabel: [{\n      type: Input\n    }],\n    showYAxisLabel: [{\n      type: Input\n    }],\n    xAxisLabel: [{\n      type: Input\n    }],\n    yAxisLabel: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    showGridLines: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    schemeType: [{\n      type: Input\n    }],\n    trimXAxisTicks: [{\n      type: Input\n    }],\n    trimYAxisTicks: [{\n      type: Input\n    }],\n    rotateXAxisTicks: [{\n      type: Input\n    }],\n    maxXAxisTickLength: [{\n      type: Input\n    }],\n    maxYAxisTickLength: [{\n      type: Input\n    }],\n    xAxisTickFormatting: [{\n      type: Input\n    }],\n    yAxisTickFormatting: [{\n      type: Input\n    }],\n    xAxisTicks: [{\n      type: Input\n    }],\n    yAxisTicks: [{\n      type: Input\n    }],\n    barPadding: [{\n      type: Input\n    }],\n    roundDomains: [{\n      type: Input\n    }],\n    noBarWhenZero: [{\n      type: Input\n    }],\n    wrapTicks: [{\n      type: Input\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    tooltipTemplate: [{\n      type: ContentChild,\n      args: ['tooltipTemplate']\n    }]\n  });\n})();\nclass BarVerticalStackedComponent extends BaseChartComponent {\n  constructor() {\n    super(...arguments);\n    this.legend = false;\n    this.legendTitle = 'Legend';\n    this.legendPosition = LegendPosition.Right;\n    this.tooltipDisabled = false;\n    this.showGridLines = true;\n    this.activeEntries = [];\n    this.trimXAxisTicks = true;\n    this.trimYAxisTicks = true;\n    this.rotateXAxisTicks = true;\n    this.maxXAxisTickLength = 16;\n    this.maxYAxisTickLength = 16;\n    this.barPadding = 8;\n    this.roundDomains = false;\n    this.showDataLabel = false;\n    this.noBarWhenZero = true;\n    this.wrapTicks = false;\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.margin = [10, 20, 10, 20];\n    this.xAxisHeight = 0;\n    this.yAxisWidth = 0;\n    this.dataLabelMaxHeight = {\n      negative: 0,\n      positive: 0\n    };\n    this.isSSR = false;\n    this.barChartType = BarChartType;\n    this.trackBy = (index, item) => {\n      return item.name;\n    };\n  }\n  ngOnInit() {\n    if (isPlatformServer(this.platformId)) {\n      this.isSSR = true;\n    }\n  }\n  update() {\n    super.update();\n    if (!this.showDataLabel) {\n      this.dataLabelMaxHeight = {\n        negative: 0,\n        positive: 0\n      };\n    }\n    this.margin = [10 + this.dataLabelMaxHeight.positive, 20, 10 + this.dataLabelMaxHeight.negative, 20];\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.schemeType,\n      legendPosition: this.legendPosition\n    });\n    if (this.showDataLabel) {\n      this.dims.height -= this.dataLabelMaxHeight.negative;\n    }\n    this.formatDates();\n    this.groupDomain = this.getGroupDomain();\n    this.innerDomain = this.getInnerDomain();\n    this.valueDomain = this.getValueDomain();\n    this.xScale = this.getXScale();\n    this.yScale = this.getYScale();\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0] + this.dataLabelMaxHeight.negative})`;\n  }\n  getGroupDomain() {\n    const domain = [];\n    for (const group of this.results) {\n      if (!domain.includes(group.label)) {\n        domain.push(group.label);\n      }\n    }\n    return domain;\n  }\n  getInnerDomain() {\n    const domain = [];\n    for (const group of this.results) {\n      for (const d of group.series) {\n        if (!domain.includes(d.label)) {\n          domain.push(d.label);\n        }\n      }\n    }\n    return domain;\n  }\n  getValueDomain() {\n    const domain = [];\n    let smallest = 0;\n    let biggest = 0;\n    for (const group of this.results) {\n      let smallestSum = 0;\n      let biggestSum = 0;\n      for (const d of group.series) {\n        if (d.value < 0) {\n          smallestSum += d.value;\n        } else {\n          biggestSum += d.value;\n        }\n        smallest = d.value < smallest ? d.value : smallest;\n        biggest = d.value > biggest ? d.value : biggest;\n      }\n      domain.push(smallestSum);\n      domain.push(biggestSum);\n    }\n    domain.push(smallest);\n    domain.push(biggest);\n    const min = Math.min(0, ...domain);\n    const max = this.yScaleMax ? Math.max(this.yScaleMax, ...domain) : Math.max(...domain);\n    return [min, max];\n  }\n  getXScale() {\n    const spacing = this.groupDomain.length / (this.dims.width / this.barPadding + 1);\n    return scaleBand().rangeRound([0, this.dims.width]).paddingInner(spacing).domain(this.groupDomain);\n  }\n  getYScale() {\n    const scale = scaleLinear().range([this.dims.height, 0]).domain(this.valueDomain);\n    return this.roundDomains ? scale.nice() : scale;\n  }\n  onDataLabelMaxHeightChanged(event, groupIndex) {\n    if (event.size.negative) {\n      this.dataLabelMaxHeight.negative = Math.max(this.dataLabelMaxHeight.negative, event.size.height);\n    } else {\n      this.dataLabelMaxHeight.positive = Math.max(this.dataLabelMaxHeight.positive, event.size.height);\n    }\n    if (groupIndex === this.results.length - 1) {\n      setTimeout(() => this.update());\n    }\n  }\n  groupTransform(group) {\n    return `translate(${this.xScale(group.name) || 0}, 0)`;\n  }\n  onClick(data, group) {\n    if (group) {\n      data.series = group.name;\n    }\n    this.select.emit(data);\n  }\n  setColors() {\n    let domain;\n    if (this.schemeType === ScaleType.Ordinal) {\n      domain = this.innerDomain;\n    } else {\n      domain = this.valueDomain;\n    }\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n  }\n  getLegendOptions() {\n    const opts = {\n      scaleType: this.schemeType,\n      colors: undefined,\n      domain: [],\n      title: undefined,\n      position: this.legendPosition\n    };\n    if (opts.scaleType === ScaleType.Ordinal) {\n      opts.domain = this.innerDomain;\n      opts.colors = this.colors;\n      opts.title = this.legendTitle;\n    } else {\n      opts.domain = this.valueDomain;\n      opts.colors = this.colors.scale;\n    }\n    return opts;\n  }\n  updateYAxisWidth({\n    width\n  }) {\n    this.yAxisWidth = width;\n    this.update();\n  }\n  updateXAxisHeight({\n    height\n  }) {\n    this.xAxisHeight = height;\n    this.update();\n  }\n  onActivate(event, group, fromLegend = false) {\n    const item = Object.assign({}, event);\n    if (group) {\n      item.series = group.name;\n    }\n    const items = this.results.map(g => g.series).flat().filter(i => {\n      if (fromLegend) {\n        return i.label === item.name;\n      } else {\n        return i.name === item.name && i.series === item.series;\n      }\n    });\n    this.activeEntries = [...items];\n    this.activate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n  onDeactivate(event, group, fromLegend = false) {\n    const item = Object.assign({}, event);\n    if (group) {\n      item.series = group.name;\n    }\n    this.activeEntries = this.activeEntries.filter(i => {\n      if (fromLegend) {\n        return i.label !== item.name;\n      } else {\n        return !(i.name === item.name && i.series === item.series);\n      }\n    });\n    this.deactivate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n}\nBarVerticalStackedComponent.ɵfac = /* @__PURE__ */(() => {\n  let ɵBarVerticalStackedComponent_BaseFactory;\n  return function BarVerticalStackedComponent_Factory(t) {\n    return (ɵBarVerticalStackedComponent_BaseFactory || (ɵBarVerticalStackedComponent_BaseFactory = i0.ɵɵgetInheritedFactory(BarVerticalStackedComponent)))(t || BarVerticalStackedComponent);\n  };\n})();\nBarVerticalStackedComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: BarVerticalStackedComponent,\n  selectors: [[\"ngx-charts-bar-vertical-stacked\"]],\n  contentQueries: function BarVerticalStackedComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n    }\n  },\n  inputs: {\n    legend: \"legend\",\n    legendTitle: \"legendTitle\",\n    legendPosition: \"legendPosition\",\n    xAxis: \"xAxis\",\n    yAxis: \"yAxis\",\n    showXAxisLabel: \"showXAxisLabel\",\n    showYAxisLabel: \"showYAxisLabel\",\n    xAxisLabel: \"xAxisLabel\",\n    yAxisLabel: \"yAxisLabel\",\n    tooltipDisabled: \"tooltipDisabled\",\n    gradient: \"gradient\",\n    showGridLines: \"showGridLines\",\n    activeEntries: \"activeEntries\",\n    schemeType: \"schemeType\",\n    trimXAxisTicks: \"trimXAxisTicks\",\n    trimYAxisTicks: \"trimYAxisTicks\",\n    rotateXAxisTicks: \"rotateXAxisTicks\",\n    maxXAxisTickLength: \"maxXAxisTickLength\",\n    maxYAxisTickLength: \"maxYAxisTickLength\",\n    xAxisTickFormatting: \"xAxisTickFormatting\",\n    yAxisTickFormatting: \"yAxisTickFormatting\",\n    xAxisTicks: \"xAxisTicks\",\n    yAxisTicks: \"yAxisTicks\",\n    barPadding: \"barPadding\",\n    roundDomains: \"roundDomains\",\n    yScaleMax: \"yScaleMax\",\n    showDataLabel: \"showDataLabel\",\n    dataLabelFormatting: \"dataLabelFormatting\",\n    noBarWhenZero: \"noBarWhenZero\",\n    wrapTicks: \"wrapTicks\"\n  },\n  outputs: {\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 6,\n  vars: 13,\n  consts: [[3, \"legendLabelActivate\", \"legendLabelDeactivate\", \"legendLabelClick\", \"view\", \"showLegend\", \"legendOptions\", \"activeEntries\", \"animations\"], [1, \"bar-chart\", \"chart\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"xAxisOffset\", \"wrapTicks\", \"dimensionsChanged\", 4, \"ngIf\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\", \"dimensionsChanged\", 4, \"ngIf\"], [4, \"ngIf\"], [\"ngx-charts-x-axis\", \"\", 3, \"dimensionsChanged\", \"xScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"xAxisOffset\", \"wrapTicks\"], [\"ngx-charts-y-axis\", \"\", 3, \"dimensionsChanged\", \"yScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\"], [4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-series-vertical\", \"\", 3, \"select\", \"activate\", \"deactivate\", \"dataLabelHeightChanged\", \"type\", \"xScale\", \"yScale\", \"activeEntries\", \"colors\", \"series\", \"dims\", \"gradient\", \"tooltipDisabled\", \"tooltipTemplate\", \"showDataLabel\", \"dataLabelFormatting\", \"seriesName\", \"animations\", \"noBarWhenZero\"]],\n  template: function BarVerticalStackedComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n      i0.ɵɵlistener(\"legendLabelActivate\", function BarVerticalStackedComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener($event) {\n        return ctx.onActivate($event, undefined, true);\n      })(\"legendLabelDeactivate\", function BarVerticalStackedComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener($event) {\n        return ctx.onDeactivate($event, undefined, true);\n      })(\"legendLabelClick\", function BarVerticalStackedComponent_Template_ngx_charts_chart_legendLabelClick_0_listener($event) {\n        return ctx.onClick($event);\n      });\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"g\", 1);\n      i0.ɵɵtemplate(2, BarVerticalStackedComponent__svg_g_2_Template, 1, 11, \"g\", 2)(3, BarVerticalStackedComponent__svg_g_3_Template, 1, 10, \"g\", 3)(4, BarVerticalStackedComponent__svg_g_4_Template, 2, 2, \"g\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(5, BarVerticalStackedComponent__svg_g_5_Template, 2, 2, \"g\", 4);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(10, _c24, ctx.width, ctx.height))(\"showLegend\", ctx.legend)(\"legendOptions\", ctx.legendOptions)(\"activeEntries\", ctx.activeEntries)(\"animations\", ctx.animations);\n      i0.ɵɵadvance();\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngIf\", ctx.xAxis);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngIf\", ctx.yAxis);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngIf\", !ctx.isSSR);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngIf\", ctx.isSSR);\n    }\n  },\n  dependencies: [ChartComponent, XAxisComponent, YAxisComponent, SeriesVerticalComponent, i2.NgIf, i2.NgForOf],\n  styles: [_c25],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('animationState', [transition(':leave', [style({\n      opacity: 1,\n      transform: '*'\n    }), animate(500, style({\n      opacity: 0,\n      transform: 'scale(0)'\n    }))])])]\n  },\n  changeDetection: 0\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BarVerticalStackedComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-bar-vertical-stacked',\n      template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, undefined, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, undefined, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [xAxisOffset]=\"dataLabelMaxHeight.negative\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g *ngIf=\"!isSSR\">\n          <svg:g\n            *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n            [@animationState]=\"'active'\"\n            [attr.transform]=\"groupTransform(group)\"\n          >\n            <svg:g\n              ngx-charts-series-vertical\n              [type]=\"barChartType.Stacked\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [activeEntries]=\"activeEntries\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [showDataLabel]=\"showDataLabel\"\n              [dataLabelFormatting]=\"dataLabelFormatting\"\n              [seriesName]=\"group.name\"\n              [animations]=\"animations\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n              (dataLabelHeightChanged)=\"onDataLabelMaxHeightChanged($event, index)\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n      <svg:g *ngIf=\"isSSR\">\n        <svg:g\n          *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n          [attr.transform]=\"groupTransform(group)\"\n        >\n          <svg:g\n            ngx-charts-series-vertical\n            [type]=\"barChartType.Stacked\"\n            [xScale]=\"xScale\"\n            [yScale]=\"yScale\"\n            [activeEntries]=\"activeEntries\"\n            [colors]=\"colors\"\n            [series]=\"group.series\"\n            [dims]=\"dims\"\n            [gradient]=\"gradient\"\n            [tooltipDisabled]=\"tooltipDisabled\"\n            [tooltipTemplate]=\"tooltipTemplate\"\n            [showDataLabel]=\"showDataLabel\"\n            [dataLabelFormatting]=\"dataLabelFormatting\"\n            [seriesName]=\"group.name\"\n            [animations]=\"animations\"\n            [noBarWhenZero]=\"noBarWhenZero\"\n            (select)=\"onClick($event, group)\"\n            (activate)=\"onActivate($event, group)\"\n            (deactivate)=\"onDeactivate($event, group)\"\n            (dataLabelHeightChanged)=\"onDataLabelMaxHeightChanged($event, index)\"\n          />\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      animations: [trigger('animationState', [transition(':leave', [style({\n        opacity: 1,\n        transform: '*'\n      }), animate(500, style({\n        opacity: 0,\n        transform: 'scale(0)'\n      }))])])],\n      styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"]\n    }]\n  }], null, {\n    legend: [{\n      type: Input\n    }],\n    legendTitle: [{\n      type: Input\n    }],\n    legendPosition: [{\n      type: Input\n    }],\n    xAxis: [{\n      type: Input\n    }],\n    yAxis: [{\n      type: Input\n    }],\n    showXAxisLabel: [{\n      type: Input\n    }],\n    showYAxisLabel: [{\n      type: Input\n    }],\n    xAxisLabel: [{\n      type: Input\n    }],\n    yAxisLabel: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    showGridLines: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    schemeType: [{\n      type: Input\n    }],\n    trimXAxisTicks: [{\n      type: Input\n    }],\n    trimYAxisTicks: [{\n      type: Input\n    }],\n    rotateXAxisTicks: [{\n      type: Input\n    }],\n    maxXAxisTickLength: [{\n      type: Input\n    }],\n    maxYAxisTickLength: [{\n      type: Input\n    }],\n    xAxisTickFormatting: [{\n      type: Input\n    }],\n    yAxisTickFormatting: [{\n      type: Input\n    }],\n    xAxisTicks: [{\n      type: Input\n    }],\n    yAxisTicks: [{\n      type: Input\n    }],\n    barPadding: [{\n      type: Input\n    }],\n    roundDomains: [{\n      type: Input\n    }],\n    yScaleMax: [{\n      type: Input\n    }],\n    showDataLabel: [{\n      type: Input\n    }],\n    dataLabelFormatting: [{\n      type: Input\n    }],\n    noBarWhenZero: [{\n      type: Input\n    }],\n    wrapTicks: [{\n      type: Input\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    tooltipTemplate: [{\n      type: ContentChild,\n      args: ['tooltipTemplate']\n    }]\n  });\n})();\nclass BarChartModule {}\nBarChartModule.ɵfac = function BarChartModule_Factory(t) {\n  return new (t || BarChartModule)();\n};\nBarChartModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: BarChartModule\n});\nBarChartModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[ChartCommonModule]]\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BarChartModule, [{\n    type: NgModule,\n    args: [{\n      imports: [ChartCommonModule],\n      declarations: [BarComponent, BarHorizontalComponent, BarHorizontal2DComponent, BarHorizontalNormalizedComponent, BarHorizontalStackedComponent, BarVerticalComponent, BarVertical2DComponent, BarVerticalNormalizedComponent, BarVerticalStackedComponent, BarLabelComponent, SeriesHorizontal, SeriesVerticalComponent],\n      exports: [BarComponent, BarHorizontalComponent, BarHorizontal2DComponent, BarHorizontalNormalizedComponent, BarHorizontalStackedComponent, BarVerticalComponent, BarVertical2DComponent, BarVerticalNormalizedComponent, BarVerticalStackedComponent, BarLabelComponent, SeriesHorizontal, SeriesVerticalComponent]\n    }]\n  }], null, null);\n})();\nconst cloneDeep = rfdc();\nclass BoxComponent {\n  constructor(element, cd) {\n    this.cd = cd;\n    this.roundEdges = true;\n    this.gradient = false;\n    this.offset = 0;\n    this.isActive = false;\n    this.animations = true;\n    this.noBarWhenZero = true;\n    this.select = new EventEmitter();\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.BarOrientation = BarOrientation;\n    this.initialized = false;\n    this.hasGradient = false;\n    this.hideBar = false;\n    this.nativeElm = element.nativeElement;\n  }\n  ngOnChanges(changes) {\n    if (!this.initialized) {\n      this.loadAnimation();\n      this.initialized = true;\n    } else {\n      this.update();\n    }\n  }\n  update() {\n    this.boxStrokeWidth = Math.max(this.strokeWidth, 1);\n    this.whiskerStrokeWidth = Math.max(this.strokeWidth / 2, 1);\n    this.medianLineWidth = 1.5 * this.strokeWidth;\n    this.gradientId = 'grad' + id().toString();\n    this.gradientFill = `url(#${this.gradientId})`;\n    if (this.gradient) {\n      this.gradientStops = this.getGradient();\n      this.hasGradient = true;\n    } else {\n      this.hasGradient = false;\n    }\n    this.updateLineEl();\n    this.updatePathEl();\n    this.checkToHideBar();\n    this.maskLineId = 'mask' + id().toString();\n    this.maskLine = `url(#${this.maskLineId})`;\n    if (this.cd) {\n      this.cd.markForCheck();\n    }\n  }\n  loadAnimation() {\n    this.boxPath = this.oldPath = this.getStartingPath();\n    this.oldLineCoordinates = this.getStartingLineCoordinates();\n    setTimeout(this.update.bind(this), 100);\n  }\n  updatePathEl() {\n    const nodeBar = select(this.nativeElm).selectAll('.bar');\n    const path = this.getPath();\n    if (this.animations) {\n      nodeBar.attr('d', this.oldPath).transition().ease(easeSinInOut).duration(500).attrTween('d', this.pathTween(path, 4));\n    } else {\n      nodeBar.attr('d', path);\n    }\n    this.oldPath = path;\n  }\n  updateLineEl() {\n    const lineEl = select(this.nativeElm).selectAll('.bar-line');\n    const lineCoordinates = this.lineCoordinates;\n    const oldLineCoordinates = this.oldLineCoordinates;\n    if (this.animations) {\n      lineEl.attr('x1', (_, index) => oldLineCoordinates[index].v1.x).attr('y1', (_, index) => oldLineCoordinates[index].v1.y).attr('x2', (_, index) => oldLineCoordinates[index].v2.x).attr('y2', (_, index) => oldLineCoordinates[index].v2.y).transition().ease(easeSinInOut).duration(500).attr('x1', (_, index) => lineCoordinates[index].v1.x).attr('y1', (_, index) => lineCoordinates[index].v1.y).attr('x2', (_, index) => lineCoordinates[index].v2.x).attr('y2', (_, index) => lineCoordinates[index].v2.y);\n    } else {\n      lineEl.attr('x1', (_, index) => lineCoordinates[index].v1.x).attr('y1', (_, index) => lineCoordinates[index].v1.y).attr('x2', (_, index) => lineCoordinates[index].v2.x).attr('y2', (_, index) => lineCoordinates[index].v2.y);\n    }\n    this.oldLineCoordinates = [...lineCoordinates];\n  }\n  /**\n   * See [D3 Selections](https://www.d3indepth.com/selections/)\n   * @param d The joined data.\n   * @param index The index of the element within the selection\n   * @param node The node element (Line).\n   */\n  lineTween(attr, d, index, node) {\n    const nodeLineEl = node[index];\n    return nodeLineEl[attr].baseVal.value;\n  }\n  // TODO: Refactor into another .ts file if https://github.com/swimlane/ngx-charts/pull/1179 gets merged.\n  pathTween(d1, precision) {\n    return function () {\n      // eslint-disable-next-line @typescript-eslint/no-this-alias\n      const path0 = this;\n      const path1 = this.cloneNode();\n      path1.setAttribute('d', d1);\n      const n0 = path0?.getTotalLength();\n      const n1 = path1?.getTotalLength();\n      // Uniform sampling of distance based on specified precision.\n      const distances = [0];\n      let i = 0;\n      const dt = precision / Math.max(n0, n1);\n      while (i < 1) {\n        distances.push(i);\n        i += dt;\n      }\n      distances.push(1);\n      // Compute point-interpolators at each distance.\n      const points = distances.map(t => {\n        const p0 = path0.getPointAtLength(t * n0);\n        const p1 = path1.getPointAtLength(t * n1);\n        return interpolate([p0.x, p0.y], [p1.x, p1.y]);\n      });\n      // 't': T is the fraction of time (between 0 and 1) since the transition began.\n      return t => {\n        return t < 1 ? 'M' + points.map(p => p(t)).join('L') : d1;\n      };\n    };\n  }\n  getStartingPath() {\n    if (!this.animations) {\n      return this.getPath();\n    }\n    const radius = this.roundEdges ? 1 : 0;\n    const {\n      x,\n      y\n    } = this.lineCoordinates[2].v1;\n    return roundedRect(x - this.width, y - 1, this.width, 2, radius, this.edges);\n  }\n  getPath() {\n    const radius = this.getRadius();\n    let path = '';\n    path = roundedRect(this.x, this.y, this.width, this.height, Math.min(this.height, radius), this.edges);\n    return path;\n  }\n  getStartingLineCoordinates() {\n    if (!this.animations) {\n      return [...this.lineCoordinates];\n    }\n    const lineCoordinates = cloneDeep(this.lineCoordinates);\n    lineCoordinates[1].v1.y = lineCoordinates[1].v2.y = lineCoordinates[3].v1.y = lineCoordinates[3].v2.y = lineCoordinates[0].v1.y = lineCoordinates[0].v2.y = lineCoordinates[2].v1.y;\n    return lineCoordinates;\n  }\n  getRadius() {\n    let radius = 0;\n    if (this.roundEdges && this.height > 5 && this.width > 5) {\n      radius = Math.floor(Math.min(5, this.height / 2, this.width / 2));\n    }\n    return radius;\n  }\n  getGradient() {\n    return [{\n      offset: 0,\n      color: this.fill,\n      opacity: this.getStartOpacity()\n    }, {\n      offset: 100,\n      color: this.fill,\n      opacity: 1\n    }];\n  }\n  getStartOpacity() {\n    if (this.roundEdges) {\n      return 0.2;\n    } else {\n      return 0.5;\n    }\n  }\n  get edges() {\n    let edges = [false, false, false, false];\n    if (this.roundEdges) {\n      edges = [true, true, true, true];\n    }\n    return edges;\n  }\n  onMouseEnter() {\n    this.activate.emit(this.data);\n  }\n  onMouseLeave() {\n    this.deactivate.emit(this.data);\n  }\n  checkToHideBar() {\n    this.hideBar = this.noBarWhenZero && this.height === 0;\n  }\n}\nBoxComponent.ɵfac = function BoxComponent_Factory(t) {\n  return new (t || BoxComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\nBoxComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: BoxComponent,\n  selectors: [[\"g\", \"ngx-charts-box\", \"\"]],\n  hostBindings: function BoxComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"mouseenter\", function BoxComponent_mouseenter_HostBindingHandler() {\n        return ctx.onMouseEnter();\n      })(\"mouseleave\", function BoxComponent_mouseleave_HostBindingHandler() {\n        return ctx.onMouseLeave();\n      });\n    }\n  },\n  inputs: {\n    strokeColor: \"strokeColor\",\n    strokeWidth: \"strokeWidth\",\n    fill: \"fill\",\n    data: \"data\",\n    width: \"width\",\n    height: \"height\",\n    x: \"x\",\n    y: \"y\",\n    lineCoordinates: \"lineCoordinates\",\n    roundEdges: \"roundEdges\",\n    gradient: \"gradient\",\n    gradientStops: \"gradientStops\",\n    offset: \"offset\",\n    isActive: \"isActive\",\n    animations: \"animations\",\n    ariaLabel: \"ariaLabel\",\n    noBarWhenZero: \"noBarWhenZero\"\n  },\n  outputs: {\n    select: \"select\",\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c30,\n  decls: 9,\n  vars: 13,\n  consts: [[\"ngx-charts-svg-linear-gradient\", \"\", 3, \"orientation\", \"name\", \"stops\", 4, \"ngIf\"], [\"height\", \"100%\", \"width\", \"100%\", \"fill\", \"white\", \"fill-opacity\", \"1\"], [\"fill\", \"black\", \"fill-opacity\", \"1\", 1, \"bar\"], [\"role\", \"img\", \"tabIndex\", \"-1\", 1, \"bar\", 3, \"click\"], [\"class\", \"bar-line\", \"fill\", \"none\", 3, \"hidden\", 4, \"ngFor\", \"ngForOf\"], [\"ngx-charts-svg-linear-gradient\", \"\", 3, \"orientation\", \"name\", \"stops\"], [\"fill\", \"none\", 1, \"bar-line\"]],\n  template: function BoxComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(0, \"defs\");\n      i0.ɵɵtemplate(1, BoxComponent__svg_g_1_Template, 1, 3, \"g\", 0);\n      i0.ɵɵelementStart(2, \"mask\")(3, \"g\");\n      i0.ɵɵelement(4, \"rect\", 1)(5, \"path\", 2);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(6, \"g\")(7, \"path\", 3);\n      i0.ɵɵlistener(\"click\", function BoxComponent_Template_path_click_7_listener() {\n        return ctx.select.emit(ctx.data);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(8, BoxComponent__svg_line_8_Template, 1, 9, \"line\", 4);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngIf\", ctx.hasGradient);\n      i0.ɵɵadvance();\n      i0.ɵɵattribute(\"id\", ctx.maskLineId);\n      i0.ɵɵadvance(3);\n      i0.ɵɵattribute(\"d\", ctx.boxPath);\n      i0.ɵɵadvance(2);\n      i0.ɵɵclassProp(\"active\", ctx.isActive)(\"hidden\", ctx.hideBar);\n      i0.ɵɵattribute(\"d\", ctx.boxPath)(\"stroke\", ctx.strokeColor)(\"stroke-width\", ctx.boxStrokeWidth)(\"aria-label\", ctx.ariaLabel)(\"fill\", ctx.hasGradient ? ctx.gradientFill : ctx.fill);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngForOf\", ctx.lineCoordinates);\n    }\n  },\n  dependencies: [SvgLinearGradientComponent, i2.NgIf, i2.NgForOf],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BoxComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-box]',\n      template: `\n    <svg:defs>\n      <svg:g\n        *ngIf=\"hasGradient\"\n        ngx-charts-svg-linear-gradient\n        [orientation]=\"BarOrientation.Vertical\"\n        [name]=\"gradientId\"\n        [stops]=\"gradientStops\"\n      />\n      <svg:mask [attr.id]=\"maskLineId\">\n        <svg:g>\n          <rect height=\"100%\" width=\"100%\" fill=\"white\" fill-opacity=\"1\" />\n          <path class=\"bar\" [attr.d]=\"boxPath\" fill=\"black\" fill-opacity=\"1\" />\n        </svg:g>\n      </svg:mask>\n    </svg:defs>\n    <svg:g>\n      <svg:path\n        class=\"bar\"\n        role=\"img\"\n        tabIndex=\"-1\"\n        [class.active]=\"isActive\"\n        [class.hidden]=\"hideBar\"\n        [attr.d]=\"boxPath\"\n        [attr.stroke]=\"strokeColor\"\n        [attr.stroke-width]=\"boxStrokeWidth\"\n        [attr.aria-label]=\"ariaLabel\"\n        [attr.fill]=\"hasGradient ? gradientFill : fill\"\n        (click)=\"select.emit(data)\"\n      />\n      <svg:line\n        *ngFor=\"let line of lineCoordinates; let i = index\"\n        class=\"bar-line\"\n        [class.hidden]=\"hideBar\"\n        [attr.x1]=\"line.v1.x\"\n        [attr.y1]=\"line.v1.y\"\n        [attr.x2]=\"line.v2.x\"\n        [attr.y2]=\"line.v2.y\"\n        [attr.stroke]=\"strokeColor\"\n        [attr.stroke-width]=\"i === 2 ? medianLineWidth : whiskerStrokeWidth\"\n        [attr.mask]=\"i ? undefined : maskLine\"\n        fill=\"none\"\n      />\n    </svg:g>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.ChangeDetectorRef\n    }];\n  }, {\n    strokeColor: [{\n      type: Input\n    }],\n    strokeWidth: [{\n      type: Input\n    }],\n    fill: [{\n      type: Input\n    }],\n    data: [{\n      type: Input\n    }],\n    width: [{\n      type: Input\n    }],\n    height: [{\n      type: Input\n    }],\n    x: [{\n      type: Input\n    }],\n    y: [{\n      type: Input\n    }],\n    lineCoordinates: [{\n      type: Input\n    }],\n    roundEdges: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    gradientStops: [{\n      type: Input\n    }],\n    offset: [{\n      type: Input\n    }],\n    isActive: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }],\n    ariaLabel: [{\n      type: Input\n    }],\n    noBarWhenZero: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    onMouseEnter: [{\n      type: HostListener,\n      args: ['mouseenter']\n    }],\n    onMouseLeave: [{\n      type: HostListener,\n      args: ['mouseleave']\n    }]\n  });\n})();\nclass BoxSeriesComponent {\n  constructor() {\n    this.animations = true;\n    this.tooltipDisabled = false;\n    this.gradient = false;\n    this.select = new EventEmitter();\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n  }\n  ngOnChanges(changes) {\n    this.update();\n  }\n  onClick(data) {\n    this.select.emit(data);\n  }\n  update() {\n    this.updateTooltipSettings();\n    const width = this.series && this.series.series.length ? Math.round(this.xScale.bandwidth()) : null;\n    const seriesName = this.series.name;\n    // Calculate Quantile and Whiskers for each box serie.\n    this.counts = this.series.series;\n    const mappedCounts = this.counts.map(serie => Number(serie.value));\n    this.whiskers = [min(mappedCounts), max(mappedCounts)];\n    // We get the group count and must sort it in order to retrieve quantiles.\n    const groupCounts = this.counts.map(item => item.value).sort((a, b) => Number(a) - Number(b));\n    this.quartiles = this.getBoxQuantiles(groupCounts);\n    this.lineCoordinates = this.getLinesCoordinates(seriesName.toString(), this.whiskers, this.quartiles, width);\n    const value = this.quartiles[1];\n    const formattedLabel = formatLabel(seriesName);\n    const box = {\n      value,\n      data: this.counts,\n      label: seriesName,\n      formattedLabel,\n      width,\n      height: 0,\n      x: 0,\n      y: 0,\n      roundEdges: this.roundEdges,\n      quartiles: this.quartiles,\n      lineCoordinates: this.lineCoordinates\n    };\n    box.height = Math.abs(this.yScale(this.quartiles[0]) - this.yScale(this.quartiles[2]));\n    box.x = this.xScale(seriesName.toString());\n    box.y = this.yScale(this.quartiles[2]);\n    box.ariaLabel = formattedLabel + ' - Median: ' + value.toLocaleString();\n    if (this.colors.scaleType === ScaleType.Ordinal) {\n      box.color = this.colors.getColor(seriesName);\n    } else {\n      box.color = this.colors.getColor(this.quartiles[1]);\n      box.gradientStops = this.colors.getLinearGradientStops(this.quartiles[0], this.quartiles[2]);\n    }\n    const tooltipLabel = formattedLabel;\n    const formattedTooltipLabel = `\n    <span class=\"tooltip-label\">${escapeLabel(tooltipLabel)}</span>\n    <span class=\"tooltip-val\">\n      • Q1: ${this.quartiles[0]} • Q2: ${this.quartiles[1]} • Q3: ${this.quartiles[2]}<br>\n      • Min: ${this.whiskers[0]} • Max: ${this.whiskers[1]}\n    </span>`;\n    box.tooltipText = this.tooltipDisabled ? undefined : formattedTooltipLabel;\n    this.tooltipTitle = this.tooltipDisabled ? undefined : box.tooltipText;\n    this.box = box;\n  }\n  getBoxQuantiles(inputData) {\n    return [quantile(inputData, 0.25), quantile(inputData, 0.5), quantile(inputData, 0.75)];\n  }\n  getLinesCoordinates(seriesName, whiskers, quartiles, barWidth) {\n    // The X value is not being centered, so had to sum half the width to align it.\n    const commonX = this.xScale(seriesName);\n    const offsetX = commonX + barWidth / 2;\n    const medianLineWidth = Math.max(barWidth + 4 * this.strokeWidth, 1);\n    const whiskerLineWidth = Math.max(barWidth / 3, 1);\n    const whiskerZero = this.yScale(whiskers[0]);\n    const whiskerOne = this.yScale(whiskers[1]);\n    const median = this.yScale(quartiles[1]);\n    const topLine = {\n      v1: {\n        x: offsetX + whiskerLineWidth / 2,\n        y: whiskerZero\n      },\n      v2: {\n        x: offsetX - whiskerLineWidth / 2,\n        y: whiskerZero\n      }\n    };\n    const medianLine = {\n      v1: {\n        x: offsetX + medianLineWidth / 2,\n        y: median\n      },\n      v2: {\n        x: offsetX - medianLineWidth / 2,\n        y: median\n      }\n    };\n    const bottomLine = {\n      v1: {\n        x: offsetX + whiskerLineWidth / 2,\n        y: whiskerOne\n      },\n      v2: {\n        x: offsetX - whiskerLineWidth / 2,\n        y: whiskerOne\n      }\n    };\n    const verticalLine = {\n      v1: {\n        x: offsetX,\n        y: whiskerZero\n      },\n      v2: {\n        x: offsetX,\n        y: whiskerOne\n      }\n    };\n    return [verticalLine, topLine, medianLine, bottomLine];\n  }\n  updateTooltipSettings() {\n    if (this.tooltipDisabled) {\n      this.tooltipPlacement = undefined;\n      this.tooltipType = undefined;\n    } else {\n      if (!this.tooltipPlacement) {\n        this.tooltipPlacement = PlacementTypes.Top;\n      }\n      if (!this.tooltipType) {\n        this.tooltipType = StyleTypes.tooltip;\n      }\n    }\n  }\n}\nBoxSeriesComponent.ɵfac = function BoxSeriesComponent_Factory(t) {\n  return new (t || BoxSeriesComponent)();\n};\nBoxSeriesComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: BoxSeriesComponent,\n  selectors: [[\"g\", \"ngx-charts-box-series\", \"\"]],\n  inputs: {\n    dims: \"dims\",\n    series: \"series\",\n    xScale: \"xScale\",\n    yScale: \"yScale\",\n    colors: \"colors\",\n    animations: \"animations\",\n    strokeColor: \"strokeColor\",\n    strokeWidth: \"strokeWidth\",\n    tooltipDisabled: \"tooltipDisabled\",\n    tooltipTemplate: \"tooltipTemplate\",\n    tooltipPlacement: \"tooltipPlacement\",\n    tooltipType: \"tooltipType\",\n    roundEdges: \"roundEdges\",\n    gradient: \"gradient\"\n  },\n  outputs: {\n    select: \"select\",\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c31,\n  decls: 1,\n  vars: 22,\n  consts: [[\"ngx-charts-box\", \"\", \"ngx-tooltip\", \"\", 3, \"select\", \"activate\", \"deactivate\", \"width\", \"height\", \"x\", \"y\", \"roundEdges\", \"fill\", \"gradientStops\", \"strokeColor\", \"strokeWidth\", \"data\", \"lineCoordinates\", \"gradient\", \"ariaLabel\", \"tooltipDisabled\", \"tooltipPlacement\", \"tooltipType\", \"tooltipTitle\", \"tooltipTemplate\", \"tooltipContext\", \"animations\"]],\n  template: function BoxSeriesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(0, \"g\", 0);\n      i0.ɵɵlistener(\"select\", function BoxSeriesComponent_Template_g_select_0_listener($event) {\n        return ctx.onClick($event);\n      })(\"activate\", function BoxSeriesComponent_Template_g_activate_0_listener($event) {\n        return ctx.activate.emit($event);\n      })(\"deactivate\", function BoxSeriesComponent_Template_g_deactivate_0_listener($event) {\n        return ctx.deactivate.emit($event);\n      });\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"@animationState\", \"active\")(\"@.disabled\", !ctx.animations)(\"width\", ctx.box.width)(\"height\", ctx.box.height)(\"x\", ctx.box.x)(\"y\", ctx.box.y)(\"roundEdges\", ctx.box.roundEdges)(\"fill\", ctx.box.color)(\"gradientStops\", ctx.box.gradientStops)(\"strokeColor\", ctx.strokeColor)(\"strokeWidth\", ctx.strokeWidth)(\"data\", ctx.box.data)(\"lineCoordinates\", ctx.box.lineCoordinates)(\"gradient\", ctx.gradient)(\"ariaLabel\", ctx.box.ariaLabel)(\"tooltipDisabled\", ctx.tooltipDisabled)(\"tooltipPlacement\", ctx.tooltipPlacement)(\"tooltipType\", ctx.tooltipType)(\"tooltipTitle\", ctx.tooltipTitle)(\"tooltipTemplate\", ctx.tooltipTemplate)(\"tooltipContext\", ctx.box.data)(\"animations\", ctx.animations);\n    }\n  },\n  dependencies: [BoxComponent, TooltipDirective],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('animationState', [transition(':leave', [style({\n      opacity: 1\n    }), animate(500, style({\n      opacity: 0\n    }))])])]\n  },\n  changeDetection: 0\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BoxSeriesComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-box-series]',\n      template: `\n    <svg:g\n      ngx-charts-box\n      [@animationState]=\"'active'\"\n      [@.disabled]=\"!animations\"\n      [width]=\"box.width\"\n      [height]=\"box.height\"\n      [x]=\"box.x\"\n      [y]=\"box.y\"\n      [roundEdges]=\"box.roundEdges\"\n      [fill]=\"box.color\"\n      [gradientStops]=\"box.gradientStops\"\n      [strokeColor]=\"strokeColor\"\n      [strokeWidth]=\"strokeWidth\"\n      [data]=\"box.data\"\n      [lineCoordinates]=\"box.lineCoordinates\"\n      [gradient]=\"gradient\"\n      [ariaLabel]=\"box.ariaLabel\"\n      (select)=\"onClick($event)\"\n      (activate)=\"activate.emit($event)\"\n      (deactivate)=\"deactivate.emit($event)\"\n      ngx-tooltip\n      [tooltipDisabled]=\"tooltipDisabled\"\n      [tooltipPlacement]=\"tooltipPlacement\"\n      [tooltipType]=\"tooltipType\"\n      [tooltipTitle]=\"tooltipTitle\"\n      [tooltipTemplate]=\"tooltipTemplate\"\n      [tooltipContext]=\"box.data\"\n      [animations]=\"animations\"\n    ></svg:g>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      animations: [trigger('animationState', [transition(':leave', [style({\n        opacity: 1\n      }), animate(500, style({\n        opacity: 0\n      }))])])]\n    }]\n  }], null, {\n    dims: [{\n      type: Input\n    }],\n    series: [{\n      type: Input\n    }],\n    xScale: [{\n      type: Input\n    }],\n    yScale: [{\n      type: Input\n    }],\n    colors: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }],\n    strokeColor: [{\n      type: Input\n    }],\n    strokeWidth: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    tooltipTemplate: [{\n      type: Input\n    }],\n    tooltipPlacement: [{\n      type: Input\n    }],\n    tooltipType: [{\n      type: Input\n    }],\n    roundEdges: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }]\n  });\n})();\nclass BoxChartComponent extends BaseChartComponent {\n  constructor() {\n    super(...arguments);\n    /** Show or hide the legend. */\n    this.legend = false;\n    this.legendPosition = LegendPosition.Right;\n    this.legendTitle = 'Legend';\n    this.showGridLines = true;\n    this.xAxis = true;\n    this.yAxis = true;\n    this.showXAxisLabel = true;\n    this.showYAxisLabel = true;\n    this.roundDomains = false;\n    this.roundEdges = true;\n    this.strokeColor = '#FFFFFF';\n    this.strokeWidth = 2;\n    this.tooltipDisabled = false;\n    this.wrapTicks = false;\n    this.select = new EventEmitter();\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    /** Chart Margins (For each side, counterclock wise). */\n    this.margin = [10, 20, 10, 20];\n    /** Chart X axis dimension. */\n    this.xAxisHeight = 0;\n    /** Chart Y axis dimension. */\n    this.yAxisWidth = 0;\n  }\n  trackBy(index, item) {\n    return item.name;\n  }\n  update() {\n    super.update();\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendPosition: this.legendPosition\n    });\n    this.xDomain = this.getXDomain();\n    this.yDomain = this.getYDomain();\n    this.seriesDomain = this.getSeriesDomain();\n    this.setScales();\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n  }\n  setColors() {\n    let domain = [];\n    if (this.schemeType === ScaleType.Ordinal) {\n      domain = this.seriesDomain;\n    } else {\n      domain = this.yDomain;\n    }\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n  }\n  setScales() {\n    this.xScale = this.getXScale(this.xDomain, this.dims.width);\n    this.yScale = this.getYScale(this.yDomain, this.dims.height);\n  }\n  getXScale(domain, width) {\n    const scale = scaleBand().domain(domain.map(d => d.toString())).rangeRound([0, width]).padding(0.5);\n    return scale;\n  }\n  getYScale(domain, height) {\n    const scale = scaleLinear().domain(domain).range([height, 0]);\n    return this.roundDomains ? scale.nice() : scale;\n  }\n  getUniqueBoxChartXDomainValues(results) {\n    const valueSet = new Set();\n    for (const result of results) {\n      valueSet.add(result.name);\n    }\n    return Array.from(valueSet);\n  }\n  getXDomain() {\n    let domain = [];\n    const values = this.getUniqueBoxChartXDomainValues(this.results);\n    let min;\n    let max;\n    if (typeof values[0] === 'string') {\n      domain = values.map(val => val.toString());\n    } else if (typeof values[0] === 'number') {\n      const mappedValues = values.map(v => Number(v));\n      min = Math.min(...mappedValues);\n      max = Math.max(...mappedValues);\n      domain = [min, max];\n    } else {\n      const mappedValues = values.map(v => Number(new Date(v)));\n      min = Math.min(...mappedValues);\n      max = Math.max(...mappedValues);\n      domain = [new Date(min), new Date(max)];\n    }\n    return domain;\n  }\n  getYDomain() {\n    const domain = [];\n    for (const results of this.results) {\n      for (const d of results.series) {\n        if (domain.indexOf(d.value) < 0) {\n          domain.push(d.value);\n        }\n      }\n    }\n    const values = [...domain];\n    const mappedValues = values.map(v => Number(v));\n    const min = Math.min(...mappedValues);\n    const max = Math.max(...mappedValues);\n    return [min, max];\n  }\n  getSeriesDomain() {\n    return this.results.map(d => `${d.name}`);\n  }\n  updateYAxisWidth({\n    width\n  }) {\n    this.yAxisWidth = width;\n    this.update();\n  }\n  updateXAxisHeight({\n    height\n  }) {\n    this.xAxisHeight = height;\n    this.update();\n  }\n  onClick(data) {\n    this.select.emit(data);\n  }\n  onActivate(data) {\n    this.activate.emit(data);\n  }\n  onDeactivate(data) {\n    this.deactivate.emit(data);\n  }\n  getLegendOptions() {\n    const legendOpts = {\n      scaleType: this.schemeType,\n      colors: this.colors,\n      domain: [],\n      position: this.legendPosition,\n      title: this.legendTitle\n    };\n    if (this.schemeType === ScaleType.Ordinal) {\n      legendOpts.domain = this.xDomain;\n      legendOpts.colors = this.colors;\n    } else {\n      legendOpts.domain = this.yDomain;\n      legendOpts.colors = this.colors.scale;\n    }\n    return legendOpts;\n  }\n}\nBoxChartComponent.ɵfac = /* @__PURE__ */(() => {\n  let ɵBoxChartComponent_BaseFactory;\n  return function BoxChartComponent_Factory(t) {\n    return (ɵBoxChartComponent_BaseFactory || (ɵBoxChartComponent_BaseFactory = i0.ɵɵgetInheritedFactory(BoxChartComponent)))(t || BoxChartComponent);\n  };\n})();\nBoxChartComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: BoxChartComponent,\n  selectors: [[\"ngx-charts-box-chart\"]],\n  contentQueries: function BoxChartComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n    }\n  },\n  inputs: {\n    legend: \"legend\",\n    legendPosition: \"legendPosition\",\n    legendTitle: \"legendTitle\",\n    legendOptionsConfig: \"legendOptionsConfig\",\n    showGridLines: \"showGridLines\",\n    xAxis: \"xAxis\",\n    yAxis: \"yAxis\",\n    showXAxisLabel: \"showXAxisLabel\",\n    showYAxisLabel: \"showYAxisLabel\",\n    roundDomains: \"roundDomains\",\n    xAxisLabel: \"xAxisLabel\",\n    yAxisLabel: \"yAxisLabel\",\n    roundEdges: \"roundEdges\",\n    strokeColor: \"strokeColor\",\n    strokeWidth: \"strokeWidth\",\n    tooltipDisabled: \"tooltipDisabled\",\n    gradient: \"gradient\",\n    wrapTicks: \"wrapTicks\"\n  },\n  outputs: {\n    select: \"select\",\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 6,\n  vars: 23,\n  consts: [[3, \"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\", \"view\", \"showLegend\", \"legendOptions\", \"animations\"], [1, \"box-chart\", \"chart\"], [\"ngx-charts-x-axis\", \"\", 3, \"dimensionsChanged\", \"showGridLines\", \"dims\", \"xScale\", \"showLabel\", \"labelText\", \"wrapTicks\"], [\"ngx-charts-y-axis\", \"\", 3, \"dimensionsChanged\", \"showGridLines\", \"dims\", \"yScale\", \"showLabel\", \"labelText\", \"wrapTicks\"], [4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-box-series\", \"\", 3, \"activate\", \"deactivate\", \"select\", \"xScale\", \"yScale\", \"colors\", \"roundEdges\", \"strokeColor\", \"strokeWidth\", \"tooltipDisabled\", \"tooltipTemplate\", \"series\", \"dims\", \"animations\", \"gradient\"]],\n  template: function BoxChartComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n      i0.ɵɵlistener(\"legendLabelClick\", function BoxChartComponent_Template_ngx_charts_chart_legendLabelClick_0_listener($event) {\n        return ctx.onClick($event);\n      })(\"legendLabelActivate\", function BoxChartComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener($event) {\n        return ctx.onActivate($event);\n      })(\"legendLabelDeactivate\", function BoxChartComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener($event) {\n        return ctx.onDeactivate($event);\n      });\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"g\", 1)(2, \"g\", 2);\n      i0.ɵɵlistener(\"dimensionsChanged\", function BoxChartComponent_Template_g_dimensionsChanged_2_listener($event) {\n        return ctx.updateXAxisHeight($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"g\", 3);\n      i0.ɵɵlistener(\"dimensionsChanged\", function BoxChartComponent_Template_g_dimensionsChanged_3_listener($event) {\n        return ctx.updateYAxisWidth($event);\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(4, \"g\");\n      i0.ɵɵtemplate(5, BoxChartComponent__svg_g_5_Template, 2, 12, \"g\", 4);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(20, _c24, ctx.width, ctx.height))(\"showLegend\", ctx.legend)(\"legendOptions\", ctx.legendOptions)(\"animations\", ctx.animations);\n      i0.ɵɵadvance();\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"showGridLines\", ctx.showGridLines)(\"dims\", ctx.dims)(\"xScale\", ctx.xScale)(\"showLabel\", ctx.showXAxisLabel)(\"labelText\", ctx.xAxisLabel)(\"wrapTicks\", ctx.wrapTicks);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"showGridLines\", ctx.showGridLines)(\"dims\", ctx.dims)(\"yScale\", ctx.yScale)(\"showLabel\", ctx.showYAxisLabel)(\"labelText\", ctx.yAxisLabel)(\"wrapTicks\", ctx.wrapTicks);\n      i0.ɵɵadvance();\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngForOf\", ctx.results)(\"ngForTrackBy\", ctx.trackBy);\n    }\n  },\n  dependencies: [ChartComponent, XAxisComponent, YAxisComponent, BoxSeriesComponent, i2.NgForOf],\n  styles: [_c25],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BoxChartComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-box-chart',\n      template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"box-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          [showGridLines]=\"showGridLines\"\n          [dims]=\"dims\"\n          [xScale]=\"xScale\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        />\n        <svg:g\n          ngx-charts-y-axis\n          [showGridLines]=\"showGridLines\"\n          [dims]=\"dims\"\n          [yScale]=\"yScale\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        />\n      </svg:g>\n      <svg:g [attr.transform]=\"transform\">\n        <svg:g *ngFor=\"let result of results; trackBy: trackBy\">\n          <svg:g\n            ngx-charts-box-series\n            [xScale]=\"xScale\"\n            [yScale]=\"yScale\"\n            [colors]=\"colors\"\n            [roundEdges]=\"roundEdges\"\n            [strokeColor]=\"strokeColor\"\n            [strokeWidth]=\"strokeWidth\"\n            [tooltipDisabled]=\"tooltipDisabled\"\n            [tooltipTemplate]=\"tooltipTemplate\"\n            [series]=\"result\"\n            [dims]=\"dims\"\n            [animations]=\"animations\"\n            [gradient]=\"gradient\"\n            (activate)=\"onActivate($event)\"\n            (deactivate)=\"onDeactivate($event)\"\n            (select)=\"onClick($event)\"\n          />\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"]\n    }]\n  }], null, {\n    legend: [{\n      type: Input\n    }],\n    legendPosition: [{\n      type: Input\n    }],\n    legendTitle: [{\n      type: Input\n    }],\n    legendOptionsConfig: [{\n      type: Input\n    }],\n    showGridLines: [{\n      type: Input\n    }],\n    xAxis: [{\n      type: Input\n    }],\n    yAxis: [{\n      type: Input\n    }],\n    showXAxisLabel: [{\n      type: Input\n    }],\n    showYAxisLabel: [{\n      type: Input\n    }],\n    roundDomains: [{\n      type: Input\n    }],\n    xAxisLabel: [{\n      type: Input\n    }],\n    yAxisLabel: [{\n      type: Input\n    }],\n    roundEdges: [{\n      type: Input\n    }],\n    strokeColor: [{\n      type: Input\n    }],\n    strokeWidth: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    wrapTicks: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    tooltipTemplate: [{\n      type: ContentChild,\n      args: ['tooltipTemplate', {\n        static: false\n      }]\n    }]\n  });\n})();\nclass BoxChartModule {}\nBoxChartModule.ɵfac = function BoxChartModule_Factory(t) {\n  return new (t || BoxChartModule)();\n};\nBoxChartModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: BoxChartModule\n});\nBoxChartModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[ChartCommonModule]]\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BoxChartModule, [{\n    type: NgModule,\n    args: [{\n      imports: [ChartCommonModule],\n      declarations: [BoxChartComponent, BoxSeriesComponent, BoxComponent],\n      exports: [BoxChartComponent, BoxSeriesComponent, BoxComponent]\n    }]\n  }], null, null);\n})();\nfunction getDomain(values, scaleType, autoScale, minVal, maxVal) {\n  let domain = [];\n  if (scaleType === ScaleType.Linear) {\n    values = values.map(v => Number(v));\n    if (!autoScale) {\n      values.push(0);\n    }\n  }\n  if (scaleType === ScaleType.Time || scaleType === ScaleType.Linear) {\n    const min = minVal || minVal === 0 ? minVal : Math.min(...values);\n    const max = maxVal ? maxVal : Math.max(...values);\n    domain = [min, max];\n  } else {\n    domain = values;\n  }\n  return domain;\n}\nfunction getScale(domain, range, scaleType, roundDomains) {\n  switch (scaleType) {\n    case ScaleType.Time:\n      return scaleTime().range(range).domain(domain);\n    case ScaleType.Linear:\n      {\n        const scale = scaleLinear().range(range).domain(domain);\n        if (roundDomains) {\n          return scale.nice();\n        }\n        return scale;\n      }\n    case ScaleType.Ordinal:\n      return scalePoint().range([range[0], range[1]]).domain(domain.map(r => r.toString()));\n    default:\n      return undefined;\n  }\n}\nclass BubbleSeriesComponent {\n  constructor(platformId) {\n    this.platformId = platformId;\n    this.tooltipDisabled = false;\n    this.select = new EventEmitter();\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.placementTypes = PlacementTypes;\n    this.styleTypes = StyleTypes;\n    this.isSSR = false;\n  }\n  ngOnInit() {\n    if (isPlatformServer(this.platformId)) {\n      this.isSSR = true;\n    }\n  }\n  ngOnChanges(changes) {\n    this.update();\n  }\n  update() {\n    this.circles = this.getCircles();\n  }\n  getCircles() {\n    const seriesName = this.data.name;\n    return this.data.series.map((d, i) => {\n      if (typeof d.y !== 'undefined' && typeof d.x !== 'undefined') {\n        const y = d.y;\n        const x = d.x;\n        const r = d.r;\n        const radius = this.rScale(r || 1);\n        const tooltipLabel = formatLabel(d.name);\n        const cx = this.xScaleType === ScaleType.Linear ? this.xScale(Number(x)) : this.xScale(x);\n        const cy = this.yScaleType === ScaleType.Linear ? this.yScale(Number(y)) : this.yScale(y);\n        const color = this.colors.scaleType === ScaleType.Linear ? this.colors.getColor(r) : this.colors.getColor(seriesName);\n        const isActive = !this.activeEntries.length ? true : this.isActive({\n          name: seriesName\n        });\n        const opacity = isActive ? 1 : 0.3;\n        const data = Object.assign({}, d, {\n          series: seriesName,\n          name: d.name,\n          value: d.y,\n          x: d.x,\n          radius: d.r\n        });\n        return {\n          data,\n          x,\n          y,\n          r,\n          classNames: [`circle-data-${i}`],\n          value: y,\n          label: x,\n          cx,\n          cy,\n          radius,\n          tooltipLabel,\n          color,\n          opacity,\n          seriesName,\n          isActive,\n          transform: `translate(${cx},${cy})`\n        };\n      }\n    }).filter(circle => circle !== undefined);\n  }\n  getTooltipText(circle) {\n    const hasRadius = typeof circle.r !== 'undefined';\n    const hasTooltipLabel = circle.tooltipLabel && circle.tooltipLabel.length;\n    const hasSeriesName = circle.seriesName && circle.seriesName.length;\n    const radiusValue = hasRadius ? formatLabel(circle.r) : '';\n    const xAxisLabel = this.xAxisLabel && this.xAxisLabel !== '' ? `${this.xAxisLabel}:` : '';\n    const yAxisLabel = this.yAxisLabel && this.yAxisLabel !== '' ? `${this.yAxisLabel}:` : '';\n    const x = formatLabel(circle.x);\n    const y = formatLabel(circle.y);\n    const name = hasSeriesName && hasTooltipLabel ? `${circle.seriesName} • ${circle.tooltipLabel}` : circle.seriesName + circle.tooltipLabel;\n    const tooltipTitle = hasSeriesName || hasTooltipLabel ? `<span class=\"tooltip-label\">${escapeLabel(name)}</span>` : '';\n    return `\n      ${tooltipTitle}\n      <span class=\"tooltip-label\">\n        <label>${escapeLabel(xAxisLabel)}</label> ${escapeLabel(x)}<br />\n        <label>${escapeLabel(yAxisLabel)}</label> ${escapeLabel(y)}\n      </span>\n      <span class=\"tooltip-val\">\n        ${escapeLabel(radiusValue)}\n      </span>\n    `;\n  }\n  onClick(data) {\n    this.select.emit(data);\n  }\n  isActive(entry) {\n    if (!this.activeEntries) return false;\n    const item = this.activeEntries.find(d => {\n      return entry.name === d.name;\n    });\n    return item !== undefined;\n  }\n  isVisible(circle) {\n    if (this.activeEntries.length > 0) {\n      return this.isActive({\n        name: circle.seriesName\n      });\n    }\n    return circle.opacity !== 0;\n  }\n  activateCircle(circle) {\n    circle.barVisible = true;\n    this.activate.emit({\n      name: this.data.name\n    });\n  }\n  deactivateCircle(circle) {\n    circle.barVisible = false;\n    this.deactivate.emit({\n      name: this.data.name\n    });\n  }\n  trackBy(index, circle) {\n    return `${circle.data.series} ${circle.data.name}`;\n  }\n}\nBubbleSeriesComponent.ɵfac = function BubbleSeriesComponent_Factory(t) {\n  return new (t || BubbleSeriesComponent)(i0.ɵɵdirectiveInject(PLATFORM_ID));\n};\nBubbleSeriesComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: BubbleSeriesComponent,\n  selectors: [[\"g\", \"ngx-charts-bubble-series\", \"\"]],\n  inputs: {\n    data: \"data\",\n    xScale: \"xScale\",\n    yScale: \"yScale\",\n    rScale: \"rScale\",\n    xScaleType: \"xScaleType\",\n    yScaleType: \"yScaleType\",\n    colors: \"colors\",\n    visibleValue: \"visibleValue\",\n    activeEntries: \"activeEntries\",\n    xAxisLabel: \"xAxisLabel\",\n    yAxisLabel: \"yAxisLabel\",\n    tooltipDisabled: \"tooltipDisabled\",\n    tooltipTemplate: \"tooltipTemplate\"\n  },\n  outputs: {\n    select: \"select\",\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c32,\n  decls: 1,\n  vars: 2,\n  consts: [[4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-circle\", \"\", \"class\", \"circle\", \"ngx-tooltip\", \"\", 3, \"cx\", \"cy\", \"r\", \"fill\", \"opacity\", \"active\", \"pointerEvents\", \"data\", \"classNames\", \"tooltipDisabled\", \"tooltipPlacement\", \"tooltipType\", \"tooltipTitle\", \"tooltipTemplate\", \"tooltipContext\", \"select\", \"activate\", \"deactivate\", 4, \"ngIf\"], [\"ngx-charts-circle\", \"\", \"ngx-tooltip\", \"\", 1, \"circle\", 3, \"select\", \"activate\", \"deactivate\", \"cx\", \"cy\", \"r\", \"fill\", \"pointerEvents\", \"data\", \"classNames\", \"tooltipDisabled\", \"tooltipPlacement\", \"tooltipType\", \"tooltipTitle\", \"tooltipTemplate\", \"tooltipContext\"]],\n  template: function BubbleSeriesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, BubbleSeriesComponent__svg_g_0_Template, 4, 3, \"g\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngForOf\", ctx.circles)(\"ngForTrackBy\", ctx.trackBy);\n    }\n  },\n  dependencies: [CircleComponent, i2.NgForOf, i2.NgIf, TooltipDirective],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('animationState', [transition(':enter', [style({\n      opacity: 0,\n      transform: 'scale(0)'\n    }), animate(250, style({\n      opacity: 1,\n      transform: 'scale(1)'\n    }))])])]\n  },\n  changeDetection: 0\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BubbleSeriesComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-bubble-series]',\n      template: `\n    <svg:g *ngFor=\"let circle of circles; trackBy: trackBy\">\n      <svg:g [attr.transform]=\"circle.transform\">\n        <svg:g\n          *ngIf=\"!isSSR\"\n          ngx-charts-circle\n          [@animationState]=\"'active'\"\n          class=\"circle\"\n          [cx]=\"0\"\n          [cy]=\"0\"\n          [r]=\"circle.radius\"\n          [fill]=\"circle.color\"\n          [style.opacity]=\"circle.opacity\"\n          [class.active]=\"circle.isActive\"\n          [pointerEvents]=\"'all'\"\n          [data]=\"circle.value\"\n          [classNames]=\"circle.classNames\"\n          (select)=\"onClick(circle.data)\"\n          (activate)=\"activateCircle(circle)\"\n          (deactivate)=\"deactivateCircle(circle)\"\n          ngx-tooltip\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipPlacement]=\"placementTypes.Top\"\n          [tooltipType]=\"styleTypes.tooltip\"\n          [tooltipTitle]=\"tooltipTemplate ? undefined : getTooltipText(circle)\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [tooltipContext]=\"circle.data\"\n        />\n        <svg:g\n          *ngIf=\"isSSR\"\n          ngx-charts-circle\n          class=\"circle\"\n          [cx]=\"0\"\n          [cy]=\"0\"\n          [r]=\"circle.radius\"\n          [fill]=\"circle.color\"\n          [style.opacity]=\"circle.opacity\"\n          [class.active]=\"circle.isActive\"\n          [pointerEvents]=\"'all'\"\n          [data]=\"circle.value\"\n          [classNames]=\"circle.classNames\"\n          (select)=\"onClick(circle.data)\"\n          (activate)=\"activateCircle(circle)\"\n          (deactivate)=\"deactivateCircle(circle)\"\n          ngx-tooltip\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipPlacement]=\"placementTypes.Top\"\n          [tooltipType]=\"styleTypes.tooltip\"\n          [tooltipTitle]=\"tooltipTemplate ? undefined : getTooltipText(circle)\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [tooltipContext]=\"circle.data\"\n        />\n      </svg:g>\n    </svg:g>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      animations: [trigger('animationState', [transition(':enter', [style({\n        opacity: 0,\n        transform: 'scale(0)'\n      }), animate(250, style({\n        opacity: 1,\n        transform: 'scale(1)'\n      }))])])]\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }];\n  }, {\n    data: [{\n      type: Input\n    }],\n    xScale: [{\n      type: Input\n    }],\n    yScale: [{\n      type: Input\n    }],\n    rScale: [{\n      type: Input\n    }],\n    xScaleType: [{\n      type: Input\n    }],\n    yScaleType: [{\n      type: Input\n    }],\n    colors: [{\n      type: Input\n    }],\n    visibleValue: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    xAxisLabel: [{\n      type: Input\n    }],\n    yAxisLabel: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    tooltipTemplate: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }]\n  });\n})();\nclass BubbleChartComponent extends BaseChartComponent {\n  constructor() {\n    super(...arguments);\n    this.showGridLines = true;\n    this.legend = false;\n    this.legendTitle = 'Legend';\n    this.legendPosition = LegendPosition.Right;\n    this.xAxis = true;\n    this.yAxis = true;\n    this.trimXAxisTicks = true;\n    this.trimYAxisTicks = true;\n    this.rotateXAxisTicks = true;\n    this.maxXAxisTickLength = 16;\n    this.maxYAxisTickLength = 16;\n    this.roundDomains = false;\n    this.maxRadius = 10;\n    this.minRadius = 3;\n    this.schemeType = ScaleType.Ordinal;\n    this.tooltipDisabled = false;\n    this.wrapTicks = false;\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.scaleType = ScaleType.Linear;\n    this.margin = [10, 20, 10, 20];\n    this.bubblePadding = [0, 0, 0, 0];\n    this.xAxisHeight = 0;\n    this.yAxisWidth = 0;\n    this.activeEntries = [];\n    this.isSSR = false;\n  }\n  ngOnInit() {\n    if (isPlatformServer(this.platformId)) {\n      this.isSSR = true;\n    }\n  }\n  update() {\n    super.update();\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.schemeType,\n      legendPosition: this.legendPosition\n    });\n    this.seriesDomain = this.results.map(d => d.name);\n    this.rDomain = this.getRDomain();\n    this.xDomain = this.getXDomain();\n    this.yDomain = this.getYDomain();\n    this.transform = `translate(${this.dims.xOffset},${this.margin[0]})`;\n    const colorDomain = this.schemeType === ScaleType.Ordinal ? this.seriesDomain : this.rDomain;\n    this.colors = new ColorHelper(this.scheme, this.schemeType, colorDomain, this.customColors);\n    this.data = this.results;\n    this.minRadius = Math.max(this.minRadius, 1);\n    this.maxRadius = Math.max(this.maxRadius, 1);\n    this.rScale = this.getRScale(this.rDomain, [this.minRadius, this.maxRadius]);\n    this.bubblePadding = [0, 0, 0, 0];\n    this.setScales();\n    this.bubblePadding = this.getBubblePadding();\n    this.setScales();\n    this.legendOptions = this.getLegendOptions();\n    this.clipPathId = 'clip' + id().toString();\n    this.clipPath = `url(#${this.clipPathId})`;\n  }\n  hideCircles() {\n    this.deactivateAll();\n  }\n  onClick(data, series) {\n    if (series) {\n      data.series = series.name;\n    }\n    this.select.emit(data);\n  }\n  getBubblePadding() {\n    let yMin = 0;\n    let xMin = 0;\n    let yMax = this.dims.height;\n    let xMax = this.dims.width;\n    for (const s of this.data) {\n      for (const d of s.series) {\n        const r = this.rScale(d.r);\n        const cx = this.xScaleType === ScaleType.Linear ? this.xScale(Number(d.x)) : this.xScale(d.x);\n        const cy = this.yScaleType === ScaleType.Linear ? this.yScale(Number(d.y)) : this.yScale(d.y);\n        xMin = Math.max(r - cx, xMin);\n        yMin = Math.max(r - cy, yMin);\n        yMax = Math.max(cy + r, yMax);\n        xMax = Math.max(cx + r, xMax);\n      }\n    }\n    xMax = Math.max(xMax - this.dims.width, 0);\n    yMax = Math.max(yMax - this.dims.height, 0);\n    return [yMin, xMax, yMax, xMin];\n  }\n  setScales() {\n    let width = this.dims.width;\n    if (this.xScaleMin === undefined && this.xScaleMax === undefined) {\n      width = width - this.bubblePadding[1];\n    }\n    let height = this.dims.height;\n    if (this.yScaleMin === undefined && this.yScaleMax === undefined) {\n      height = height - this.bubblePadding[2];\n    }\n    this.xScale = this.getXScale(this.xDomain, width);\n    this.yScale = this.getYScale(this.yDomain, height);\n  }\n  getYScale(domain, height) {\n    return getScale(domain, [height, this.bubblePadding[0]], this.yScaleType, this.roundDomains);\n  }\n  getXScale(domain, width) {\n    return getScale(domain, [this.bubblePadding[3], width], this.xScaleType, this.roundDomains);\n  }\n  getRScale(domain, range) {\n    const scale = scaleLinear().range(range).domain(domain);\n    return this.roundDomains ? scale.nice() : scale;\n  }\n  getLegendOptions() {\n    const opts = {\n      scaleType: this.schemeType,\n      colors: undefined,\n      domain: [],\n      position: this.legendPosition,\n      title: undefined\n    };\n    if (opts.scaleType === ScaleType.Ordinal) {\n      opts.domain = this.seriesDomain;\n      opts.colors = this.colors;\n      opts.title = this.legendTitle;\n    } else {\n      opts.domain = this.rDomain;\n      opts.colors = this.colors.scale;\n    }\n    return opts;\n  }\n  getXDomain() {\n    const values = [];\n    for (const results of this.results) {\n      for (const d of results.series) {\n        if (!values.includes(d.x)) {\n          values.push(d.x);\n        }\n      }\n    }\n    this.xScaleType = getScaleType(values);\n    return getDomain(values, this.xScaleType, this.autoScale, this.xScaleMin, this.xScaleMax);\n  }\n  getYDomain() {\n    const values = [];\n    for (const results of this.results) {\n      for (const d of results.series) {\n        if (!values.includes(d.y)) {\n          values.push(d.y);\n        }\n      }\n    }\n    this.yScaleType = getScaleType(values);\n    return getDomain(values, this.yScaleType, this.autoScale, this.yScaleMin, this.yScaleMax);\n  }\n  getRDomain() {\n    let min = Infinity;\n    let max = -Infinity;\n    for (const results of this.results) {\n      for (const d of results.series) {\n        const value = Number(d.r) || 1;\n        min = Math.min(min, value);\n        max = Math.max(max, value);\n      }\n    }\n    return [min, max];\n  }\n  updateYAxisWidth({\n    width\n  }) {\n    this.yAxisWidth = width;\n    this.update();\n  }\n  updateXAxisHeight({\n    height\n  }) {\n    this.xAxisHeight = height;\n    this.update();\n  }\n  onActivate(item) {\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name;\n    });\n    if (idx > -1) {\n      return;\n    }\n    this.activeEntries = [item, ...this.activeEntries];\n    this.activate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n  onDeactivate(item) {\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name;\n    });\n    this.activeEntries.splice(idx, 1);\n    this.activeEntries = [...this.activeEntries];\n    this.deactivate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n  deactivateAll() {\n    this.activeEntries = [...this.activeEntries];\n    for (const entry of this.activeEntries) {\n      this.deactivate.emit({\n        value: entry,\n        entries: []\n      });\n    }\n    this.activeEntries = [];\n  }\n  trackBy(index, item) {\n    return `${item.name}`;\n  }\n}\nBubbleChartComponent.ɵfac = /* @__PURE__ */(() => {\n  let ɵBubbleChartComponent_BaseFactory;\n  return function BubbleChartComponent_Factory(t) {\n    return (ɵBubbleChartComponent_BaseFactory || (ɵBubbleChartComponent_BaseFactory = i0.ɵɵgetInheritedFactory(BubbleChartComponent)))(t || BubbleChartComponent);\n  };\n})();\nBubbleChartComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: BubbleChartComponent,\n  selectors: [[\"ngx-charts-bubble-chart\"]],\n  contentQueries: function BubbleChartComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n    }\n  },\n  hostBindings: function BubbleChartComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"mouseleave\", function BubbleChartComponent_mouseleave_HostBindingHandler() {\n        return ctx.hideCircles();\n      });\n    }\n  },\n  inputs: {\n    showGridLines: \"showGridLines\",\n    legend: \"legend\",\n    legendTitle: \"legendTitle\",\n    legendPosition: \"legendPosition\",\n    xAxis: \"xAxis\",\n    yAxis: \"yAxis\",\n    showXAxisLabel: \"showXAxisLabel\",\n    showYAxisLabel: \"showYAxisLabel\",\n    xAxisLabel: \"xAxisLabel\",\n    yAxisLabel: \"yAxisLabel\",\n    trimXAxisTicks: \"trimXAxisTicks\",\n    trimYAxisTicks: \"trimYAxisTicks\",\n    rotateXAxisTicks: \"rotateXAxisTicks\",\n    maxXAxisTickLength: \"maxXAxisTickLength\",\n    maxYAxisTickLength: \"maxYAxisTickLength\",\n    xAxisTickFormatting: \"xAxisTickFormatting\",\n    yAxisTickFormatting: \"yAxisTickFormatting\",\n    xAxisTicks: \"xAxisTicks\",\n    yAxisTicks: \"yAxisTicks\",\n    roundDomains: \"roundDomains\",\n    maxRadius: \"maxRadius\",\n    minRadius: \"minRadius\",\n    autoScale: \"autoScale\",\n    schemeType: \"schemeType\",\n    tooltipDisabled: \"tooltipDisabled\",\n    xScaleMin: \"xScaleMin\",\n    xScaleMax: \"xScaleMax\",\n    yScaleMin: \"yScaleMin\",\n    yScaleMax: \"yScaleMax\",\n    wrapTicks: \"wrapTicks\"\n  },\n  outputs: {\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 10,\n  vars: 19,\n  consts: [[3, \"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\", \"view\", \"showLegend\", \"activeEntries\", \"legendOptions\", \"animations\"], [1, \"bubble-chart\", \"chart\"], [\"ngx-charts-x-axis\", \"\", 3, \"showGridLines\", \"dims\", \"xScale\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\", \"dimensionsChanged\", 4, \"ngIf\"], [\"ngx-charts-y-axis\", \"\", 3, \"showGridLines\", \"yScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\", \"dimensionsChanged\", 4, \"ngIf\"], [\"x\", \"0\", \"y\", \"0\", 1, \"bubble-chart-area\", 2, \"fill\", \"rgb(255, 0, 0)\", \"opacity\", \"0\", \"cursor\", \"'auto'\", 3, \"mouseenter\"], [4, \"ngIf\"], [\"ngx-charts-x-axis\", \"\", 3, \"dimensionsChanged\", \"showGridLines\", \"dims\", \"xScale\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\"], [\"ngx-charts-y-axis\", \"\", 3, \"dimensionsChanged\", \"showGridLines\", \"yScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\"], [4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-bubble-series\", \"\", 3, \"select\", \"activate\", \"deactivate\", \"xScale\", \"yScale\", \"rScale\", \"xScaleType\", \"yScaleType\", \"xAxisLabel\", \"yAxisLabel\", \"colors\", \"data\", \"activeEntries\", \"tooltipDisabled\", \"tooltipTemplate\"]],\n  template: function BubbleChartComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n      i0.ɵɵlistener(\"legendLabelClick\", function BubbleChartComponent_Template_ngx_charts_chart_legendLabelClick_0_listener($event) {\n        return ctx.onClick($event);\n      })(\"legendLabelActivate\", function BubbleChartComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener($event) {\n        return ctx.onActivate($event);\n      })(\"legendLabelDeactivate\", function BubbleChartComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener($event) {\n        return ctx.onDeactivate($event);\n      });\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"defs\")(2, \"clipPath\");\n      i0.ɵɵelement(3, \"rect\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(4, \"g\", 1);\n      i0.ɵɵtemplate(5, BubbleChartComponent__svg_g_5_Template, 1, 11, \"g\", 2)(6, BubbleChartComponent__svg_g_6_Template, 1, 10, \"g\", 3);\n      i0.ɵɵelementStart(7, \"rect\", 4);\n      i0.ɵɵlistener(\"mouseenter\", function BubbleChartComponent_Template_rect_mouseenter_7_listener() {\n        return ctx.deactivateAll();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(8, BubbleChartComponent__svg_g_8_Template, 2, 3, \"g\", 5)(9, BubbleChartComponent__svg_g_9_Template, 2, 3, \"g\", 5);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(16, _c24, ctx.width, ctx.height))(\"showLegend\", ctx.legend)(\"activeEntries\", ctx.activeEntries)(\"legendOptions\", ctx.legendOptions)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(2);\n      i0.ɵɵattribute(\"id\", ctx.clipPathId);\n      i0.ɵɵadvance();\n      i0.ɵɵattribute(\"width\", ctx.dims.width + 10)(\"height\", ctx.dims.height + 10)(\"transform\", \"translate(-5, -5)\");\n      i0.ɵɵadvance();\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngIf\", ctx.xAxis);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngIf\", ctx.yAxis);\n      i0.ɵɵadvance();\n      i0.ɵɵattribute(\"width\", ctx.dims.width)(\"height\", ctx.dims.height);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngIf\", !ctx.isSSR);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngIf\", ctx.isSSR);\n    }\n  },\n  dependencies: [ChartComponent, XAxisComponent, YAxisComponent, BubbleSeriesComponent, i2.NgIf, i2.NgForOf],\n  styles: [_c25],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('animationState', [transition(':leave', [style({\n      opacity: 1\n    }), animate(500, style({\n      opacity: 0\n    }))])])]\n  },\n  changeDetection: 0\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BubbleChartComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-bubble-chart',\n      template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [activeEntries]=\"activeEntries\"\n      [legendOptions]=\"legendOptions\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:defs>\n        <svg:clipPath [attr.id]=\"clipPathId\">\n          <svg:rect\n            [attr.width]=\"dims.width + 10\"\n            [attr.height]=\"dims.height + 10\"\n            [attr.transform]=\"'translate(-5, -5)'\"\n          />\n        </svg:clipPath>\n      </svg:defs>\n      <svg:g [attr.transform]=\"transform\" class=\"bubble-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [showGridLines]=\"showGridLines\"\n          [dims]=\"dims\"\n          [xScale]=\"xScale\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        />\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [showGridLines]=\"showGridLines\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        />\n        <svg:rect\n          class=\"bubble-chart-area\"\n          x=\"0\"\n          y=\"0\"\n          [attr.width]=\"dims.width\"\n          [attr.height]=\"dims.height\"\n          style=\"fill: rgb(255, 0, 0); opacity: 0; cursor: 'auto';\"\n          (mouseenter)=\"deactivateAll()\"\n        />\n        <svg:g *ngIf=\"!isSSR\" [attr.clip-path]=\"clipPath\">\n          <svg:g *ngFor=\"let series of data; trackBy: trackBy\" [@animationState]=\"'active'\">\n            <svg:g\n              ngx-charts-bubble-series\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [rScale]=\"rScale\"\n              [xScaleType]=\"xScaleType\"\n              [yScaleType]=\"yScaleType\"\n              [xAxisLabel]=\"xAxisLabel\"\n              [yAxisLabel]=\"yAxisLabel\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [activeEntries]=\"activeEntries\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              (select)=\"onClick($event, series)\"\n              (activate)=\"onActivate($event)\"\n              (deactivate)=\"onDeactivate($event)\"\n            />\n          </svg:g>\n        </svg:g>\n        <svg:g *ngIf=\"isSSR\" [attr.clip-path]=\"clipPath\">\n          <svg:g *ngFor=\"let series of data; trackBy: trackBy\">\n            <svg:g\n              ngx-charts-bubble-series\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [rScale]=\"rScale\"\n              [xScaleType]=\"xScaleType\"\n              [yScaleType]=\"yScaleType\"\n              [xAxisLabel]=\"xAxisLabel\"\n              [yAxisLabel]=\"yAxisLabel\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [activeEntries]=\"activeEntries\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              (select)=\"onClick($event, series)\"\n              (activate)=\"onActivate($event)\"\n              (deactivate)=\"onDeactivate($event)\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      animations: [trigger('animationState', [transition(':leave', [style({\n        opacity: 1\n      }), animate(500, style({\n        opacity: 0\n      }))])])],\n      styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"]\n    }]\n  }], null, {\n    showGridLines: [{\n      type: Input\n    }],\n    legend: [{\n      type: Input\n    }],\n    legendTitle: [{\n      type: Input\n    }],\n    legendPosition: [{\n      type: Input\n    }],\n    xAxis: [{\n      type: Input\n    }],\n    yAxis: [{\n      type: Input\n    }],\n    showXAxisLabel: [{\n      type: Input\n    }],\n    showYAxisLabel: [{\n      type: Input\n    }],\n    xAxisLabel: [{\n      type: Input\n    }],\n    yAxisLabel: [{\n      type: Input\n    }],\n    trimXAxisTicks: [{\n      type: Input\n    }],\n    trimYAxisTicks: [{\n      type: Input\n    }],\n    rotateXAxisTicks: [{\n      type: Input\n    }],\n    maxXAxisTickLength: [{\n      type: Input\n    }],\n    maxYAxisTickLength: [{\n      type: Input\n    }],\n    xAxisTickFormatting: [{\n      type: Input\n    }],\n    yAxisTickFormatting: [{\n      type: Input\n    }],\n    xAxisTicks: [{\n      type: Input\n    }],\n    yAxisTicks: [{\n      type: Input\n    }],\n    roundDomains: [{\n      type: Input\n    }],\n    maxRadius: [{\n      type: Input\n    }],\n    minRadius: [{\n      type: Input\n    }],\n    autoScale: [{\n      type: Input\n    }],\n    schemeType: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    xScaleMin: [{\n      type: Input\n    }],\n    xScaleMax: [{\n      type: Input\n    }],\n    yScaleMin: [{\n      type: Input\n    }],\n    yScaleMax: [{\n      type: Input\n    }],\n    wrapTicks: [{\n      type: Input\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    tooltipTemplate: [{\n      type: ContentChild,\n      args: ['tooltipTemplate']\n    }],\n    hideCircles: [{\n      type: HostListener,\n      args: ['mouseleave']\n    }]\n  });\n})();\nclass BubbleChartModule {}\nBubbleChartModule.ɵfac = function BubbleChartModule_Factory(t) {\n  return new (t || BubbleChartModule)();\n};\nBubbleChartModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: BubbleChartModule\n});\nBubbleChartModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[ChartCommonModule]]\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BubbleChartModule, [{\n    type: NgModule,\n    args: [{\n      imports: [ChartCommonModule],\n      declarations: [BubbleChartComponent, BubbleSeriesComponent],\n      exports: [BubbleChartComponent, BubbleSeriesComponent]\n    }]\n  }], null, null);\n})();\nclass HeatMapCellComponent {\n  constructor(element) {\n    this.gradient = false;\n    this.animations = true;\n    this.select = new EventEmitter();\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.barOrientation = BarOrientation;\n    this.element = element.nativeElement;\n  }\n  ngOnChanges(changes) {\n    this.transform = `translate(${this.x} , ${this.y})`;\n    this.startOpacity = 0.3;\n    this.gradientId = 'grad' + id().toString();\n    this.gradientUrl = `url(#${this.gradientId})`;\n    this.gradientStops = this.getGradientStops();\n    if (this.animations) {\n      this.loadAnimation();\n    }\n  }\n  getGradientStops() {\n    return [{\n      offset: 0,\n      color: this.fill,\n      opacity: this.startOpacity\n    }, {\n      offset: 100,\n      color: this.fill,\n      opacity: 1\n    }];\n  }\n  loadAnimation() {\n    const node = select(this.element).select('.cell');\n    node.attr('opacity', 0);\n    this.animateToCurrentForm();\n  }\n  animateToCurrentForm() {\n    const node = select(this.element).select('.cell');\n    node.transition().duration(750).attr('opacity', 1);\n  }\n  onClick() {\n    this.select.emit(this.data);\n  }\n  onMouseEnter() {\n    this.activate.emit(this.data);\n  }\n  onMouseLeave() {\n    this.deactivate.emit(this.data);\n  }\n}\nHeatMapCellComponent.ɵfac = function HeatMapCellComponent_Factory(t) {\n  return new (t || HeatMapCellComponent)(i0.ɵɵdirectiveInject(i0.ElementRef));\n};\nHeatMapCellComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: HeatMapCellComponent,\n  selectors: [[\"g\", \"ngx-charts-heat-map-cell\", \"\"]],\n  hostBindings: function HeatMapCellComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"mouseenter\", function HeatMapCellComponent_mouseenter_HostBindingHandler() {\n        return ctx.onMouseEnter();\n      })(\"mouseleave\", function HeatMapCellComponent_mouseleave_HostBindingHandler() {\n        return ctx.onMouseLeave();\n      });\n    }\n  },\n  inputs: {\n    fill: \"fill\",\n    x: \"x\",\n    y: \"y\",\n    width: \"width\",\n    height: \"height\",\n    data: \"data\",\n    gradient: \"gradient\",\n    animations: \"animations\"\n  },\n  outputs: {\n    select: \"select\",\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c33,\n  decls: 3,\n  vars: 5,\n  consts: [[1, \"cell\"], [4, \"ngIf\"], [\"rx\", \"3\", 1, \"cell\", 3, \"click\"], [\"ngx-charts-svg-linear-gradient\", \"\", 3, \"orientation\", \"name\", \"stops\"]],\n  template: function HeatMapCellComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(0, \"g\", 0);\n      i0.ɵɵtemplate(1, HeatMapCellComponent__svg_defs_1_Template, 2, 3, \"defs\", 1);\n      i0.ɵɵelementStart(2, \"rect\", 2);\n      i0.ɵɵlistener(\"click\", function HeatMapCellComponent_Template_rect_click_2_listener() {\n        return ctx.onClick();\n      });\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngIf\", ctx.gradient);\n      i0.ɵɵadvance();\n      i0.ɵɵattribute(\"fill\", ctx.gradient ? ctx.gradientUrl : ctx.fill)(\"width\", ctx.width)(\"height\", ctx.height);\n    }\n  },\n  dependencies: [SvgLinearGradientComponent, i2.NgIf],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(HeatMapCellComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-heat-map-cell]',\n      template: `\n    <svg:g [attr.transform]=\"transform\" class=\"cell\">\n      <defs *ngIf=\"gradient\">\n        <svg:g\n          ngx-charts-svg-linear-gradient\n          [orientation]=\"barOrientation.Vertical\"\n          [name]=\"gradientId\"\n          [stops]=\"gradientStops\"\n        />\n      </defs>\n      <svg:rect\n        [attr.fill]=\"gradient ? gradientUrl : fill\"\n        rx=\"3\"\n        [attr.width]=\"width\"\n        [attr.height]=\"height\"\n        class=\"cell\"\n        (click)=\"onClick()\"\n      />\n    </svg:g>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }];\n  }, {\n    fill: [{\n      type: Input\n    }],\n    x: [{\n      type: Input\n    }],\n    y: [{\n      type: Input\n    }],\n    width: [{\n      type: Input\n    }],\n    height: [{\n      type: Input\n    }],\n    data: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    onMouseEnter: [{\n      type: HostListener,\n      args: ['mouseenter']\n    }],\n    onMouseLeave: [{\n      type: HostListener,\n      args: ['mouseleave']\n    }]\n  });\n})();\nclass HeatCellSeriesComponent {\n  constructor() {\n    this.tooltipDisabled = false;\n    this.animations = true;\n    this.select = new EventEmitter();\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.placementTypes = PlacementTypes;\n    this.styleTypes = StyleTypes;\n  }\n  ngOnInit() {\n    if (!this.tooltipText) {\n      this.tooltipText = this.getTooltipText;\n    }\n  }\n  ngOnChanges(changes) {\n    this.update();\n  }\n  update() {\n    this.cells = this.getCells();\n  }\n  getCells() {\n    const cells = [];\n    this.data.map(row => {\n      row.series.map(cell => {\n        const value = cell.value;\n        cell.series = row.name;\n        cells.push({\n          row,\n          cell,\n          x: this.xScale(row.name),\n          y: this.yScale(cell.name),\n          width: this.xScale.bandwidth(),\n          height: this.yScale.bandwidth(),\n          fill: this.colors.getColor(value),\n          data: value,\n          label: formatLabel(cell.name),\n          series: row.name\n        });\n      });\n    });\n    return cells;\n  }\n  getTooltipText({\n    label,\n    data,\n    series\n  }) {\n    return `\n      <span class=\"tooltip-label\">${escapeLabel(series)} • ${escapeLabel(label)}</span>\n      <span class=\"tooltip-val\">${data.toLocaleString()}</span>\n    `;\n  }\n  trackBy(index, item) {\n    return item.label;\n  }\n  onClick(data) {\n    this.select.emit(data);\n  }\n}\nHeatCellSeriesComponent.ɵfac = function HeatCellSeriesComponent_Factory(t) {\n  return new (t || HeatCellSeriesComponent)();\n};\nHeatCellSeriesComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: HeatCellSeriesComponent,\n  selectors: [[\"g\", \"ngx-charts-heat-map-cell-series\", \"\"]],\n  inputs: {\n    data: \"data\",\n    colors: \"colors\",\n    xScale: \"xScale\",\n    yScale: \"yScale\",\n    gradient: \"gradient\",\n    tooltipDisabled: \"tooltipDisabled\",\n    tooltipText: \"tooltipText\",\n    tooltipTemplate: \"tooltipTemplate\",\n    animations: \"animations\"\n  },\n  outputs: {\n    select: \"select\",\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c34,\n  decls: 1,\n  vars: 2,\n  consts: [[\"ngx-charts-heat-map-cell\", \"\", \"ngx-tooltip\", \"\", 3, \"x\", \"y\", \"width\", \"height\", \"fill\", \"data\", \"gradient\", \"animations\", \"tooltipDisabled\", \"tooltipPlacement\", \"tooltipType\", \"tooltipTitle\", \"tooltipTemplate\", \"tooltipContext\", \"select\", \"activate\", \"deactivate\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-heat-map-cell\", \"\", \"ngx-tooltip\", \"\", 3, \"select\", \"activate\", \"deactivate\", \"x\", \"y\", \"width\", \"height\", \"fill\", \"data\", \"gradient\", \"animations\", \"tooltipDisabled\", \"tooltipPlacement\", \"tooltipType\", \"tooltipTitle\", \"tooltipTemplate\", \"tooltipContext\"]],\n  template: function HeatCellSeriesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, HeatCellSeriesComponent__svg_g_0_Template, 1, 18, \"g\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngForOf\", ctx.cells)(\"ngForTrackBy\", ctx.trackBy);\n    }\n  },\n  dependencies: [HeatMapCellComponent, i2.NgForOf, TooltipDirective],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(HeatCellSeriesComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-heat-map-cell-series]',\n      template: `\n    <svg:g\n      ngx-charts-heat-map-cell\n      *ngFor=\"let c of cells; trackBy: trackBy\"\n      [x]=\"c.x\"\n      [y]=\"c.y\"\n      [width]=\"c.width\"\n      [height]=\"c.height\"\n      [fill]=\"c.fill\"\n      [data]=\"c.data\"\n      (select)=\"onClick(c.cell)\"\n      (activate)=\"activate.emit(c.cell)\"\n      (deactivate)=\"deactivate.emit(c.cell)\"\n      [gradient]=\"gradient\"\n      [animations]=\"animations\"\n      ngx-tooltip\n      [tooltipDisabled]=\"tooltipDisabled\"\n      [tooltipPlacement]=\"placementTypes.Top\"\n      [tooltipType]=\"styleTypes.tooltip\"\n      [tooltipTitle]=\"tooltipTemplate ? undefined : tooltipText(c)\"\n      [tooltipTemplate]=\"tooltipTemplate\"\n      [tooltipContext]=\"{ series: c.series, name: c.label, value: c.data }\"\n    ></svg:g>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, {\n    data: [{\n      type: Input\n    }],\n    colors: [{\n      type: Input\n    }],\n    xScale: [{\n      type: Input\n    }],\n    yScale: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    tooltipText: [{\n      type: Input\n    }],\n    tooltipTemplate: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }]\n  });\n})();\nclass HeatMapComponent extends BaseChartComponent {\n  constructor() {\n    super(...arguments);\n    this.legendTitle = 'Legend';\n    this.legendPosition = LegendPosition.Right;\n    this.innerPadding = 8;\n    this.trimXAxisTicks = true;\n    this.trimYAxisTicks = true;\n    this.rotateXAxisTicks = true;\n    this.maxXAxisTickLength = 16;\n    this.maxYAxisTickLength = 16;\n    this.tooltipDisabled = false;\n    this.activeEntries = [];\n    this.wrapTicks = false;\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.margin = [10, 20, 10, 20];\n    this.xAxisHeight = 0;\n    this.yAxisWidth = 0;\n    this.scaleType = ScaleType.Linear;\n  }\n  update() {\n    super.update();\n    this.formatDates();\n    this.xDomain = this.getXDomain();\n    this.yDomain = this.getYDomain();\n    this.valueDomain = this.getValueDomain();\n    this.scaleType = getScaleType(this.valueDomain, false);\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.scaleType,\n      legendPosition: this.legendPosition\n    });\n    if (this.scaleType === ScaleType.Linear) {\n      let min = this.min;\n      let max = this.max;\n      if (!this.min) {\n        min = Math.min(0, ...this.valueDomain);\n      }\n      if (!this.max) {\n        max = Math.max(...this.valueDomain);\n      }\n      this.valueDomain = [min, max];\n    }\n    this.xScale = this.getXScale();\n    this.yScale = this.getYScale();\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n    this.rects = this.getRects();\n  }\n  getXDomain() {\n    const domain = [];\n    for (const group of this.results) {\n      if (!domain.includes(group.name)) {\n        domain.push(group.name);\n      }\n    }\n    return domain;\n  }\n  getYDomain() {\n    const domain = [];\n    for (const group of this.results) {\n      for (const d of group.series) {\n        if (!domain.includes(d.name)) {\n          domain.push(d.name);\n        }\n      }\n    }\n    return domain;\n  }\n  getValueDomain() {\n    const domain = [];\n    for (const group of this.results) {\n      for (const d of group.series) {\n        if (!domain.includes(d.value)) {\n          domain.push(d.value);\n        }\n      }\n    }\n    return domain;\n  }\n  /**\n   * Converts the input to gap paddingInner in fraction\n   * Supports the following inputs:\n   *    Numbers: 8\n   *    Strings: \"8\", \"8px\", \"8%\"\n   *    Arrays: [8,2], \"8,2\", \"[8,2]\"\n   *    Mixed: [8,\"2%\"], [\"8px\",\"2%\"], \"8,2%\", \"[8,2%]\"\n   *\n   * @memberOf HeatMapComponent\n   */\n  getDimension(value, index = 0, N, L) {\n    if (typeof value === 'string') {\n      value = value.replace('[', '').replace(']', '').replace('px', '')\n      // tslint:disable-next-line: quotemark\n      .replace(\"'\", '');\n      if (value.includes(',')) {\n        value = value.split(',');\n      }\n    }\n    if (Array.isArray(value) && typeof index === 'number') {\n      return this.getDimension(value[index], null, N, L);\n    }\n    if (typeof value === 'string' && value.includes('%')) {\n      return +value.replace('%', '') / 100;\n    }\n    return N / (L / +value + 1);\n  }\n  getXScale() {\n    const f = this.getDimension(this.innerPadding, 0, this.xDomain.length, this.dims.width);\n    return scaleBand().rangeRound([0, this.dims.width]).domain(this.xDomain).paddingInner(f);\n  }\n  getYScale() {\n    const f = this.getDimension(this.innerPadding, 1, this.yDomain.length, this.dims.height);\n    return scaleBand().rangeRound([this.dims.height, 0]).domain(this.yDomain).paddingInner(f);\n  }\n  getRects() {\n    const rects = [];\n    this.xDomain.map(xVal => {\n      this.yDomain.map(yVal => {\n        rects.push({\n          x: this.xScale(xVal),\n          y: this.yScale(yVal),\n          rx: 3,\n          width: this.xScale.bandwidth(),\n          height: this.yScale.bandwidth(),\n          fill: 'rgba(200,200,200,0.03)'\n        });\n      });\n    });\n    return rects;\n  }\n  onClick(data) {\n    this.select.emit(data);\n  }\n  setColors() {\n    this.colors = new ColorHelper(this.scheme, this.scaleType, this.valueDomain);\n  }\n  getLegendOptions() {\n    return {\n      scaleType: this.scaleType,\n      domain: this.valueDomain,\n      colors: this.scaleType === ScaleType.Ordinal ? this.colors : this.colors.scale,\n      title: this.scaleType === ScaleType.Ordinal ? this.legendTitle : undefined,\n      position: this.legendPosition\n    };\n  }\n  updateYAxisWidth({\n    width\n  }) {\n    this.yAxisWidth = width;\n    this.update();\n  }\n  updateXAxisHeight({\n    height\n  }) {\n    this.xAxisHeight = height;\n    this.update();\n  }\n  onActivate(event, group, fromLegend = false) {\n    const item = Object.assign({}, event);\n    if (group) {\n      item.series = group.name;\n    }\n    const items = this.results.map(g => g.series).flat().filter(i => {\n      if (fromLegend) {\n        return i.label === item.name;\n      } else {\n        return i.name === item.name && i.series === item.series;\n      }\n    });\n    this.activeEntries = [...items];\n    this.activate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n  onDeactivate(event, group, fromLegend = false) {\n    const item = Object.assign({}, event);\n    if (group) {\n      item.series = group.name;\n    }\n    this.activeEntries = this.activeEntries.filter(i => {\n      if (fromLegend) {\n        return i.label !== item.name;\n      } else {\n        return !(i.name === item.name && i.series === item.series);\n      }\n    });\n    this.deactivate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n}\nHeatMapComponent.ɵfac = /* @__PURE__ */(() => {\n  let ɵHeatMapComponent_BaseFactory;\n  return function HeatMapComponent_Factory(t) {\n    return (ɵHeatMapComponent_BaseFactory || (ɵHeatMapComponent_BaseFactory = i0.ɵɵgetInheritedFactory(HeatMapComponent)))(t || HeatMapComponent);\n  };\n})();\nHeatMapComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: HeatMapComponent,\n  selectors: [[\"ngx-charts-heat-map\"]],\n  contentQueries: function HeatMapComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n    }\n  },\n  inputs: {\n    legend: \"legend\",\n    legendTitle: \"legendTitle\",\n    legendPosition: \"legendPosition\",\n    xAxis: \"xAxis\",\n    yAxis: \"yAxis\",\n    showXAxisLabel: \"showXAxisLabel\",\n    showYAxisLabel: \"showYAxisLabel\",\n    xAxisLabel: \"xAxisLabel\",\n    yAxisLabel: \"yAxisLabel\",\n    gradient: \"gradient\",\n    innerPadding: \"innerPadding\",\n    trimXAxisTicks: \"trimXAxisTicks\",\n    trimYAxisTicks: \"trimYAxisTicks\",\n    rotateXAxisTicks: \"rotateXAxisTicks\",\n    maxXAxisTickLength: \"maxXAxisTickLength\",\n    maxYAxisTickLength: \"maxYAxisTickLength\",\n    xAxisTickFormatting: \"xAxisTickFormatting\",\n    yAxisTickFormatting: \"yAxisTickFormatting\",\n    xAxisTicks: \"xAxisTicks\",\n    yAxisTicks: \"yAxisTicks\",\n    tooltipDisabled: \"tooltipDisabled\",\n    tooltipText: \"tooltipText\",\n    min: \"min\",\n    max: \"max\",\n    activeEntries: \"activeEntries\",\n    wrapTicks: \"wrapTicks\"\n  },\n  outputs: {\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 6,\n  vars: 20,\n  consts: [[3, \"legendLabelClick\", \"view\", \"showLegend\", \"animations\", \"legendOptions\"], [1, \"heat-map\", \"chart\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\", \"dimensionsChanged\", 4, \"ngIf\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\", \"dimensionsChanged\", 4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"], [\"ngx-charts-heat-map-cell-series\", \"\", 3, \"select\", \"activate\", \"deactivate\", \"xScale\", \"yScale\", \"colors\", \"data\", \"gradient\", \"animations\", \"tooltipDisabled\", \"tooltipTemplate\", \"tooltipText\"], [\"ngx-charts-x-axis\", \"\", 3, \"dimensionsChanged\", \"xScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\"], [\"ngx-charts-y-axis\", \"\", 3, \"dimensionsChanged\", \"yScale\", \"dims\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\"]],\n  template: function HeatMapComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n      i0.ɵɵlistener(\"legendLabelClick\", function HeatMapComponent_Template_ngx_charts_chart_legendLabelClick_0_listener($event) {\n        return ctx.onClick($event);\n      });\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"g\", 1);\n      i0.ɵɵtemplate(2, HeatMapComponent__svg_g_2_Template, 1, 10, \"g\", 2)(3, HeatMapComponent__svg_g_3_Template, 1, 9, \"g\", 3)(4, HeatMapComponent__svg_rect_4_Template, 1, 6, \"rect\", 4);\n      i0.ɵɵelementStart(5, \"g\", 5);\n      i0.ɵɵlistener(\"select\", function HeatMapComponent_Template_g_select_5_listener($event) {\n        return ctx.onClick($event);\n      })(\"activate\", function HeatMapComponent_Template_g_activate_5_listener($event) {\n        return ctx.onActivate($event, undefined);\n      })(\"deactivate\", function HeatMapComponent_Template_g_deactivate_5_listener($event) {\n        return ctx.onDeactivate($event, undefined);\n      });\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(17, _c24, ctx.width, ctx.height))(\"showLegend\", ctx.legend)(\"animations\", ctx.animations)(\"legendOptions\", ctx.legendOptions);\n      i0.ɵɵadvance();\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngIf\", ctx.xAxis);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngIf\", ctx.yAxis);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngForOf\", ctx.rects);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"xScale\", ctx.xScale)(\"yScale\", ctx.yScale)(\"colors\", ctx.colors)(\"data\", ctx.results)(\"gradient\", ctx.gradient)(\"animations\", ctx.animations)(\"tooltipDisabled\", ctx.tooltipDisabled)(\"tooltipTemplate\", ctx.tooltipTemplate)(\"tooltipText\", ctx.tooltipText);\n    }\n  },\n  dependencies: [ChartComponent, XAxisComponent, YAxisComponent, HeatCellSeriesComponent, i2.NgIf, i2.NgForOf],\n  styles: [_c25],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(HeatMapComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-heat-map',\n      template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [animations]=\"animations\"\n      [legendOptions]=\"legendOptions\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"heat-map chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:rect\n          *ngFor=\"let rect of rects\"\n          [attr.x]=\"rect.x\"\n          [attr.y]=\"rect.y\"\n          [attr.rx]=\"rect.rx\"\n          [attr.width]=\"rect.width\"\n          [attr.height]=\"rect.height\"\n          [attr.fill]=\"rect.fill\"\n        />\n        <svg:g\n          ngx-charts-heat-map-cell-series\n          [xScale]=\"xScale\"\n          [yScale]=\"yScale\"\n          [colors]=\"colors\"\n          [data]=\"results\"\n          [gradient]=\"gradient\"\n          [animations]=\"animations\"\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [tooltipText]=\"tooltipText\"\n          (select)=\"onClick($event)\"\n          (activate)=\"onActivate($event, undefined)\"\n          (deactivate)=\"onDeactivate($event, undefined)\"\n        />\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"]\n    }]\n  }], null, {\n    legend: [{\n      type: Input\n    }],\n    legendTitle: [{\n      type: Input\n    }],\n    legendPosition: [{\n      type: Input\n    }],\n    xAxis: [{\n      type: Input\n    }],\n    yAxis: [{\n      type: Input\n    }],\n    showXAxisLabel: [{\n      type: Input\n    }],\n    showYAxisLabel: [{\n      type: Input\n    }],\n    xAxisLabel: [{\n      type: Input\n    }],\n    yAxisLabel: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    innerPadding: [{\n      type: Input\n    }],\n    trimXAxisTicks: [{\n      type: Input\n    }],\n    trimYAxisTicks: [{\n      type: Input\n    }],\n    rotateXAxisTicks: [{\n      type: Input\n    }],\n    maxXAxisTickLength: [{\n      type: Input\n    }],\n    maxYAxisTickLength: [{\n      type: Input\n    }],\n    xAxisTickFormatting: [{\n      type: Input\n    }],\n    yAxisTickFormatting: [{\n      type: Input\n    }],\n    xAxisTicks: [{\n      type: Input\n    }],\n    yAxisTicks: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    tooltipText: [{\n      type: Input\n    }],\n    min: [{\n      type: Input\n    }],\n    max: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    wrapTicks: [{\n      type: Input\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    tooltipTemplate: [{\n      type: ContentChild,\n      args: ['tooltipTemplate']\n    }]\n  });\n})();\nclass HeatMapModule {}\nHeatMapModule.ɵfac = function HeatMapModule_Factory(t) {\n  return new (t || HeatMapModule)();\n};\nHeatMapModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: HeatMapModule\n});\nHeatMapModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[ChartCommonModule]]\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(HeatMapModule, [{\n    type: NgModule,\n    args: [{\n      imports: [ChartCommonModule],\n      declarations: [HeatMapCellComponent, HeatCellSeriesComponent, HeatMapComponent],\n      exports: [HeatMapCellComponent, HeatCellSeriesComponent, HeatMapComponent]\n    }]\n  }], null, null);\n})();\nclass LineComponent {\n  constructor(element, platformId) {\n    this.element = element;\n    this.platformId = platformId;\n    this.fill = 'none';\n    this.animations = true;\n    // @Output() select = new EventEmitter();\n    this.initialized = false;\n    this.isSSR = false;\n  }\n  ngOnInit() {\n    if (isPlatformServer(this.platformId)) {\n      this.isSSR = true;\n    }\n  }\n  ngOnChanges(changes) {\n    if (!this.initialized) {\n      this.initialized = true;\n      this.initialPath = this.path;\n    } else {\n      this.updatePathEl();\n    }\n  }\n  updatePathEl() {\n    const node = select(this.element.nativeElement).select('.line');\n    if (this.animations) {\n      node.transition().duration(750).attr('d', this.path);\n    } else {\n      node.attr('d', this.path);\n    }\n  }\n}\nLineComponent.ɵfac = function LineComponent_Factory(t) {\n  return new (t || LineComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(PLATFORM_ID));\n};\nLineComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: LineComponent,\n  selectors: [[\"g\", \"ngx-charts-line\", \"\"]],\n  inputs: {\n    path: \"path\",\n    stroke: \"stroke\",\n    data: \"data\",\n    fill: \"fill\",\n    animations: \"animations\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c36,\n  decls: 2,\n  vars: 2,\n  consts: [[4, \"ngIf\"], [\"stroke-width\", \"1.5px\", 1, \"line\"]],\n  template: function LineComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, LineComponent__svg_g_0_Template, 2, 4, \"g\", 0)(1, LineComponent__svg_g_1_Template, 2, 3, \"g\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", !ctx.isSSR);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngIf\", ctx.isSSR);\n    }\n  },\n  dependencies: [i2.NgIf],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('animationState', [transition(':enter', [style({\n      strokeDasharray: 2000,\n      strokeDashoffset: 2000\n    }), animate(1000, style({\n      strokeDashoffset: 0\n    }))])])]\n  },\n  changeDetection: 0\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LineComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-line]',\n      template: `\n    <svg:g *ngIf=\"!isSSR\">\n      <svg:path\n        [@animationState]=\"'active'\"\n        class=\"line\"\n        [attr.d]=\"initialPath\"\n        [attr.fill]=\"fill\"\n        [attr.stroke]=\"stroke\"\n        stroke-width=\"1.5px\"\n      />\n    </svg:g>\n    <svg:g *ngIf=\"isSSR\">\n      <svg:path class=\"line\" [attr.d]=\"initialPath\" [attr.fill]=\"fill\" [attr.stroke]=\"stroke\" stroke-width=\"1.5px\" />\n    </svg:g>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      animations: [trigger('animationState', [transition(':enter', [style({\n        strokeDasharray: 2000,\n        strokeDashoffset: 2000\n      }), animate(1000, style({\n        strokeDashoffset: 0\n      }))])])]\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }];\n  }, {\n    path: [{\n      type: Input\n    }],\n    stroke: [{\n      type: Input\n    }],\n    data: [{\n      type: Input\n    }],\n    fill: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }]\n  });\n})();\nclass LineSeriesComponent {\n  constructor() {\n    this.animations = true;\n    this.barOrientation = BarOrientation;\n  }\n  ngOnChanges(changes) {\n    this.update();\n  }\n  update() {\n    this.updateGradients();\n    const data = this.sortData(this.data.series);\n    const lineGen = this.getLineGenerator();\n    this.path = lineGen(data) || '';\n    const areaGen = this.getAreaGenerator();\n    this.areaPath = areaGen(data) || '';\n    if (this.hasRange) {\n      const range = this.getRangeGenerator();\n      this.outerPath = range(data) || '';\n    }\n    if (this.hasGradient) {\n      this.stroke = this.gradientUrl;\n      const values = this.data.series.map(d => d.value);\n      const max = Math.max(...values);\n      const min = Math.min(...values);\n      if (max === min) {\n        this.stroke = this.colors.getColor(max);\n      }\n    } else {\n      this.stroke = this.colors.getColor(this.data.name);\n    }\n  }\n  getLineGenerator() {\n    return line().x(d => {\n      const label = d.name;\n      let value;\n      if (this.scaleType === ScaleType.Time) {\n        value = this.xScale(label);\n      } else if (this.scaleType === ScaleType.Linear) {\n        value = this.xScale(Number(label));\n      } else {\n        value = this.xScale(label);\n      }\n      return value;\n    }).y(d => this.yScale(d.value)).curve(this.curve);\n  }\n  getRangeGenerator() {\n    return area().x(d => {\n      const label = d.name;\n      let value;\n      if (this.scaleType === ScaleType.Time) {\n        value = this.xScale(label);\n      } else if (this.scaleType === ScaleType.Linear) {\n        value = this.xScale(Number(label));\n      } else {\n        value = this.xScale(label);\n      }\n      return value;\n    }).y0(d => this.yScale(typeof d.min === 'number' ? d.min : d.value)).y1(d => this.yScale(typeof d.max === 'number' ? d.max : d.value)).curve(this.curve);\n  }\n  getAreaGenerator() {\n    const xProperty = d => {\n      const label = d.name;\n      return this.xScale(label);\n    };\n    return area().x(xProperty).y0(() => this.yScale.range()[0]).y1(d => this.yScale(d.value)).curve(this.curve);\n  }\n  sortData(data) {\n    if (this.scaleType === ScaleType.Linear) {\n      data = sortLinear(data, 'name');\n    } else if (this.scaleType === ScaleType.Time) {\n      data = sortByTime(data, 'name');\n    } else {\n      data = sortByDomain(data, 'name', 'asc', this.xScale.domain());\n    }\n    return data;\n  }\n  updateGradients() {\n    if (this.colors.scaleType === ScaleType.Linear) {\n      this.hasGradient = true;\n      this.gradientId = 'grad' + id().toString();\n      this.gradientUrl = `url(#${this.gradientId})`;\n      const values = this.data.series.map(d => d.value);\n      const max = Math.max(...values);\n      const min = Math.min(...values);\n      this.gradientStops = this.colors.getLinearGradientStops(max, min);\n      this.areaGradientStops = this.colors.getLinearGradientStops(max);\n    } else {\n      this.hasGradient = false;\n      this.gradientStops = undefined;\n      this.areaGradientStops = undefined;\n    }\n  }\n  isActive(entry) {\n    if (!this.activeEntries) return false;\n    const item = this.activeEntries.find(d => {\n      return entry.name === d.name;\n    });\n    return item !== undefined;\n  }\n  isInactive(entry) {\n    if (!this.activeEntries || this.activeEntries.length === 0) return false;\n    const item = this.activeEntries.find(d => {\n      return entry.name === d.name;\n    });\n    return item === undefined;\n  }\n}\nLineSeriesComponent.ɵfac = function LineSeriesComponent_Factory(t) {\n  return new (t || LineSeriesComponent)();\n};\nLineSeriesComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: LineSeriesComponent,\n  selectors: [[\"g\", \"ngx-charts-line-series\", \"\"]],\n  inputs: {\n    data: \"data\",\n    xScale: \"xScale\",\n    yScale: \"yScale\",\n    colors: \"colors\",\n    scaleType: \"scaleType\",\n    curve: \"curve\",\n    activeEntries: \"activeEntries\",\n    rangeFillOpacity: \"rangeFillOpacity\",\n    hasRange: \"hasRange\",\n    animations: \"animations\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c37,\n  decls: 6,\n  vars: 22,\n  consts: [[\"ngx-charts-svg-linear-gradient\", \"\", 3, \"orientation\", \"name\", \"stops\", 4, \"ngIf\"], [\"ngx-charts-area\", \"\", 1, \"line-highlight\", 3, \"data\", \"path\", \"fill\", \"opacity\", \"startOpacity\", \"gradient\", \"stops\", \"animations\"], [\"ngx-charts-line\", \"\", 1, \"line-series\", 3, \"data\", \"path\", \"stroke\", \"animations\"], [\"ngx-charts-area\", \"\", \"class\", \"line-series-range\", 3, \"data\", \"path\", \"fill\", \"active\", \"inactive\", \"opacity\", \"animations\", 4, \"ngIf\"], [\"ngx-charts-svg-linear-gradient\", \"\", 3, \"orientation\", \"name\", \"stops\"], [\"ngx-charts-area\", \"\", 1, \"line-series-range\", 3, \"data\", \"path\", \"fill\", \"opacity\", \"animations\"]],\n  template: function LineSeriesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(0, \"g\")(1, \"defs\");\n      i0.ɵɵtemplate(2, LineSeriesComponent__svg_g_2_Template, 1, 3, \"g\", 0);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(3, \"g\", 1)(4, \"g\", 2);\n      i0.ɵɵtemplate(5, LineSeriesComponent__svg_g_5_Template, 1, 9, \"g\", 3);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.hasGradient);\n      i0.ɵɵadvance();\n      i0.ɵɵclassProp(\"active\", ctx.isActive(ctx.data))(\"inactive\", ctx.isInactive(ctx.data));\n      i0.ɵɵproperty(\"data\", ctx.data)(\"path\", ctx.areaPath)(\"fill\", ctx.hasGradient ? ctx.gradientUrl : ctx.colors.getColor(ctx.data.name))(\"opacity\", 0.25)(\"startOpacity\", 0)(\"gradient\", true)(\"stops\", ctx.areaGradientStops)(\"animations\", ctx.animations);\n      i0.ɵɵadvance();\n      i0.ɵɵclassProp(\"active\", ctx.isActive(ctx.data))(\"inactive\", ctx.isInactive(ctx.data));\n      i0.ɵɵproperty(\"data\", ctx.data)(\"path\", ctx.path)(\"stroke\", ctx.stroke)(\"animations\", ctx.animations);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngIf\", ctx.hasRange);\n    }\n  },\n  dependencies: [SvgLinearGradientComponent, AreaComponent, LineComponent, i2.NgIf],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LineSeriesComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-line-series]',\n      template: `\n    <svg:g>\n      <defs>\n        <svg:g\n          ngx-charts-svg-linear-gradient\n          *ngIf=\"hasGradient\"\n          [orientation]=\"barOrientation.Vertical\"\n          [name]=\"gradientId\"\n          [stops]=\"gradientStops\"\n        />\n      </defs>\n      <svg:g\n        ngx-charts-area\n        class=\"line-highlight\"\n        [data]=\"data\"\n        [path]=\"areaPath\"\n        [fill]=\"hasGradient ? gradientUrl : colors.getColor(data.name)\"\n        [opacity]=\"0.25\"\n        [startOpacity]=\"0\"\n        [gradient]=\"true\"\n        [stops]=\"areaGradientStops\"\n        [class.active]=\"isActive(data)\"\n        [class.inactive]=\"isInactive(data)\"\n        [animations]=\"animations\"\n      />\n      <svg:g\n        ngx-charts-line\n        class=\"line-series\"\n        [data]=\"data\"\n        [path]=\"path\"\n        [stroke]=\"stroke\"\n        [animations]=\"animations\"\n        [class.active]=\"isActive(data)\"\n        [class.inactive]=\"isInactive(data)\"\n      />\n      <svg:g\n        ngx-charts-area\n        *ngIf=\"hasRange\"\n        class=\"line-series-range\"\n        [data]=\"data\"\n        [path]=\"outerPath\"\n        [fill]=\"hasGradient ? gradientUrl : colors.getColor(data.name)\"\n        [class.active]=\"isActive(data)\"\n        [class.inactive]=\"isInactive(data)\"\n        [opacity]=\"rangeFillOpacity\"\n        [animations]=\"animations\"\n      />\n    </svg:g>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, {\n    data: [{\n      type: Input\n    }],\n    xScale: [{\n      type: Input\n    }],\n    yScale: [{\n      type: Input\n    }],\n    colors: [{\n      type: Input\n    }],\n    scaleType: [{\n      type: Input\n    }],\n    curve: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    rangeFillOpacity: [{\n      type: Input\n    }],\n    hasRange: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }]\n  });\n})();\nclass LineChartComponent extends BaseChartComponent {\n  constructor() {\n    super(...arguments);\n    this.legendTitle = 'Legend';\n    this.legendPosition = LegendPosition.Right;\n    this.showGridLines = true;\n    this.curve = curveLinear;\n    this.activeEntries = [];\n    this.trimXAxisTicks = true;\n    this.trimYAxisTicks = true;\n    this.rotateXAxisTicks = true;\n    this.maxXAxisTickLength = 16;\n    this.maxYAxisTickLength = 16;\n    this.roundDomains = false;\n    this.tooltipDisabled = false;\n    this.showRefLines = false;\n    this.showRefLabels = true;\n    this.wrapTicks = false;\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.margin = [10, 20, 10, 20];\n    this.xAxisHeight = 0;\n    this.yAxisWidth = 0;\n    this.timelineHeight = 50;\n    this.timelinePadding = 10;\n    this.isSSR = false;\n  }\n  ngOnInit() {\n    if (isPlatformServer(this.platformId)) {\n      this.isSSR = true;\n    }\n  }\n  update() {\n    super.update();\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.schemeType,\n      legendPosition: this.legendPosition\n    });\n    if (this.timeline) {\n      this.dims.height -= this.timelineHeight + this.margin[2] + this.timelinePadding;\n    }\n    this.xDomain = this.getXDomain();\n    if (this.filteredDomain) {\n      this.xDomain = this.filteredDomain;\n    }\n    this.yDomain = this.getYDomain();\n    this.seriesDomain = this.getSeriesDomain();\n    this.xScale = this.getXScale(this.xDomain, this.dims.width);\n    this.yScale = this.getYScale(this.yDomain, this.dims.height);\n    this.updateTimeline();\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n    this.clipPathId = 'clip' + id().toString();\n    this.clipPath = `url(#${this.clipPathId})`;\n  }\n  updateTimeline() {\n    if (this.timeline) {\n      this.timelineWidth = this.dims.width;\n      this.timelineXDomain = this.getXDomain();\n      this.timelineXScale = this.getXScale(this.timelineXDomain, this.timelineWidth);\n      this.timelineYScale = this.getYScale(this.yDomain, this.timelineHeight);\n      this.timelineTransform = `translate(${this.dims.xOffset}, ${-this.margin[2]})`;\n    }\n  }\n  getXDomain() {\n    let values = getUniqueXDomainValues(this.results);\n    this.scaleType = getScaleType(values);\n    let domain = [];\n    if (this.scaleType === ScaleType.Linear) {\n      values = values.map(v => Number(v));\n    }\n    let min;\n    let max;\n    if (this.scaleType === ScaleType.Time || this.scaleType === ScaleType.Linear) {\n      min = this.xScaleMin ? this.xScaleMin : Math.min(...values);\n      max = this.xScaleMax ? this.xScaleMax : Math.max(...values);\n    }\n    if (this.scaleType === ScaleType.Time) {\n      domain = [new Date(min), new Date(max)];\n      this.xSet = [...values].sort((a, b) => {\n        const aDate = a.getTime();\n        const bDate = b.getTime();\n        if (aDate > bDate) return 1;\n        if (bDate > aDate) return -1;\n        return 0;\n      });\n    } else if (this.scaleType === ScaleType.Linear) {\n      domain = [min, max];\n      // Use compare function to sort numbers numerically\n      this.xSet = [...values].sort((a, b) => a - b);\n    } else {\n      domain = values;\n      this.xSet = values;\n    }\n    return domain;\n  }\n  getYDomain() {\n    const domain = [];\n    for (const results of this.results) {\n      for (const d of results.series) {\n        if (domain.indexOf(d.value) < 0) {\n          domain.push(d.value);\n        }\n        if (d.min !== undefined) {\n          this.hasRange = true;\n          if (domain.indexOf(d.min) < 0) {\n            domain.push(d.min);\n          }\n        }\n        if (d.max !== undefined) {\n          this.hasRange = true;\n          if (domain.indexOf(d.max) < 0) {\n            domain.push(d.max);\n          }\n        }\n      }\n    }\n    const values = [...domain];\n    if (!this.autoScale) {\n      values.push(0);\n    }\n    const min = this.yScaleMin ? this.yScaleMin : Math.min(...values);\n    const max = this.yScaleMax ? this.yScaleMax : Math.max(...values);\n    return [min, max];\n  }\n  getSeriesDomain() {\n    return this.results.map(d => d.name);\n  }\n  getXScale(domain, width) {\n    let scale;\n    if (this.scaleType === ScaleType.Time) {\n      scale = scaleTime().range([0, width]).domain(domain);\n    } else if (this.scaleType === ScaleType.Linear) {\n      scale = scaleLinear().range([0, width]).domain(domain);\n      if (this.roundDomains) {\n        scale = scale.nice();\n      }\n    } else if (this.scaleType === ScaleType.Ordinal) {\n      scale = scalePoint().range([0, width]).padding(0.1).domain(domain);\n    }\n    return scale;\n  }\n  getYScale(domain, height) {\n    const scale = scaleLinear().range([height, 0]).domain(domain);\n    return this.roundDomains ? scale.nice() : scale;\n  }\n  updateDomain(domain) {\n    this.filteredDomain = domain;\n    this.xDomain = this.filteredDomain;\n    this.xScale = this.getXScale(this.xDomain, this.dims.width);\n  }\n  updateHoveredVertical(item) {\n    this.hoveredVertical = item.value;\n    this.deactivateAll();\n  }\n  hideCircles() {\n    this.hoveredVertical = null;\n    this.deactivateAll();\n  }\n  onClick(data) {\n    this.select.emit(data);\n  }\n  trackBy(index, item) {\n    return `${item.name}`;\n  }\n  setColors() {\n    let domain;\n    if (this.schemeType === ScaleType.Ordinal) {\n      domain = this.seriesDomain;\n    } else {\n      domain = this.yDomain;\n    }\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n  }\n  getLegendOptions() {\n    const opts = {\n      scaleType: this.schemeType,\n      colors: undefined,\n      domain: [],\n      title: undefined,\n      position: this.legendPosition\n    };\n    if (opts.scaleType === ScaleType.Ordinal) {\n      opts.domain = this.seriesDomain;\n      opts.colors = this.colors;\n      opts.title = this.legendTitle;\n    } else {\n      opts.domain = this.yDomain;\n      opts.colors = this.colors.scale;\n    }\n    return opts;\n  }\n  updateYAxisWidth({\n    width\n  }) {\n    this.yAxisWidth = width;\n    this.update();\n  }\n  updateXAxisHeight({\n    height\n  }) {\n    this.xAxisHeight = height;\n    this.update();\n  }\n  onActivate(item) {\n    this.deactivateAll();\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value;\n    });\n    if (idx > -1) {\n      return;\n    }\n    this.activeEntries = [item];\n    this.activate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n  onDeactivate(item) {\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value;\n    });\n    this.activeEntries.splice(idx, 1);\n    this.activeEntries = [...this.activeEntries];\n    this.deactivate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n  deactivateAll() {\n    this.activeEntries = [...this.activeEntries];\n    for (const entry of this.activeEntries) {\n      this.deactivate.emit({\n        value: entry,\n        entries: []\n      });\n    }\n    this.activeEntries = [];\n  }\n}\nLineChartComponent.ɵfac = /* @__PURE__ */(() => {\n  let ɵLineChartComponent_BaseFactory;\n  return function LineChartComponent_Factory(t) {\n    return (ɵLineChartComponent_BaseFactory || (ɵLineChartComponent_BaseFactory = i0.ɵɵgetInheritedFactory(LineChartComponent)))(t || LineChartComponent);\n  };\n})();\nLineChartComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: LineChartComponent,\n  selectors: [[\"ngx-charts-line-chart\"]],\n  contentQueries: function LineChartComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n      i0.ɵɵcontentQuery(dirIndex, _c23, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.seriesTooltipTemplate = _t.first);\n    }\n  },\n  hostBindings: function LineChartComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"mouseleave\", function LineChartComponent_mouseleave_HostBindingHandler() {\n        return ctx.hideCircles();\n      });\n    }\n  },\n  inputs: {\n    legend: \"legend\",\n    legendTitle: \"legendTitle\",\n    legendPosition: \"legendPosition\",\n    xAxis: \"xAxis\",\n    yAxis: \"yAxis\",\n    showXAxisLabel: \"showXAxisLabel\",\n    showYAxisLabel: \"showYAxisLabel\",\n    xAxisLabel: \"xAxisLabel\",\n    yAxisLabel: \"yAxisLabel\",\n    autoScale: \"autoScale\",\n    timeline: \"timeline\",\n    gradient: \"gradient\",\n    showGridLines: \"showGridLines\",\n    curve: \"curve\",\n    activeEntries: \"activeEntries\",\n    schemeType: \"schemeType\",\n    rangeFillOpacity: \"rangeFillOpacity\",\n    trimXAxisTicks: \"trimXAxisTicks\",\n    trimYAxisTicks: \"trimYAxisTicks\",\n    rotateXAxisTicks: \"rotateXAxisTicks\",\n    maxXAxisTickLength: \"maxXAxisTickLength\",\n    maxYAxisTickLength: \"maxYAxisTickLength\",\n    xAxisTickFormatting: \"xAxisTickFormatting\",\n    yAxisTickFormatting: \"yAxisTickFormatting\",\n    xAxisTicks: \"xAxisTicks\",\n    yAxisTicks: \"yAxisTicks\",\n    roundDomains: \"roundDomains\",\n    tooltipDisabled: \"tooltipDisabled\",\n    showRefLines: \"showRefLines\",\n    referenceLines: \"referenceLines\",\n    showRefLabels: \"showRefLabels\",\n    xScaleMin: \"xScaleMin\",\n    xScaleMax: \"xScaleMax\",\n    yScaleMin: \"yScaleMin\",\n    yScaleMax: \"yScaleMax\",\n    wrapTicks: \"wrapTicks\"\n  },\n  outputs: {\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 12,\n  vars: 20,\n  consts: [[3, \"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\", \"view\", \"showLegend\", \"legendOptions\", \"activeEntries\", \"animations\"], [1, \"line-chart\", \"chart\"], [\"ngx-charts-x-axis\", \"\", 3, \"xScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\", \"dimensionsChanged\", 4, \"ngIf\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"wrapTicks\", \"dimensionsChanged\", 4, \"ngIf\"], [4, \"ngIf\"], [3, \"mouseleave\", 4, \"ngIf\"], [\"ngx-charts-timeline\", \"\", 3, \"results\", \"view\", \"height\", \"scheme\", \"customColors\", \"scaleType\", \"legend\", \"onDomainChange\", 4, \"ngIf\"], [\"ngx-charts-x-axis\", \"\", 3, \"dimensionsChanged\", \"xScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"wrapTicks\"], [\"ngx-charts-y-axis\", \"\", 3, \"dimensionsChanged\", \"yScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"wrapTicks\"], [4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-line-series\", \"\", 3, \"xScale\", \"yScale\", \"colors\", \"data\", \"activeEntries\", \"scaleType\", \"curve\", \"rangeFillOpacity\", \"hasRange\", \"animations\"], [3, \"mouseleave\"], [\"ngx-charts-tooltip-area\", \"\", 3, \"hover\", \"dims\", \"xSet\", \"xScale\", \"yScale\", \"results\", \"colors\", \"tooltipDisabled\", \"tooltipTemplate\"], [4, \"ngFor\", \"ngForOf\"], [\"ngx-charts-circle-series\", \"\", 3, \"select\", \"activate\", \"deactivate\", \"xScale\", \"yScale\", \"colors\", \"data\", \"scaleType\", \"visibleValue\", \"activeEntries\", \"tooltipDisabled\", \"tooltipTemplate\"], [\"ngx-charts-timeline\", \"\", 3, \"onDomainChange\", \"results\", \"view\", \"height\", \"scheme\", \"customColors\", \"scaleType\", \"legend\"], [\"ngx-charts-line-series\", \"\", 3, \"xScale\", \"yScale\", \"colors\", \"data\", \"scaleType\", \"curve\", \"hasRange\", \"animations\"]],\n  template: function LineChartComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n      i0.ɵɵlistener(\"legendLabelClick\", function LineChartComponent_Template_ngx_charts_chart_legendLabelClick_0_listener($event) {\n        return ctx.onClick($event);\n      })(\"legendLabelActivate\", function LineChartComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener($event) {\n        return ctx.onActivate($event);\n      })(\"legendLabelDeactivate\", function LineChartComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener($event) {\n        return ctx.onDeactivate($event);\n      });\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"defs\")(2, \"clipPath\");\n      i0.ɵɵelement(3, \"rect\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(4, \"g\", 1);\n      i0.ɵɵtemplate(5, LineChartComponent__svg_g_5_Template, 1, 11, \"g\", 2)(6, LineChartComponent__svg_g_6_Template, 1, 13, \"g\", 3);\n      i0.ɵɵelementStart(7, \"g\");\n      i0.ɵɵtemplate(8, LineChartComponent__svg_g_8_Template, 2, 2, \"g\", 4)(9, LineChartComponent__svg_g_9_Template, 2, 2, \"g\", 4)(10, LineChartComponent__svg_g_10_Template, 3, 9, \"g\", 5);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(11, LineChartComponent__svg_g_11_Template, 2, 13, \"g\", 6);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(17, _c24, ctx.width, ctx.height))(\"showLegend\", ctx.legend)(\"legendOptions\", ctx.legendOptions)(\"activeEntries\", ctx.activeEntries)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(2);\n      i0.ɵɵattribute(\"id\", ctx.clipPathId);\n      i0.ɵɵadvance();\n      i0.ɵɵattribute(\"width\", ctx.dims.width + 10)(\"height\", ctx.dims.height + 10)(\"transform\", \"translate(-5, -5)\");\n      i0.ɵɵadvance();\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngIf\", ctx.xAxis);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngIf\", ctx.yAxis);\n      i0.ɵɵadvance();\n      i0.ɵɵattribute(\"clip-path\", ctx.clipPath);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngIf\", !ctx.isSSR);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngIf\", ctx.isSSR);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngIf\", !ctx.tooltipDisabled);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngIf\", ctx.timeline && ctx.scaleType != \"ordinal\");\n    }\n  },\n  dependencies: [ChartComponent, XAxisComponent, YAxisComponent, LineSeriesComponent, TooltipArea, CircleSeriesComponent, Timeline, i2.NgIf, i2.NgForOf],\n  styles: [_c25],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('animationState', [transition(':leave', [style({\n      opacity: 1\n    }), animate(500, style({\n      opacity: 0\n    }))])])]\n  },\n  changeDetection: 0\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LineChartComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-line-chart',\n      template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:defs>\n        <svg:clipPath [attr.id]=\"clipPathId\">\n          <svg:rect\n            [attr.width]=\"dims.width + 10\"\n            [attr.height]=\"dims.height + 10\"\n            [attr.transform]=\"'translate(-5, -5)'\"\n          />\n        </svg:clipPath>\n      </svg:defs>\n      <svg:g [attr.transform]=\"transform\" class=\"line-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [referenceLines]=\"referenceLines\"\n          [showRefLines]=\"showRefLines\"\n          [showRefLabels]=\"showRefLabels\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g [attr.clip-path]=\"clipPath\">\n          <svg:g *ngIf=\"!isSSR\">\n            <svg:g *ngFor=\"let series of results; trackBy: trackBy\" [@animationState]=\"'active'\">\n              <svg:g\n                ngx-charts-line-series\n                [xScale]=\"xScale\"\n                [yScale]=\"yScale\"\n                [colors]=\"colors\"\n                [data]=\"series\"\n                [activeEntries]=\"activeEntries\"\n                [scaleType]=\"scaleType\"\n                [curve]=\"curve\"\n                [rangeFillOpacity]=\"rangeFillOpacity\"\n                [hasRange]=\"hasRange\"\n                [animations]=\"animations\"\n              />\n            </svg:g>\n          </svg:g>\n          <svg:g *ngIf=\"isSSR\">\n            <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n              <svg:g\n                ngx-charts-line-series\n                [xScale]=\"xScale\"\n                [yScale]=\"yScale\"\n                [colors]=\"colors\"\n                [data]=\"series\"\n                [activeEntries]=\"activeEntries\"\n                [scaleType]=\"scaleType\"\n                [curve]=\"curve\"\n                [rangeFillOpacity]=\"rangeFillOpacity\"\n                [hasRange]=\"hasRange\"\n                [animations]=\"animations\"\n              />\n            </svg:g>\n          </svg:g>\n\n          <svg:g *ngIf=\"!tooltipDisabled\" (mouseleave)=\"hideCircles()\">\n            <svg:g\n              ngx-charts-tooltip-area\n              [dims]=\"dims\"\n              [xSet]=\"xSet\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [results]=\"results\"\n              [colors]=\"colors\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"seriesTooltipTemplate\"\n              (hover)=\"updateHoveredVertical($event)\"\n            />\n\n            <svg:g *ngFor=\"let series of results\">\n              <svg:g\n                ngx-charts-circle-series\n                [xScale]=\"xScale\"\n                [yScale]=\"yScale\"\n                [colors]=\"colors\"\n                [data]=\"series\"\n                [scaleType]=\"scaleType\"\n                [visibleValue]=\"hoveredVertical\"\n                [activeEntries]=\"activeEntries\"\n                [tooltipDisabled]=\"tooltipDisabled\"\n                [tooltipTemplate]=\"tooltipTemplate\"\n                (select)=\"onClick($event)\"\n                (activate)=\"onActivate($event)\"\n                (deactivate)=\"onDeactivate($event)\"\n              />\n            </svg:g>\n          </svg:g>\n        </svg:g>\n      </svg:g>\n      <svg:g\n        ngx-charts-timeline\n        *ngIf=\"timeline && scaleType != 'ordinal'\"\n        [attr.transform]=\"timelineTransform\"\n        [results]=\"results\"\n        [view]=\"[timelineWidth, height]\"\n        [height]=\"timelineHeight\"\n        [scheme]=\"scheme\"\n        [customColors]=\"customColors\"\n        [scaleType]=\"scaleType\"\n        [legend]=\"legend\"\n        (onDomainChange)=\"updateDomain($event)\"\n      >\n        <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n          <svg:g\n            ngx-charts-line-series\n            [xScale]=\"timelineXScale\"\n            [yScale]=\"timelineYScale\"\n            [colors]=\"colors\"\n            [data]=\"series\"\n            [scaleType]=\"scaleType\"\n            [curve]=\"curve\"\n            [hasRange]=\"hasRange\"\n            [animations]=\"animations\"\n          />\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      animations: [trigger('animationState', [transition(':leave', [style({\n        opacity: 1\n      }), animate(500, style({\n        opacity: 0\n      }))])])],\n      styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"]\n    }]\n  }], null, {\n    legend: [{\n      type: Input\n    }],\n    legendTitle: [{\n      type: Input\n    }],\n    legendPosition: [{\n      type: Input\n    }],\n    xAxis: [{\n      type: Input\n    }],\n    yAxis: [{\n      type: Input\n    }],\n    showXAxisLabel: [{\n      type: Input\n    }],\n    showYAxisLabel: [{\n      type: Input\n    }],\n    xAxisLabel: [{\n      type: Input\n    }],\n    yAxisLabel: [{\n      type: Input\n    }],\n    autoScale: [{\n      type: Input\n    }],\n    timeline: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    showGridLines: [{\n      type: Input\n    }],\n    curve: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    schemeType: [{\n      type: Input\n    }],\n    rangeFillOpacity: [{\n      type: Input\n    }],\n    trimXAxisTicks: [{\n      type: Input\n    }],\n    trimYAxisTicks: [{\n      type: Input\n    }],\n    rotateXAxisTicks: [{\n      type: Input\n    }],\n    maxXAxisTickLength: [{\n      type: Input\n    }],\n    maxYAxisTickLength: [{\n      type: Input\n    }],\n    xAxisTickFormatting: [{\n      type: Input\n    }],\n    yAxisTickFormatting: [{\n      type: Input\n    }],\n    xAxisTicks: [{\n      type: Input\n    }],\n    yAxisTicks: [{\n      type: Input\n    }],\n    roundDomains: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    showRefLines: [{\n      type: Input\n    }],\n    referenceLines: [{\n      type: Input\n    }],\n    showRefLabels: [{\n      type: Input\n    }],\n    xScaleMin: [{\n      type: Input\n    }],\n    xScaleMax: [{\n      type: Input\n    }],\n    yScaleMin: [{\n      type: Input\n    }],\n    yScaleMax: [{\n      type: Input\n    }],\n    wrapTicks: [{\n      type: Input\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    tooltipTemplate: [{\n      type: ContentChild,\n      args: ['tooltipTemplate']\n    }],\n    seriesTooltipTemplate: [{\n      type: ContentChild,\n      args: ['seriesTooltipTemplate']\n    }],\n    hideCircles: [{\n      type: HostListener,\n      args: ['mouseleave']\n    }]\n  });\n})();\nclass LineChartModule {}\nLineChartModule.ɵfac = function LineChartModule_Factory(t) {\n  return new (t || LineChartModule)();\n};\nLineChartModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: LineChartModule\n});\nLineChartModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[ChartCommonModule]]\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LineChartModule, [{\n    type: NgModule,\n    args: [{\n      imports: [ChartCommonModule],\n      declarations: [LineComponent, LineChartComponent, LineSeriesComponent],\n      exports: [LineComponent, LineChartComponent, LineSeriesComponent]\n    }]\n  }], null, null);\n})();\nclass PieLabelComponent {\n  constructor(platformId) {\n    this.platformId = platformId;\n    this.animations = true;\n    this.labelTrim = true;\n    this.labelTrimSize = 10;\n    this.trimLabel = trimLabel;\n  }\n  ngOnChanges(changes) {\n    this.setTransforms();\n    this.update();\n  }\n  setTransforms() {\n    if (isPlatformServer(this.platformId)) {\n      this.styleTransform = `translate3d(${this.textX}px,${this.textY}px, 0)`;\n      this.attrTransform = `translate(${this.textX},${this.textY})`;\n      this.textTransition = !this.animations ? null : 'transform 0.75s';\n    } else {\n      const isIE = /(edge|msie|trident)/i.test(navigator.userAgent);\n      this.styleTransform = isIE ? null : `translate3d(${this.textX}px,${this.textY}px, 0)`;\n      this.attrTransform = !isIE ? null : `translate(${this.textX},${this.textY})`;\n      this.textTransition = isIE || !this.animations ? null : 'transform 0.75s';\n    }\n  }\n  update() {\n    let startRadius = this.radius;\n    if (this.explodeSlices) {\n      startRadius = this.radius * this.value / this.max;\n    }\n    const innerArc = arc().innerRadius(startRadius).outerRadius(startRadius);\n    // Calculate innerPos then scale outer position to match label position\n    const innerPos = innerArc.centroid(this.data);\n    let scale = this.data.pos[1] / innerPos[1];\n    if (this.data.pos[1] === 0 || innerPos[1] === 0) {\n      scale = 1;\n    }\n    const outerPos = [scale * innerPos[0], scale * innerPos[1]];\n    this.line = `M${innerPos}L${outerPos}L${this.data.pos}`;\n  }\n  get textX() {\n    return this.data.pos[0];\n  }\n  get textY() {\n    return this.data.pos[1];\n  }\n  textAnchor() {\n    return this.midAngle(this.data) < Math.PI ? TextAnchor.Start : TextAnchor.End;\n  }\n  midAngle(d) {\n    return d.startAngle + (d.endAngle - d.startAngle) / 2;\n  }\n}\nPieLabelComponent.ɵfac = function PieLabelComponent_Factory(t) {\n  return new (t || PieLabelComponent)(i0.ɵɵdirectiveInject(PLATFORM_ID));\n};\nPieLabelComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: PieLabelComponent,\n  selectors: [[\"g\", \"ngx-charts-pie-label\", \"\"]],\n  inputs: {\n    data: \"data\",\n    radius: \"radius\",\n    label: \"label\",\n    color: \"color\",\n    max: \"max\",\n    value: \"value\",\n    explodeSlices: \"explodeSlices\",\n    animations: \"animations\",\n    labelTrim: \"labelTrim\",\n    labelTrimSize: \"labelTrimSize\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c38,\n  decls: 6,\n  vars: 17,\n  consts: [[\"dy\", \".35em\", 1, \"pie-label\"], [\"fill\", \"none\", 1, \"pie-label-line\", \"line\"]],\n  template: function PieLabelComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"title\");\n      i0.ɵɵtext(1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(2, \"g\")(3, \"text\", 0);\n      i0.ɵɵtext(4);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(5, \"path\", 1);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance();\n      i0.ɵɵtextInterpolate(ctx.label);\n      i0.ɵɵadvance();\n      i0.ɵɵstyleProp(\"transform\", ctx.styleTransform)(\"transition\", ctx.textTransition);\n      i0.ɵɵattribute(\"transform\", ctx.attrTransform);\n      i0.ɵɵadvance();\n      i0.ɵɵstyleProp(\"text-anchor\", ctx.textAnchor())(\"shape-rendering\", \"crispEdges\");\n      i0.ɵɵclassProp(\"animation\", ctx.animations);\n      i0.ɵɵadvance();\n      i0.ɵɵtextInterpolate1(\" \", ctx.labelTrim ? ctx.trimLabel(ctx.label, ctx.labelTrimSize) : ctx.label, \" \");\n      i0.ɵɵadvance();\n      i0.ɵɵclassProp(\"animation\", ctx.animations);\n      i0.ɵɵattribute(\"d\", ctx.line)(\"stroke\", ctx.color);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PieLabelComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-pie-label]',\n      template: `\n    <title>{{ label }}</title>\n    <svg:g [attr.transform]=\"attrTransform\" [style.transform]=\"styleTransform\" [style.transition]=\"textTransition\">\n      <svg:text\n        class=\"pie-label\"\n        [class.animation]=\"animations\"\n        dy=\".35em\"\n        [style.textAnchor]=\"textAnchor()\"\n        [style.shapeRendering]=\"'crispEdges'\"\n      >\n        {{ labelTrim ? trimLabel(label, labelTrimSize) : label }}\n      </svg:text>\n    </svg:g>\n    <svg:path\n      [attr.d]=\"line\"\n      [attr.stroke]=\"color\"\n      fill=\"none\"\n      class=\"pie-label-line line\"\n      [class.animation]=\"animations\"\n    ></svg:path>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }];\n  }, {\n    data: [{\n      type: Input\n    }],\n    radius: [{\n      type: Input\n    }],\n    label: [{\n      type: Input\n    }],\n    color: [{\n      type: Input\n    }],\n    max: [{\n      type: Input\n    }],\n    value: [{\n      type: Input\n    }],\n    explodeSlices: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }],\n    labelTrim: [{\n      type: Input\n    }],\n    labelTrimSize: [{\n      type: Input\n    }]\n  });\n})();\nclass PolarSeriesComponent {\n  constructor() {\n    this.tooltipDisabled = false;\n    this.gradient = false;\n    this.animations = true;\n    this.select = new EventEmitter();\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.circleRadius = 3;\n    this.barOrientation = BarOrientation;\n    this.placementTypes = PlacementTypes;\n    this.styleTypes = StyleTypes;\n  }\n  ngOnChanges(changes) {\n    this.update();\n  }\n  update() {\n    this.updateGradients();\n    const line = this.getLineGenerator();\n    const data = this.sortData(this.data.series);\n    const seriesName = this.data.name;\n    const linearScaleType = this.colors.scaleType === ScaleType.Linear;\n    const min = this.yScale.domain()[0];\n    this.seriesColor = this.colors.getColor(linearScaleType ? min : seriesName);\n    this.path = line(data) || '';\n    this.circles = data.map(d => {\n      const a = this.getAngle(d);\n      const r = this.getRadius(d);\n      const value = d.value;\n      const color = this.colors.getColor(linearScaleType ? Math.abs(value) : seriesName);\n      const cData = Object.assign({}, d, {\n        series: seriesName,\n        value,\n        name: d.name\n      });\n      return {\n        data: cData,\n        cx: r * Math.sin(a),\n        cy: -r * Math.cos(a),\n        value,\n        color,\n        label: d.name\n      };\n    });\n    this.active = this.isActive(this.data);\n    this.inactive = this.isInactive(this.data);\n    this.tooltipText = this.tooltipText || (c => this.defaultTooltipText(c));\n  }\n  getAngle(d) {\n    const label = d.name;\n    if (this.scaleType === ScaleType.Time) {\n      return this.xScale(label);\n    } else if (this.scaleType === ScaleType.Linear) {\n      return this.xScale(Number(label));\n    }\n    return this.xScale(label);\n  }\n  getRadius(d) {\n    return this.yScale(d.value);\n  }\n  getLineGenerator() {\n    return lineRadial().angle(d => this.getAngle(d)).radius(d => this.getRadius(d)).curve(this.curve);\n  }\n  sortData(data) {\n    if (this.scaleType === ScaleType.Linear) {\n      return sortLinear(data, 'name');\n    } else if (this.scaleType === ScaleType.Time) {\n      return sortByTime(data, 'name');\n    }\n    return sortByDomain(data, 'name', 'asc', this.xScale.domain());\n  }\n  isActive(entry) {\n    if (!this.activeEntries) return false;\n    const item = this.activeEntries.find(d => {\n      return entry.name === d.name;\n    });\n    return item !== undefined;\n  }\n  isInactive(entry) {\n    if (!this.activeEntries || this.activeEntries.length === 0) return false;\n    const item = this.activeEntries.find(d => {\n      return entry.name === d.name;\n    });\n    return item === undefined;\n  }\n  defaultTooltipText({\n    label,\n    value\n  }) {\n    return `\n      <span class=\"tooltip-label\">${escapeLabel(this.data.name)} • ${escapeLabel(label)}</span>\n      <span class=\"tooltip-val\">${value.toLocaleString()}</span>\n    `;\n  }\n  updateGradients() {\n    this.hasGradient = this.gradient || this.colors.scaleType === ScaleType.Linear;\n    if (!this.hasGradient) {\n      return;\n    }\n    this.gradientId = 'grad' + id().toString();\n    this.gradientUrl = `url(#${this.gradientId})`;\n    if (this.colors.scaleType === ScaleType.Linear) {\n      const values = this.data.series.map(d => d.value);\n      const max = Math.max(...values);\n      const min = Math.min(...values);\n      this.gradientStops = this.colors.getLinearGradientStops(max, min);\n    } else {\n      this.gradientStops = undefined;\n    }\n  }\n}\nPolarSeriesComponent.ɵfac = function PolarSeriesComponent_Factory(t) {\n  return new (t || PolarSeriesComponent)();\n};\nPolarSeriesComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: PolarSeriesComponent,\n  selectors: [[\"g\", \"ngx-charts-polar-series\", \"\"]],\n  inputs: {\n    name: \"name\",\n    data: \"data\",\n    xScale: \"xScale\",\n    yScale: \"yScale\",\n    colors: \"colors\",\n    scaleType: \"scaleType\",\n    curve: \"curve\",\n    activeEntries: \"activeEntries\",\n    rangeFillOpacity: \"rangeFillOpacity\",\n    tooltipDisabled: \"tooltipDisabled\",\n    tooltipText: \"tooltipText\",\n    gradient: \"gradient\",\n    tooltipTemplate: \"tooltipTemplate\",\n    animations: \"animations\"\n  },\n  outputs: {\n    select: \"select\",\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c39,\n  decls: 5,\n  vars: 11,\n  consts: [[1, \"polar-charts-series\"], [\"ngx-charts-svg-radial-gradient\", \"\", 3, \"color\", \"name\", \"startOpacity\", \"endOpacity\", \"stops\", 4, \"ngIf\"], [\"ngx-charts-line\", \"\", 1, \"polar-series-path\", 3, \"path\", \"stroke\", \"fill\", \"animations\"], [\"ngx-charts-circle\", \"\", \"class\", \"circle\", \"ngx-tooltip\", \"\", 3, \"cx\", \"cy\", \"r\", \"fill\", \"opacity\", \"tooltipDisabled\", \"tooltipPlacement\", \"tooltipType\", \"tooltipTitle\", \"tooltipTemplate\", \"tooltipContext\", \"select\", \"activate\", \"deactivate\", 4, \"ngFor\", \"ngForOf\"], [\"ngx-charts-svg-radial-gradient\", \"\", 3, \"color\", \"name\", \"startOpacity\", \"endOpacity\", \"stops\"], [\"ngx-charts-circle\", \"\", \"ngx-tooltip\", \"\", 1, \"circle\", 3, \"select\", \"activate\", \"deactivate\", \"cx\", \"cy\", \"r\", \"fill\", \"tooltipDisabled\", \"tooltipPlacement\", \"tooltipType\", \"tooltipTitle\", \"tooltipTemplate\", \"tooltipContext\"]],\n  template: function PolarSeriesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(0, \"g\", 0)(1, \"defs\");\n      i0.ɵɵtemplate(2, PolarSeriesComponent__svg_g_2_Template, 1, 5, \"g\", 1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(3, \"g\", 2);\n      i0.ɵɵtemplate(4, PolarSeriesComponent__svg_g_4_Template, 1, 12, \"g\", 3);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.hasGradient);\n      i0.ɵɵadvance();\n      i0.ɵɵclassProp(\"active\", ctx.active)(\"inactive\", ctx.inactive);\n      i0.ɵɵproperty(\"path\", ctx.path)(\"stroke\", ctx.hasGradient ? ctx.gradientUrl : ctx.seriesColor)(\"fill\", ctx.hasGradient ? ctx.gradientUrl : ctx.seriesColor)(\"animations\", ctx.animations);\n      i0.ɵɵattribute(\"fill-opacity\", ctx.rangeFillOpacity);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngForOf\", ctx.circles);\n    }\n  },\n  dependencies: [SvgRadialGradientComponent, LineComponent, CircleComponent, i2.NgIf, i2.NgForOf, TooltipDirective],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PolarSeriesComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-polar-series]',\n      template: `\n    <svg:g class=\"polar-charts-series\">\n      <defs>\n        <svg:g\n          ngx-charts-svg-radial-gradient\n          *ngIf=\"hasGradient\"\n          [color]=\"seriesColor\"\n          [name]=\"gradientId\"\n          [startOpacity]=\"0.25\"\n          [endOpacity]=\"1\"\n          [stops]=\"gradientStops\"\n        />\n      </defs>\n      <svg:g\n        ngx-charts-line\n        class=\"polar-series-path\"\n        [path]=\"path\"\n        [stroke]=\"hasGradient ? gradientUrl : seriesColor\"\n        [class.active]=\"active\"\n        [class.inactive]=\"inactive\"\n        [attr.fill-opacity]=\"rangeFillOpacity\"\n        [fill]=\"hasGradient ? gradientUrl : seriesColor\"\n        [animations]=\"animations\"\n      />\n      <svg:g\n        ngx-charts-circle\n        *ngFor=\"let circle of circles\"\n        class=\"circle\"\n        [cx]=\"circle.cx\"\n        [cy]=\"circle.cy\"\n        [r]=\"circleRadius\"\n        [fill]=\"circle.color\"\n        [style.opacity]=\"inactive ? 0.2 : 1\"\n        ngx-tooltip\n        [tooltipDisabled]=\"tooltipDisabled\"\n        [tooltipPlacement]=\"placementTypes.Top\"\n        [tooltipType]=\"styleTypes.tooltip\"\n        [tooltipTitle]=\"tooltipTemplate ? undefined : tooltipText(circle)\"\n        [tooltipTemplate]=\"tooltipTemplate\"\n        [tooltipContext]=\"circle.data\"\n        (select)=\"select.emit(circle.data)\"\n        (activate)=\"activate.emit({ name: circle.data.series })\"\n        (deactivate)=\"deactivate.emit({ name: circle.data.series })\"\n      ></svg:g>\n    </svg:g>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, {\n    name: [{\n      type: Input\n    }],\n    data: [{\n      type: Input\n    }],\n    xScale: [{\n      type: Input\n    }],\n    yScale: [{\n      type: Input\n    }],\n    colors: [{\n      type: Input\n    }],\n    scaleType: [{\n      type: Input\n    }],\n    curve: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    rangeFillOpacity: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    tooltipText: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    tooltipTemplate: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }]\n  });\n})();\nconst twoPI = 2 * Math.PI;\nclass PolarChartComponent extends BaseChartComponent {\n  constructor() {\n    super(...arguments);\n    this.legendTitle = 'Legend';\n    this.legendPosition = LegendPosition.Right;\n    this.showGridLines = true;\n    this.curve = curveCardinalClosed;\n    this.activeEntries = [];\n    this.rangeFillOpacity = 0.15;\n    this.trimYAxisTicks = true;\n    this.maxYAxisTickLength = 16;\n    this.roundDomains = false;\n    this.tooltipDisabled = false;\n    this.showSeriesOnHover = true;\n    this.gradient = false;\n    this.yAxisMinScale = 0;\n    this.labelTrim = true;\n    this.labelTrimSize = 10;\n    this.wrapTicks = false;\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    // series: any; // ???\n    this.margin = [10, 20, 10, 20];\n    this.xAxisHeight = 0;\n    this.yAxisWidth = 0;\n    this.orientation = Orientation;\n    this.isSSR = false;\n  }\n  ngOnInit() {\n    if (isPlatformServer(this.platformId)) {\n      this.isSSR = true;\n    }\n  }\n  update() {\n    super.update();\n    this.setDims();\n    this.setScales();\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n    this.setTicks();\n  }\n  setDims() {\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.schemeType,\n      legendPosition: this.legendPosition\n    });\n    const halfWidth = Math.floor(this.dims.width / 2);\n    const halfHeight = Math.floor(this.dims.height / 2);\n    const outerRadius = this.outerRadius = Math.min(halfHeight / 1.5, halfWidth / 1.5);\n    const yOffset = Math.max(0, halfHeight - outerRadius);\n    this.yAxisDims = {\n      ...this.dims,\n      width: halfWidth\n    };\n    this.transform = `translate(${this.dims.xOffset}, ${this.margin[0]})`;\n    this.transformYAxis = `translate(0, ${yOffset})`;\n    this.labelOffset = this.dims.height + 40;\n    this.transformPlot = `translate(${halfWidth}, ${halfHeight})`;\n  }\n  setScales() {\n    const xValues = this.getXValues();\n    this.scaleType = getScaleType(xValues);\n    this.xDomain = this.filteredDomain || this.getXDomain(xValues);\n    this.yDomain = this.getYDomain();\n    this.seriesDomain = this.getSeriesDomain();\n    this.xScale = this.getXScale(this.xDomain, twoPI);\n    this.yScale = this.getYScale(this.yDomain, this.outerRadius);\n    this.yAxisScale = this.getYScale(this.yDomain.reverse(), this.outerRadius);\n  }\n  setTicks() {\n    let tickFormat;\n    if (this.xAxisTickFormatting) {\n      tickFormat = this.xAxisTickFormatting;\n    } else if (this.xScale.tickFormat) {\n      tickFormat = this.xScale.tickFormat.apply(this.xScale, [5]);\n    } else {\n      tickFormat = d => {\n        if (isDate(d)) {\n          return d.toLocaleDateString();\n        }\n        return d.toLocaleString();\n      };\n    }\n    const outerRadius = this.outerRadius;\n    const s = 1.1;\n    this.thetaTicks = this.xDomain.map(d => {\n      const startAngle = this.xScale(d);\n      const dd = s * outerRadius * (startAngle > Math.PI ? -1 : 1);\n      const label = tickFormat(d);\n      const startPos = [outerRadius * Math.sin(startAngle), -outerRadius * Math.cos(startAngle)];\n      const pos = [dd, s * startPos[1]];\n      return {\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle: startAngle,\n        value: outerRadius,\n        label,\n        startPos,\n        pos\n      };\n    });\n    const minDistance = 10;\n    /* from pie chart, abstract out -*/\n    for (let i = 0; i < this.thetaTicks.length - 1; i++) {\n      const a = this.thetaTicks[i];\n      for (let j = i + 1; j < this.thetaTicks.length; j++) {\n        const b = this.thetaTicks[j];\n        // if they're on the same side\n        if (b.pos[0] * a.pos[0] > 0) {\n          // if they're overlapping\n          const o = minDistance - Math.abs(b.pos[1] - a.pos[1]);\n          if (o > 0) {\n            // push the second up or down\n            b.pos[1] += Math.sign(b.pos[0]) * o;\n          }\n        }\n      }\n    }\n    this.radiusTicks = this.yAxisScale.ticks(Math.floor(this.dims.height / 50)).map(d => this.yScale(d));\n  }\n  getXValues() {\n    const values = [];\n    for (const results of this.results) {\n      for (const d of results.series) {\n        if (!values.includes(d.name)) {\n          values.push(d.name);\n        }\n      }\n    }\n    return values;\n  }\n  getXDomain(values = this.getXValues()) {\n    if (this.scaleType === ScaleType.Time) {\n      const min = Math.min(...values);\n      const max = Math.max(...values);\n      return [min, max];\n    } else if (this.scaleType === ScaleType.Linear) {\n      values = values.map(v => Number(v));\n      const min = Math.min(...values);\n      const max = Math.max(...values);\n      return [min, max];\n    }\n    return values;\n  }\n  getYValues() {\n    const domain = [];\n    for (const results of this.results) {\n      for (const d of results.series) {\n        if (domain.indexOf(d.value) < 0) {\n          domain.push(d.value);\n        }\n        if (d.min !== undefined) {\n          if (domain.indexOf(d.min) < 0) {\n            domain.push(d.min);\n          }\n        }\n        if (d.max !== undefined) {\n          if (domain.indexOf(d.max) < 0) {\n            domain.push(d.max);\n          }\n        }\n      }\n    }\n    return domain;\n  }\n  getYDomain(domain = this.getYValues()) {\n    let min = Math.min(...domain);\n    const max = Math.max(this.yAxisMinScale, ...domain);\n    min = Math.max(0, min);\n    if (!this.autoScale) {\n      min = Math.min(0, min);\n    }\n    return [min, max];\n  }\n  getSeriesDomain() {\n    return this.results.map(d => d.name);\n  }\n  getXScale(domain, width) {\n    switch (this.scaleType) {\n      case ScaleType.Time:\n        return scaleTime().range([0, width]).domain(domain);\n      case ScaleType.Linear:\n        {\n          const scale = scaleLinear().range([0, width]).domain(domain);\n          return this.roundDomains ? scale.nice() : scale;\n        }\n      default:\n        return scalePoint().range([0, width - twoPI / domain.length]).padding(0).domain(domain);\n    }\n  }\n  getYScale(domain, height) {\n    const scale = scaleLinear().range([0, height]).domain(domain);\n    return this.roundDomains ? scale.nice() : scale;\n  }\n  onClick(data, series) {\n    if (series) {\n      data.series = series.name;\n    }\n    this.select.emit(data);\n  }\n  setColors() {\n    const domain = this.schemeType === ScaleType.Ordinal ? this.seriesDomain : this.yDomain.reverse();\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n  }\n  getLegendOptions() {\n    if (this.schemeType === ScaleType.Ordinal) {\n      return {\n        scaleType: this.schemeType,\n        colors: this.colors,\n        domain: this.seriesDomain,\n        title: this.legendTitle,\n        position: this.legendPosition\n      };\n    }\n    return {\n      scaleType: this.schemeType,\n      colors: this.colors.scale,\n      domain: this.yDomain,\n      title: undefined,\n      position: this.legendPosition\n    };\n  }\n  updateYAxisWidth({\n    width\n  }) {\n    this.yAxisWidth = width;\n    this.update();\n  }\n  updateXAxisHeight({\n    height\n  }) {\n    this.xAxisHeight = height;\n    this.update();\n  }\n  onActivate(item) {\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value;\n    });\n    if (idx > -1) {\n      return;\n    }\n    this.activeEntries = this.showSeriesOnHover ? [item, ...this.activeEntries] : this.activeEntries;\n    this.activate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n  onDeactivate(item) {\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value;\n    });\n    this.activeEntries.splice(idx, 1);\n    this.activeEntries = [...this.activeEntries];\n    this.deactivate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n  deactivateAll() {\n    this.activeEntries = [...this.activeEntries];\n    for (const entry of this.activeEntries) {\n      this.deactivate.emit({\n        value: entry,\n        entries: []\n      });\n    }\n    this.activeEntries = [];\n  }\n  trackBy(index, item) {\n    return `${item.name}`;\n  }\n}\nPolarChartComponent.ɵfac = /* @__PURE__ */(() => {\n  let ɵPolarChartComponent_BaseFactory;\n  return function PolarChartComponent_Factory(t) {\n    return (ɵPolarChartComponent_BaseFactory || (ɵPolarChartComponent_BaseFactory = i0.ɵɵgetInheritedFactory(PolarChartComponent)))(t || PolarChartComponent);\n  };\n})();\nPolarChartComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: PolarChartComponent,\n  selectors: [[\"ngx-charts-polar-chart\"]],\n  contentQueries: function PolarChartComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n    }\n  },\n  inputs: {\n    legend: \"legend\",\n    legendTitle: \"legendTitle\",\n    legendPosition: \"legendPosition\",\n    xAxis: \"xAxis\",\n    yAxis: \"yAxis\",\n    showXAxisLabel: \"showXAxisLabel\",\n    showYAxisLabel: \"showYAxisLabel\",\n    xAxisLabel: \"xAxisLabel\",\n    yAxisLabel: \"yAxisLabel\",\n    autoScale: \"autoScale\",\n    showGridLines: \"showGridLines\",\n    curve: \"curve\",\n    activeEntries: \"activeEntries\",\n    schemeType: \"schemeType\",\n    rangeFillOpacity: \"rangeFillOpacity\",\n    trimYAxisTicks: \"trimYAxisTicks\",\n    maxYAxisTickLength: \"maxYAxisTickLength\",\n    xAxisTickFormatting: \"xAxisTickFormatting\",\n    yAxisTickFormatting: \"yAxisTickFormatting\",\n    roundDomains: \"roundDomains\",\n    tooltipDisabled: \"tooltipDisabled\",\n    showSeriesOnHover: \"showSeriesOnHover\",\n    gradient: \"gradient\",\n    yAxisMinScale: \"yAxisMinScale\",\n    labelTrim: \"labelTrim\",\n    labelTrimSize: \"labelTrimSize\",\n    wrapTicks: \"wrapTicks\"\n  },\n  outputs: {\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 10,\n  vars: 17,\n  consts: [[3, \"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\", \"view\", \"showLegend\", \"legendOptions\", \"activeEntries\", \"animations\"], [1, \"polar-chart\", \"chart\"], [\"cx\", \"0\", \"cy\", \"0\", 1, \"polar-chart-background\"], [4, \"ngIf\"], [\"ngx-charts-y-axis\", \"\", 3, \"yScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"wrapTicks\", \"dimensionsChanged\", 4, \"ngIf\"], [\"ngx-charts-axis-label\", \"\", 3, \"label\", \"offset\", \"orient\", \"height\", \"width\", 4, \"ngIf\"], [\"class\", \"gridline-path radial-gridline-path\", \"cx\", \"0\", \"cy\", \"0\", 4, \"ngFor\", \"ngForOf\"], [\"cx\", \"0\", \"cy\", \"0\", 1, \"gridline-path\", \"radial-gridline-path\"], [\"ngx-charts-pie-label\", \"\", 3, \"data\", \"radius\", \"label\", \"max\", \"value\", \"explodeSlices\", \"animations\", \"labelTrim\", \"labelTrimSize\", 4, \"ngFor\", \"ngForOf\"], [\"ngx-charts-pie-label\", \"\", 3, \"data\", \"radius\", \"label\", \"max\", \"value\", \"explodeSlices\", \"animations\", \"labelTrim\", \"labelTrimSize\"], [\"ngx-charts-y-axis\", \"\", 3, \"dimensionsChanged\", \"yScale\", \"dims\", \"showGridLines\", \"showLabel\", \"labelText\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"wrapTicks\"], [\"ngx-charts-axis-label\", \"\", 3, \"label\", \"offset\", \"orient\", \"height\", \"width\"], [4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-polar-series\", \"\", 3, \"select\", \"activate\", \"deactivate\", \"gradient\", \"xScale\", \"yScale\", \"colors\", \"data\", \"activeEntries\", \"scaleType\", \"curve\", \"rangeFillOpacity\", \"animations\", \"tooltipDisabled\", \"tooltipTemplate\"]],\n  template: function PolarChartComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n      i0.ɵɵlistener(\"legendLabelClick\", function PolarChartComponent_Template_ngx_charts_chart_legendLabelClick_0_listener($event) {\n        return ctx.onClick($event);\n      })(\"legendLabelActivate\", function PolarChartComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener($event) {\n        return ctx.onActivate($event);\n      })(\"legendLabelDeactivate\", function PolarChartComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener($event) {\n        return ctx.onDeactivate($event);\n      });\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"g\", 1)(2, \"g\");\n      i0.ɵɵelement(3, \"circle\", 2);\n      i0.ɵɵtemplate(4, PolarChartComponent__svg_g_4_Template, 2, 1, \"g\", 3)(5, PolarChartComponent__svg_g_5_Template, 2, 1, \"g\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(6, PolarChartComponent__svg_g_6_Template, 1, 10, \"g\", 4)(7, PolarChartComponent__svg_g_7_Template, 1, 5, \"g\", 5)(8, PolarChartComponent__svg_g_8_Template, 2, 3, \"g\", 3)(9, PolarChartComponent__svg_g_9_Template, 2, 3, \"g\", 3);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(14, _c24, ctx.width, ctx.height))(\"showLegend\", ctx.legend)(\"legendOptions\", ctx.legendOptions)(\"activeEntries\", ctx.activeEntries)(\"animations\", ctx.animations);\n      i0.ɵɵadvance();\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance();\n      i0.ɵɵattribute(\"transform\", ctx.transformPlot);\n      i0.ɵɵadvance();\n      i0.ɵɵattribute(\"r\", ctx.outerRadius);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngIf\", ctx.showGridLines);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngIf\", ctx.xAxis);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngIf\", ctx.yAxis);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngIf\", ctx.xAxis && ctx.showXAxisLabel);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngIf\", !ctx.isSSR);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngIf\", ctx.isSSR);\n    }\n  },\n  dependencies: [ChartComponent, PieLabelComponent, YAxisComponent, AxisLabelComponent, PolarSeriesComponent, i2.NgIf, i2.NgForOf],\n  styles: [_c25, \".pie-label{font-size:11px}.pie-label.animation{animation:.75s ease-in fadeIn}@keyframes fadeIn{0%{opacity:0}to{opacity:1}}.pie-label-line{stroke-dasharray:100%}.pie-label-line.animation{animation:3s linear drawOut;transition:d .75s}@keyframes drawOut{0%{stroke-dashoffset:100%}to{stroke-dashoffset:0}}\\n\", \".polar-chart .polar-chart-background{fill:none}.polar-chart .radial-gridline-path{stroke-dasharray:10 10;fill:none}.polar-chart .pie-label-line{stroke:#2f3646}.polar-charts-series .polar-series-area,.polar-series-path{pointer-events:none}\\n\"],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('animationState', [transition(':leave', [style({\n      opacity: 1\n    }), animate(500, style({\n      opacity: 0\n    }))])])]\n  },\n  changeDetection: 0\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PolarChartComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-polar-chart',\n      template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:g class=\"polar-chart chart\" [attr.transform]=\"transform\">\n        <svg:g [attr.transform]=\"transformPlot\">\n          <svg:circle class=\"polar-chart-background\" cx=\"0\" cy=\"0\" [attr.r]=\"this.outerRadius\" />\n          <svg:g *ngIf=\"showGridLines\">\n            <svg:circle\n              *ngFor=\"let r of radiusTicks\"\n              class=\"gridline-path radial-gridline-path\"\n              cx=\"0\"\n              cy=\"0\"\n              [attr.r]=\"r\"\n            />\n          </svg:g>\n          <svg:g *ngIf=\"xAxis\">\n            <svg:g\n              ngx-charts-pie-label\n              *ngFor=\"let tick of thetaTicks\"\n              [data]=\"tick\"\n              [radius]=\"outerRadius\"\n              [label]=\"tick.label\"\n              [max]=\"outerRadius\"\n              [value]=\"showGridLines ? 1 : outerRadius\"\n              [explodeSlices]=\"true\"\n              [animations]=\"animations\"\n              [labelTrim]=\"labelTrim\"\n              [labelTrimSize]=\"labelTrimSize\"\n            ></svg:g>\n          </svg:g>\n        </svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          [attr.transform]=\"transformYAxis\"\n          *ngIf=\"yAxis\"\n          [yScale]=\"yAxisScale\"\n          [dims]=\"yAxisDims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-axis-label\n          *ngIf=\"xAxis && showXAxisLabel\"\n          [label]=\"xAxisLabel\"\n          [offset]=\"labelOffset\"\n          [orient]=\"orientation.Bottom\"\n          [height]=\"dims.height\"\n          [width]=\"dims.width\"\n        ></svg:g>\n        <svg:g *ngIf=\"!isSSR\" [attr.transform]=\"transformPlot\">\n          <svg:g *ngFor=\"let series of results; trackBy: trackBy\" [@animationState]=\"'active'\">\n            <svg:g\n              ngx-charts-polar-series\n              [gradient]=\"gradient\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [activeEntries]=\"activeEntries\"\n              [scaleType]=\"scaleType\"\n              [curve]=\"curve\"\n              [rangeFillOpacity]=\"rangeFillOpacity\"\n              [animations]=\"animations\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              (select)=\"onClick($event)\"\n              (activate)=\"onActivate($event)\"\n              (deactivate)=\"onDeactivate($event)\"\n            />\n          </svg:g>\n        </svg:g>\n        <svg:g *ngIf=\"isSSR\" [attr.transform]=\"transformPlot\">\n          <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n            <svg:g\n              ngx-charts-polar-series\n              [gradient]=\"gradient\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [activeEntries]=\"activeEntries\"\n              [scaleType]=\"scaleType\"\n              [curve]=\"curve\"\n              [rangeFillOpacity]=\"rangeFillOpacity\"\n              [animations]=\"animations\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              (select)=\"onClick($event)\"\n              (activate)=\"onActivate($event)\"\n              (deactivate)=\"onDeactivate($event)\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      animations: [trigger('animationState', [transition(':leave', [style({\n        opacity: 1\n      }), animate(500, style({\n        opacity: 0\n      }))])])],\n      styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \".pie-label{font-size:11px}.pie-label.animation{animation:.75s ease-in fadeIn}@keyframes fadeIn{0%{opacity:0}to{opacity:1}}.pie-label-line{stroke-dasharray:100%}.pie-label-line.animation{animation:3s linear drawOut;transition:d .75s}@keyframes drawOut{0%{stroke-dashoffset:100%}to{stroke-dashoffset:0}}\\n\", \".polar-chart .polar-chart-background{fill:none}.polar-chart .radial-gridline-path{stroke-dasharray:10 10;fill:none}.polar-chart .pie-label-line{stroke:#2f3646}.polar-charts-series .polar-series-area,.polar-series-path{pointer-events:none}\\n\"]\n    }]\n  }], null, {\n    legend: [{\n      type: Input\n    }],\n    legendTitle: [{\n      type: Input\n    }],\n    legendPosition: [{\n      type: Input\n    }],\n    xAxis: [{\n      type: Input\n    }],\n    yAxis: [{\n      type: Input\n    }],\n    showXAxisLabel: [{\n      type: Input\n    }],\n    showYAxisLabel: [{\n      type: Input\n    }],\n    xAxisLabel: [{\n      type: Input\n    }],\n    yAxisLabel: [{\n      type: Input\n    }],\n    autoScale: [{\n      type: Input\n    }],\n    showGridLines: [{\n      type: Input\n    }],\n    curve: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    schemeType: [{\n      type: Input\n    }],\n    rangeFillOpacity: [{\n      type: Input\n    }],\n    trimYAxisTicks: [{\n      type: Input\n    }],\n    maxYAxisTickLength: [{\n      type: Input\n    }],\n    xAxisTickFormatting: [{\n      type: Input\n    }],\n    yAxisTickFormatting: [{\n      type: Input\n    }],\n    roundDomains: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    showSeriesOnHover: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    yAxisMinScale: [{\n      type: Input\n    }],\n    labelTrim: [{\n      type: Input\n    }],\n    labelTrimSize: [{\n      type: Input\n    }],\n    wrapTicks: [{\n      type: Input\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    tooltipTemplate: [{\n      type: ContentChild,\n      args: ['tooltipTemplate']\n    }]\n  });\n})();\nclass PieArcComponent {\n  constructor(element) {\n    this.startAngle = 0;\n    this.endAngle = Math.PI * 2;\n    this.cornerRadius = 0;\n    this.explodeSlices = false;\n    this.gradient = false;\n    this.animate = true;\n    this.pointerEvents = true;\n    this.isActive = false;\n    this.select = new EventEmitter();\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.dblclick = new EventEmitter();\n    this.barOrientation = BarOrientation;\n    this.initialized = false;\n    this.element = element.nativeElement;\n  }\n  ngOnChanges(changes) {\n    this.update();\n  }\n  getGradient() {\n    return this.gradient ? this.gradientFill : this.fill;\n  }\n  getPointerEvents() {\n    return this.pointerEvents ? 'auto' : 'none';\n  }\n  update() {\n    const calc = this.calculateArc();\n    this.startOpacity = 0.5;\n    this.radialGradientId = 'linearGrad' + id().toString();\n    this.gradientFill = `url(#${this.radialGradientId})`;\n    if (this.animate) {\n      if (this.initialized) {\n        this.updateAnimation();\n      } else {\n        this.loadAnimation();\n        this.initialized = true;\n      }\n    } else {\n      this.path = calc.startAngle(this.startAngle).endAngle(this.endAngle)();\n    }\n  }\n  calculateArc() {\n    let outerRadius = this.outerRadius;\n    if (this.explodeSlices && this.innerRadius === 0) {\n      outerRadius = this.outerRadius * this.value / this.max;\n    }\n    return arc().innerRadius(this.innerRadius).outerRadius(outerRadius).cornerRadius(this.cornerRadius);\n  }\n  loadAnimation() {\n    const node = select(this.element).selectAll('.arc').data([{\n      startAngle: this.startAngle,\n      endAngle: this.endAngle\n    }]);\n    const calc = this.calculateArc();\n    node.transition().attrTween('d', function (d) {\n      this._current = this._current || d;\n      const copyOfD = Object.assign({}, d);\n      copyOfD.endAngle = copyOfD.startAngle;\n      const interpolater = interpolate(copyOfD, copyOfD);\n      this._current = interpolater(0);\n      return function (t) {\n        return calc(interpolater(t));\n      };\n    }).transition().duration(750).attrTween('d', function (d) {\n      this._current = this._current || d;\n      const interpolater = interpolate(this._current, d);\n      this._current = interpolater(0);\n      return function (t) {\n        return calc(interpolater(t));\n      };\n    });\n  }\n  updateAnimation() {\n    const node = select(this.element).selectAll('.arc').data([{\n      startAngle: this.startAngle,\n      endAngle: this.endAngle\n    }]);\n    const calc = this.calculateArc();\n    node.transition().duration(750).attrTween('d', function (d) {\n      this._current = this._current || d;\n      const interpolater = interpolate(this._current, d);\n      this._current = interpolater(0);\n      return function (t) {\n        return calc(interpolater(t));\n      };\n    });\n  }\n  onClick() {\n    clearTimeout(this._timeout);\n    this._timeout = setTimeout(() => this.select.emit(this.data), 200);\n  }\n  onDblClick(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    clearTimeout(this._timeout);\n    this.dblclick.emit({\n      data: this.data,\n      nativeEvent: event\n    });\n  }\n}\nPieArcComponent.ɵfac = function PieArcComponent_Factory(t) {\n  return new (t || PieArcComponent)(i0.ɵɵdirectiveInject(i0.ElementRef));\n};\nPieArcComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: PieArcComponent,\n  selectors: [[\"g\", \"ngx-charts-pie-arc\", \"\"]],\n  inputs: {\n    fill: \"fill\",\n    startAngle: \"startAngle\",\n    endAngle: \"endAngle\",\n    innerRadius: \"innerRadius\",\n    outerRadius: \"outerRadius\",\n    cornerRadius: \"cornerRadius\",\n    value: \"value\",\n    max: \"max\",\n    data: \"data\",\n    explodeSlices: \"explodeSlices\",\n    gradient: \"gradient\",\n    animate: \"animate\",\n    pointerEvents: \"pointerEvents\",\n    isActive: \"isActive\"\n  },\n  outputs: {\n    select: \"select\",\n    activate: \"activate\",\n    deactivate: \"deactivate\",\n    dblclick: \"dblclick\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c40,\n  decls: 3,\n  vars: 7,\n  consts: [[1, \"arc-group\"], [4, \"ngIf\"], [1, \"arc\", 3, \"click\", \"dblclick\", \"mouseenter\", \"mouseleave\"], [\"ngx-charts-svg-radial-gradient\", \"\", 3, \"color\", \"name\", \"startOpacity\"]],\n  template: function PieArcComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(0, \"g\", 0);\n      i0.ɵɵtemplate(1, PieArcComponent__svg_defs_1_Template, 2, 3, \"defs\", 1);\n      i0.ɵɵelementStart(2, \"path\", 2);\n      i0.ɵɵlistener(\"click\", function PieArcComponent_Template_path_click_2_listener() {\n        return ctx.onClick();\n      })(\"dblclick\", function PieArcComponent_Template_path_dblclick_2_listener($event) {\n        return ctx.onDblClick($event);\n      })(\"mouseenter\", function PieArcComponent_Template_path_mouseenter_2_listener() {\n        return ctx.activate.emit(ctx.data);\n      })(\"mouseleave\", function PieArcComponent_Template_path_mouseleave_2_listener() {\n        return ctx.deactivate.emit(ctx.data);\n      });\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngIf\", ctx.gradient);\n      i0.ɵɵadvance();\n      i0.ɵɵstyleProp(\"pointer-events\", ctx.getPointerEvents());\n      i0.ɵɵclassProp(\"active\", ctx.isActive);\n      i0.ɵɵattribute(\"d\", ctx.path)(\"fill\", ctx.getGradient());\n    }\n  },\n  dependencies: [SvgRadialGradientComponent, i2.NgIf],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PieArcComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-pie-arc]',\n      template: `\n    <svg:g class=\"arc-group\">\n      <svg:defs *ngIf=\"gradient\">\n        <svg:g ngx-charts-svg-radial-gradient [color]=\"fill\" [name]=\"radialGradientId\" [startOpacity]=\"startOpacity\" />\n      </svg:defs>\n      <svg:path\n        [attr.d]=\"path\"\n        class=\"arc\"\n        [class.active]=\"isActive\"\n        [attr.fill]=\"getGradient()\"\n        (click)=\"onClick()\"\n        (dblclick)=\"onDblClick($event)\"\n        (mouseenter)=\"activate.emit(data)\"\n        (mouseleave)=\"deactivate.emit(data)\"\n        [style.pointer-events]=\"getPointerEvents()\"\n      />\n    </svg:g>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }];\n  }, {\n    fill: [{\n      type: Input\n    }],\n    startAngle: [{\n      type: Input\n    }],\n    endAngle: [{\n      type: Input\n    }],\n    innerRadius: [{\n      type: Input\n    }],\n    outerRadius: [{\n      type: Input\n    }],\n    cornerRadius: [{\n      type: Input\n    }],\n    value: [{\n      type: Input\n    }],\n    max: [{\n      type: Input\n    }],\n    data: [{\n      type: Input\n    }],\n    explodeSlices: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    animate: [{\n      type: Input\n    }],\n    pointerEvents: [{\n      type: Input\n    }],\n    isActive: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    dblclick: [{\n      type: Output\n    }]\n  });\n})();\nclass PieSeriesComponent {\n  constructor() {\n    this.series = [];\n    this.innerRadius = 60;\n    this.outerRadius = 80;\n    this.trimLabels = true;\n    this.maxLabelLength = 10;\n    this.tooltipDisabled = false;\n    this.animations = true;\n    this.select = new EventEmitter();\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.dblclick = new EventEmitter();\n    this.placementTypes = PlacementTypes;\n    this.styleTypes = StyleTypes;\n  }\n  ngOnChanges(changes) {\n    this.update();\n  }\n  update() {\n    const pieGenerator = pie().value(d => d.value).sort(null);\n    const arcData = pieGenerator(this.series);\n    this.max = max(arcData, d => {\n      return d.value;\n    });\n    this.data = this.calculateLabelPositions(arcData);\n    this.tooltipText = this.tooltipText || this.defaultTooltipText;\n  }\n  midAngle(d) {\n    return d.startAngle + (d.endAngle - d.startAngle) / 2;\n  }\n  outerArc() {\n    const factor = 1.5;\n    return arc().innerRadius(this.outerRadius * factor).outerRadius(this.outerRadius * factor);\n  }\n  calculateLabelPositions(pieData) {\n    const factor = 1.5;\n    const minDistance = 10;\n    const labelPositions = pieData;\n    labelPositions.forEach(d => {\n      d.pos = this.outerArc().centroid(d);\n      d.pos[0] = factor * this.outerRadius * (this.midAngle(d) < Math.PI ? 1 : -1);\n    });\n    for (let i = 0; i < labelPositions.length - 1; i++) {\n      const a = labelPositions[i];\n      if (!this.labelVisible(a)) {\n        continue;\n      }\n      for (let j = i + 1; j < labelPositions.length; j++) {\n        const b = labelPositions[j];\n        if (!this.labelVisible(b)) {\n          continue;\n        }\n        // if they're on the same side\n        if (b.pos[0] * a.pos[0] > 0) {\n          // if they're overlapping\n          const o = minDistance - Math.abs(b.pos[1] - a.pos[1]);\n          if (o > 0) {\n            // push the second up or down\n            b.pos[1] += Math.sign(b.pos[0]) * o;\n          }\n        }\n      }\n    }\n    return labelPositions;\n  }\n  labelVisible(myArc) {\n    return this.showLabels && myArc.endAngle - myArc.startAngle > Math.PI / 30;\n  }\n  getTooltipTitle(a) {\n    return this.tooltipTemplate ? undefined : this.tooltipText(a);\n  }\n  labelText(myArc) {\n    if (this.labelFormatting) {\n      return this.labelFormatting(myArc.data.name);\n    }\n    return this.label(myArc);\n  }\n  label(myArc) {\n    return formatLabel(myArc.data.name);\n  }\n  defaultTooltipText(myArc) {\n    const label = this.label(myArc);\n    const val = formatLabel(myArc.data.value);\n    return `\n      <span class=\"tooltip-label\">${escapeLabel(label)}</span>\n      <span class=\"tooltip-val\">${val}</span>\n    `;\n  }\n  color(myArc) {\n    return this.colors.getColor(this.label(myArc));\n  }\n  trackBy(index, item) {\n    return item.data.name;\n  }\n  onClick(data) {\n    this.select.emit(data);\n  }\n  isActive(entry) {\n    if (!this.activeEntries) return false;\n    const item = this.activeEntries.find(d => {\n      return entry.name === d.name && entry.series === d.series;\n    });\n    return item !== undefined;\n  }\n}\nPieSeriesComponent.ɵfac = function PieSeriesComponent_Factory(t) {\n  return new (t || PieSeriesComponent)();\n};\nPieSeriesComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: PieSeriesComponent,\n  selectors: [[\"g\", \"ngx-charts-pie-series\", \"\"]],\n  inputs: {\n    colors: \"colors\",\n    series: \"series\",\n    dims: \"dims\",\n    innerRadius: \"innerRadius\",\n    outerRadius: \"outerRadius\",\n    explodeSlices: \"explodeSlices\",\n    showLabels: \"showLabels\",\n    gradient: \"gradient\",\n    activeEntries: \"activeEntries\",\n    labelFormatting: \"labelFormatting\",\n    trimLabels: \"trimLabels\",\n    maxLabelLength: \"maxLabelLength\",\n    tooltipText: \"tooltipText\",\n    tooltipDisabled: \"tooltipDisabled\",\n    tooltipTemplate: \"tooltipTemplate\",\n    animations: \"animations\"\n  },\n  outputs: {\n    select: \"select\",\n    activate: \"activate\",\n    deactivate: \"deactivate\",\n    dblclick: \"dblclick\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c41,\n  decls: 1,\n  vars: 2,\n  consts: [[4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-pie-label\", \"\", 3, \"data\", \"radius\", \"color\", \"label\", \"labelTrim\", \"labelTrimSize\", \"max\", \"value\", \"explodeSlices\", \"animations\", 4, \"ngIf\"], [\"ngx-charts-pie-arc\", \"\", \"ngx-tooltip\", \"\", 3, \"select\", \"activate\", \"deactivate\", \"dblclick\", \"startAngle\", \"endAngle\", \"innerRadius\", \"outerRadius\", \"fill\", \"value\", \"gradient\", \"data\", \"max\", \"explodeSlices\", \"isActive\", \"animate\", \"tooltipDisabled\", \"tooltipPlacement\", \"tooltipType\", \"tooltipTitle\", \"tooltipTemplate\", \"tooltipContext\"], [\"ngx-charts-pie-label\", \"\", 3, \"data\", \"radius\", \"color\", \"label\", \"labelTrim\", \"labelTrimSize\", \"max\", \"value\", \"explodeSlices\", \"animations\"]],\n  template: function PieSeriesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, PieSeriesComponent__svg_g_0_Template, 3, 19, \"g\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngForOf\", ctx.data)(\"ngForTrackBy\", ctx.trackBy);\n    }\n  },\n  dependencies: [PieLabelComponent, PieArcComponent, i2.NgForOf, i2.NgIf, TooltipDirective],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PieSeriesComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-pie-series]',\n      template: `\n    <svg:g *ngFor=\"let arc of data; trackBy: trackBy\">\n      <svg:g\n        ngx-charts-pie-label\n        *ngIf=\"labelVisible(arc)\"\n        [data]=\"arc\"\n        [radius]=\"outerRadius\"\n        [color]=\"color(arc)\"\n        [label]=\"labelText(arc)\"\n        [labelTrim]=\"trimLabels\"\n        [labelTrimSize]=\"maxLabelLength\"\n        [max]=\"max\"\n        [value]=\"arc.value\"\n        [explodeSlices]=\"explodeSlices\"\n        [animations]=\"animations\"\n      ></svg:g>\n      <svg:g\n        ngx-charts-pie-arc\n        [startAngle]=\"arc.startAngle\"\n        [endAngle]=\"arc.endAngle\"\n        [innerRadius]=\"innerRadius\"\n        [outerRadius]=\"outerRadius\"\n        [fill]=\"color(arc)\"\n        [value]=\"arc.data.value\"\n        [gradient]=\"gradient\"\n        [data]=\"arc.data\"\n        [max]=\"max\"\n        [explodeSlices]=\"explodeSlices\"\n        [isActive]=\"isActive(arc.data)\"\n        [animate]=\"animations\"\n        (select)=\"onClick($event)\"\n        (activate)=\"activate.emit($event)\"\n        (deactivate)=\"deactivate.emit($event)\"\n        (dblclick)=\"dblclick.emit($event)\"\n        ngx-tooltip\n        [tooltipDisabled]=\"tooltipDisabled\"\n        [tooltipPlacement]=\"placementTypes.Top\"\n        [tooltipType]=\"styleTypes.tooltip\"\n        [tooltipTitle]=\"getTooltipTitle(arc)\"\n        [tooltipTemplate]=\"tooltipTemplate\"\n        [tooltipContext]=\"arc.data\"\n      ></svg:g>\n    </svg:g>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, {\n    colors: [{\n      type: Input\n    }],\n    series: [{\n      type: Input\n    }],\n    dims: [{\n      type: Input\n    }],\n    innerRadius: [{\n      type: Input\n    }],\n    outerRadius: [{\n      type: Input\n    }],\n    explodeSlices: [{\n      type: Input\n    }],\n    showLabels: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    labelFormatting: [{\n      type: Input\n    }],\n    trimLabels: [{\n      type: Input\n    }],\n    maxLabelLength: [{\n      type: Input\n    }],\n    tooltipText: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    tooltipTemplate: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    dblclick: [{\n      type: Output\n    }]\n  });\n})();\nclass AdvancedPieChartComponent extends BaseChartComponent {\n  constructor() {\n    super(...arguments);\n    this.activeEntries = [];\n    this.tooltipDisabled = false;\n    this.label = 'Total';\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.margin = [20, 20, 20, 20];\n  }\n  update() {\n    super.update();\n    this.dims = calculateViewDimensions({\n      width: this.width * 4 / 12.0,\n      height: this.height,\n      margins: this.margin\n    });\n    this.formatDates();\n    this.domain = this.getDomain();\n    this.setColors();\n    const xOffset = this.dims.width / 2;\n    const yOffset = this.margin[0] + this.dims.height / 2;\n    this.legendWidth = this.width - this.dims.width - this.margin[1];\n    this.outerRadius = Math.min(this.dims.width, this.dims.height) / 2.5;\n    this.innerRadius = this.outerRadius * 0.75;\n    this.transform = `translate(${xOffset} , ${yOffset})`;\n  }\n  getDomain() {\n    return this.results.map(d => d.label);\n  }\n  onClick(data) {\n    this.select.emit(data);\n  }\n  setColors() {\n    this.colors = new ColorHelper(this.scheme, ScaleType.Ordinal, this.domain, this.customColors);\n  }\n  onActivate(item, fromLegend = false) {\n    item = this.results.find(d => {\n      if (fromLegend) {\n        return d.label === item.name;\n      } else {\n        return d.name === item.name;\n      }\n    });\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value && d.series === item.series;\n    });\n    if (idx > -1) {\n      return;\n    }\n    this.activeEntries = [item, ...this.activeEntries];\n    this.activate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n  onDeactivate(item, fromLegend = false) {\n    item = this.results.find(d => {\n      if (fromLegend) {\n        return d.label === item.name;\n      } else {\n        return d.name === item.name;\n      }\n    });\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value && d.series === item.series;\n    });\n    this.activeEntries.splice(idx, 1);\n    this.activeEntries = [...this.activeEntries];\n    this.deactivate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n}\nAdvancedPieChartComponent.ɵfac = /* @__PURE__ */(() => {\n  let ɵAdvancedPieChartComponent_BaseFactory;\n  return function AdvancedPieChartComponent_Factory(t) {\n    return (ɵAdvancedPieChartComponent_BaseFactory || (ɵAdvancedPieChartComponent_BaseFactory = i0.ɵɵgetInheritedFactory(AdvancedPieChartComponent)))(t || AdvancedPieChartComponent);\n  };\n})();\nAdvancedPieChartComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: AdvancedPieChartComponent,\n  selectors: [[\"ngx-charts-advanced-pie-chart\"]],\n  contentQueries: function AdvancedPieChartComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n    }\n  },\n  inputs: {\n    gradient: \"gradient\",\n    activeEntries: \"activeEntries\",\n    tooltipDisabled: \"tooltipDisabled\",\n    tooltipText: \"tooltipText\",\n    label: \"label\",\n    valueFormatting: \"valueFormatting\",\n    nameFormatting: \"nameFormatting\",\n    percentageFormatting: \"percentageFormatting\"\n  },\n  outputs: {\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 7,\n  vars: 37,\n  consts: [[1, \"advanced-pie\", \"chart\"], [3, \"view\", \"showLegend\", \"animations\"], [1, \"pie\", \"chart\"], [\"ngx-charts-pie-series\", \"\", 3, \"select\", \"activate\", \"deactivate\", \"colors\", \"series\", \"innerRadius\", \"activeEntries\", \"outerRadius\", \"gradient\", \"tooltipDisabled\", \"tooltipTemplate\", \"tooltipText\", \"animations\"], [1, \"advanced-pie-legend-wrapper\"], [3, \"select\", \"activate\", \"deactivate\", \"data\", \"colors\", \"width\", \"label\", \"animations\", \"valueFormatting\", \"labelFormatting\", \"percentageFormatting\"]],\n  template: function AdvancedPieChartComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\")(1, \"div\", 0)(2, \"ngx-charts-chart\", 1);\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(3, \"g\", 2)(4, \"g\", 3);\n      i0.ɵɵlistener(\"select\", function AdvancedPieChartComponent_Template_g_select_4_listener($event) {\n        return ctx.onClick($event);\n      })(\"activate\", function AdvancedPieChartComponent_Template_g_activate_4_listener($event) {\n        return ctx.onActivate($event);\n      })(\"deactivate\", function AdvancedPieChartComponent_Template_g_deactivate_4_listener($event) {\n        return ctx.onDeactivate($event);\n      });\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵnamespaceHTML();\n      i0.ɵɵelementStart(5, \"div\", 4)(6, \"ngx-charts-advanced-legend\", 5);\n      i0.ɵɵlistener(\"select\", function AdvancedPieChartComponent_Template_ngx_charts_advanced_legend_select_6_listener($event) {\n        return ctx.onClick($event);\n      })(\"activate\", function AdvancedPieChartComponent_Template_ngx_charts_advanced_legend_activate_6_listener($event) {\n        return ctx.onActivate($event, true);\n      })(\"deactivate\", function AdvancedPieChartComponent_Template_ngx_charts_advanced_legend_deactivate_6_listener($event) {\n        return ctx.onDeactivate($event, true);\n      });\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵstyleProp(\"width\", ctx.width, \"px\")(\"height\", ctx.height, \"px\");\n      i0.ɵɵadvance();\n      i0.ɵɵstyleProp(\"width\", ctx.dims.width, \"px\")(\"height\", ctx.dims.height, \"px\");\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(34, _c24, ctx.width, ctx.height))(\"showLegend\", false)(\"animations\", ctx.animations);\n      i0.ɵɵadvance();\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"colors\", ctx.colors)(\"series\", ctx.results)(\"innerRadius\", ctx.innerRadius)(\"activeEntries\", ctx.activeEntries)(\"outerRadius\", ctx.outerRadius)(\"gradient\", ctx.gradient)(\"tooltipDisabled\", ctx.tooltipDisabled)(\"tooltipTemplate\", ctx.tooltipTemplate)(\"tooltipText\", ctx.tooltipText)(\"animations\", ctx.animations);\n      i0.ɵɵadvance();\n      i0.ɵɵstyleProp(\"width\", ctx.width - ctx.dims.width, \"px\")(\"height\", ctx.height, \"px\");\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"data\", ctx.results)(\"colors\", ctx.colors)(\"width\", ctx.width - ctx.dims.width - ctx.margin[1])(\"label\", ctx.label)(\"animations\", ctx.animations)(\"valueFormatting\", ctx.valueFormatting)(\"labelFormatting\", ctx.nameFormatting)(\"percentageFormatting\", ctx.percentageFormatting);\n    }\n  },\n  dependencies: [ChartComponent, PieSeriesComponent, AdvancedLegendComponent],\n  styles: [_c25, \".advanced-pie{display:inline-block;float:left}.advanced-pie-legend-wrapper{display:inline-block}\\n\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AdvancedPieChartComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-advanced-pie-chart',\n      template: `\n    <div [style.width.px]=\"width\" [style.height.px]=\"height\">\n      <div class=\"advanced-pie chart\" [style.width.px]=\"dims.width\" [style.height.px]=\"dims.height\">\n        <ngx-charts-chart [view]=\"[width, height]\" [showLegend]=\"false\" [animations]=\"animations\">\n          <svg:g [attr.transform]=\"transform\" class=\"pie chart\">\n            <svg:g\n              ngx-charts-pie-series\n              [colors]=\"colors\"\n              [series]=\"results\"\n              [innerRadius]=\"innerRadius\"\n              [activeEntries]=\"activeEntries\"\n              [outerRadius]=\"outerRadius\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [tooltipText]=\"tooltipText\"\n              (select)=\"onClick($event)\"\n              (activate)=\"onActivate($event)\"\n              (deactivate)=\"onDeactivate($event)\"\n              [animations]=\"animations\"\n            ></svg:g>\n          </svg:g>\n        </ngx-charts-chart>\n      </div>\n      <div class=\"advanced-pie-legend-wrapper\" [style.width.px]=\"width - dims.width\" [style.height.px]=\"height\">\n        <ngx-charts-advanced-legend\n          [data]=\"results\"\n          [colors]=\"colors\"\n          [width]=\"width - dims.width - margin[1]\"\n          [label]=\"label\"\n          [animations]=\"animations\"\n          [valueFormatting]=\"valueFormatting\"\n          [labelFormatting]=\"nameFormatting\"\n          [percentageFormatting]=\"percentageFormatting\"\n          (select)=\"onClick($event)\"\n          (activate)=\"onActivate($event, true)\"\n          (deactivate)=\"onDeactivate($event, true)\"\n        >\n        </ngx-charts-advanced-legend>\n      </div>\n    </div>\n  `,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \".advanced-pie{display:inline-block;float:left}.advanced-pie-legend-wrapper{display:inline-block}\\n\"]\n    }]\n  }], null, {\n    gradient: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    tooltipText: [{\n      type: Input\n    }],\n    label: [{\n      type: Input\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    tooltipTemplate: [{\n      type: ContentChild,\n      args: ['tooltipTemplate']\n    }],\n    valueFormatting: [{\n      type: Input\n    }],\n    nameFormatting: [{\n      type: Input\n    }],\n    percentageFormatting: [{\n      type: Input\n    }]\n  });\n})();\nclass PieChartComponent extends BaseChartComponent {\n  constructor() {\n    super(...arguments);\n    this.labels = false;\n    this.legend = false;\n    this.legendTitle = 'Legend';\n    this.legendPosition = LegendPosition.Right;\n    this.explodeSlices = false;\n    this.doughnut = false;\n    this.arcWidth = 0.25;\n    this.activeEntries = [];\n    this.tooltipDisabled = false;\n    this.trimLabels = true;\n    this.maxLabelLength = 10;\n    this.dblclick = new EventEmitter();\n    this.select = new EventEmitter();\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n  }\n  update() {\n    super.update();\n    if (this.labels && this.hasNoOptionalMarginsSet()) {\n      this.margins = [30, 80, 30, 80];\n    } else if (!this.labels && this.hasNoOptionalMarginsSet()) {\n      // default value for margins\n      this.margins = [20, 20, 20, 20];\n    }\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margins,\n      showLegend: this.legend,\n      legendPosition: this.legendPosition\n    });\n    this.formatDates();\n    const xOffset = this.margins[3] + this.dims.width / 2;\n    const yOffset = this.margins[0] + this.dims.height / 2;\n    this.translation = `translate(${xOffset}, ${yOffset})`;\n    this.outerRadius = Math.min(this.dims.width, this.dims.height);\n    if (this.labels) {\n      // make room for labels\n      this.outerRadius /= 3;\n    } else {\n      this.outerRadius /= 2;\n    }\n    this.innerRadius = 0;\n    if (this.doughnut) {\n      this.innerRadius = this.outerRadius * (1 - this.arcWidth);\n    }\n    this.domain = this.getDomain();\n    // sort data according to domain\n    this.data = this.results.sort((a, b) => {\n      return this.domain.indexOf(a.name) - this.domain.indexOf(b.name);\n    });\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n  }\n  getDomain() {\n    return this.results.map(d => d.label);\n  }\n  onClick(data) {\n    this.select.emit(data);\n  }\n  setColors() {\n    this.colors = new ColorHelper(this.scheme, ScaleType.Ordinal, this.domain, this.customColors);\n  }\n  getLegendOptions() {\n    return {\n      scaleType: ScaleType.Ordinal,\n      domain: this.domain,\n      colors: this.colors,\n      title: this.legendTitle,\n      position: this.legendPosition\n    };\n  }\n  onActivate(item, fromLegend = false) {\n    item = this.results.find(d => {\n      if (fromLegend) {\n        return d.label === item.name;\n      } else {\n        return d.name === item.name;\n      }\n    });\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value && d.series === item.series;\n    });\n    if (idx > -1) {\n      return;\n    }\n    this.activeEntries = [item, ...this.activeEntries];\n    this.activate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n  onDeactivate(item, fromLegend = false) {\n    item = this.results.find(d => {\n      if (fromLegend) {\n        return d.label === item.name;\n      } else {\n        return d.name === item.name;\n      }\n    });\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value && d.series === item.series;\n    });\n    this.activeEntries.splice(idx, 1);\n    this.activeEntries = [...this.activeEntries];\n    this.deactivate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n  hasNoOptionalMarginsSet() {\n    return !this.margins || this.margins.length <= 0;\n  }\n}\nPieChartComponent.ɵfac = /* @__PURE__ */(() => {\n  let ɵPieChartComponent_BaseFactory;\n  return function PieChartComponent_Factory(t) {\n    return (ɵPieChartComponent_BaseFactory || (ɵPieChartComponent_BaseFactory = i0.ɵɵgetInheritedFactory(PieChartComponent)))(t || PieChartComponent);\n  };\n})();\nPieChartComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: PieChartComponent,\n  selectors: [[\"ngx-charts-pie-chart\"]],\n  contentQueries: function PieChartComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n    }\n  },\n  inputs: {\n    labels: \"labels\",\n    legend: \"legend\",\n    legendTitle: \"legendTitle\",\n    legendPosition: \"legendPosition\",\n    explodeSlices: \"explodeSlices\",\n    doughnut: \"doughnut\",\n    arcWidth: \"arcWidth\",\n    gradient: \"gradient\",\n    activeEntries: \"activeEntries\",\n    tooltipDisabled: \"tooltipDisabled\",\n    labelFormatting: \"labelFormatting\",\n    trimLabels: \"trimLabels\",\n    maxLabelLength: \"maxLabelLength\",\n    tooltipText: \"tooltipText\",\n    margins: \"margins\"\n  },\n  outputs: {\n    dblclick: \"dblclick\",\n    select: \"select\",\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 3,\n  vars: 24,\n  consts: [[3, \"legendLabelActivate\", \"legendLabelDeactivate\", \"legendLabelClick\", \"view\", \"showLegend\", \"legendOptions\", \"activeEntries\", \"animations\"], [1, \"pie-chart\", \"chart\"], [\"ngx-charts-pie-series\", \"\", 3, \"dblclick\", \"select\", \"activate\", \"deactivate\", \"colors\", \"series\", \"showLabels\", \"labelFormatting\", \"trimLabels\", \"maxLabelLength\", \"activeEntries\", \"innerRadius\", \"outerRadius\", \"explodeSlices\", \"gradient\", \"animations\", \"tooltipDisabled\", \"tooltipTemplate\", \"tooltipText\"]],\n  template: function PieChartComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n      i0.ɵɵlistener(\"legendLabelActivate\", function PieChartComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener($event) {\n        return ctx.onActivate($event, true);\n      })(\"legendLabelDeactivate\", function PieChartComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener($event) {\n        return ctx.onDeactivate($event, true);\n      })(\"legendLabelClick\", function PieChartComponent_Template_ngx_charts_chart_legendLabelClick_0_listener($event) {\n        return ctx.onClick($event);\n      });\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"g\", 1)(2, \"g\", 2);\n      i0.ɵɵlistener(\"dblclick\", function PieChartComponent_Template_g_dblclick_2_listener($event) {\n        return ctx.dblclick.emit($event);\n      })(\"select\", function PieChartComponent_Template_g_select_2_listener($event) {\n        return ctx.onClick($event);\n      })(\"activate\", function PieChartComponent_Template_g_activate_2_listener($event) {\n        return ctx.onActivate($event);\n      })(\"deactivate\", function PieChartComponent_Template_g_deactivate_2_listener($event) {\n        return ctx.onDeactivate($event);\n      });\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(21, _c24, ctx.width, ctx.height))(\"showLegend\", ctx.legend)(\"legendOptions\", ctx.legendOptions)(\"activeEntries\", ctx.activeEntries)(\"animations\", ctx.animations);\n      i0.ɵɵadvance();\n      i0.ɵɵattribute(\"transform\", ctx.translation);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"colors\", ctx.colors)(\"series\", ctx.data)(\"showLabels\", ctx.labels)(\"labelFormatting\", ctx.labelFormatting)(\"trimLabels\", ctx.trimLabels)(\"maxLabelLength\", ctx.maxLabelLength)(\"activeEntries\", ctx.activeEntries)(\"innerRadius\", ctx.innerRadius)(\"outerRadius\", ctx.outerRadius)(\"explodeSlices\", ctx.explodeSlices)(\"gradient\", ctx.gradient)(\"animations\", ctx.animations)(\"tooltipDisabled\", ctx.tooltipDisabled)(\"tooltipTemplate\", ctx.tooltipTemplate)(\"tooltipText\", ctx.tooltipText);\n    }\n  },\n  dependencies: [ChartComponent, PieSeriesComponent],\n  styles: [_c25, _c42],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PieChartComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-pie-chart',\n      template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"translation\" class=\"pie-chart chart\">\n        <svg:g\n          ngx-charts-pie-series\n          [colors]=\"colors\"\n          [series]=\"data\"\n          [showLabels]=\"labels\"\n          [labelFormatting]=\"labelFormatting\"\n          [trimLabels]=\"trimLabels\"\n          [maxLabelLength]=\"maxLabelLength\"\n          [activeEntries]=\"activeEntries\"\n          [innerRadius]=\"innerRadius\"\n          [outerRadius]=\"outerRadius\"\n          [explodeSlices]=\"explodeSlices\"\n          [gradient]=\"gradient\"\n          [animations]=\"animations\"\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [tooltipText]=\"tooltipText\"\n          (dblclick)=\"dblclick.emit($event)\"\n          (select)=\"onClick($event)\"\n          (activate)=\"onActivate($event)\"\n          (deactivate)=\"onDeactivate($event)\"\n        />\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \".pie-label{font-size:11px}.pie-label.animation{animation:.75s ease-in fadeIn}@keyframes fadeIn{0%{opacity:0}to{opacity:1}}.pie-label-line{stroke-dasharray:100%}.pie-label-line.animation{animation:3s linear drawOut;transition:d .75s}@keyframes drawOut{0%{stroke-dashoffset:100%}to{stroke-dashoffset:0}}\\n\"]\n    }]\n  }], null, {\n    labels: [{\n      type: Input\n    }],\n    legend: [{\n      type: Input\n    }],\n    legendTitle: [{\n      type: Input\n    }],\n    legendPosition: [{\n      type: Input\n    }],\n    explodeSlices: [{\n      type: Input\n    }],\n    doughnut: [{\n      type: Input\n    }],\n    arcWidth: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    labelFormatting: [{\n      type: Input\n    }],\n    trimLabels: [{\n      type: Input\n    }],\n    maxLabelLength: [{\n      type: Input\n    }],\n    tooltipText: [{\n      type: Input\n    }],\n    dblclick: [{\n      type: Output\n    }],\n    margins: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    tooltipTemplate: [{\n      type: ContentChild,\n      args: ['tooltipTemplate']\n    }]\n  });\n})();\nfunction gridSize(dims, len, minWidth) {\n  let rows = 1;\n  let cols = len;\n  const width = dims.width;\n  if (width > minWidth) {\n    while (width / cols < minWidth) {\n      rows += 1;\n      cols = Math.ceil(len / rows);\n    }\n  }\n  return [cols, rows];\n}\nfunction gridLayout(dims, data, minWidth, designatedTotal) {\n  const xScale = scaleBand();\n  const yScale = scaleBand();\n  const width = dims.width;\n  const height = dims.height;\n  const [columns, rows] = gridSize(dims, data.length, minWidth);\n  const xDomain = [];\n  const yDomain = [];\n  for (let i = 0; i < rows; i++) {\n    yDomain.push(i);\n  }\n  for (let i = 0; i < columns; i++) {\n    xDomain.push(i);\n  }\n  xScale.domain(xDomain);\n  yScale.domain(yDomain);\n  xScale.rangeRound([0, width], 0.1);\n  yScale.rangeRound([0, height], 0.1);\n  const res = [];\n  const total = designatedTotal ? designatedTotal : getTotal(data);\n  const cardWidth = xScale.bandwidth();\n  const cardHeight = yScale.bandwidth();\n  for (let i = 0; i < data.length; i++) {\n    res[i] = {};\n    res[i].data = {\n      name: data[i] ? data[i].name : '',\n      value: data[i] ? data[i].value : undefined,\n      extra: data[i] ? data[i].extra : undefined,\n      label: data[i] ? data[i].label : ''\n    };\n    res[i].x = xScale(i % columns);\n    res[i].y = yScale(Math.floor(i / columns));\n    res[i].width = cardWidth;\n    res[i].height = cardHeight;\n    res[i].data.percent = total > 0 ? res[i].data.value / total : 0;\n    res[i].data.total = total;\n  }\n  return res;\n}\nfunction getTotal(results) {\n  return results.map(d => d ? d.value : 0).reduce((sum, val) => sum + val, 0);\n}\nclass PieGridSeriesComponent {\n  constructor(element) {\n    this.innerRadius = 70;\n    this.outerRadius = 80;\n    this.animations = true;\n    this.select = new EventEmitter();\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.element = element.nativeElement;\n  }\n  ngOnChanges(changes) {\n    this.update();\n  }\n  update() {\n    this.layout = pie().value(d => d.data.value).sort(null);\n    this.arcs = this.getArcs();\n  }\n  getArcs() {\n    return this.layout(this.data).map((arc, index) => {\n      const label = arc.data.data.name;\n      const other = arc.data.data.other;\n      if (index === 0) {\n        arc.startAngle = 0;\n      }\n      const color = this.colors(label);\n      return {\n        data: arc.data.data,\n        class: 'arc ' + 'arc' + index,\n        fill: color,\n        startAngle: other ? 0 : arc.startAngle,\n        endAngle: arc.endAngle,\n        animate: this.animations && !other,\n        pointerEvents: !other\n      };\n    });\n  }\n  onClick(data) {\n    this.select.emit(this.data[0].data);\n  }\n  trackBy(index, item) {\n    return item.data.name;\n  }\n  label(arc) {\n    return arc.data.name;\n  }\n  color(arc) {\n    return this.colors(this.label(arc));\n  }\n}\nPieGridSeriesComponent.ɵfac = function PieGridSeriesComponent_Factory(t) {\n  return new (t || PieGridSeriesComponent)(i0.ɵɵdirectiveInject(i0.ElementRef));\n};\nPieGridSeriesComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: PieGridSeriesComponent,\n  selectors: [[\"g\", \"ngx-charts-pie-grid-series\", \"\"]],\n  inputs: {\n    colors: \"colors\",\n    data: \"data\",\n    innerRadius: \"innerRadius\",\n    outerRadius: \"outerRadius\",\n    animations: \"animations\"\n  },\n  outputs: {\n    select: \"select\",\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c43,\n  decls: 2,\n  vars: 2,\n  consts: [[1, \"pie-grid-arcs\"], [\"ngx-charts-pie-arc\", \"\", 3, \"startAngle\", \"endAngle\", \"innerRadius\", \"outerRadius\", \"fill\", \"value\", \"data\", \"gradient\", \"pointerEvents\", \"animate\", \"select\", \"activate\", \"deactivate\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-pie-arc\", \"\", 3, \"select\", \"activate\", \"deactivate\", \"startAngle\", \"endAngle\", \"innerRadius\", \"outerRadius\", \"fill\", \"value\", \"data\", \"gradient\", \"pointerEvents\", \"animate\"]],\n  template: function PieGridSeriesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(0, \"g\", 0);\n      i0.ɵɵtemplate(1, PieGridSeriesComponent__svg_g_1_Template, 1, 11, \"g\", 1);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngForOf\", ctx.arcs)(\"ngForTrackBy\", ctx.trackBy);\n    }\n  },\n  dependencies: [PieArcComponent, i2.NgForOf],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PieGridSeriesComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-pie-grid-series]',\n      template: `\n    <svg:g class=\"pie-grid-arcs\">\n      <svg:g\n        ngx-charts-pie-arc\n        *ngFor=\"let arc of arcs; trackBy: trackBy\"\n        [attr.class]=\"arc.class\"\n        [startAngle]=\"arc.startAngle\"\n        [endAngle]=\"arc.endAngle\"\n        [innerRadius]=\"innerRadius\"\n        [outerRadius]=\"outerRadius\"\n        [fill]=\"color(arc)\"\n        [value]=\"arc.data.value\"\n        [data]=\"arc.data\"\n        [gradient]=\"false\"\n        [pointerEvents]=\"arc.pointerEvents\"\n        [animate]=\"arc.animate\"\n        (select)=\"onClick($event)\"\n        (activate)=\"activate.emit($event)\"\n        (deactivate)=\"deactivate.emit($event)\"\n      ></svg:g>\n    </svg:g>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }];\n  }, {\n    colors: [{\n      type: Input\n    }],\n    data: [{\n      type: Input\n    }],\n    innerRadius: [{\n      type: Input\n    }],\n    outerRadius: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }]\n  });\n})();\nclass PieGridComponent extends BaseChartComponent {\n  constructor() {\n    super(...arguments);\n    this.tooltipDisabled = false;\n    this.label = 'Total';\n    this.minWidth = 150;\n    this.activeEntries = [];\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.margin = [20, 20, 20, 20];\n    this.placementTypes = PlacementTypes;\n    this.styleTypes = StyleTypes;\n  }\n  update() {\n    super.update();\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin\n    });\n    this.formatDates();\n    this.domain = this.getDomain();\n    this.data = gridLayout(this.dims, this.results, this.minWidth, this.designatedTotal);\n    this.transform = `translate(${this.margin[3]} , ${this.margin[0]})`;\n    this.series = this.getSeries();\n    this.setColors();\n    this.tooltipText = this.tooltipText || this.defaultTooltipText;\n  }\n  defaultTooltipText({\n    data\n  }) {\n    const label = trimLabel(formatLabel(data.name));\n    const val = data.value.toLocaleString();\n    return `\n      <span class=\"tooltip-label\">${label}</span>\n      <span class=\"tooltip-val\">${val}</span>\n    `;\n  }\n  getDomain() {\n    return this.results.map(d => d.label);\n  }\n  getSeries() {\n    const total = this.designatedTotal ? this.designatedTotal : this.getTotal();\n    return this.data.map(d => {\n      const baselineLabelHeight = 20;\n      const padding = 10;\n      const name = d.data.name;\n      const label = formatLabel(name);\n      const value = d.data.value;\n      const radius = min([d.width - padding, d.height - baselineLabelHeight]) / 2 - 5;\n      const innerRadius = radius * 0.9;\n      let count = 0;\n      const colors = () => {\n        count += 1;\n        if (count === 1) {\n          return 'rgba(100,100,100,0.3)';\n        } else {\n          return this.colorScale.getColor(label);\n        }\n      };\n      const xPos = d.x + (d.width - padding) / 2;\n      const yPos = d.y + (d.height - baselineLabelHeight) / 2;\n      return {\n        transform: `translate(${xPos}, ${yPos})`,\n        colors,\n        innerRadius,\n        outerRadius: radius,\n        name,\n        label: trimLabel(label),\n        total: value,\n        value,\n        percent: format('.1%')(d.data.percent),\n        data: [d, {\n          data: {\n            other: true,\n            value: total - value,\n            name: d.data.name\n          }\n        }]\n      };\n    });\n  }\n  getTotal() {\n    return this.results.map(d => d.value).reduce((sum, d) => sum + d, 0);\n  }\n  onClick(data) {\n    this.select.emit(data);\n  }\n  setColors() {\n    this.colorScale = new ColorHelper(this.scheme, ScaleType.Ordinal, this.domain, this.customColors);\n  }\n  onActivate(item, fromLegend = false) {\n    item = this.results.find(d => {\n      if (fromLegend) {\n        return d.label === item.name;\n      } else {\n        return d.name === item.name;\n      }\n    });\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value && d.series === item.series;\n    });\n    if (idx > -1) {\n      return;\n    }\n    this.activeEntries = [item, ...this.activeEntries];\n    this.activate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n  onDeactivate(item, fromLegend = false) {\n    item = this.results.find(d => {\n      if (fromLegend) {\n        return d.label === item.name;\n      } else {\n        return d.name === item.name;\n      }\n    });\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value && d.series === item.series;\n    });\n    this.activeEntries.splice(idx, 1);\n    this.activeEntries = [...this.activeEntries];\n    this.deactivate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n}\nPieGridComponent.ɵfac = /* @__PURE__ */(() => {\n  let ɵPieGridComponent_BaseFactory;\n  return function PieGridComponent_Factory(t) {\n    return (ɵPieGridComponent_BaseFactory || (ɵPieGridComponent_BaseFactory = i0.ɵɵgetInheritedFactory(PieGridComponent)))(t || PieGridComponent);\n  };\n})();\nPieGridComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: PieGridComponent,\n  selectors: [[\"ngx-charts-pie-grid\"]],\n  contentQueries: function PieGridComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n    }\n  },\n  inputs: {\n    designatedTotal: \"designatedTotal\",\n    tooltipDisabled: \"tooltipDisabled\",\n    tooltipText: \"tooltipText\",\n    label: \"label\",\n    minWidth: \"minWidth\",\n    activeEntries: \"activeEntries\"\n  },\n  outputs: {\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 3,\n  vars: 8,\n  consts: [[3, \"view\", \"showLegend\", \"animations\"], [1, \"pie-grid\", \"chart\"], [\"class\", \"pie-grid-item\", 4, \"ngFor\", \"ngForOf\"], [1, \"pie-grid-item\"], [\"ngx-charts-pie-grid-series\", \"\", \"ngx-tooltip\", \"\", 3, \"select\", \"activate\", \"deactivate\", \"colors\", \"data\", \"innerRadius\", \"outerRadius\", \"animations\", \"tooltipDisabled\", \"tooltipPlacement\", \"tooltipType\", \"tooltipTitle\", \"tooltipTemplate\", \"tooltipContext\"], [\"class\", \"label percent-label\", \"dy\", \"-0.5em\", \"x\", \"0\", \"y\", \"5\", \"ngx-charts-count-up\", \"\", \"text-anchor\", \"middle\", 3, \"countTo\", \"countSuffix\", 4, \"ngIf\"], [\"class\", \"label percent-label\", \"dy\", \"-0.5em\", \"x\", \"0\", \"y\", \"5\", \"text-anchor\", \"middle\", 4, \"ngIf\"], [\"dy\", \"0.5em\", \"x\", \"0\", \"y\", \"5\", \"text-anchor\", \"middle\", 1, \"label\"], [\"class\", \"label\", \"dy\", \"1.23em\", \"x\", \"0\", \"text-anchor\", \"middle\", \"ngx-charts-count-up\", \"\", 3, \"countTo\", \"countPrefix\", 4, \"ngIf\"], [\"class\", \"label\", \"dy\", \"1.23em\", \"x\", \"0\", \"text-anchor\", \"middle\", 4, \"ngIf\"], [\"dy\", \"-0.5em\", \"x\", \"0\", \"y\", \"5\", \"ngx-charts-count-up\", \"\", \"text-anchor\", \"middle\", 1, \"label\", \"percent-label\", 3, \"countTo\", \"countSuffix\"], [\"dy\", \"-0.5em\", \"x\", \"0\", \"y\", \"5\", \"text-anchor\", \"middle\", 1, \"label\", \"percent-label\"], [\"dy\", \"1.23em\", \"x\", \"0\", \"text-anchor\", \"middle\", \"ngx-charts-count-up\", \"\", 1, \"label\", 3, \"countTo\", \"countPrefix\"], [\"dy\", \"1.23em\", \"x\", \"0\", \"text-anchor\", \"middle\", 1, \"label\"]],\n  template: function PieGridComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"g\", 1);\n      i0.ɵɵtemplate(2, PieGridComponent__svg_g_2_Template, 8, 19, \"g\", 2);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(5, _c24, ctx.width, ctx.height))(\"showLegend\", false)(\"animations\", ctx.animations);\n      i0.ɵɵadvance();\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngForOf\", ctx.series);\n    }\n  },\n  dependencies: [ChartComponent, PieGridSeriesComponent, CountUpDirective, i2.NgForOf, TooltipDirective, i2.NgIf],\n  styles: [_c25, \".pie-grid .arc1{opacity:.4}.pie-grid .percent-label{font-size:16px;font-weight:400}\\n\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PieGridComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-pie-grid',\n      template: `\n    <ngx-charts-chart [view]=\"[width, height]\" [showLegend]=\"false\" [animations]=\"animations\">\n      <svg:g [attr.transform]=\"transform\" class=\"pie-grid chart\">\n        <svg:g *ngFor=\"let series of series\" class=\"pie-grid-item\" [attr.transform]=\"series.transform\">\n          <svg:g\n            ngx-charts-pie-grid-series\n            [colors]=\"series.colors\"\n            [data]=\"series.data\"\n            [innerRadius]=\"series.innerRadius\"\n            [outerRadius]=\"series.outerRadius\"\n            [animations]=\"animations\"\n            (select)=\"onClick($event)\"\n            ngx-tooltip\n            [tooltipDisabled]=\"tooltipDisabled\"\n            [tooltipPlacement]=\"placementTypes.Top\"\n            [tooltipType]=\"styleTypes.tooltip\"\n            [tooltipTitle]=\"tooltipTemplate ? undefined : tooltipText({ data: series })\"\n            [tooltipTemplate]=\"tooltipTemplate\"\n            [tooltipContext]=\"series.data[0].data\"\n            (activate)=\"onActivate($event)\"\n            (deactivate)=\"onDeactivate($event)\"\n          />\n          <svg:text\n            *ngIf=\"animations\"\n            class=\"label percent-label\"\n            dy=\"-0.5em\"\n            x=\"0\"\n            y=\"5\"\n            ngx-charts-count-up\n            [countTo]=\"series.percent\"\n            [countSuffix]=\"'%'\"\n            text-anchor=\"middle\"\n          ></svg:text>\n          <svg:text *ngIf=\"!animations\" class=\"label percent-label\" dy=\"-0.5em\" x=\"0\" y=\"5\" text-anchor=\"middle\">\n            {{ series.percent.toLocaleString() }}\n          </svg:text>\n          <svg:text class=\"label\" dy=\"0.5em\" x=\"0\" y=\"5\" text-anchor=\"middle\">\n            {{ series.label }}\n          </svg:text>\n          <svg:text\n            *ngIf=\"animations\"\n            class=\"label\"\n            dy=\"1.23em\"\n            x=\"0\"\n            [attr.y]=\"series.outerRadius\"\n            text-anchor=\"middle\"\n            ngx-charts-count-up\n            [countTo]=\"series.total\"\n            [countPrefix]=\"label + ': '\"\n          ></svg:text>\n          <svg:text\n            *ngIf=\"!animations\"\n            class=\"label\"\n            dy=\"1.23em\"\n            x=\"0\"\n            [attr.y]=\"series.outerRadius\"\n            text-anchor=\"middle\"\n          >\n            {{ label }}: {{ series.total.toLocaleString() }}\n          </svg:text>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \".pie-grid .arc1{opacity:.4}.pie-grid .percent-label{font-size:16px;font-weight:400}\\n\"]\n    }]\n  }], null, {\n    designatedTotal: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    tooltipText: [{\n      type: Input\n    }],\n    label: [{\n      type: Input\n    }],\n    minWidth: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    tooltipTemplate: [{\n      type: ContentChild,\n      args: ['tooltipTemplate']\n    }]\n  });\n})();\nclass PieChartModule {}\nPieChartModule.ɵfac = function PieChartModule_Factory(t) {\n  return new (t || PieChartModule)();\n};\nPieChartModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: PieChartModule\n});\nPieChartModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[ChartCommonModule]]\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PieChartModule, [{\n    type: NgModule,\n    args: [{\n      imports: [ChartCommonModule],\n      declarations: [AdvancedPieChartComponent, PieLabelComponent, PieArcComponent, PieChartComponent, PieGridComponent, PieGridSeriesComponent, PieSeriesComponent],\n      exports: [AdvancedPieChartComponent, PieLabelComponent, PieArcComponent, PieChartComponent, PieGridComponent, PieGridSeriesComponent, PieSeriesComponent]\n    }]\n  }], null, null);\n})();\nclass PolarChartModule {}\nPolarChartModule.ɵfac = function PolarChartModule_Factory(t) {\n  return new (t || PolarChartModule)();\n};\nPolarChartModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: PolarChartModule\n});\nPolarChartModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[ChartCommonModule, PieChartModule, LineChartModule]]\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PolarChartModule, [{\n    type: NgModule,\n    args: [{\n      imports: [ChartCommonModule, PieChartModule, LineChartModule],\n      declarations: [PolarChartComponent, PolarSeriesComponent],\n      exports: [PolarChartComponent, PolarSeriesComponent]\n    }]\n  }], null, null);\n})();\nfunction calculateTextWidth(fontFamilyKey, text, defaultWidth = 8) {\n  return text.split('').reduce((acc, curr) => {\n    const width = fontFamilyKey[curr] || defaultWidth;\n    return acc + width;\n  }, 0);\n}\nconst VERDANA_FONT_WIDTHS_16_PX = {\n  '0': 10,\n  '1': 10,\n  '2': 10,\n  '3': 10,\n  '4': 10,\n  '5': 10,\n  '6': 10,\n  '7': 10,\n  '8': 10,\n  '9': 10,\n  A: 11,\n  B: 11,\n  C: 11,\n  D: 12,\n  E: 10,\n  F: 9,\n  G: 12,\n  H: 12,\n  I: 7,\n  J: 7,\n  K: 11,\n  L: 9,\n  M: 13,\n  N: 12,\n  O: 13,\n  P: 10,\n  Q: 13,\n  R: 11,\n  S: 11,\n  T: 10,\n  U: 12,\n  V: 11,\n  W: 16,\n  X: 11,\n  Y: 10,\n  Z: 11,\n  a: 10,\n  b: 10,\n  c: 8,\n  d: 10,\n  e: 10,\n  f: 6,\n  g: 10,\n  h: 10,\n  i: 4,\n  j: 6,\n  k: 9,\n  l: 4,\n  m: 16,\n  n: 10,\n  o: 10,\n  p: 10,\n  q: 10,\n  r: 7,\n  s: 8,\n  t: 6,\n  u: 10,\n  v: 9,\n  w: 13,\n  x: 9,\n  y: 9,\n  z: 8,\n  '!': 6,\n  '@': 16,\n  '#': 13,\n  $: 10,\n  '%': 17,\n  '^': 13,\n  '&': 12,\n  '*': 10,\n  '(': 7,\n  ')': 7,\n  _: 10,\n  '-': 7,\n  '+': 13,\n  '=': 13,\n  ',': 6,\n  '.': 6,\n  '/': 7,\n  \"'\": 4,\n  ':': 7,\n  '|': 7,\n  '?': 9,\n  ';': 7,\n  '<': 13,\n  '>': 13\n};\nclass CardComponent {\n  constructor(element, cd, zone, platformId) {\n    this.cd = cd;\n    this.zone = zone;\n    this.platformId = platformId;\n    this.animations = true;\n    this.select = new EventEmitter();\n    this.value = '';\n    this.textFontSize = 12;\n    this.textTransform = '';\n    this.initialized = false;\n    this.bandHeight = 10;\n    this.textPadding = [10, 20, 5, 20];\n    this.labelFontSize = 15;\n    this.element = element.nativeElement;\n  }\n  ngOnChanges(changes) {\n    this.update();\n  }\n  ngOnInit() {\n    if (isPlatformServer(this.platformId)) {\n      this.scaleTextSSR();\n    }\n  }\n  ngOnDestroy() {\n    if (isPlatformBrowser(this.platformId)) {\n      cancelAnimationFrame(this.animationReq);\n    }\n  }\n  update() {\n    this.zone.run(() => {\n      const hasValue = this.data && typeof this.data.value !== 'undefined';\n      const valueFormatting = this.valueFormatting || (card => card.value.toLocaleString());\n      const labelFormatting = this.labelFormatting || (card => escapeLabel(trimLabel(card.label, 55)));\n      this.transform = `translate(${this.x} , ${this.y})`;\n      this.textWidth = Math.max(0, this.width) - this.textPadding[1] - this.textPadding[3];\n      this.cardWidth = Math.max(0, this.width);\n      this.cardHeight = Math.max(0, this.height);\n      this.label = this.label ? this.label : this.data.name;\n      const cardData = {\n        label: this.label,\n        data: this.data,\n        value: this.data.value\n      };\n      this.formattedLabel = labelFormatting(cardData);\n      this.transformBand = `translate(0 , ${this.cardHeight - this.bandHeight})`;\n      const value = hasValue ? valueFormatting(cardData) : '';\n      this.value = this.paddedValue(value);\n      this.setPadding();\n      this.bandPath = roundedRect(0, 0, this.cardWidth, this.bandHeight, 3, [false, false, true, true]);\n      setTimeout(() => {\n        if (isPlatformBrowser(this.platformId)) {\n          this.scaleText();\n        }\n        this.value = value;\n        if (hasValue && !this.initialized) {\n          setTimeout(() => this.startCount(), 20);\n        }\n      }, 8);\n    });\n  }\n  paddedValue(value) {\n    if (this.medianSize && this.medianSize > value.length) {\n      value += '\\u2007'.repeat(this.medianSize - value.length);\n    }\n    return value;\n  }\n  startCount() {\n    if (!this.initialized && this.animations) {\n      cancelAnimationFrame(this.animationReq);\n      const val = this.data.value;\n      const decs = decimalChecker(val);\n      const valueFormatting = this.valueFormatting || (card => card.value.toLocaleString());\n      const callback = ({\n        value,\n        finished\n      }) => {\n        this.zone.run(() => {\n          value = finished ? val : value;\n          this.value = valueFormatting({\n            label: this.label,\n            data: this.data,\n            value\n          });\n          if (!finished) {\n            this.value = this.paddedValue(this.value);\n          }\n          this.cd.markForCheck();\n        });\n      };\n      this.animationReq = count(0, val, decs, 1, callback);\n      this.initialized = true;\n    }\n  }\n  scaleText() {\n    this.zone.run(() => {\n      const {\n        width,\n        height\n      } = this.textEl.nativeElement.getBoundingClientRect();\n      if (width === 0 || height === 0) {\n        return;\n      }\n      const textPadding = this.textPadding[1] = this.textPadding[3] = this.cardWidth / 8;\n      const availableWidth = this.cardWidth - 2 * textPadding;\n      const availableHeight = this.cardHeight / 3;\n      const resizeScale = Math.min(availableWidth / width, availableHeight / height);\n      this.textFontSize = Math.floor(this.textFontSize * resizeScale);\n      this.labelFontSize = Math.min(this.textFontSize, 15);\n      this.setPadding();\n      this.cd.markForCheck();\n    });\n  }\n  scaleTextSSR() {\n    const width = calculateTextWidth(VERDANA_FONT_WIDTHS_16_PX, this.value, 10);\n    const height = 18;\n    const textPadding = this.textPadding[1] = this.textPadding[3] = this.cardWidth / 8;\n    const availableWidth = this.cardWidth - 2 * textPadding;\n    const availableHeight = this.cardHeight / 3;\n    const resizeScale = Math.min(availableWidth / width, availableHeight / height);\n    this.textFontSize = Math.floor(this.textFontSize * resizeScale);\n    this.labelFontSize = Math.min(this.textFontSize, 15);\n    this.setPadding();\n  }\n  setPadding() {\n    this.textPadding[1] = this.textPadding[3] = this.cardWidth / 8;\n    const padding = this.cardHeight / 2;\n    this.textPadding[0] = padding - this.textFontSize - this.labelFontSize / 2;\n    this.textPadding[2] = padding - this.labelFontSize;\n  }\n  onClick() {\n    this.select.emit(this.data);\n  }\n}\nCardComponent.ɵfac = function CardComponent_Factory(t) {\n  return new (t || CardComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(PLATFORM_ID));\n};\nCardComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: CardComponent,\n  selectors: [[\"g\", \"ngx-charts-card\", \"\"]],\n  viewQuery: function CardComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c45, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.textEl = _t.first);\n    }\n  },\n  inputs: {\n    color: \"color\",\n    bandColor: \"bandColor\",\n    textColor: \"textColor\",\n    x: \"x\",\n    y: \"y\",\n    width: \"width\",\n    height: \"height\",\n    label: \"label\",\n    data: \"data\",\n    medianSize: \"medianSize\",\n    valueFormatting: \"valueFormatting\",\n    labelFormatting: \"labelFormatting\",\n    animations: \"animations\"\n  },\n  outputs: {\n    select: \"select\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c46,\n  decls: 10,\n  vars: 25,\n  consts: [[\"textEl\", \"\"], [1, \"cell\", 3, \"click\"], [\"rx\", \"3\", \"ry\", \"3\", 1, \"card\"], [\"class\", \"card-band\", \"stroke\", \"none\", 4, \"ngIf\"], [\"x\", \"5\", \"alignment-baseline\", \"hanging\", 1, \"trimmed-label\"], [3, \"innerHTML\"], [\"text-anchor\", \"start\", \"alignment-baseline\", \"hanging\", 1, \"value-text\"], [\"stroke\", \"none\", 1, \"card-band\"]],\n  template: function CardComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r1 = i0.ɵɵgetCurrentView();\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(0, \"g\", 1);\n      i0.ɵɵlistener(\"click\", function CardComponent_Template_g_click_0_listener() {\n        i0.ɵɵrestoreView(_r1);\n        return i0.ɵɵresetView(ctx.onClick());\n      });\n      i0.ɵɵelement(1, \"rect\", 2);\n      i0.ɵɵtemplate(2, CardComponent__svg_path_2_Template, 1, 3, \"path\", 3);\n      i0.ɵɵelementStart(3, \"title\");\n      i0.ɵɵtext(4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"foreignObject\", 4);\n      i0.ɵɵnamespaceHTML();\n      i0.ɵɵelement(6, \"p\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(7, \"text\", 6, 0);\n      i0.ɵɵtext(9);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance();\n      i0.ɵɵstyleProp(\"fill\", ctx.color);\n      i0.ɵɵattribute(\"width\", ctx.cardWidth)(\"height\", ctx.cardHeight);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngIf\", ctx.bandColor && ctx.bandColor !== ctx.color);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.label);\n      i0.ɵɵadvance();\n      i0.ɵɵattribute(\"x\", ctx.textPadding[3])(\"y\", ctx.cardHeight - ctx.textPadding[2])(\"width\", ctx.textWidth)(\"height\", ctx.labelFontSize + ctx.textPadding[2]);\n      i0.ɵɵadvance();\n      i0.ɵɵstyleProp(\"color\", ctx.textColor)(\"font-size\", ctx.labelFontSize, \"px\")(\"line-height\", ctx.labelFontSize, \"px\");\n      i0.ɵɵproperty(\"innerHTML\", ctx.formattedLabel, i0.ɵɵsanitizeHtml);\n      i0.ɵɵadvance();\n      i0.ɵɵstyleProp(\"fill\", ctx.textColor)(\"font-size\", ctx.textFontSize, \"pt\");\n      i0.ɵɵattribute(\"x\", ctx.textPadding[3])(\"y\", ctx.textPadding[0]);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\" \", ctx.value, \" \");\n    }\n  },\n  dependencies: [i2.NgIf],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CardComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-card]',\n      template: `\n    <svg:g [attr.transform]=\"transform\" class=\"cell\" (click)=\"onClick()\">\n      <svg:rect class=\"card\" [style.fill]=\"color\" [attr.width]=\"cardWidth\" [attr.height]=\"cardHeight\" rx=\"3\" ry=\"3\" />\n      <svg:path\n        *ngIf=\"bandColor && bandColor !== color\"\n        class=\"card-band\"\n        [attr.fill]=\"bandColor\"\n        [attr.transform]=\"transformBand\"\n        stroke=\"none\"\n        [attr.d]=\"bandPath\"\n      />\n      <title>{{ label }}</title>\n      <svg:foreignObject\n        class=\"trimmed-label\"\n        x=\"5\"\n        [attr.x]=\"textPadding[3]\"\n        [attr.y]=\"cardHeight - textPadding[2]\"\n        [attr.width]=\"textWidth\"\n        [attr.height]=\"labelFontSize + textPadding[2]\"\n        alignment-baseline=\"hanging\"\n      >\n        <xhtml:p\n          [style.color]=\"textColor\"\n          [style.fontSize.px]=\"labelFontSize\"\n          [style.lineHeight.px]=\"labelFontSize\"\n          [innerHTML]=\"formattedLabel\"\n        >\n        </xhtml:p>\n      </svg:foreignObject>\n      <svg:text\n        #textEl\n        class=\"value-text\"\n        [attr.x]=\"textPadding[3]\"\n        [attr.y]=\"textPadding[0]\"\n        [style.fill]=\"textColor\"\n        text-anchor=\"start\"\n        alignment-baseline=\"hanging\"\n        [style.font-size.pt]=\"textFontSize\"\n      >\n        {{ value }}\n      </svg:text>\n    </svg:g>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i0.NgZone\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }];\n  }, {\n    color: [{\n      type: Input\n    }],\n    bandColor: [{\n      type: Input\n    }],\n    textColor: [{\n      type: Input\n    }],\n    x: [{\n      type: Input\n    }],\n    y: [{\n      type: Input\n    }],\n    width: [{\n      type: Input\n    }],\n    height: [{\n      type: Input\n    }],\n    label: [{\n      type: Input\n    }],\n    data: [{\n      type: Input\n    }],\n    medianSize: [{\n      type: Input\n    }],\n    valueFormatting: [{\n      type: Input\n    }],\n    labelFormatting: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }],\n    textEl: [{\n      type: ViewChild,\n      args: ['textEl', {\n        static: false\n      }]\n    }]\n  });\n})();\n\n/**\n * Converts a hex to RGB\n *\n * @export\n */\nfunction hexToRgb(value) {\n  // deprecated, use d3.color()\n  return d3_color.rgb(value);\n}\n/**\n * Accepts a color (string) and returns a inverted hex color (string)\n * http://stackoverflow.com/questions/9600295/automatically-change-text-color-to-assure-readability\n *\n * @export\n */\nfunction invertColor(value) {\n  const color = d3_color.rgb(value);\n  const {\n    r,\n    g,\n    b,\n    opacity\n  } = color;\n  if (opacity === 0) {\n    return color.toString();\n  }\n  const yiq = (r * 299 + g * 587 + b * 114) / 1000;\n  const depth = yiq >= 128 ? -0.8 : 0.8;\n  return shadeRGBColor(color, depth);\n}\n/**\n * Given a rgb, it will darken/lighten\n * http://stackoverflow.com/questions/5560248/programmatically-lighten-or-darken-a-hex-color-or-rgb-and-blend-colors\n *\n * @export\n * @param \\{ r, g, b }\n */\nfunction shadeRGBColor({\n  r,\n  g,\n  b\n}, percent) {\n  const t = percent < 0 ? 0 : 255;\n  const p = percent < 0 ? percent * -1 : percent;\n  r = Math.round((t - r) * p) + r;\n  g = Math.round((t - g) * p) + g;\n  b = Math.round((t - b) * p) + b;\n  return `rgb(${r}, ${g}, ${b})`;\n}\nclass CardSeriesComponent {\n  constructor() {\n    this.innerPadding = 15;\n    this.emptyColor = 'rgba(0, 0, 0, 0)';\n    this.animations = true;\n    this.select = new EventEmitter();\n  }\n  ngOnChanges(changes) {\n    this.update();\n  }\n  update() {\n    if (this.data.length > 2) {\n      const valueFormatting = this.valueFormatting || (card => card.value.toLocaleString());\n      const sortedLengths = this.data.map(d => {\n        const hasValue = d && d.data && typeof d.data.value !== 'undefined' && d.data.value !== null;\n        return hasValue ? valueFormatting({\n          data: d.data,\n          label: d ? d.data.name : '',\n          value: d && d.data ? d.data.value : ''\n        }).length : 0;\n      }).sort((a, b) => b - a);\n      const idx = Math.ceil(this.data.length / 2);\n      this.medianSize = sortedLengths[idx];\n    }\n    const cards = this.getCards();\n    this.cards = cards.filter(d => d.data.value !== null);\n    this.emptySlots = cards.filter(d => d.data.value === null);\n  }\n  getCards() {\n    const yPadding = typeof this.innerPadding === 'number' ? this.innerPadding : this.innerPadding[0] + this.innerPadding[2];\n    const xPadding = typeof this.innerPadding === 'number' ? this.innerPadding : this.innerPadding[1] + this.innerPadding[3];\n    return this.data.map((d, index) => {\n      let label = d.data.name;\n      if (label && label.constructor.name === 'Date') {\n        label = label.toLocaleDateString();\n      } else {\n        label = label ? label.toLocaleString() : label;\n      }\n      const value = d.data.value;\n      const valueColor = label ? this.colors.getColor(label) : this.emptyColor;\n      const color = this.cardColor || valueColor || '#000';\n      return {\n        x: d.x,\n        y: d.y,\n        width: d.width - xPadding,\n        height: d.height - yPadding,\n        color,\n        bandColor: this.bandColor || valueColor,\n        textColor: this.textColor || invertColor(color),\n        label,\n        data: d.data,\n        tooltipText: `${label}: ${value}`\n      };\n    });\n  }\n  trackBy(index, card) {\n    return card.label;\n  }\n  onClick(data) {\n    this.select.emit(data);\n  }\n}\nCardSeriesComponent.ɵfac = function CardSeriesComponent_Factory(t) {\n  return new (t || CardSeriesComponent)();\n};\nCardSeriesComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: CardSeriesComponent,\n  selectors: [[\"g\", \"ngx-charts-card-series\", \"\"]],\n  inputs: {\n    data: \"data\",\n    dims: \"dims\",\n    colors: \"colors\",\n    innerPadding: \"innerPadding\",\n    cardColor: \"cardColor\",\n    bandColor: \"bandColor\",\n    emptyColor: \"emptyColor\",\n    textColor: \"textColor\",\n    valueFormatting: \"valueFormatting\",\n    labelFormatting: \"labelFormatting\",\n    animations: \"animations\"\n  },\n  outputs: {\n    select: \"select\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c47,\n  decls: 2,\n  vars: 4,\n  consts: [[\"class\", \"card-empty\", \"rx\", \"3\", \"ry\", \"3\", 3, \"fill\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-card\", \"\", 3, \"x\", \"y\", \"width\", \"height\", \"color\", \"bandColor\", \"textColor\", \"data\", \"label\", \"medianSize\", \"valueFormatting\", \"labelFormatting\", \"animations\", \"select\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"rx\", \"3\", \"ry\", \"3\", 1, \"card-empty\"], [\"ngx-charts-card\", \"\", 3, \"select\", \"x\", \"y\", \"width\", \"height\", \"color\", \"bandColor\", \"textColor\", \"data\", \"label\", \"medianSize\", \"valueFormatting\", \"labelFormatting\", \"animations\"]],\n  template: function CardSeriesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, CardSeriesComponent__svg_rect_0_Template, 1, 6, \"rect\", 0)(1, CardSeriesComponent__svg_g_1_Template, 1, 13, \"g\", 1);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngForOf\", ctx.emptySlots)(\"ngForTrackBy\", ctx.trackBy);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngForOf\", ctx.cards)(\"ngForTrackBy\", ctx.trackBy);\n    }\n  },\n  dependencies: [CardComponent, i2.NgForOf],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CardSeriesComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-card-series]',\n      template: `\n    <svg:rect\n      *ngFor=\"let c of emptySlots; trackBy: trackBy\"\n      class=\"card-empty\"\n      [attr.x]=\"c.x\"\n      [attr.y]=\"c.y\"\n      [style.fill]=\"emptyColor\"\n      [attr.width]=\"c.width\"\n      [attr.height]=\"c.height\"\n      rx=\"3\"\n      ry=\"3\"\n    />\n    <svg:g\n      ngx-charts-card\n      *ngFor=\"let c of cards; trackBy: trackBy\"\n      [x]=\"c.x\"\n      [y]=\"c.y\"\n      [width]=\"c.width\"\n      [height]=\"c.height\"\n      [color]=\"c.color\"\n      [bandColor]=\"c.bandColor\"\n      [textColor]=\"c.textColor\"\n      [data]=\"c.data\"\n      [label]=\"c.label\"\n      [medianSize]=\"medianSize\"\n      [valueFormatting]=\"valueFormatting\"\n      [labelFormatting]=\"labelFormatting\"\n      [animations]=\"animations\"\n      (select)=\"onClick($event)\"\n    />\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, {\n    data: [{\n      type: Input\n    }],\n    dims: [{\n      type: Input\n    }],\n    colors: [{\n      type: Input\n    }],\n    innerPadding: [{\n      type: Input\n    }],\n    cardColor: [{\n      type: Input\n    }],\n    bandColor: [{\n      type: Input\n    }],\n    emptyColor: [{\n      type: Input\n    }],\n    textColor: [{\n      type: Input\n    }],\n    valueFormatting: [{\n      type: Input\n    }],\n    labelFormatting: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }]\n  });\n})();\nclass NumberCardComponent extends BaseChartComponent {\n  constructor() {\n    super(...arguments);\n    this.emptyColor = 'rgba(0, 0, 0, 0)';\n    this.innerPadding = 15;\n    this.margin = [10, 10, 10, 10];\n  }\n  get clickable() {\n    return !!this.select.observers.length;\n  }\n  update() {\n    super.update();\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin\n    });\n    this.formatDates();\n    this.domain = this.getDomain();\n    this.setColors();\n    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n    const size = gridSize(this.dims, this.results.length, 150);\n    const N = size[0] * size[1];\n    const data = this.results.slice();\n    while (data.length < N) {\n      data.push({\n        value: null\n      });\n    }\n    this.data = gridLayout(this.dims, data, 150, this.designatedTotal);\n  }\n  getDomain() {\n    return this.results.map(d => d.label);\n  }\n  onClick(data) {\n    this.select.emit(data);\n  }\n  setColors() {\n    this.colors = new ColorHelper(this.scheme, ScaleType.Ordinal, this.domain, this.customColors);\n  }\n}\nNumberCardComponent.ɵfac = /* @__PURE__ */(() => {\n  let ɵNumberCardComponent_BaseFactory;\n  return function NumberCardComponent_Factory(t) {\n    return (ɵNumberCardComponent_BaseFactory || (ɵNumberCardComponent_BaseFactory = i0.ɵɵgetInheritedFactory(NumberCardComponent)))(t || NumberCardComponent);\n  };\n})();\nNumberCardComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NumberCardComponent,\n  selectors: [[\"ngx-charts-number-card\"]],\n  inputs: {\n    cardColor: \"cardColor\",\n    bandColor: \"bandColor\",\n    emptyColor: \"emptyColor\",\n    innerPadding: \"innerPadding\",\n    textColor: \"textColor\",\n    valueFormatting: \"valueFormatting\",\n    labelFormatting: \"labelFormatting\",\n    designatedTotal: \"designatedTotal\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 3,\n  vars: 20,\n  consts: [[3, \"view\", \"showLegend\", \"animations\"], [1, \"number-card\", \"chart\"], [\"ngx-charts-card-series\", \"\", 3, \"select\", \"colors\", \"cardColor\", \"bandColor\", \"textColor\", \"emptyColor\", \"data\", \"dims\", \"innerPadding\", \"valueFormatting\", \"labelFormatting\", \"animations\"]],\n  template: function NumberCardComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"g\", 1)(2, \"g\", 2);\n      i0.ɵɵlistener(\"select\", function NumberCardComponent_Template_g_select_2_listener($event) {\n        return ctx.onClick($event);\n      });\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(17, _c24, ctx.width, ctx.height))(\"showLegend\", false)(\"animations\", ctx.animations);\n      i0.ɵɵadvance();\n      i0.ɵɵclassProp(\"clickable\", ctx.clickable);\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"colors\", ctx.colors)(\"cardColor\", ctx.cardColor)(\"bandColor\", ctx.bandColor)(\"textColor\", ctx.textColor)(\"emptyColor\", ctx.emptyColor)(\"data\", ctx.data)(\"dims\", ctx.dims)(\"innerPadding\", ctx.innerPadding)(\"valueFormatting\", ctx.valueFormatting)(\"labelFormatting\", ctx.labelFormatting)(\"animations\", ctx.animations);\n    }\n  },\n  dependencies: [ChartComponent, CardSeriesComponent],\n  styles: [_c25, \"ngx-charts-number-card .cell .trimmed-label{font-size:12px;pointer-events:none;overflow:hidden;text-align:left;line-height:1em}ngx-charts-number-card .cell .trimmed-label p{overflow:hidden;white-space:nowrap;text-overflow:ellipsis;width:100%;padding:0;margin:0}ngx-charts-number-card .cell .value-text{pointer-events:none}ngx-charts-number-card .number-card.clickable .cell .card,ngx-charts-number-card .number-card.clickable .cell .card-band{cursor:pointer}\\n\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NumberCardComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-number-card',\n      template: `\n    <ngx-charts-chart [view]=\"[width, height]\" [showLegend]=\"false\" [animations]=\"animations\">\n      <svg:g [attr.transform]=\"transform\" class=\"number-card chart\" [class.clickable]=\"clickable\">\n        <svg:g\n          ngx-charts-card-series\n          [colors]=\"colors\"\n          [cardColor]=\"cardColor\"\n          [bandColor]=\"bandColor\"\n          [textColor]=\"textColor\"\n          [emptyColor]=\"emptyColor\"\n          [data]=\"data\"\n          [dims]=\"dims\"\n          [innerPadding]=\"innerPadding\"\n          [valueFormatting]=\"valueFormatting\"\n          [labelFormatting]=\"labelFormatting\"\n          [animations]=\"animations\"\n          (select)=\"onClick($event)\"\n        />\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \"ngx-charts-number-card .cell .trimmed-label{font-size:12px;pointer-events:none;overflow:hidden;text-align:left;line-height:1em}ngx-charts-number-card .cell .trimmed-label p{overflow:hidden;white-space:nowrap;text-overflow:ellipsis;width:100%;padding:0;margin:0}ngx-charts-number-card .cell .value-text{pointer-events:none}ngx-charts-number-card .number-card.clickable .cell .card,ngx-charts-number-card .number-card.clickable .cell .card-band{cursor:pointer}\\n\"]\n    }]\n  }], null, {\n    cardColor: [{\n      type: Input\n    }],\n    bandColor: [{\n      type: Input\n    }],\n    emptyColor: [{\n      type: Input\n    }],\n    innerPadding: [{\n      type: Input\n    }],\n    textColor: [{\n      type: Input\n    }],\n    valueFormatting: [{\n      type: Input\n    }],\n    labelFormatting: [{\n      type: Input\n    }],\n    designatedTotal: [{\n      type: Input\n    }]\n  });\n})();\nclass NumberCardModule {}\nNumberCardModule.ɵfac = function NumberCardModule_Factory(t) {\n  return new (t || NumberCardModule)();\n};\nNumberCardModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: NumberCardModule\n});\nNumberCardModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[ChartCommonModule]]\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NumberCardModule, [{\n    type: NgModule,\n    args: [{\n      imports: [ChartCommonModule],\n      declarations: [CardComponent, CardSeriesComponent, NumberCardComponent],\n      exports: [CardComponent, CardSeriesComponent, NumberCardComponent]\n    }]\n  }], null, null);\n})();\nclass TreeMapCellComponent {\n  constructor(element) {\n    this.gradient = false;\n    this.animations = true;\n    this.select = new EventEmitter();\n    this.initialized = false;\n    this.orientation = BarOrientation;\n    this.element = element.nativeElement;\n  }\n  ngOnChanges() {\n    this.update();\n    this.valueFormatting = this.valueFormatting || (value => value.toLocaleString());\n    const labelFormatting = this.labelFormatting || (cell => escapeLabel(trimLabel(cell.label, 55)));\n    const cellData = {\n      data: this.data,\n      label: this.label,\n      value: this.value\n    };\n    this.formattedValue = this.valueFormatting(cellData.value);\n    this.formattedLabel = labelFormatting(cellData);\n    this.gradientId = 'grad' + id().toString();\n    this.gradientUrl = `url(#${this.gradientId})`;\n    this.gradientStops = this.getGradientStops();\n  }\n  update() {\n    if (this.initialized) {\n      this.animateToCurrentForm();\n    } else {\n      if (this.animations) {\n        this.loadAnimation();\n      }\n      this.initialized = true;\n    }\n  }\n  loadAnimation() {\n    const node = select(this.element).select('.cell');\n    node.attr('opacity', 0).attr('x', this.x).attr('y', this.y);\n    this.animateToCurrentForm();\n  }\n  getTextColor() {\n    return invertColor(this.fill);\n  }\n  animateToCurrentForm() {\n    const node = select(this.element).select('.cell');\n    if (this.animations) {\n      node.transition().duration(750).attr('opacity', 1).attr('x', this.x).attr('y', this.y).attr('width', this.width).attr('height', this.height);\n    } else {\n      node.attr('opacity', 1).attr('x', this.x).attr('y', this.y).attr('width', this.width).attr('height', this.height);\n    }\n  }\n  onClick() {\n    this.select.emit(this.data);\n  }\n  getGradientStops() {\n    return [{\n      offset: 0,\n      color: this.fill,\n      opacity: 0.3\n    }, {\n      offset: 100,\n      color: this.fill,\n      opacity: 1\n    }];\n  }\n}\nTreeMapCellComponent.ɵfac = function TreeMapCellComponent_Factory(t) {\n  return new (t || TreeMapCellComponent)(i0.ɵɵdirectiveInject(i0.ElementRef));\n};\nTreeMapCellComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: TreeMapCellComponent,\n  selectors: [[\"g\", \"ngx-charts-tree-map-cell\", \"\"]],\n  inputs: {\n    data: \"data\",\n    fill: \"fill\",\n    x: \"x\",\n    y: \"y\",\n    width: \"width\",\n    height: \"height\",\n    label: \"label\",\n    value: \"value\",\n    valueFormatting: \"valueFormatting\",\n    labelFormatting: \"labelFormatting\",\n    gradient: \"gradient\",\n    animations: \"animations\"\n  },\n  outputs: {\n    select: \"select\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c48,\n  decls: 4,\n  vars: 7,\n  consts: [[4, \"ngIf\"], [1, \"cell\", 3, \"click\"], [\"class\", \"treemap-label\", 3, \"pointer-events\", 4, \"ngIf\"], [\"ngx-charts-svg-linear-gradient\", \"\", 3, \"orientation\", \"name\", \"stops\"], [1, \"treemap-label\"], [1, \"treemap-label\", 3, \"innerHTML\"], [\"class\", \"treemap-val\", \"ngx-charts-count-up\", \"\", 3, \"countTo\", \"valueFormatting\", 4, \"ngIf\"], [\"class\", \"treemap-val\", 4, \"ngIf\"], [\"ngx-charts-count-up\", \"\", 1, \"treemap-val\", 3, \"countTo\", \"valueFormatting\"], [1, \"treemap-val\"]],\n  template: function TreeMapCellComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(0, \"g\");\n      i0.ɵɵtemplate(1, TreeMapCellComponent__svg_defs_1_Template, 2, 3, \"defs\", 0);\n      i0.ɵɵelementStart(2, \"rect\", 1);\n      i0.ɵɵlistener(\"click\", function TreeMapCellComponent_Template_rect_click_2_listener() {\n        return ctx.onClick();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(3, TreeMapCellComponent__svg_foreignObject_3_Template, 6, 15, \"foreignObject\", 2);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngIf\", ctx.gradient);\n      i0.ɵɵadvance();\n      i0.ɵɵattribute(\"fill\", ctx.gradient ? ctx.gradientUrl : ctx.fill)(\"width\", ctx.width)(\"height\", ctx.height)(\"x\", ctx.x)(\"y\", ctx.y);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngIf\", ctx.width >= 70 && ctx.height >= 35);\n    }\n  },\n  dependencies: [SvgLinearGradientComponent, CountUpDirective, i2.NgIf],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TreeMapCellComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-tree-map-cell]',\n      template: `\n    <svg:g>\n      <defs *ngIf=\"gradient\">\n        <svg:g\n          ngx-charts-svg-linear-gradient\n          [orientation]=\"orientation.Vertical\"\n          [name]=\"gradientId\"\n          [stops]=\"gradientStops\"\n        />\n      </defs>\n      <svg:rect\n        [attr.fill]=\"gradient ? gradientUrl : fill\"\n        [attr.width]=\"width\"\n        [attr.height]=\"height\"\n        [attr.x]=\"x\"\n        [attr.y]=\"y\"\n        class=\"cell\"\n        (click)=\"onClick()\"\n      />\n      <svg:foreignObject\n        *ngIf=\"width >= 70 && height >= 35\"\n        [attr.x]=\"x\"\n        [attr.y]=\"y\"\n        [attr.width]=\"width\"\n        [attr.height]=\"height\"\n        class=\"treemap-label\"\n        [style.pointer-events]=\"'none'\"\n      >\n        <xhtml:p [style.color]=\"getTextColor()\" [style.height]=\"height + 'px'\" [style.width]=\"width + 'px'\">\n          <xhtml:span class=\"treemap-label\" [innerHTML]=\"formattedLabel\"> </xhtml:span>\n          <xhtml:br />\n          <xhtml:span\n            *ngIf=\"animations\"\n            class=\"treemap-val\"\n            ngx-charts-count-up\n            [countTo]=\"value\"\n            [valueFormatting]=\"valueFormatting\"\n          >\n          </xhtml:span>\n          <xhtml:span *ngIf=\"!animations\" class=\"treemap-val\">\n            {{ formattedValue }}\n          </xhtml:span>\n        </xhtml:p>\n      </svg:foreignObject>\n    </svg:g>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }];\n  }, {\n    data: [{\n      type: Input\n    }],\n    fill: [{\n      type: Input\n    }],\n    x: [{\n      type: Input\n    }],\n    y: [{\n      type: Input\n    }],\n    width: [{\n      type: Input\n    }],\n    height: [{\n      type: Input\n    }],\n    label: [{\n      type: Input\n    }],\n    value: [{\n      type: Input\n    }],\n    valueFormatting: [{\n      type: Input\n    }],\n    labelFormatting: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }]\n  });\n})();\nclass TreeMapCellSeriesComponent {\n  constructor() {\n    this.gradient = false;\n    this.tooltipDisabled = false;\n    this.animations = true;\n    this.select = new EventEmitter();\n    this.styleTypes = StyleTypes;\n    this.placementTypes = PlacementTypes;\n  }\n  ngOnChanges(changes) {\n    this.cells = this.getCells();\n  }\n  getCells() {\n    return this.data.children.filter(d => {\n      return d.depth === 1;\n    }).map((d, index) => {\n      const label = d.id;\n      return {\n        data: d.data,\n        x: d.x0,\n        y: d.y0,\n        width: d.x1 - d.x0,\n        height: d.y1 - d.y0,\n        fill: this.colors.getColor(label),\n        label,\n        value: d.value\n      };\n    });\n  }\n  getTooltipText({\n    label,\n    value\n  }) {\n    return `\n      <span class=\"tooltip-label\">${escapeLabel(label)}</span>\n      <span class=\"tooltip-val\">${value.toLocaleString()}</span>\n    `;\n  }\n  onClick(data) {\n    this.select.emit(data);\n  }\n  trackBy(index, item) {\n    return item.label;\n  }\n}\nTreeMapCellSeriesComponent.ɵfac = function TreeMapCellSeriesComponent_Factory(t) {\n  return new (t || TreeMapCellSeriesComponent)();\n};\nTreeMapCellSeriesComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: TreeMapCellSeriesComponent,\n  selectors: [[\"g\", \"ngx-charts-tree-map-cell-series\", \"\"]],\n  inputs: {\n    data: \"data\",\n    dims: \"dims\",\n    colors: \"colors\",\n    valueFormatting: \"valueFormatting\",\n    labelFormatting: \"labelFormatting\",\n    gradient: \"gradient\",\n    tooltipDisabled: \"tooltipDisabled\",\n    tooltipTemplate: \"tooltipTemplate\",\n    animations: \"animations\"\n  },\n  outputs: {\n    select: \"select\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c49,\n  decls: 1,\n  vars: 2,\n  consts: [[\"ngx-charts-tree-map-cell\", \"\", \"ngx-tooltip\", \"\", 3, \"data\", \"x\", \"y\", \"width\", \"height\", \"fill\", \"label\", \"value\", \"valueFormatting\", \"labelFormatting\", \"gradient\", \"animations\", \"tooltipDisabled\", \"tooltipPlacement\", \"tooltipType\", \"tooltipTitle\", \"tooltipTemplate\", \"tooltipContext\", \"select\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-tree-map-cell\", \"\", \"ngx-tooltip\", \"\", 3, \"select\", \"data\", \"x\", \"y\", \"width\", \"height\", \"fill\", \"label\", \"value\", \"valueFormatting\", \"labelFormatting\", \"gradient\", \"animations\", \"tooltipDisabled\", \"tooltipPlacement\", \"tooltipType\", \"tooltipTitle\", \"tooltipTemplate\", \"tooltipContext\"]],\n  template: function TreeMapCellSeriesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, TreeMapCellSeriesComponent__svg_g_0_Template, 1, 18, \"g\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngForOf\", ctx.cells)(\"ngForTrackBy\", ctx.trackBy);\n    }\n  },\n  dependencies: [TreeMapCellComponent, i2.NgForOf, TooltipDirective],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TreeMapCellSeriesComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-tree-map-cell-series]',\n      template: `\n    <svg:g\n      ngx-charts-tree-map-cell\n      *ngFor=\"let c of cells; trackBy: trackBy\"\n      [data]=\"c.data\"\n      [x]=\"c.x\"\n      [y]=\"c.y\"\n      [width]=\"c.width\"\n      [height]=\"c.height\"\n      [fill]=\"c.fill\"\n      [label]=\"c.label\"\n      [value]=\"c.value\"\n      [valueFormatting]=\"valueFormatting\"\n      [labelFormatting]=\"labelFormatting\"\n      [gradient]=\"gradient\"\n      [animations]=\"animations\"\n      (select)=\"onClick($event)\"\n      ngx-tooltip\n      [tooltipDisabled]=\"tooltipDisabled\"\n      [tooltipPlacement]=\"placementTypes.Top\"\n      [tooltipType]=\"styleTypes.tooltip\"\n      [tooltipTitle]=\"tooltipTemplate ? undefined : getTooltipText(c)\"\n      [tooltipTemplate]=\"tooltipTemplate\"\n      [tooltipContext]=\"c.data\"\n    ></svg:g>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, {\n    data: [{\n      type: Input\n    }],\n    dims: [{\n      type: Input\n    }],\n    colors: [{\n      type: Input\n    }],\n    valueFormatting: [{\n      type: Input\n    }],\n    labelFormatting: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    tooltipTemplate: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }]\n  });\n})();\nclass TreeMapComponent extends BaseChartComponent {\n  constructor() {\n    super(...arguments);\n    this.tooltipDisabled = false;\n    this.gradient = false;\n    this.select = new EventEmitter();\n    this.margin = [10, 10, 10, 10];\n  }\n  update() {\n    super.update();\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin\n    });\n    this.domain = this.getDomain();\n    this.treemap = treemap().size([this.dims.width, this.dims.height]);\n    const rootNode = {\n      name: 'root',\n      value: 0,\n      isRoot: true\n    };\n    const root = stratify().id(d => {\n      let label = d.name;\n      if (label.constructor.name === 'Date') {\n        label = label.toLocaleDateString();\n      } else {\n        label = label.toLocaleString();\n      }\n      return label;\n    }).parentId(d => d.isRoot ? null : 'root')([rootNode, ...this.results]).sum(d => d.value);\n    this.data = this.treemap(root);\n    this.setColors();\n    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n  }\n  getDomain() {\n    return this.results.map(d => d.name);\n  }\n  onClick(data) {\n    this.select.emit(data);\n  }\n  setColors() {\n    this.colors = new ColorHelper(this.scheme, ScaleType.Ordinal, this.domain, this.customColors);\n  }\n}\nTreeMapComponent.ɵfac = /* @__PURE__ */(() => {\n  let ɵTreeMapComponent_BaseFactory;\n  return function TreeMapComponent_Factory(t) {\n    return (ɵTreeMapComponent_BaseFactory || (ɵTreeMapComponent_BaseFactory = i0.ɵɵgetInheritedFactory(TreeMapComponent)))(t || TreeMapComponent);\n  };\n})();\nTreeMapComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: TreeMapComponent,\n  selectors: [[\"ngx-charts-tree-map\"]],\n  contentQueries: function TreeMapComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n    }\n  },\n  inputs: {\n    results: \"results\",\n    tooltipDisabled: \"tooltipDisabled\",\n    valueFormatting: \"valueFormatting\",\n    labelFormatting: \"labelFormatting\",\n    gradient: \"gradient\"\n  },\n  outputs: {\n    select: \"select\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 3,\n  vars: 16,\n  consts: [[3, \"view\", \"showLegend\", \"animations\"], [1, \"tree-map\", \"chart\"], [\"ngx-charts-tree-map-cell-series\", \"\", 3, \"select\", \"colors\", \"data\", \"dims\", \"tooltipDisabled\", \"tooltipTemplate\", \"valueFormatting\", \"labelFormatting\", \"gradient\", \"animations\"]],\n  template: function TreeMapComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"g\", 1)(2, \"g\", 2);\n      i0.ɵɵlistener(\"select\", function TreeMapComponent_Template_g_select_2_listener($event) {\n        return ctx.onClick($event);\n      });\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(13, _c24, ctx.width, ctx.height))(\"showLegend\", false)(\"animations\", ctx.animations);\n      i0.ɵɵadvance();\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"colors\", ctx.colors)(\"data\", ctx.data)(\"dims\", ctx.dims)(\"tooltipDisabled\", ctx.tooltipDisabled)(\"tooltipTemplate\", ctx.tooltipTemplate)(\"valueFormatting\", ctx.valueFormatting)(\"labelFormatting\", ctx.labelFormatting)(\"gradient\", ctx.gradient)(\"animations\", ctx.animations);\n    }\n  },\n  dependencies: [ChartComponent, TreeMapCellSeriesComponent],\n  styles: [\".tree-map .treemap-val{font-size:1.3em;padding-top:5px;display:inline-block}.tree-map .treemap-label p{display:table-cell;text-align:center;line-height:1.2em;vertical-align:middle}\\n\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TreeMapComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-tree-map',\n      template: `\n    <ngx-charts-chart [view]=\"[width, height]\" [showLegend]=\"false\" [animations]=\"animations\">\n      <svg:g [attr.transform]=\"transform\" class=\"tree-map chart\">\n        <svg:g\n          ngx-charts-tree-map-cell-series\n          [colors]=\"colors\"\n          [data]=\"data\"\n          [dims]=\"dims\"\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [valueFormatting]=\"valueFormatting\"\n          [labelFormatting]=\"labelFormatting\"\n          [gradient]=\"gradient\"\n          [animations]=\"animations\"\n          (select)=\"onClick($event)\"\n        />\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\".tree-map .treemap-val{font-size:1.3em;padding-top:5px;display:inline-block}.tree-map .treemap-label p{display:table-cell;text-align:center;line-height:1.2em;vertical-align:middle}\\n\"]\n    }]\n  }], null, {\n    results: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    valueFormatting: [{\n      type: Input\n    }],\n    labelFormatting: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }],\n    tooltipTemplate: [{\n      type: ContentChild,\n      args: ['tooltipTemplate']\n    }]\n  });\n})();\nclass TreeMapModule {}\nTreeMapModule.ɵfac = function TreeMapModule_Factory(t) {\n  return new (t || TreeMapModule)();\n};\nTreeMapModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: TreeMapModule\n});\nTreeMapModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[ChartCommonModule]]\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TreeMapModule, [{\n    type: NgModule,\n    args: [{\n      imports: [ChartCommonModule],\n      declarations: [TreeMapCellComponent, TreeMapCellSeriesComponent, TreeMapComponent],\n      exports: [TreeMapCellComponent, TreeMapCellSeriesComponent, TreeMapComponent]\n    }]\n  }], null, null);\n})();\nvar ElementType;\n(function (ElementType) {\n  ElementType[\"Value\"] = \"value\";\n  ElementType[\"Units\"] = \"units\";\n})(ElementType || (ElementType = {}));\nclass LinearGaugeComponent extends BaseChartComponent {\n  constructor() {\n    super(...arguments);\n    this.min = 0;\n    this.max = 100;\n    this.value = 0;\n    this.margin = [10, 20, 10, 20];\n    this.valueResizeScale = 1;\n    this.unitsResizeScale = 1;\n    this.valueTextTransform = '';\n    this.valueTranslate = '';\n    this.unitsTextTransform = '';\n    this.unitsTranslate = '';\n    this.barOrientation = BarOrientation;\n  }\n  ngAfterViewInit() {\n    super.ngAfterViewInit();\n    setTimeout(() => {\n      this.scaleText(ElementType.Value);\n      this.scaleText(ElementType.Units);\n    });\n  }\n  update() {\n    super.update();\n    this.hasPreviousValue = this.previousValue !== undefined;\n    this.max = Math.max(this.max, this.value);\n    this.min = Math.min(this.min, this.value);\n    if (this.hasPreviousValue) {\n      this.max = Math.max(this.max, this.previousValue);\n      this.min = Math.min(this.min, this.previousValue);\n    }\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin\n    });\n    this.valueDomain = this.getValueDomain();\n    this.valueScale = this.getValueScale();\n    this.displayValue = this.getDisplayValue();\n    this.setColors();\n    const xOffset = this.margin[3] + this.dims.width / 2;\n    const yOffset = this.margin[0] + this.dims.height / 2;\n    this.transform = `translate(${xOffset}, ${yOffset})`;\n    this.transformLine = `translate(${this.margin[3] + this.valueScale(this.previousValue)}, ${yOffset})`;\n    this.valueTranslate = `translate(0, -15)`;\n    this.unitsTranslate = `translate(0, 15)`;\n    if (isPlatformServer(this.platformId)) {\n      this.scaleTextSSR('value');\n      this.scaleTextSSR('units');\n    } else {\n      setTimeout(() => this.scaleText(ElementType.Value), 50);\n      setTimeout(() => this.scaleText(ElementType.Units), 50);\n    }\n  }\n  getValueDomain() {\n    return [this.min, this.max];\n  }\n  getValueScale() {\n    return scaleLinear().range([0, this.dims.width]).domain(this.valueDomain);\n  }\n  getDisplayValue() {\n    if (this.valueFormatting) {\n      return this.valueFormatting(this.value);\n    }\n    return this.value.toLocaleString();\n  }\n  scaleText(element, repeat = true) {\n    let el;\n    let resizeScale;\n    if (element === ElementType.Value) {\n      el = this.valueTextEl;\n      resizeScale = this.valueResizeScale;\n    } else {\n      el = this.unitsTextEl;\n      resizeScale = this.unitsResizeScale;\n    }\n    const {\n      width,\n      height\n    } = el.nativeElement.getBoundingClientRect();\n    if (width === 0 || height === 0) return;\n    const oldScale = resizeScale;\n    const availableWidth = this.dims.width;\n    const availableHeight = Math.max(this.dims.height / 2 - 15, 0);\n    const resizeScaleWidth = Math.floor(availableWidth / (width / resizeScale) * 100) / 100;\n    const resizeScaleHeight = Math.floor(availableHeight / (height / resizeScale) * 100) / 100;\n    resizeScale = Math.min(resizeScaleHeight, resizeScaleWidth);\n    if (resizeScale !== oldScale) {\n      if (element === ElementType.Value) {\n        this.valueResizeScale = resizeScale;\n        this.valueTextTransform = `scale(${resizeScale}, ${resizeScale})`;\n      } else {\n        this.unitsResizeScale = resizeScale;\n        this.unitsTextTransform = `scale(${resizeScale}, ${resizeScale})`;\n      }\n      this.cd.markForCheck();\n      if (repeat && isPlatformBrowser(this.platformId)) {\n        setTimeout(() => {\n          this.scaleText(element, false);\n        }, 50);\n      }\n    }\n  }\n  scaleTextSSR(element) {\n    let resizeScale = 1;\n    const value = element === 'value' ? this.displayValue : this.units;\n    const width = calculateTextWidth(VERDANA_FONT_WIDTHS_16_PX, value, 10);\n    const height = 25;\n    const availableWidth = this.dims.width;\n    const availableHeight = Math.max(this.dims.height / 2 - 15, 0);\n    const resizeScaleWidth = Math.floor(availableWidth / (width / resizeScale) * 100) / 100;\n    const resizeScaleHeight = Math.floor(availableHeight / (height / resizeScale) * 100) / 100;\n    resizeScale = Math.min(resizeScaleHeight, resizeScaleWidth);\n    if (element === 'value') {\n      this.valueResizeScale = resizeScale;\n      this.valueTextTransform = `scale(${resizeScale}, ${resizeScale})`;\n    } else {\n      this.unitsResizeScale = resizeScale;\n      this.unitsTextTransform = `scale(${resizeScale}, ${resizeScale})`;\n    }\n    this.cd.markForCheck();\n  }\n  onClick() {\n    this.select.emit({\n      name: 'Value',\n      value: this.value\n    });\n  }\n  setColors() {\n    this.colors = new ColorHelper(this.scheme, ScaleType.Ordinal, [this.value], this.customColors);\n  }\n}\nLinearGaugeComponent.ɵfac = /* @__PURE__ */(() => {\n  let ɵLinearGaugeComponent_BaseFactory;\n  return function LinearGaugeComponent_Factory(t) {\n    return (ɵLinearGaugeComponent_BaseFactory || (ɵLinearGaugeComponent_BaseFactory = i0.ɵɵgetInheritedFactory(LinearGaugeComponent)))(t || LinearGaugeComponent);\n  };\n})();\nLinearGaugeComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: LinearGaugeComponent,\n  selectors: [[\"ngx-charts-linear-gauge\"]],\n  viewQuery: function LinearGaugeComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c50, 5);\n      i0.ɵɵviewQuery(_c51, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.valueTextEl = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.unitsTextEl = _t.first);\n    }\n  },\n  inputs: {\n    min: \"min\",\n    max: \"max\",\n    value: \"value\",\n    units: \"units\",\n    previousValue: \"previousValue\",\n    valueFormatting: \"valueFormatting\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 15,\n  vars: 38,\n  consts: [[\"valueTextEl\", \"\"], [\"unitsTextEl\", \"\"], [3, \"click\", \"view\", \"showLegend\", \"animations\"], [1, \"linear-gauge\", \"chart\"], [\"ngx-charts-bar\", \"\", 1, \"background-bar\", 3, \"width\", \"height\", \"x\", \"y\", \"data\", \"orientation\", \"roundEdges\", \"animations\"], [\"ngx-charts-bar\", \"\", 3, \"width\", \"height\", \"x\", \"y\", \"fill\", \"data\", \"orientation\", \"roundEdges\", \"animations\"], [\"x1\", \"0\", \"y1\", \"5\", \"x2\", \"0\", \"y2\", \"15\", 4, \"ngIf\"], [\"x1\", \"0\", \"y1\", \"-5\", \"x2\", \"0\", \"y2\", \"-15\", 4, \"ngIf\"], [\"alignment-baseline\", \"after-edge\", 1, \"value\"], [\"alignment-baseline\", \"before-edge\", 1, \"units\"], [\"x1\", \"0\", \"y1\", \"5\", \"x2\", \"0\", \"y2\", \"15\"], [\"x1\", \"0\", \"y1\", \"-5\", \"x2\", \"0\", \"y2\", \"-15\"]],\n  template: function LinearGaugeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r1 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"ngx-charts-chart\", 2);\n      i0.ɵɵlistener(\"click\", function LinearGaugeComponent_Template_ngx_charts_chart_click_0_listener() {\n        i0.ɵɵrestoreView(_r1);\n        return i0.ɵɵresetView(ctx.onClick());\n      });\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"g\", 3);\n      i0.ɵɵelement(2, \"g\", 4)(3, \"g\", 5);\n      i0.ɵɵtemplate(4, LinearGaugeComponent__svg_line_4_Template, 1, 2, \"line\", 6)(5, LinearGaugeComponent__svg_line_5_Template, 1, 2, \"line\", 7);\n      i0.ɵɵelementStart(6, \"g\")(7, \"g\")(8, \"text\", 8, 0);\n      i0.ɵɵtext(10);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(11, \"g\")(12, \"text\", 9, 1);\n      i0.ɵɵtext(14);\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(33, _c24, ctx.width, ctx.height))(\"showLegend\", false)(\"animations\", ctx.animations);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"width\", ctx.dims.width)(\"height\", 3)(\"x\", ctx.margin[3])(\"y\", ctx.dims.height / 2 + ctx.margin[0] - 2)(\"data\", i0.ɵɵpureFunction0(36, _c52))(\"orientation\", ctx.barOrientation.Horizontal)(\"roundEdges\", true)(\"animations\", ctx.animations);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"width\", ctx.valueScale(ctx.value))(\"height\", 3)(\"x\", ctx.margin[3])(\"y\", ctx.dims.height / 2 + ctx.margin[0] - 2)(\"fill\", ctx.colors.getColor(ctx.units))(\"data\", i0.ɵɵpureFunction0(37, _c52))(\"orientation\", ctx.barOrientation.Horizontal)(\"roundEdges\", true)(\"animations\", ctx.animations);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngIf\", ctx.hasPreviousValue);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngIf\", ctx.hasPreviousValue);\n      i0.ɵɵadvance();\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance();\n      i0.ɵɵattribute(\"transform\", ctx.valueTranslate);\n      i0.ɵɵadvance();\n      i0.ɵɵstyleProp(\"text-anchor\", \"middle\");\n      i0.ɵɵattribute(\"transform\", ctx.valueTextTransform);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\" \", ctx.displayValue, \" \");\n      i0.ɵɵadvance();\n      i0.ɵɵattribute(\"transform\", ctx.unitsTranslate);\n      i0.ɵɵadvance();\n      i0.ɵɵstyleProp(\"text-anchor\", \"middle\");\n      i0.ɵɵattribute(\"transform\", ctx.unitsTextTransform);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\" \", ctx.units, \" \");\n    }\n  },\n  dependencies: [ChartComponent, BarComponent, i2.NgIf],\n  styles: [_c25, \".linear-gauge{cursor:pointer}.linear-gauge .background-bar path{fill:#0000000d}.linear-gauge .units{fill:#666}\\n\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LinearGaugeComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-linear-gauge',\n      template: `\n    <ngx-charts-chart [view]=\"[width, height]\" [showLegend]=\"false\" [animations]=\"animations\" (click)=\"onClick()\">\n      <svg:g class=\"linear-gauge chart\">\n        <svg:g\n          ngx-charts-bar\n          class=\"background-bar\"\n          [width]=\"dims.width\"\n          [height]=\"3\"\n          [x]=\"margin[3]\"\n          [y]=\"dims.height / 2 + margin[0] - 2\"\n          [data]=\"{}\"\n          [orientation]=\"barOrientation.Horizontal\"\n          [roundEdges]=\"true\"\n          [animations]=\"animations\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-bar\n          [width]=\"valueScale(value)\"\n          [height]=\"3\"\n          [x]=\"margin[3]\"\n          [y]=\"dims.height / 2 + margin[0] - 2\"\n          [fill]=\"colors.getColor(units)\"\n          [data]=\"{}\"\n          [orientation]=\"barOrientation.Horizontal\"\n          [roundEdges]=\"true\"\n          [animations]=\"animations\"\n        ></svg:g>\n\n        <svg:line\n          *ngIf=\"hasPreviousValue\"\n          [attr.transform]=\"transformLine\"\n          x1=\"0\"\n          y1=\"5\"\n          x2=\"0\"\n          y2=\"15\"\n          [attr.stroke]=\"colors.getColor(units)\"\n        />\n\n        <svg:line\n          *ngIf=\"hasPreviousValue\"\n          [attr.transform]=\"transformLine\"\n          x1=\"0\"\n          y1=\"-5\"\n          x2=\"0\"\n          y2=\"-15\"\n          [attr.stroke]=\"colors.getColor(units)\"\n        />\n\n        <svg:g [attr.transform]=\"transform\">\n          <svg:g [attr.transform]=\"valueTranslate\">\n            <svg:text\n              #valueTextEl\n              class=\"value\"\n              [style.textAnchor]=\"'middle'\"\n              [attr.transform]=\"valueTextTransform\"\n              alignment-baseline=\"after-edge\"\n            >\n              {{ displayValue }}\n            </svg:text>\n          </svg:g>\n\n          <svg:g [attr.transform]=\"unitsTranslate\">\n            <svg:text\n              #unitsTextEl\n              class=\"units\"\n              [style.textAnchor]=\"'middle'\"\n              [attr.transform]=\"unitsTextTransform\"\n              alignment-baseline=\"before-edge\"\n            >\n              {{ units }}\n            </svg:text>\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \".linear-gauge{cursor:pointer}.linear-gauge .background-bar path{fill:#0000000d}.linear-gauge .units{fill:#666}\\n\"]\n    }]\n  }], null, {\n    min: [{\n      type: Input\n    }],\n    max: [{\n      type: Input\n    }],\n    value: [{\n      type: Input\n    }],\n    units: [{\n      type: Input\n    }],\n    previousValue: [{\n      type: Input\n    }],\n    valueFormatting: [{\n      type: Input\n    }],\n    valueTextEl: [{\n      type: ViewChild,\n      args: ['valueTextEl']\n    }],\n    unitsTextEl: [{\n      type: ViewChild,\n      args: ['unitsTextEl']\n    }]\n  });\n})();\nclass GaugeArcComponent {\n  constructor() {\n    this.isActive = false;\n    this.tooltipDisabled = false;\n    this.animations = true;\n    this.select = new EventEmitter();\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.placementTypes = PlacementTypes;\n    this.styleTypes = StyleTypes;\n  }\n  tooltipText(arc) {\n    const label = formatLabel(arc.data.name);\n    let val;\n    if (this.valueFormatting) {\n      val = this.valueFormatting(arc.data.value);\n    } else {\n      val = formatLabel(arc.data.value);\n    }\n    return `\n      <span class=\"tooltip-label\">${escapeLabel(label)}</span>\n      <span class=\"tooltip-val\">${val}</span>\n    `;\n  }\n}\nGaugeArcComponent.ɵfac = function GaugeArcComponent_Factory(t) {\n  return new (t || GaugeArcComponent)();\n};\nGaugeArcComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: GaugeArcComponent,\n  selectors: [[\"g\", \"ngx-charts-gauge-arc\", \"\"]],\n  inputs: {\n    backgroundArc: \"backgroundArc\",\n    valueArc: \"valueArc\",\n    cornerRadius: \"cornerRadius\",\n    colors: \"colors\",\n    isActive: \"isActive\",\n    tooltipDisabled: \"tooltipDisabled\",\n    valueFormatting: \"valueFormatting\",\n    tooltipTemplate: \"tooltipTemplate\",\n    animations: \"animations\"\n  },\n  outputs: {\n    select: \"select\",\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  attrs: _c53,\n  decls: 2,\n  vars: 23,\n  consts: [[\"ngx-charts-pie-arc\", \"\", 1, \"background-arc\", 3, \"startAngle\", \"endAngle\", \"innerRadius\", \"outerRadius\", \"cornerRadius\", \"data\", \"animate\", \"pointerEvents\"], [\"ngx-charts-pie-arc\", \"\", \"ngx-tooltip\", \"\", 3, \"select\", \"activate\", \"deactivate\", \"startAngle\", \"endAngle\", \"innerRadius\", \"outerRadius\", \"cornerRadius\", \"fill\", \"data\", \"animate\", \"isActive\", \"tooltipDisabled\", \"tooltipPlacement\", \"tooltipType\", \"tooltipTitle\", \"tooltipTemplate\", \"tooltipContext\"]],\n  template: function GaugeArcComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelement(0, \"g\", 0);\n      i0.ɵɵelementStart(1, \"g\", 1);\n      i0.ɵɵlistener(\"select\", function GaugeArcComponent_Template_g_select_1_listener($event) {\n        return ctx.select.emit($event);\n      })(\"activate\", function GaugeArcComponent_Template_g_activate_1_listener($event) {\n        return ctx.activate.emit($event);\n      })(\"deactivate\", function GaugeArcComponent_Template_g_deactivate_1_listener($event) {\n        return ctx.deactivate.emit($event);\n      });\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"startAngle\", 0)(\"endAngle\", ctx.backgroundArc.endAngle)(\"innerRadius\", ctx.backgroundArc.innerRadius)(\"outerRadius\", ctx.backgroundArc.outerRadius)(\"cornerRadius\", ctx.cornerRadius)(\"data\", ctx.backgroundArc.data)(\"animate\", false)(\"pointerEvents\", false);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"startAngle\", 0)(\"endAngle\", ctx.valueArc.endAngle)(\"innerRadius\", ctx.valueArc.innerRadius)(\"outerRadius\", ctx.valueArc.outerRadius)(\"cornerRadius\", ctx.cornerRadius)(\"fill\", ctx.colors.getColor(ctx.valueArc.data.name))(\"data\", ctx.valueArc.data)(\"animate\", ctx.animations)(\"isActive\", ctx.isActive)(\"tooltipDisabled\", ctx.tooltipDisabled)(\"tooltipPlacement\", ctx.placementTypes.Top)(\"tooltipType\", ctx.styleTypes.tooltip)(\"tooltipTitle\", ctx.tooltipTemplate ? undefined : ctx.tooltipText(ctx.valueArc))(\"tooltipTemplate\", ctx.tooltipTemplate)(\"tooltipContext\", ctx.valueArc.data);\n    }\n  },\n  dependencies: [PieArcComponent, TooltipDirective],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GaugeArcComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-gauge-arc]',\n      template: `\n    <svg:g\n      ngx-charts-pie-arc\n      class=\"background-arc\"\n      [startAngle]=\"0\"\n      [endAngle]=\"backgroundArc.endAngle\"\n      [innerRadius]=\"backgroundArc.innerRadius\"\n      [outerRadius]=\"backgroundArc.outerRadius\"\n      [cornerRadius]=\"cornerRadius\"\n      [data]=\"backgroundArc.data\"\n      [animate]=\"false\"\n      [pointerEvents]=\"false\"\n    ></svg:g>\n    <svg:g\n      ngx-charts-pie-arc\n      [startAngle]=\"0\"\n      [endAngle]=\"valueArc.endAngle\"\n      [innerRadius]=\"valueArc.innerRadius\"\n      [outerRadius]=\"valueArc.outerRadius\"\n      [cornerRadius]=\"cornerRadius\"\n      [fill]=\"colors.getColor(valueArc.data.name)\"\n      [data]=\"valueArc.data\"\n      [animate]=\"animations\"\n      [isActive]=\"isActive\"\n      (select)=\"select.emit($event)\"\n      (activate)=\"activate.emit($event)\"\n      (deactivate)=\"deactivate.emit($event)\"\n      ngx-tooltip\n      [tooltipDisabled]=\"tooltipDisabled\"\n      [tooltipPlacement]=\"placementTypes.Top\"\n      [tooltipType]=\"styleTypes.tooltip\"\n      [tooltipTitle]=\"tooltipTemplate ? undefined : tooltipText(valueArc)\"\n      [tooltipTemplate]=\"tooltipTemplate\"\n      [tooltipContext]=\"valueArc.data\"\n    ></svg:g>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, {\n    backgroundArc: [{\n      type: Input\n    }],\n    valueArc: [{\n      type: Input\n    }],\n    cornerRadius: [{\n      type: Input\n    }],\n    colors: [{\n      type: Input\n    }],\n    isActive: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    valueFormatting: [{\n      type: Input\n    }],\n    tooltipTemplate: [{\n      type: Input\n    }],\n    animations: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }]\n  });\n})();\nclass GaugeAxisComponent {\n  constructor() {\n    this.rotate = '';\n  }\n  ngOnChanges(changes) {\n    this.update();\n  }\n  update() {\n    this.rotationAngle = -90 + this.startAngle;\n    this.rotate = `rotate(${this.rotationAngle})`;\n    this.ticks = this.getTicks();\n  }\n  getTicks() {\n    const bigTickSegment = this.angleSpan / this.bigSegments;\n    const smallTickSegment = bigTickSegment / this.smallSegments;\n    const tickLength = 20;\n    const ticks = {\n      big: [],\n      small: []\n    };\n    const startDistance = this.radius + 10;\n    const textDist = startDistance + tickLength + 10;\n    for (let i = 0; i <= this.bigSegments; i++) {\n      const angleDeg = i * bigTickSegment;\n      const angle = angleDeg * Math.PI / 180;\n      const textAnchor = this.getTextAnchor(angleDeg);\n      let skip = false;\n      if (i === 0 && this.angleSpan === 360) {\n        skip = true;\n      }\n      if (!skip) {\n        let text = Number.parseFloat(this.valueScale.invert(angleDeg).toString()).toLocaleString();\n        if (this.tickFormatting) {\n          text = this.tickFormatting(text);\n        }\n        ticks.big.push({\n          line: this.getTickPath(startDistance, tickLength, angle),\n          textAnchor,\n          text,\n          textTransform: `\n            translate(${textDist * Math.cos(angle)}, ${textDist * Math.sin(angle)}) rotate(${-this.rotationAngle})\n          `\n        });\n      }\n      if (i === this.bigSegments) {\n        continue;\n      }\n      for (let j = 1; j <= this.smallSegments; j++) {\n        const smallAngleDeg = angleDeg + j * smallTickSegment;\n        const smallAngle = smallAngleDeg * Math.PI / 180;\n        ticks.small.push({\n          line: this.getTickPath(startDistance, tickLength / 2, smallAngle)\n        });\n      }\n    }\n    return ticks;\n  }\n  getTextAnchor(angle) {\n    // [0, 45] = 'middle';\n    // [46, 135] = 'start';\n    // [136, 225] = 'middle';\n    // [226, 315] = 'end';\n    angle = (this.startAngle + angle) % 360;\n    let textAnchor = TextAnchor.Middle;\n    if (angle > 45 && angle <= 135) {\n      textAnchor = TextAnchor.Start;\n    } else if (angle > 225 && angle <= 315) {\n      textAnchor = TextAnchor.End;\n    }\n    return textAnchor;\n  }\n  getTickPath(startDistance, tickLength, angle) {\n    const y1 = startDistance * Math.sin(angle);\n    const y2 = (startDistance + tickLength) * Math.sin(angle);\n    const x1 = startDistance * Math.cos(angle);\n    const x2 = (startDistance + tickLength) * Math.cos(angle);\n    const points = [{\n      x: x1,\n      y: y1\n    }, {\n      x: x2,\n      y: y2\n    }];\n    const lineGenerator = line().x(d => d.x).y(d => d.y);\n    return lineGenerator(points);\n  }\n}\nGaugeAxisComponent.ɵfac = function GaugeAxisComponent_Factory(t) {\n  return new (t || GaugeAxisComponent)();\n};\nGaugeAxisComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: GaugeAxisComponent,\n  selectors: [[\"g\", \"ngx-charts-gauge-axis\", \"\"]],\n  inputs: {\n    bigSegments: \"bigSegments\",\n    smallSegments: \"smallSegments\",\n    min: \"min\",\n    max: \"max\",\n    angleSpan: \"angleSpan\",\n    startAngle: \"startAngle\",\n    radius: \"radius\",\n    valueScale: \"valueScale\",\n    tickFormatting: \"tickFormatting\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c54,\n  decls: 4,\n  vars: 4,\n  consts: [[\"class\", \"gauge-tick gauge-tick-large\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"gauge-tick gauge-tick-small\", 4, \"ngFor\", \"ngForOf\"], [1, \"gauge-tick\", \"gauge-tick-large\"], [\"alignment-baseline\", \"central\"], [1, \"gauge-tick\", \"gauge-tick-small\"]],\n  template: function GaugeAxisComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(0, \"g\");\n      i0.ɵɵtemplate(1, GaugeAxisComponent__svg_g_1_Template, 2, 1, \"g\", 0)(2, GaugeAxisComponent__svg_g_2_Template, 3, 4, \"g\", 0)(3, GaugeAxisComponent__svg_g_3_Template, 2, 1, \"g\", 1);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵattribute(\"transform\", ctx.rotate);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngForOf\", ctx.ticks.big);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngForOf\", ctx.ticks.big);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngForOf\", ctx.ticks.small);\n    }\n  },\n  dependencies: [i2.NgForOf],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GaugeAxisComponent, [{\n    type: Component,\n    args: [{\n      selector: 'g[ngx-charts-gauge-axis]',\n      template: `\n    <svg:g [attr.transform]=\"rotate\">\n      <svg:g *ngFor=\"let tick of ticks.big\" class=\"gauge-tick gauge-tick-large\">\n        <svg:path [attr.d]=\"tick.line\" />\n      </svg:g>\n      <svg:g *ngFor=\"let tick of ticks.big\" class=\"gauge-tick gauge-tick-large\">\n        <svg:text\n          [style.textAnchor]=\"tick.textAnchor\"\n          [attr.transform]=\"tick.textTransform\"\n          alignment-baseline=\"central\"\n        >\n          {{ tick.text }}\n        </svg:text>\n      </svg:g>\n      <svg:g *ngFor=\"let tick of ticks.small\" class=\"gauge-tick gauge-tick-small\">\n        <svg:path [attr.d]=\"tick.line\" />\n      </svg:g>\n    </svg:g>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, {\n    bigSegments: [{\n      type: Input\n    }],\n    smallSegments: [{\n      type: Input\n    }],\n    min: [{\n      type: Input\n    }],\n    max: [{\n      type: Input\n    }],\n    angleSpan: [{\n      type: Input\n    }],\n    startAngle: [{\n      type: Input\n    }],\n    radius: [{\n      type: Input\n    }],\n    valueScale: [{\n      type: Input\n    }],\n    tickFormatting: [{\n      type: Input\n    }]\n  });\n})();\nclass GaugeComponent extends BaseChartComponent {\n  constructor() {\n    super(...arguments);\n    this.legend = false;\n    this.legendTitle = 'Legend';\n    this.legendPosition = LegendPosition.Right;\n    this.min = 0;\n    this.max = 100;\n    this.bigSegments = 10;\n    this.smallSegments = 5;\n    this.showAxis = true;\n    this.startAngle = -120;\n    this.angleSpan = 240;\n    this.activeEntries = [];\n    this.tooltipDisabled = false;\n    this.showText = true;\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.resizeScale = 1;\n    this.rotation = '';\n    this.textTransform = 'scale(1, 1)';\n    this.cornerRadius = 10;\n  }\n  ngAfterViewInit() {\n    super.ngAfterViewInit();\n    setTimeout(() => this.scaleText());\n  }\n  update() {\n    super.update();\n    if (!this.showAxis) {\n      if (!this.margin) {\n        this.margin = [10, 20, 10, 20];\n      }\n    } else {\n      if (!this.margin) {\n        this.margin = [60, 100, 60, 100];\n      }\n    }\n    // make the starting angle positive\n    if (this.startAngle < 0) {\n      this.startAngle = this.startAngle % 360 + 360;\n    }\n    this.angleSpan = Math.min(this.angleSpan, 360);\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showLegend: this.legend,\n      legendPosition: this.legendPosition\n    });\n    this.domain = this.getDomain();\n    this.valueDomain = this.getValueDomain();\n    this.valueScale = this.getValueScale();\n    this.displayValue = this.getDisplayValue();\n    this.outerRadius = Math.min(this.dims.width, this.dims.height) / 2;\n    this.arcs = this.getArcs();\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n    const xOffset = this.margin[3] + this.dims.width / 2;\n    const yOffset = this.margin[0] + this.dims.height / 2;\n    this.transform = `translate(${xOffset}, ${yOffset})`;\n    this.rotation = `rotate(${this.startAngle})`;\n    setTimeout(() => this.scaleText(), 50);\n  }\n  getArcs() {\n    const arcs = [];\n    const availableRadius = this.outerRadius * 0.7;\n    const radiusPerArc = Math.min(availableRadius / this.results.length, 10);\n    const arcWidth = radiusPerArc * 0.7;\n    this.textRadius = this.outerRadius - this.results.length * radiusPerArc;\n    this.cornerRadius = Math.floor(arcWidth / 2);\n    let i = 0;\n    for (const d of this.results) {\n      const outerRadius = this.outerRadius - i * radiusPerArc;\n      const innerRadius = outerRadius - arcWidth;\n      const backgroundArc = {\n        endAngle: this.angleSpan * Math.PI / 180,\n        innerRadius,\n        outerRadius,\n        data: {\n          value: this.max,\n          name: d.name\n        }\n      };\n      const valueArc = {\n        endAngle: Math.min(this.valueScale(d.value), this.angleSpan) * Math.PI / 180,\n        innerRadius,\n        outerRadius,\n        data: {\n          value: d.value,\n          name: d.name\n        }\n      };\n      const arc = {\n        backgroundArc,\n        valueArc\n      };\n      arcs.push(arc);\n      i++;\n    }\n    return arcs;\n  }\n  getDomain() {\n    return this.results.map(d => d.name);\n  }\n  getValueDomain() {\n    const values = this.results.map(d => d.value);\n    const dataMin = Math.min(...values);\n    const dataMax = Math.max(...values);\n    if (this.min !== undefined) {\n      this.min = Math.min(this.min, dataMin);\n    } else {\n      this.min = dataMin;\n    }\n    if (this.max !== undefined) {\n      this.max = Math.max(this.max, dataMax);\n    } else {\n      this.max = dataMax;\n    }\n    return [this.min, this.max];\n  }\n  getValueScale() {\n    return scaleLinear().range([0, this.angleSpan]).nice().domain(this.valueDomain);\n  }\n  getDisplayValue() {\n    const value = this.results.map(d => d.value).reduce((a, b) => a + b, 0);\n    if (this.textValue && 0 !== this.textValue.length) {\n      return this.textValue.toLocaleString();\n    }\n    if (this.valueFormatting) {\n      return this.valueFormatting(value);\n    }\n    return value.toLocaleString();\n  }\n  scaleText(repeat = true) {\n    if (!this.showText) {\n      return;\n    }\n    const {\n      width\n    } = this.textEl.nativeElement.getBoundingClientRect();\n    const oldScale = this.resizeScale;\n    if (width === 0) {\n      this.resizeScale = 1;\n    } else {\n      const availableSpace = this.textRadius;\n      this.resizeScale = Math.floor(availableSpace / (width / this.resizeScale) * 100) / 100;\n    }\n    if (this.resizeScale !== oldScale) {\n      this.textTransform = `scale(${this.resizeScale}, ${this.resizeScale})`;\n      this.cd.markForCheck();\n      if (repeat) {\n        setTimeout(() => this.scaleText(false), 50);\n      }\n    }\n  }\n  onClick(data) {\n    this.select.emit(data);\n  }\n  getLegendOptions() {\n    return {\n      scaleType: ScaleType.Ordinal,\n      colors: this.colors,\n      domain: this.domain,\n      title: this.legendTitle,\n      position: this.legendPosition\n    };\n  }\n  setColors() {\n    this.colors = new ColorHelper(this.scheme, ScaleType.Ordinal, this.domain, this.customColors);\n  }\n  onActivate(item) {\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value;\n    });\n    if (idx > -1) {\n      return;\n    }\n    this.activeEntries = [item, ...this.activeEntries];\n    this.activate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n  onDeactivate(item) {\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value;\n    });\n    this.activeEntries.splice(idx, 1);\n    this.activeEntries = [...this.activeEntries];\n    this.deactivate.emit({\n      value: item,\n      entries: this.activeEntries\n    });\n  }\n  isActive(entry) {\n    if (!this.activeEntries) return false;\n    const item = this.activeEntries.find(d => {\n      return entry.name === d.name && entry.series === d.series;\n    });\n    return item !== undefined;\n  }\n  trackBy(index, item) {\n    return item.valueArc.data.name;\n  }\n}\nGaugeComponent.ɵfac = /* @__PURE__ */(() => {\n  let ɵGaugeComponent_BaseFactory;\n  return function GaugeComponent_Factory(t) {\n    return (ɵGaugeComponent_BaseFactory || (ɵGaugeComponent_BaseFactory = i0.ɵɵgetInheritedFactory(GaugeComponent)))(t || GaugeComponent);\n  };\n})();\nGaugeComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: GaugeComponent,\n  selectors: [[\"ngx-charts-gauge\"]],\n  contentQueries: function GaugeComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n    }\n  },\n  viewQuery: function GaugeComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c45, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.textEl = _t.first);\n    }\n  },\n  inputs: {\n    legend: \"legend\",\n    legendTitle: \"legendTitle\",\n    legendPosition: \"legendPosition\",\n    min: \"min\",\n    max: \"max\",\n    textValue: \"textValue\",\n    units: \"units\",\n    bigSegments: \"bigSegments\",\n    smallSegments: \"smallSegments\",\n    results: \"results\",\n    showAxis: \"showAxis\",\n    startAngle: \"startAngle\",\n    angleSpan: \"angleSpan\",\n    activeEntries: \"activeEntries\",\n    axisTickFormatting: \"axisTickFormatting\",\n    tooltipDisabled: \"tooltipDisabled\",\n    valueFormatting: \"valueFormatting\",\n    showText: \"showText\",\n    margin: \"margin\"\n  },\n  outputs: {\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 5,\n  vars: 13,\n  consts: [[\"textEl\", \"\"], [3, \"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\", \"view\", \"showLegend\", \"legendOptions\", \"activeEntries\", \"animations\"], [1, \"gauge\", \"chart\"], [4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"ngx-charts-gauge-axis\", \"\", 3, \"bigSegments\", \"smallSegments\", \"min\", \"max\", \"radius\", \"angleSpan\", \"valueScale\", \"startAngle\", \"tickFormatting\", 4, \"ngIf\"], [\"alignment-baseline\", \"central\", 3, \"textAnchor\", 4, \"ngIf\"], [\"ngx-charts-gauge-arc\", \"\", 3, \"select\", \"activate\", \"deactivate\", \"backgroundArc\", \"valueArc\", \"cornerRadius\", \"colors\", \"isActive\", \"tooltipDisabled\", \"tooltipTemplate\", \"valueFormatting\", \"animations\"], [\"ngx-charts-gauge-axis\", \"\", 3, \"bigSegments\", \"smallSegments\", \"min\", \"max\", \"radius\", \"angleSpan\", \"valueScale\", \"startAngle\", \"tickFormatting\"], [\"alignment-baseline\", \"central\"], [\"x\", \"0\", \"dy\", \"0\"], [\"x\", \"0\", \"dy\", \"1.2em\"]],\n  template: function GaugeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-charts-chart\", 1);\n      i0.ɵɵlistener(\"legendLabelClick\", function GaugeComponent_Template_ngx_charts_chart_legendLabelClick_0_listener($event) {\n        return ctx.onClick($event);\n      })(\"legendLabelActivate\", function GaugeComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener($event) {\n        return ctx.onActivate($event);\n      })(\"legendLabelDeactivate\", function GaugeComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener($event) {\n        return ctx.onDeactivate($event);\n      });\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"g\", 2);\n      i0.ɵɵtemplate(2, GaugeComponent__svg_g_2_Template, 2, 10, \"g\", 3)(3, GaugeComponent__svg_g_3_Template, 1, 9, \"g\", 4)(4, GaugeComponent__svg_text_4_Template, 6, 5, \"text\", 5);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(10, _c24, ctx.width, ctx.height))(\"showLegend\", ctx.legend)(\"legendOptions\", ctx.legendOptions)(\"activeEntries\", ctx.activeEntries)(\"animations\", ctx.animations);\n      i0.ɵɵadvance();\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngForOf\", ctx.arcs)(\"ngForTrackBy\", ctx.trackBy);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngIf\", ctx.showAxis);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngIf\", ctx.showText);\n    }\n  },\n  dependencies: [ChartComponent, GaugeArcComponent, GaugeAxisComponent, i2.NgForOf, i2.NgIf],\n  styles: [_c25, \".gauge .background-arc path{fill:#0000000d}.gauge .gauge-tick path{stroke:#666}.gauge .gauge-tick text{font-size:12px;fill:#666;font-weight:700}.gauge .gauge-tick-large path{stroke-width:2px}.gauge .gauge-tick-small path{stroke-width:1px}\\n\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GaugeComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-gauge',\n      template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"gauge chart\">\n        <svg:g *ngFor=\"let arc of arcs; trackBy: trackBy\" [attr.transform]=\"rotation\">\n          <svg:g\n            ngx-charts-gauge-arc\n            [backgroundArc]=\"arc.backgroundArc\"\n            [valueArc]=\"arc.valueArc\"\n            [cornerRadius]=\"cornerRadius\"\n            [colors]=\"colors\"\n            [isActive]=\"isActive(arc.valueArc.data)\"\n            [tooltipDisabled]=\"tooltipDisabled\"\n            [tooltipTemplate]=\"tooltipTemplate\"\n            [valueFormatting]=\"valueFormatting\"\n            [animations]=\"animations\"\n            (select)=\"onClick($event)\"\n            (activate)=\"onActivate($event)\"\n            (deactivate)=\"onDeactivate($event)\"\n          ></svg:g>\n        </svg:g>\n\n        <svg:g\n          ngx-charts-gauge-axis\n          *ngIf=\"showAxis\"\n          [bigSegments]=\"bigSegments\"\n          [smallSegments]=\"smallSegments\"\n          [min]=\"min\"\n          [max]=\"max\"\n          [radius]=\"outerRadius\"\n          [angleSpan]=\"angleSpan\"\n          [valueScale]=\"valueScale\"\n          [startAngle]=\"startAngle\"\n          [tickFormatting]=\"axisTickFormatting\"\n        ></svg:g>\n\n        <svg:text\n          #textEl\n          *ngIf=\"showText\"\n          [style.textAnchor]=\"'middle'\"\n          [attr.transform]=\"textTransform\"\n          alignment-baseline=\"central\"\n        >\n          <tspan x=\"0\" dy=\"0\">{{ displayValue }}</tspan>\n          <tspan x=\"0\" dy=\"1.2em\">{{ units }}</tspan>\n        </svg:text>\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \".gauge .background-arc path{fill:#0000000d}.gauge .gauge-tick path{stroke:#666}.gauge .gauge-tick text{font-size:12px;fill:#666;font-weight:700}.gauge .gauge-tick-large path{stroke-width:2px}.gauge .gauge-tick-small path{stroke-width:1px}\\n\"]\n    }]\n  }], null, {\n    legend: [{\n      type: Input\n    }],\n    legendTitle: [{\n      type: Input\n    }],\n    legendPosition: [{\n      type: Input\n    }],\n    min: [{\n      type: Input\n    }],\n    max: [{\n      type: Input\n    }],\n    textValue: [{\n      type: Input\n    }],\n    units: [{\n      type: Input\n    }],\n    bigSegments: [{\n      type: Input\n    }],\n    smallSegments: [{\n      type: Input\n    }],\n    results: [{\n      type: Input\n    }],\n    showAxis: [{\n      type: Input\n    }],\n    startAngle: [{\n      type: Input\n    }],\n    angleSpan: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    axisTickFormatting: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    valueFormatting: [{\n      type: Input\n    }],\n    showText: [{\n      type: Input\n    }],\n    margin: [{\n      type: Input\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    tooltipTemplate: [{\n      type: ContentChild,\n      args: ['tooltipTemplate']\n    }],\n    textEl: [{\n      type: ViewChild,\n      args: ['textEl']\n    }]\n  });\n})();\nclass GaugeModule {}\nGaugeModule.ɵfac = function GaugeModule_Factory(t) {\n  return new (t || GaugeModule)();\n};\nGaugeModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: GaugeModule\n});\nGaugeModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[ChartCommonModule, PieChartModule, BarChartModule]]\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GaugeModule, [{\n    type: NgModule,\n    args: [{\n      imports: [ChartCommonModule, PieChartModule, BarChartModule],\n      declarations: [LinearGaugeComponent, GaugeComponent, GaugeArcComponent, GaugeAxisComponent],\n      exports: [LinearGaugeComponent, GaugeComponent, GaugeArcComponent, GaugeAxisComponent]\n    }]\n  }], null, null);\n})();\n\n// The export is needed here to generate a valid polyfills.metadata.json file\nfunction ngxChartsPolyfills() {\n  // IE11 fix\n  // Ref: https://github.com/swimlane/ngx-charts/issues/386\n  if (typeof SVGElement !== 'undefined' && typeof SVGElement.prototype.contains === 'undefined') {\n    SVGElement.prototype.contains = HTMLDivElement.prototype.contains;\n  }\n}\nclass SankeyComponent extends BaseChartComponent {\n  constructor() {\n    super(...arguments);\n    this.showLabels = true;\n    this.tooltipDisabled = false;\n    this.activeEntries = [];\n    this.activate = new EventEmitter();\n    this.deactivate = new EventEmitter();\n    this.margin = [10, 10, 10, 10];\n    this.scaleType = ScaleType.Ordinal;\n    this.styleTypes = StyleTypes;\n  }\n  update() {\n    super.update();\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      legendType: this.scaleType\n    });\n    const linkDefs = this.results;\n    const nodeDefs = Array.from(new Set(linkDefs.flatMap(l => [l.source, l.target])), name => ({\n      name,\n      value: linkDefs.filter(l => l.source === name).reduce((acc, l) => acc + l.value, 0)\n    }));\n    // Configure generator\n    const sankeyGenerator = sankey().nodeId(d => d.name).nodeAlign(sankeyLeft).nodeWidth(15).nodePadding(10).extent([[1, 5], [this.dims.width - 1, this.dims.height - 5]]);\n    // Generate links and nodes\n    const data = sankeyGenerator({\n      nodes: nodeDefs.map(d => Object.assign({}, d)),\n      links: linkDefs.map(d => Object.assign({}, d))\n    });\n    this.valueDomain = this.getValueDomain(data.nodes);\n    this.setColors();\n    this.nodeRects = data.nodes.map(node => {\n      const rect = {\n        x: node.x0,\n        y: node.y0,\n        height: node.y1 - node.y0,\n        width: node.x1 - node.x0,\n        fill: this.colors.getColor(node.name),\n        tooltip: this.getNodeTooltipText(node),\n        rx: 5,\n        data: {\n          name: node.name,\n          value: node.value\n        },\n        transform: '',\n        label: this.labelFormatting ? this.labelFormatting(node.name) : node.name,\n        labelAnchor: TextAnchor.Start\n      };\n      rect.labelAnchor = this.getTextAnchor(node);\n      rect.transform = `translate(${rect.x},${rect.y})`;\n      return rect;\n    });\n    this.linkPaths = data.links.map(link => {\n      const gradientId = 'mask' + id().toString();\n      const linkPath = {\n        path: sankeyLinkHorizontal()(link),\n        strokeWidth: Math.max(1, link.width),\n        tooltip: this.getLinkTooltipText(link.source, link.target, link.value),\n        id: gradientId,\n        gradientFill: `url(#${gradientId})`,\n        source: link.source,\n        target: link.target,\n        startColor: this.colors.getColor(link.source.name),\n        endColor: this.colors.getColor(link.target.name),\n        data: {\n          source: link.source.name,\n          target: link.target.name,\n          value: link.value\n        }\n      };\n      return linkPath;\n    });\n    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n  }\n  getNodeTooltipText(node) {\n    return `\n      <span class=\"tooltip-label\">${escapeLabel(node.name)}</span>\n      <span class=\"tooltip-val\">${node.value.toLocaleString()}</span>\n    `;\n  }\n  getLinkTooltipText(sourceNode, targetNode, value) {\n    return `\n      <span class=\"tooltip-label\">${escapeLabel(sourceNode.name)} • ${escapeLabel(targetNode.name)}</span>\n      <span class=\"tooltip-val\">${value.toLocaleString()} (${(value / sourceNode.value).toLocaleString(undefined, {\n      style: 'percent',\n      maximumFractionDigits: 2\n    })})</span>\n    `;\n  }\n  getTextAnchor(node) {\n    if (node.layer === 0) {\n      return TextAnchor.Start;\n    } else {\n      return TextAnchor.End;\n    }\n  }\n  onClick(data) {\n    this.select.emit(data);\n  }\n  setColors() {\n    this.colors = new ColorHelper(this.scheme, this.scaleType, this.valueDomain);\n  }\n  getValueDomain(nodes) {\n    return nodes.map(n => n.name);\n  }\n}\nSankeyComponent.ɵfac = /* @__PURE__ */(() => {\n  let ɵSankeyComponent_BaseFactory;\n  return function SankeyComponent_Factory(t) {\n    return (ɵSankeyComponent_BaseFactory || (ɵSankeyComponent_BaseFactory = i0.ɵɵgetInheritedFactory(SankeyComponent)))(t || SankeyComponent);\n  };\n})();\nSankeyComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: SankeyComponent,\n  selectors: [[\"ngx-charts-sankey\"]],\n  contentQueries: function SankeyComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, _c22, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n    }\n  },\n  inputs: {\n    showLabels: \"showLabels\",\n    gradient: \"gradient\",\n    tooltipDisabled: \"tooltipDisabled\",\n    activeEntries: \"activeEntries\",\n    labelFormatting: \"labelFormatting\"\n  },\n  outputs: {\n    activate: \"activate\",\n    deactivate: \"deactivate\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 5,\n  vars: 9,\n  consts: [[3, \"view\", \"animations\"], [1, \"sankey\", \"chart\"], [\"class\", \"link\", \"ngx-tooltip\", \"\", 3, \"tooltipDisabled\", \"tooltipType\", \"tooltipPlacement\", \"tooltipTitle\", \"tooltipTemplate\", \"tooltipContext\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"node\", 4, \"ngFor\", \"ngForOf\"], [4, \"ngFor\", \"ngForOf\"], [\"ngx-tooltip\", \"\", 1, \"link\", 3, \"tooltipDisabled\", \"tooltipType\", \"tooltipPlacement\", \"tooltipTitle\", \"tooltipTemplate\", \"tooltipContext\"], [\"gradientUnits\", \"userSpaceOnUse\"], [\"offset\", \"0%\"], [\"offset\", \"100%\"], [\"stroke-opacity\", \"0.5\", \"fill\", \"none\", 3, \"click\", \"mouseenter\"], [1, \"node\"], [\"ngx-tooltip\", \"\", 3, \"click\", \"mouseenter\", \"tooltipDisabled\", \"tooltipType\", \"tooltipPlacement\", \"tooltipTitle\", \"tooltipTemplate\", \"tooltipContext\"], [\"class\", \"label\", \"dy\", \"0.35em\", 4, \"ngIf\"], [\"dy\", \"0.35em\", 1, \"label\"]],\n  template: function SankeyComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-charts-chart\", 0);\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"g\", 1);\n      i0.ɵɵtemplate(2, SankeyComponent__svg_g_2_Template, 6, 14, \"g\", 2)(3, SankeyComponent__svg_g_3_Template, 2, 12, \"g\", 3)(4, SankeyComponent__svg_g_4_Template, 2, 2, \"g\", 4);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"view\", i0.ɵɵpureFunction2(6, _c24, ctx.width, ctx.height))(\"animations\", ctx.animations);\n      i0.ɵɵadvance();\n      i0.ɵɵattribute(\"transform\", ctx.transform);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngForOf\", ctx.linkPaths);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngForOf\", ctx.nodeRects);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngForOf\", ctx.nodeRects);\n    }\n  },\n  dependencies: [ChartComponent, i2.NgForOf, TooltipDirective, i2.NgIf],\n  styles: [_c25],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SankeyComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-charts-sankey',\n      template: `\n    <ngx-charts-chart [view]=\"[width, height]\" [animations]=\"animations\">\n      <svg:g [attr.transform]=\"transform\" class=\"sankey chart\">\n        <svg:g\n          *ngFor=\"let link of linkPaths\"\n          class=\"link\"\n          ngx-tooltip\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipType]=\"styleTypes.tooltip\"\n          [tooltipPlacement]=\"'top'\"\n          [tooltipTitle]=\"tooltipTemplate ? undefined : link.tooltip\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [tooltipContext]=\"link.data\"\n        >\n          <svg:defs>\n            <svg:linearGradient\n              [attr.id]=\"link.id\"\n              gradientUnits=\"userSpaceOnUse\"\n              [attr.x1]=\"link.source.x1\"\n              [attr.x2]=\"link.target.x0\"\n            >\n              <svg:stop offset=\"0%\" [attr.stop-color]=\"link.startColor\"></svg:stop>\n              <svg:stop offset=\"100%\" [attr.stop-color]=\"link.endColor\"></svg:stop>\n            </svg:linearGradient>\n          </svg:defs>\n          <svg:path\n            [attr.d]=\"link.path\"\n            [attr.stroke]=\"link.gradientFill\"\n            [attr.stroke-width]=\"link.strokeWidth\"\n            stroke-opacity=\"0.5\"\n            fill=\"none\"\n            (click)=\"select.emit(link.data)\"\n            (mouseenter)=\"activate.emit(link.data)\"\n          ></svg:path>\n        </svg:g>\n\n        <svg:g *ngFor=\"let rect of nodeRects\" [attr.transform]=\"rect.transform\" class=\"node\">\n          <svg:rect\n            [attr.x]=\"0\"\n            [attr.y]=\"0\"\n            [attr.width]=\"rect.width\"\n            [attr.height]=\"rect.height\"\n            [attr.fill]=\"rect.fill\"\n            ngx-tooltip\n            [tooltipDisabled]=\"tooltipDisabled\"\n            [tooltipType]=\"styleTypes.tooltip\"\n            [tooltipPlacement]=\"'top'\"\n            [tooltipTitle]=\"tooltipTemplate ? undefined : rect.tooltip\"\n            [tooltipTemplate]=\"tooltipTemplate\"\n            [tooltipContext]=\"rect.data\"\n            (click)=\"select.emit(rect.data)\"\n            (mouseenter)=\"activate.emit(rect.data)\"\n          ></svg:rect>\n        </svg:g>\n\n        <svg:g *ngFor=\"let rect of nodeRects\" [attr.transform]=\"rect.transform\">\n          <svg:text\n            *ngIf=\"showLabels && rect.height > 15\"\n            class=\"label\"\n            [attr.x]=\"rect.width + 5\"\n            [attr.y]=\"rect.height / 2\"\n            [attr.text-anchor]=\"rect.labelAnchor\"\n            dy=\"0.35em\"\n            [attr.dx]=\"rect.labelAnchor === 'end' ? -25 : 0\"\n          >\n            {{ rect.label }}\n          </svg:text>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"]\n    }]\n  }], null, {\n    showLabels: [{\n      type: Input\n    }],\n    gradient: [{\n      type: Input\n    }],\n    tooltipDisabled: [{\n      type: Input\n    }],\n    activeEntries: [{\n      type: Input\n    }],\n    labelFormatting: [{\n      type: Input\n    }],\n    activate: [{\n      type: Output\n    }],\n    deactivate: [{\n      type: Output\n    }],\n    tooltipTemplate: [{\n      type: ContentChild,\n      args: ['tooltipTemplate']\n    }]\n  });\n})();\nclass SankeyModule {}\nSankeyModule.ɵfac = function SankeyModule_Factory(t) {\n  return new (t || SankeyModule)();\n};\nSankeyModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: SankeyModule\n});\nSankeyModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[ChartCommonModule]]\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SankeyModule, [{\n    type: NgModule,\n    args: [{\n      imports: [ChartCommonModule],\n      declarations: [SankeyComponent],\n      exports: [SankeyComponent]\n    }]\n  }], null, null);\n})();\nclass NgxChartsModule {\n  constructor() {\n    ngxChartsPolyfills();\n  }\n}\nNgxChartsModule.ɵfac = function NgxChartsModule_Factory(t) {\n  return new (t || NgxChartsModule)();\n};\nNgxChartsModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: NgxChartsModule\n});\nNgxChartsModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [ChartCommonModule, AreaChartModule, BarChartModule, BoxChartModule, BubbleChartModule, HeatMapModule, SankeyModule, LineChartModule, PolarChartModule, NumberCardModule, PieChartModule, TreeMapModule, GaugeModule]\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgxChartsModule, [{\n    type: NgModule,\n    args: [{\n      exports: [ChartCommonModule, AreaChartModule, BarChartModule, BoxChartModule, BubbleChartModule, HeatMapModule, SankeyModule, LineChartModule, PolarChartModule, NumberCardModule, PieChartModule, TreeMapModule, GaugeModule]\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\nfunction tickFormat(fieldType, groupByType) {\n  return function (label) {\n    if (label === 'No Value' || label === 'Other') {\n      return label;\n    }\n    if (fieldType === 'date' && groupByType === 'groupBy') {\n      const formatter = timeFormat('MM/DD/YYYY');\n      return formatter(label);\n    }\n    return label.toString();\n  };\n}\n\n/* eslint-disable @typescript-eslint/no-empty-interface */\n\n/*\n * Public API Surface of ngx-charts\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AdvancedLegendComponent, AdvancedPieChartComponent, AreaChartComponent, AreaChartModule, AreaChartNormalizedComponent, AreaChartStackedComponent, AreaComponent, AreaSeriesComponent, AxesModule, AxisLabelComponent, BarChartModule, BarChartType, BarComponent, BarHorizontal2DComponent, BarHorizontalComponent, BarHorizontalNormalizedComponent, BarHorizontalStackedComponent, BarLabelComponent, BarOrientation, BarVertical2DComponent, BarVerticalComponent, BarVerticalNormalizedComponent, BarVerticalStackedComponent, BaseChartComponent, BoxChartComponent, BoxChartModule, BoxComponent, BoxSeriesComponent, BubbleChartComponent, BubbleChartModule, BubbleSeriesComponent, CardComponent, CardSeriesComponent, ChartCommonModule, ChartComponent, CircleComponent, CircleSeriesComponent, ColorHelper, CountUpDirective, D0Types, GaugeArcComponent, GaugeAxisComponent, GaugeComponent, GaugeModule, GridPanelComponent, GridPanelSeriesComponent, HeatCellSeriesComponent, HeatMapCellComponent, HeatMapComponent, HeatMapModule, LegendComponent, LegendEntryComponent, LegendPosition, LegendType, LineChartComponent, LineChartModule, LineComponent, LineSeriesComponent, LinearGaugeComponent, NgxChartsModule, NumberCardComponent, NumberCardModule, Orientation, PieArcComponent, PieChartComponent, PieChartModule, PieGridComponent, PieGridSeriesComponent, PieLabelComponent, PieSeriesComponent, PlacementTypes, PolarChartComponent, PolarChartModule, PolarSeriesComponent, SankeyComponent, SankeyModule, ScaleLegendComponent, ScaleType, SeriesHorizontal, SeriesType, SeriesVerticalComponent, ShowTypes, StyleTypes, SvgLinearGradientComponent, SvgRadialGradientComponent, TextAnchor, Timeline, TooltipArea, TooltipContentComponent, TooltipDirective, TooltipModule, TooltipService, TreeMapCellComponent, TreeMapCellSeriesComponent, TreeMapComponent, TreeMapModule, VisibilityObserver, XAxisComponent, XAxisTicksComponent, YAxisComponent, YAxisTicksComponent, calculateViewDimensions, colorSets, count, decimalChecker, escapeLabel, formatLabel, getDomain, getScale, getScaleType, getTickLines, getUniqueXDomainValues, getXDomainArray, gridLayout, gridSize, hexToRgb, id, invertColor, reduceTicks, shadeRGBColor, sortByDomain, sortByTime, sortLinear, throttle, throttleable, tickFormat, trimLabel };","map":{"version":3,"names":["i0","PLATFORM_ID","Component","ViewEncapsulation","Inject","Input","ViewChild","HostBinding","HostListener","Injectable","ChangeDetectionStrategy","EventEmitter","Output","Directive","NgModule","ContentChild","i2","isPlatformBrowser","isPlatformServer","CommonModule","__decorate","DomPortalOutlet","ComponentPortal","fromEvent","debounceTime","trigger","transition","style","animate","select","brushX","scaleTime","scaleLinear","scalePoint","scaleOrdinal","scaleQuantile","scaleBand","area","curveLinear","line","arc","lineRadial","curveCardinalClosed","pie","range","min","max","quantile","interpolate","easeSinInOut","rfdc","format","d3_color","treemap","stratify","sankey","sankeyLeft","sankeyLinkHorizontal","timeFormat","_c0","_c1","a0","model","TooltipContentComponent_span_4_ng_template_1_Template","rf","ctx","TooltipContentComponent_span_4_Template","ɵɵelementStart","ɵɵtemplate","ɵɵelementEnd","ctx_r0","ɵɵnextContext","ɵɵadvance","ɵɵproperty","template","ɵɵpureFunction1","context","TooltipContentComponent_span_5_Template","ɵɵelement","title","ɵɵsanitizeHtml","LegendComponent_header_1_Template","ɵɵtext","ɵɵtextInterpolate","LegendComponent_li_4_Template","_r2","ɵɵgetCurrentView","ɵɵlistener","LegendComponent_li_4_Template_ngx_charts_legend_entry_select_1_listener","$event","ɵɵrestoreView","ɵɵresetView","labelClick","emit","LegendComponent_li_4_Template_ngx_charts_legend_entry_activate_1_listener","activate","LegendComponent_li_4_Template_ngx_charts_legend_entry_deactivate_1_listener","deactivate","entry_r3","$implicit","label","formattedLabel","color","isActive","_c2","ChartComponent_ngx_charts_scale_legend_3_Template","legendOptions","position","LegendPosition","Below","domain","colors","view","legendWidth","ChartComponent_ngx_charts_legend_4_Template","ChartComponent_ngx_charts_legend_4_Template_ngx_charts_legend_labelClick_0_listener","legendLabelClick","ChartComponent_ngx_charts_legend_4_Template_ngx_charts_legend_labelActivate_0_listener","legendLabelActivate","ChartComponent_ngx_charts_legend_4_Template_ngx_charts_legend_labelDeactivate_0_listener","legendLabelDeactivate","activeEntries","_c3","_c4","_c5","XAxisTicksComponent__svg_g_2__svg_ng_container_1__svg_ng_container_4_Template","ɵɵnamespaceSVG","ɵɵelementContainer","XAxisTicksComponent__svg_g_2__svg_ng_container_1__svg_ng_template_5__svg_ng_container_0__svg_tspan_1_Template","tickLine_r1","i_r2","index","ɵɵattribute","ɵɵtextInterpolate1","XAxisTicksComponent__svg_g_2__svg_ng_container_1__svg_ng_template_5__svg_ng_container_0_Template","ɵɵelementContainerStart","ɵɵelementContainerEnd","tickLines_r3","ngIf","XAxisTicksComponent__svg_g_2__svg_ng_container_1__svg_ng_template_5_Template","tick_r4","ctx_r4","tickChunks","XAxisTicksComponent__svg_g_2__svg_ng_container_1__svg_ng_template_7_Template","tickFormatted_r6","tickTrim","XAxisTicksComponent__svg_g_2__svg_ng_container_1_Template","ɵɵtemplateRefExtractor","tmplMultilineTick_r7","ɵɵreference","tmplSinglelineTick_r8","textAnchor","textTransform","isWrapTicksSupported","XAxisTicksComponent__svg_g_2_Template","tickTransform","tickFormat","XAxisTicksComponent__svg_g_3__svg_g_1_Template","gridLineTransform","gridLineHeight","XAxisTicksComponent__svg_g_3_Template","tick_r9","showGridLines","_c6","XAxisComponent__svg_g_1_Template","_r1","XAxisComponent__svg_g_1_Template_g_dimensionsChanged_0_listener","ctx_r1","emitTicksHeight","trimTicks","rotateTicks","maxTickLength","tickFormatting","tickArguments","tickStroke","xScale","xOrient","dims","height","width","ticks","wrapTicks","XAxisComponent__svg_g_2_Template","labelText","labelOffset","orientation","Bottom","_c7","YAxisTicksComponent__svg_g_2__svg_ng_container_1__svg_ng_container_4_Template","YAxisTicksComponent__svg_g_2__svg_ng_container_1__svg_ng_template_5__svg_ng_container_0__svg_ng_container_1__svg_tspan_1_Template","ctx_r2","tickSpacing","YAxisTicksComponent__svg_g_2__svg_ng_container_1__svg_ng_template_5__svg_ng_container_0__svg_ng_container_1_Template","tickLines_r4","YAxisTicksComponent__svg_g_2__svg_ng_container_1__svg_ng_template_5__svg_ng_container_0_Template","tmplSinglelineTick_r5","length","YAxisTicksComponent__svg_g_2__svg_ng_container_1__svg_ng_template_5_Template","tick_r6","YAxisTicksComponent__svg_g_2__svg_ng_container_1__svg_ng_template_7_Template","tickFormatted_r7","YAxisTicksComponent__svg_g_2__svg_ng_container_1_Template","tmplMultilineTick_r8","ɵɵstyleProp","dy","x1","y1","YAxisTicksComponent__svg_g_2_Template","transform","YAxisTicksComponent__svg_path_3_Template","referenceAreaPath","YAxisTicksComponent__svg_g_4__svg_g_1__svg_line_1_Template","gridLineWidth","YAxisTicksComponent__svg_g_4__svg_g_1__svg_line_2_Template","YAxisTicksComponent__svg_g_4__svg_g_1_Template","orient","Orientation","Left","Right","YAxisTicksComponent__svg_g_4_Template","YAxisTicksComponent__svg_g_5__svg_g_1__svg_g_2_Template","refLine_r10","value","name","YAxisTicksComponent__svg_g_5__svg_g_1_Template","showRefLabels","YAxisTicksComponent__svg_g_5_Template","showRefLines","_c8","YAxisComponent__svg_g_1_Template","YAxisComponent__svg_g_1_Template_g_dimensionsChanged_0_listener","emitTicksWidth","yScale","yOrient","referenceLines","YAxisComponent__svg_g_2_Template","_c9","SvgLinearGradientComponent__svg_stop_1_Template","stop_r1","opacity","offset","_c10","_c11","_c12","CircleSeriesComponent__svg_g_0__svg_rect_3_Template","circle","cx","radius","cy","gradientFill","CircleSeriesComponent__svg_g_0__svg_rect_4_Template","CircleSeriesComponent__svg_g_0_Template","CircleSeriesComponent__svg_g_0_Template_g_select_5_listener","onClick","data","CircleSeriesComponent__svg_g_0_Template_g_activate_5_listener","activateCircle","CircleSeriesComponent__svg_g_0_Template_g_deactivate_5_listener","deactivateCircle","barOrientation","Vertical","gradientId","gradientStops","isSSR","barVisible","type","ɵɵclassProp","seriesName","classNames","tooltipDisabled","placementTypes","Top","styleTypes","tooltip","tooltipTemplate","undefined","getTooltipText","_c13","_c14","GridPanelSeriesComponent__svg_g_0_Template","gridPanel_r1","class","x","y","_c15","SvgRadialGradientComponent__svg_stop_1_Template","_c16","AreaComponent__svg_defs_0_Template","_c17","_c18","_c19","TooltipArea__svg_ng_template_2_div_1_Template","tooltipItem_r2","getToolTipText","TooltipArea__svg_ng_template_2_Template","model_r4","_c20","AdvancedLegendComponent_div_1_Template","roundedTotal","valueFormatting","AdvancedLegendComponent_div_2_Template","defaultValueFormatting","AdvancedLegendComponent_div_7_div_2_Template","legendItem_r3","_value","AdvancedLegendComponent_div_7_div_3_Template","AdvancedLegendComponent_div_7_div_6_Template","percentage","AdvancedLegendComponent_div_7_div_7_Template","toLocaleString","AdvancedLegendComponent_div_7_Template","AdvancedLegendComponent_div_7_Template_div_mouseenter_0_listener","AdvancedLegendComponent_div_7_Template_div_mouseleave_0_listener","AdvancedLegendComponent_div_7_Template_div_click_0_listener","animations","displayLabel","_c21","_c22","_c23","_c24","a1","AreaChartComponent__svg_g_5_Template","AreaChartComponent__svg_g_5_Template_g_dimensionsChanged_0_listener","updateXAxisHeight","showXAxisLabel","xAxisLabel","trimXAxisTicks","rotateXAxisTicks","maxXAxisTickLength","xAxisTickFormatting","xAxisTicks","AreaChartComponent__svg_g_6_Template","_r3","AreaChartComponent__svg_g_6_Template_g_dimensionsChanged_0_listener","updateYAxisWidth","showYAxisLabel","yAxisLabel","trimYAxisTicks","maxYAxisTickLength","yAxisTickFormatting","yAxisTicks","AreaChartComponent__svg_g_8_Template","series_r4","baseValue","scaleType","gradient","curve","AreaChartComponent__svg_g_9__svg_g_2_Template","_r6","AreaChartComponent__svg_g_9__svg_g_2_Template_g_select_1_listener","series_r7","AreaChartComponent__svg_g_9__svg_g_2_Template_g_activate_1_listener","onActivate","AreaChartComponent__svg_g_9__svg_g_2_Template_g_deactivate_1_listener","onDeactivate","hoveredVertical","AreaChartComponent__svg_g_9_Template","_r5","AreaChartComponent__svg_g_9_Template_g_mouseleave_0_listener","hideCircles","AreaChartComponent__svg_g_9_Template_g_hover_1_listener","updateHoveredVertical","xSet","results","seriesTooltipTemplate","AreaChartComponent__svg_g_10__svg_g_1_Template","series_r9","timelineXScale","timelineYScale","AreaChartComponent__svg_g_10_Template","_r8","AreaChartComponent__svg_g_10_Template_g_onDomainChange_0_listener","updateDomain","ɵɵpureFunction2","timelineWidth","timelineHeight","scheme","customColors","legend","timelineTransform","trackBy","AreaChartNormalizedComponent__svg_g_5_Template","AreaChartNormalizedComponent__svg_g_5_Template_g_dimensionsChanged_0_listener","AreaChartNormalizedComponent__svg_g_6_Template","AreaChartNormalizedComponent__svg_g_6_Template_g_dimensionsChanged_0_listener","AreaChartNormalizedComponent__svg_g_8_Template","AreaChartNormalizedComponent__svg_g_9__svg_g_2_Template","AreaChartNormalizedComponent__svg_g_9__svg_g_2_Template_g_select_1_listener","AreaChartNormalizedComponent__svg_g_9__svg_g_2_Template_g_activate_1_listener","AreaChartNormalizedComponent__svg_g_9__svg_g_2_Template_g_deactivate_1_listener","seriesType","Stacked","AreaChartNormalizedComponent__svg_g_9_Template","AreaChartNormalizedComponent__svg_g_9_Template_g_mouseleave_0_listener","AreaChartNormalizedComponent__svg_g_9_Template_g_hover_1_listener","AreaChartNormalizedComponent__svg_g_10__svg_g_1_Template","AreaChartNormalizedComponent__svg_g_10_Template","AreaChartNormalizedComponent__svg_g_10_Template_g_onDomainChange_0_listener","_c25","AreaChartStackedComponent__svg_g_5_Template","AreaChartStackedComponent__svg_g_5_Template_g_dimensionsChanged_0_listener","AreaChartStackedComponent__svg_g_6_Template","AreaChartStackedComponent__svg_g_6_Template_g_dimensionsChanged_0_listener","AreaChartStackedComponent__svg_g_8_Template","AreaChartStackedComponent__svg_g_9__svg_g_2_Template","AreaChartStackedComponent__svg_g_9__svg_g_2_Template_g_select_1_listener","AreaChartStackedComponent__svg_g_9__svg_g_2_Template_g_activate_1_listener","AreaChartStackedComponent__svg_g_9__svg_g_2_Template_g_deactivate_1_listener","AreaChartStackedComponent__svg_g_9_Template","AreaChartStackedComponent__svg_g_9_Template_g_mouseleave_0_listener","AreaChartStackedComponent__svg_g_9_Template_g_hover_1_listener","AreaChartStackedComponent__svg_g_10__svg_g_1_Template","AreaChartStackedComponent__svg_g_10_Template","AreaChartStackedComponent__svg_g_10_Template_g_onDomainChange_0_listener","_c26","BarComponent__svg_defs_0_Template","_c27","_c28","SeriesHorizontal__svg_g_0_Template","SeriesHorizontal__svg_g_0_Template_g_select_0_listener","click","SeriesHorizontal__svg_g_0_Template_g_activate_0_listener","SeriesHorizontal__svg_g_0_Template_g_deactivate_0_listener","bar_r3","Horizontal","roundEdges","ariaLabel","tooltipPlacement","tooltipType","tooltipText","noBarWhenZero","SeriesHorizontal__svg_g_1__svg_g_1_Template","_r4","SeriesHorizontal__svg_g_1__svg_g_1_Template_g_dimensionsChanged_0_listener","i_r5","dataLabelWidthChanged","size","b_r6","total","dataLabelFormatting","SeriesHorizontal__svg_g_1_Template","barsForDataLabels","trackDataLabelBy","BarHorizontalComponent__svg_g_2_Template","BarHorizontalComponent__svg_g_2_Template_g_dimensionsChanged_0_listener","BarHorizontalComponent__svg_g_3_Template","BarHorizontalComponent__svg_g_3_Template_g_dimensionsChanged_0_listener","dataLabelMaxWidth","negative","BarHorizontal2DComponent__svg_g_3_Template","BarHorizontal2DComponent__svg_g_3_Template_g_dimensionsChanged_0_listener","valueScale","BarHorizontal2DComponent__svg_g_4_Template","BarHorizontal2DComponent__svg_g_4_Template_g_dimensionsChanged_0_listener","groupScale","BarHorizontal2DComponent__svg_g_5__svg_g_1_Template","BarHorizontal2DComponent__svg_g_5__svg_g_1_Template_g_select_1_listener","group_r5","BarHorizontal2DComponent__svg_g_5__svg_g_1_Template_g_activate_1_listener","BarHorizontal2DComponent__svg_g_5__svg_g_1_Template_g_deactivate_1_listener","BarHorizontal2DComponent__svg_g_5__svg_g_1_Template_g_dataLabelWidthChanged_1_listener","index_r6","onDataLabelMaxWidthChanged","groupTransform","innerScale","series","showDataLabel","BarHorizontal2DComponent__svg_g_5_Template","BarHorizontal2DComponent__svg_g_6__svg_g_1_Template","_r7","BarHorizontal2DComponent__svg_g_6__svg_g_1_Template_g_select_1_listener","group_r8","BarHorizontal2DComponent__svg_g_6__svg_g_1_Template_g_activate_1_listener","BarHorizontal2DComponent__svg_g_6__svg_g_1_Template_g_deactivate_1_listener","BarHorizontal2DComponent__svg_g_6__svg_g_1_Template_g_dataLabelWidthChanged_1_listener","index_r9","BarHorizontal2DComponent__svg_g_6_Template","BarHorizontalNormalizedComponent__svg_g_2_Template","BarHorizontalNormalizedComponent__svg_g_2_Template_g_dimensionsChanged_0_listener","BarHorizontalNormalizedComponent__svg_g_3_Template","BarHorizontalNormalizedComponent__svg_g_3_Template_g_dimensionsChanged_0_listener","BarHorizontalNormalizedComponent__svg_g_4__svg_g_1_Template","BarHorizontalNormalizedComponent__svg_g_4__svg_g_1_Template_g_select_1_listener","BarHorizontalNormalizedComponent__svg_g_4__svg_g_1_Template_g_activate_1_listener","BarHorizontalNormalizedComponent__svg_g_4__svg_g_1_Template_g_deactivate_1_listener","barChartType","Normalized","BarHorizontalNormalizedComponent__svg_g_4_Template","BarHorizontalNormalizedComponent__svg_g_5__svg_g_1_Template","BarHorizontalNormalizedComponent__svg_g_5__svg_g_1_Template_g_select_1_listener","group_r7","BarHorizontalNormalizedComponent__svg_g_5__svg_g_1_Template_g_activate_1_listener","BarHorizontalNormalizedComponent__svg_g_5__svg_g_1_Template_g_deactivate_1_listener","BarHorizontalNormalizedComponent__svg_g_5_Template","BarHorizontalStackedComponent__svg_g_2_Template","BarHorizontalStackedComponent__svg_g_2_Template_g_dimensionsChanged_0_listener","BarHorizontalStackedComponent__svg_g_3_Template","BarHorizontalStackedComponent__svg_g_3_Template_g_dimensionsChanged_0_listener","BarHorizontalStackedComponent__svg_g_4__svg_g_1_Template","BarHorizontalStackedComponent__svg_g_4__svg_g_1_Template_g_select_1_listener","BarHorizontalStackedComponent__svg_g_4__svg_g_1_Template_g_activate_1_listener","BarHorizontalStackedComponent__svg_g_4__svg_g_1_Template_g_deactivate_1_listener","BarHorizontalStackedComponent__svg_g_4__svg_g_1_Template_g_dataLabelWidthChanged_1_listener","BarHorizontalStackedComponent__svg_g_4_Template","BarHorizontalStackedComponent__svg_g_5__svg_g_1_Template","BarHorizontalStackedComponent__svg_g_5__svg_g_1_Template_g_select_1_listener","BarHorizontalStackedComponent__svg_g_5__svg_g_1_Template_g_activate_1_listener","BarHorizontalStackedComponent__svg_g_5__svg_g_1_Template_g_deactivate_1_listener","BarHorizontalStackedComponent__svg_g_5__svg_g_1_Template_g_dataLabelWidthChanged_1_listener","BarHorizontalStackedComponent__svg_g_5_Template","_c29","SeriesVerticalComponent__svg_g_0__svg_g_1_Template","SeriesVerticalComponent__svg_g_0__svg_g_1_Template_g_select_0_listener","SeriesVerticalComponent__svg_g_0__svg_g_1_Template_g_activate_0_listener","SeriesVerticalComponent__svg_g_0__svg_g_1_Template_g_deactivate_0_listener","SeriesVerticalComponent__svg_g_0_Template","bars","SeriesVerticalComponent__svg_g_1__svg_g_1_Template","SeriesVerticalComponent__svg_g_1__svg_g_1_Template_g_select_0_listener","SeriesVerticalComponent__svg_g_1__svg_g_1_Template_g_activate_0_listener","SeriesVerticalComponent__svg_g_1__svg_g_1_Template_g_deactivate_0_listener","bar_r5","SeriesVerticalComponent__svg_g_1_Template","SeriesVerticalComponent__svg_g_2__svg_g_1_Template","SeriesVerticalComponent__svg_g_2__svg_g_1_Template_g_dimensionsChanged_0_listener","i_r7","dataLabelHeightChanged","b_r8","SeriesVerticalComponent__svg_g_2_Template","BarVerticalComponent__svg_g_2_Template","BarVerticalComponent__svg_g_2_Template_g_dimensionsChanged_0_listener","dataLabelMaxHeight","BarVerticalComponent__svg_g_3_Template","BarVerticalComponent__svg_g_3_Template_g_dimensionsChanged_0_listener","BarVertical2DComponent__svg_g_3_Template","BarVertical2DComponent__svg_g_3_Template_g_dimensionsChanged_0_listener","BarVertical2DComponent__svg_g_4_Template","BarVertical2DComponent__svg_g_4_Template_g_dimensionsChanged_0_listener","BarVertical2DComponent__svg_g_5__svg_g_1_Template","BarVertical2DComponent__svg_g_5__svg_g_1_Template_g_select_0_listener","BarVertical2DComponent__svg_g_5__svg_g_1_Template_g_activate_0_listener","BarVertical2DComponent__svg_g_5__svg_g_1_Template_g_deactivate_0_listener","BarVertical2DComponent__svg_g_5__svg_g_1_Template_g_dataLabelHeightChanged_0_listener","onDataLabelMaxHeightChanged","BarVertical2DComponent__svg_g_5_Template","BarVertical2DComponent__svg_g_6__svg_g_1_Template","BarVertical2DComponent__svg_g_6__svg_g_1_Template_g_select_0_listener","BarVertical2DComponent__svg_g_6__svg_g_1_Template_g_activate_0_listener","BarVertical2DComponent__svg_g_6__svg_g_1_Template_g_deactivate_0_listener","BarVertical2DComponent__svg_g_6__svg_g_1_Template_g_dataLabelHeightChanged_0_listener","BarVertical2DComponent__svg_g_6_Template","BarVerticalNormalizedComponent__svg_g_2_Template","BarVerticalNormalizedComponent__svg_g_2_Template_g_dimensionsChanged_0_listener","BarVerticalNormalizedComponent__svg_g_3_Template","BarVerticalNormalizedComponent__svg_g_3_Template_g_dimensionsChanged_0_listener","BarVerticalNormalizedComponent__svg_g_4__svg_g_1_Template","BarVerticalNormalizedComponent__svg_g_4__svg_g_1_Template_g_select_1_listener","BarVerticalNormalizedComponent__svg_g_4__svg_g_1_Template_g_activate_1_listener","BarVerticalNormalizedComponent__svg_g_4__svg_g_1_Template_g_deactivate_1_listener","BarVerticalNormalizedComponent__svg_g_4_Template","BarVerticalNormalizedComponent__svg_g_5__svg_g_1_Template","BarVerticalNormalizedComponent__svg_g_5__svg_g_1_Template_g_select_1_listener","BarVerticalNormalizedComponent__svg_g_5__svg_g_1_Template_g_activate_1_listener","BarVerticalNormalizedComponent__svg_g_5__svg_g_1_Template_g_deactivate_1_listener","BarVerticalNormalizedComponent__svg_g_5_Template","BarVerticalStackedComponent__svg_g_2_Template","BarVerticalStackedComponent__svg_g_2_Template_g_dimensionsChanged_0_listener","BarVerticalStackedComponent__svg_g_3_Template","BarVerticalStackedComponent__svg_g_3_Template_g_dimensionsChanged_0_listener","BarVerticalStackedComponent__svg_g_4__svg_g_1_Template","BarVerticalStackedComponent__svg_g_4__svg_g_1_Template_g_select_1_listener","BarVerticalStackedComponent__svg_g_4__svg_g_1_Template_g_activate_1_listener","BarVerticalStackedComponent__svg_g_4__svg_g_1_Template_g_deactivate_1_listener","BarVerticalStackedComponent__svg_g_4__svg_g_1_Template_g_dataLabelHeightChanged_1_listener","BarVerticalStackedComponent__svg_g_4_Template","BarVerticalStackedComponent__svg_g_5__svg_g_1_Template","BarVerticalStackedComponent__svg_g_5__svg_g_1_Template_g_select_1_listener","BarVerticalStackedComponent__svg_g_5__svg_g_1_Template_g_activate_1_listener","BarVerticalStackedComponent__svg_g_5__svg_g_1_Template_g_deactivate_1_listener","BarVerticalStackedComponent__svg_g_5__svg_g_1_Template_g_dataLabelHeightChanged_1_listener","BarVerticalStackedComponent__svg_g_5_Template","_c30","BoxComponent__svg_g_1_Template","BarOrientation","BoxComponent__svg_line_8_Template","line_r2","i_r3","hideBar","v1","v2","strokeColor","medianLineWidth","whiskerStrokeWidth","maskLine","_c31","BoxChartComponent__svg_g_5_Template","BoxChartComponent__svg_g_5_Template_g_activate_1_listener","BoxChartComponent__svg_g_5_Template_g_deactivate_1_listener","BoxChartComponent__svg_g_5_Template_g_select_1_listener","result_r3","strokeWidth","_c32","BubbleSeriesComponent__svg_g_0__svg_g_2_Template","BubbleSeriesComponent__svg_g_0__svg_g_2_Template_g_select_0_listener","circle_r2","BubbleSeriesComponent__svg_g_0__svg_g_2_Template_g_activate_0_listener","BubbleSeriesComponent__svg_g_0__svg_g_2_Template_g_deactivate_0_listener","BubbleSeriesComponent__svg_g_0__svg_g_3_Template","BubbleSeriesComponent__svg_g_0__svg_g_3_Template_g_select_0_listener","BubbleSeriesComponent__svg_g_0__svg_g_3_Template_g_activate_0_listener","BubbleSeriesComponent__svg_g_0__svg_g_3_Template_g_deactivate_0_listener","BubbleSeriesComponent__svg_g_0_Template","BubbleChartComponent__svg_g_5_Template","BubbleChartComponent__svg_g_5_Template_g_dimensionsChanged_0_listener","BubbleChartComponent__svg_g_6_Template","BubbleChartComponent__svg_g_6_Template_g_dimensionsChanged_0_listener","BubbleChartComponent__svg_g_8__svg_g_1_Template","BubbleChartComponent__svg_g_8__svg_g_1_Template_g_select_1_listener","series_r5","BubbleChartComponent__svg_g_8__svg_g_1_Template_g_activate_1_listener","BubbleChartComponent__svg_g_8__svg_g_1_Template_g_deactivate_1_listener","rScale","xScaleType","yScaleType","BubbleChartComponent__svg_g_8_Template","clipPath","BubbleChartComponent__svg_g_9__svg_g_1_Template","BubbleChartComponent__svg_g_9__svg_g_1_Template_g_select_1_listener","BubbleChartComponent__svg_g_9__svg_g_1_Template_g_activate_1_listener","BubbleChartComponent__svg_g_9__svg_g_1_Template_g_deactivate_1_listener","BubbleChartComponent__svg_g_9_Template","_c33","HeatMapCellComponent__svg_defs_1_Template","_c34","_c35","a2","HeatCellSeriesComponent__svg_g_0_Template","HeatCellSeriesComponent__svg_g_0_Template_g_select_0_listener","c_r2","cell","HeatCellSeriesComponent__svg_g_0_Template_g_activate_0_listener","HeatCellSeriesComponent__svg_g_0_Template_g_deactivate_0_listener","fill","ɵɵpureFunction3","HeatMapComponent__svg_g_2_Template","HeatMapComponent__svg_g_2_Template_g_dimensionsChanged_0_listener","HeatMapComponent__svg_g_3_Template","HeatMapComponent__svg_g_3_Template_g_dimensionsChanged_0_listener","HeatMapComponent__svg_rect_4_Template","rect_r4","rx","_c36","LineComponent__svg_g_0_Template","initialPath","stroke","LineComponent__svg_g_1_Template","_c37","LineSeriesComponent__svg_g_2_Template","LineSeriesComponent__svg_g_5_Template","isInactive","outerPath","hasGradient","gradientUrl","getColor","rangeFillOpacity","LineChartComponent__svg_g_5_Template","LineChartComponent__svg_g_5_Template_g_dimensionsChanged_0_listener","LineChartComponent__svg_g_6_Template","LineChartComponent__svg_g_6_Template_g_dimensionsChanged_0_listener","LineChartComponent__svg_g_8__svg_g_1_Template","hasRange","LineChartComponent__svg_g_8_Template","LineChartComponent__svg_g_9__svg_g_1_Template","LineChartComponent__svg_g_9_Template","LineChartComponent__svg_g_10__svg_g_2_Template","LineChartComponent__svg_g_10__svg_g_2_Template_g_select_1_listener","LineChartComponent__svg_g_10__svg_g_2_Template_g_activate_1_listener","LineChartComponent__svg_g_10__svg_g_2_Template_g_deactivate_1_listener","series_r8","LineChartComponent__svg_g_10_Template","LineChartComponent__svg_g_10_Template_g_mouseleave_0_listener","LineChartComponent__svg_g_10_Template_g_hover_1_listener","LineChartComponent__svg_g_11__svg_g_1_Template","series_r10","LineChartComponent__svg_g_11_Template","_r9","LineChartComponent__svg_g_11_Template_g_onDomainChange_0_listener","_c38","_c39","PolarSeriesComponent__svg_g_2_Template","seriesColor","PolarSeriesComponent__svg_g_4_Template","PolarSeriesComponent__svg_g_4_Template_g_select_0_listener","circle_r3","PolarSeriesComponent__svg_g_4_Template_g_activate_0_listener","PolarSeriesComponent__svg_g_4_Template_g_deactivate_0_listener","inactive","circleRadius","PolarChartComponent__svg_g_4__svg_circle_1_Template","r_r1","PolarChartComponent__svg_g_4_Template","radiusTicks","PolarChartComponent__svg_g_5__svg_g_1_Template","tick_r3","outerRadius","labelTrim","labelTrimSize","PolarChartComponent__svg_g_5_Template","thetaTicks","PolarChartComponent__svg_g_6_Template","PolarChartComponent__svg_g_6_Template_g_dimensionsChanged_0_listener","yAxisScale","yAxisDims","transformYAxis","PolarChartComponent__svg_g_7_Template","PolarChartComponent__svg_g_8__svg_g_1_Template","PolarChartComponent__svg_g_8__svg_g_1_Template_g_select_1_listener","PolarChartComponent__svg_g_8__svg_g_1_Template_g_activate_1_listener","PolarChartComponent__svg_g_8__svg_g_1_Template_g_deactivate_1_listener","series_r6","PolarChartComponent__svg_g_8_Template","transformPlot","PolarChartComponent__svg_g_9__svg_g_1_Template","PolarChartComponent__svg_g_9__svg_g_1_Template_g_select_1_listener","PolarChartComponent__svg_g_9__svg_g_1_Template_g_activate_1_listener","PolarChartComponent__svg_g_9__svg_g_1_Template_g_deactivate_1_listener","PolarChartComponent__svg_g_9_Template","_c40","PieArcComponent__svg_defs_1_Template","radialGradientId","startOpacity","_c41","PieSeriesComponent__svg_g_0__svg_g_1_Template","arc_r2","trimLabels","maxLabelLength","explodeSlices","PieSeriesComponent__svg_g_0_Template","PieSeriesComponent__svg_g_0_Template_g_select_2_listener","PieSeriesComponent__svg_g_0_Template_g_activate_2_listener","PieSeriesComponent__svg_g_0_Template_g_deactivate_2_listener","PieSeriesComponent__svg_g_0_Template_g_dblclick_2_listener","dblclick","labelVisible","startAngle","endAngle","innerRadius","getTooltipTitle","_c42","_c43","PieGridSeriesComponent__svg_g_1_Template","PieGridSeriesComponent__svg_g_1_Template_g_select_0_listener","PieGridSeriesComponent__svg_g_1_Template_g_activate_0_listener","PieGridSeriesComponent__svg_g_1_Template_g_deactivate_0_listener","arc_r3","pointerEvents","_c44","PieGridComponent__svg_g_2__svg_text_2_Template","series_r3","percent","PieGridComponent__svg_g_2__svg_text_3_Template","PieGridComponent__svg_g_2__svg_text_6_Template","PieGridComponent__svg_g_2__svg_text_7_Template","ɵɵtextInterpolate2","PieGridComponent__svg_g_2_Template","PieGridComponent__svg_g_2_Template_g_select_1_listener","PieGridComponent__svg_g_2_Template_g_activate_1_listener","PieGridComponent__svg_g_2_Template_g_deactivate_1_listener","_c45","_c46","CardComponent__svg_path_2_Template","bandColor","transformBand","bandPath","_c47","CardSeriesComponent__svg_rect_0_Template","c_r1","emptyColor","CardSeriesComponent__svg_g_1_Template","CardSeriesComponent__svg_g_1_Template_g_select_0_listener","c_r4","textColor","medianSize","labelFormatting","_c48","TreeMapCellComponent__svg_defs_1_Template","TreeMapCellComponent__svg_foreignObject_3_span_4_Template","TreeMapCellComponent__svg_foreignObject_3_span_5_Template","formattedValue","TreeMapCellComponent__svg_foreignObject_3_Template","ɵɵnamespaceHTML","getTextColor","_c49","TreeMapCellSeriesComponent__svg_g_0_Template","TreeMapCellSeriesComponent__svg_g_0_Template_g_select_0_listener","c_r3","_c50","_c51","_c52","LinearGaugeComponent__svg_line_4_Template","transformLine","units","LinearGaugeComponent__svg_line_5_Template","_c53","_c54","GaugeAxisComponent__svg_g_1_Template","tick_r1","GaugeAxisComponent__svg_g_2_Template","tick_r2","text","GaugeAxisComponent__svg_g_3_Template","GaugeComponent__svg_g_2_Template","GaugeComponent__svg_g_2_Template_g_select_1_listener","GaugeComponent__svg_g_2_Template_g_activate_1_listener","GaugeComponent__svg_g_2_Template_g_deactivate_1_listener","rotation","backgroundArc","valueArc","cornerRadius","GaugeComponent__svg_g_3_Template","bigSegments","smallSegments","angleSpan","axisTickFormatting","GaugeComponent__svg_text_4_Template","displayValue","SankeyComponent__svg_g_2_Template","SankeyComponent__svg_g_2_Template_path_click_5_listener","link_r2","SankeyComponent__svg_g_2_Template_path_mouseenter_5_listener","id","source","target","x0","startColor","endColor","path","SankeyComponent__svg_g_3_Template","SankeyComponent__svg_g_3_Template_rect_click_1_listener","rect_r5","SankeyComponent__svg_g_3_Template_rect_mouseenter_1_listener","SankeyComponent__svg_g_4__svg_text_1_Template","rect_r6","labelAnchor","SankeyComponent__svg_g_4_Template","showLabels","throttle","func","wait","options","args","result","timeout","previous","later","leading","Date","apply","now","remaining","arguments","clearTimeout","trailing","setTimeout","throttleable","duration","innerDecorator","key","descriptor","configurable","enumerable","get","getter","Object","defineProperty","PlacementTypes","caretOffset","verticalPosition","elDimensions","popoverDimensions","alignment","top","Center","horizontalPosition","left","PositionHelper","calculateVerticalAlignment","window","innerHeight","calculateVerticalCaret","caretDimensions","popoverPosition","calculateHorizontalAlignment","innerWidth","calculateHorizontalCaret","shouldFlip","placement","spacing","flip","positionCaret","elmDim","hostDim","positionContent","determinePlacement","TooltipContentComponent","constructor","element","renderer","platformId","cssClasses","clz","cssClass","ngAfterViewInit","bind","nativeElm","nativeElement","host","getBoundingClientRect","checkFlip","showCaret","addClass","setStyle","caretElm","onWindowResize","ɵfac","TooltipContentComponent_Factory","t","ɵɵdirectiveInject","ElementRef","Renderer2","ɵcmp","ɵɵdefineComponent","selectors","viewQuery","TooltipContentComponent_Query","ɵɵviewQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","hostVars","hostBindings","TooltipContentComponent_HostBindings","TooltipContentComponent_resize_HostBindingHandler","ɵɵresolveWindow","ɵɵclassMap","inputs","decls","vars","consts","TooltipContentComponent_Template","ɵɵclassMapInterpolate1","dependencies","NgIf","NgTemplateOutlet","styles","encapsulation","prototype","ngDevMode","ɵsetClassMetadata","selector","None","decorators","InjectionRegisteryService","injectionService","defaults","components","Map","getByType","create","bindings","createByType","assignDefaults","component","injectComponent","register","destroy","instance","compsByType","componentType","idx","indexOf","splice","destroyAll","destroyByType","comps","i","appendComponent","outputs","has","set","types","push","isViewContainerRef","InjectionService","applicationRef","componentFactoryResolver","injector","setGlobalRootViewContainer","container","globalRootViewContainer","getRootViewContainer","_container","Error","setRootViewContainer","getComponentRootNode","hostView","rootNodes","location","getRootViewContainerNode","projectComponentBindings","bindingKeys","getOwnPropertyNames","bindingName","eventKeys","eventName","componentClass","appendLocation","portalHost","portal","componentRef","attach","InjectionService_Factory","ɵɵinject","ApplicationRef","ComponentFactoryResolver","Injector","ɵprov","ɵɵdefineInjectable","token","factory","TooltipService","TooltipService_Factory","LegendType","ScaleType","ScaleLegendComponent","horizontal","ngOnChanges","changes","gradientValues","gradientString","direction","splits","pairs","reverse","forEach","c","Math","round","join","ScaleLegendComponent_Factory","valueRange","features","ɵɵNgOnChangesFeature","ScaleLegendComponent_Template","changeDetection","OnPush","formatLabel","toLocaleDateString","escapeLabel","replace","match","LegendEntryComponent","toggle","trimmedLabel","onMouseEnter","onMouseLeave","LegendEntryComponent_Factory","LegendEntryComponent_HostBindings","LegendEntryComponent_mouseenter_HostBindingHandler","LegendEntryComponent_mouseleave_HostBindingHandler","LegendEntryComponent_Template","LegendEntryComponent_Template_span_click_0_listener","LegendEntryComponent_Template_span_click_1_listener","LegendComponent","cd","labelActivate","labelDeactivate","legendEntries","update","markForCheck","getLegendEntries","items","findIndex","entry","item","find","d","LegendComponent_Factory","ChangeDetectorRef","LegendComponent_Template","NgForOf","ChartComponent","showLegend","legendColumns","legendType","getLegendType","ScaleLegend","chartColumns","chartWidth","floor","Linear","Legend","ChartComponent_Factory","ɵɵProvidersFeature","ngContentSelectors","ChartComponent_Template","ɵɵprojectionDef","ɵɵprojection","providers","VisibilityObserver","zone","visible","isVisible","runCheck","onVisibilityChange","run","check","offsetHeight","offsetWidth","runOutsideAngular","VisibilityObserver_Factory","NgZone","ɵdir","ɵɵdefineDirective","isDate","toString","call","isNumber","BaseChartComponent","chartElement","schemeType","Ordinal","ngOnInit","bindWindowResizeEvent","visibilityObserver","subscribe","ngOnDestroy","unbindEvents","unsubscribe","cloneData","getContainerDims","hostElem","parentNode","formatDates","g","j","resizeSubscription","subscription","pipe","e","copy","seriesItem","seriesItemCopy","assign","JSON","parse","stringify","BaseChartComponent_Factory","BaseChartComponent_Template","AxisLabelComponent","textHeight","margin","AxisLabelComponent_Factory","attrs","AxisLabelComponent_Template","trimLabel","s","trim","slice","reduceTicks","maxTicks","reduced","modulus","getTickLines","maxLength","maxLines","labelString","totalLines","test","split","reduce","lines","last","pop","startIndex","substring","TextAnchor","XAxisTicksComponent","dimensionsChanged","verticalSpacing","rotateLabels","innerTickSize","outerTickSize","tickPadding","Middle","maxTicksLength","maxAllowedLength","approxHeight","maxPossibleLengthForTickIfWrapped","scale","step","updateDims","parseInt","ticksElement","getTicks","angle","getRotationAngle","adjustedScale","bandwidth","End","tick","tickLength","len","charWidth","wordWidth","baseWidth","maxBaseWidth","cos","PI","labelHeight","longestTick","earlier","current","tickLines","getMaxPossibleLengthForTick","requiredHeight","abs","sin","getMaxTicks","maxScaleTicks","tickValues","tickWidth","longestLabel","averageCharacterWidth","maxCharacters","truncatedText","maxAllowedLines","possibleStringLength","XAxisTicksComponent_Factory","XAxisTicksComponent_Query","XAxisTicksComponent_Template","XAxisComponent","xAxisOffset","xAxisClassName","padding","xAxisTickCount","newLabelOffset","XAxisComponent_Factory","XAxisComponent_Query","ticksComponent","showLabel","XAxisComponent_Template","roundedRect","w","h","r","tl","tr","bl","br","retval","YAxisTicksComponent","referenceLineLength","getApproximateAxisWidth","sign","positionMiddle","chunksLength","bandWidth","heightOfLines","availableFreeSpace","setReferencelines","y2","x2","Start","refMin","map","refMax","tickHeight","maxChars","preferredWidth","YAxisTicksComponent_Factory","YAxisTicksComponent_Query","YAxisTicksComponent_Template","YAxisComponent","yAxisOffset","yAxisClassName","yAxisTickCount","YAxisComponent_Factory","YAxisComponent_Query","YAxisComponent_Template","AxesModule","AxesModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","declarations","exports","StyleTypes","ShowTypes","TooltipDirective","tooltipService","viewContainerRef","tooltipCssClass","tooltipAppendToBody","tooltipSpacing","tooltipShowCaret","tooltipAlignment","popover","tooltipCloseOnClickOutside","tooltipCloseOnMouseLeave","tooltipHideTimeout","tooltipShowTimeout","tooltipShowEvent","all","tooltipImmediateExit","show","hide","listensForFocus","focus","listensForHover","mouseover","hideTooltip","onFocus","showTooltip","onBlur","contentDom","contains","onMouseClick","immediate","time","navigator","userAgent","createBoundOptions","addHideListeners","mouseEnterContentEvent","listen","mouseLeaveContentEvent","documentClickEvent","event","destroyFn","tooltipTitle","tooltipContext","TooltipDirective_Factory","ViewContainerRef","TooltipDirective_HostBindings","TooltipDirective_focusin_HostBindingHandler","TooltipDirective_blur_HostBindingHandler","TooltipDirective_mouseenter_HostBindingHandler","TooltipDirective_mouseleave_HostBindingHandler","TooltipDirective_click_HostBindingHandler","TooltipModule","TooltipModule_Factory","entryComponents","cache","newId","random","pow","SvgLinearGradientComponent","SvgLinearGradientComponent_Factory","stops","SvgLinearGradientComponent_Template","CircleComponent","Array","isArray","CircleComponent_Factory","CircleComponent_HostBindings","CircleComponent_click_HostBindingHandler","CircleComponent_mouseenter_HostBindingHandler","CircleComponent_mouseleave_HostBindingHandler","circleOpacity","CircleComponent_Template","SeriesType","CircleSeriesComponent","Standard","getActiveCircle","indexActiveDataPoint","visibleValue","mapDataPointToCircle","tooltipLabel","Time","Number","d1","getGradientStops","getTooltipMinMaxText","CircleSeriesComponent_Factory","CircleSeriesComponent_Template","animation","GridPanelComponent","GridPanelComponent_Factory","GridPanelComponent_Template","ClassEnum","GridPanelSeriesComponent","gridPanels","getGridPanels","className","Odd","positionIndex","Even","paddingInner","GridPanelSeriesComponent_Factory","GridPanelSeriesComponent_Template","SvgRadialGradientComponent","endOpacity","stopsInput","stopsDefault","SvgRadialGradientComponent_Factory","SvgRadialGradientComponent_Template","AreaComponent","animationsLoaded","loadAnimation","getGradient","updatePathEl","areaPath","startingPath","node","attr","AreaComponent_Factory","AreaComponent_Template","easeOutExpo","b","count","countFrom","countTo","countDecimals","countDuration","callback","startVal","endVal","countDown","decimals","dec","startTime","runCount","timestamp","frameVal","progress","finished","requestAnimationFrame","val","decimalChecker","CountUpDirective","countPrefix","countSuffix","countChange","countFinish","_countDecimals","_countTo","_countFrom","parseFloat","start","cancelAnimationFrame","animationReq","CountUpDirective_Factory","CountUpDirective_Template","root","global","MouseEvent","createMouseEvent","bubbles","cancelable","document","createEvent","initEvent","TooltipArea","anchorOpacity","anchorPos","anchorValues","showPercentage","hover","getValues","xVal","group","groupName","d0","toFixed","v","mouseMove","xPos","pageX","closestIndex","findClosestPointIndex","closestPoint","lastAnchorPos","ev","tooltipAnchor","dispatchEvent","minIndex","maxIndex","minDiff","MAX_VALUE","currentIndex","currentElement","curDiff","tooltipItem","TooltipArea_Factory","TooltipArea_Query","TooltipArea_Template","TooltipArea_Template_rect_mousemove_1_listener","TooltipArea_Template_rect_mouseleave_1_listener","defaultTooltipTemplate_r5","static","Timeline","onDomainChange","initialized","addBrush","getDims","offsetY","xDomain","getXDomain","getXScale","brush","updateBrush","filterId","filter","values","includes","extent","on","selection","newSelection","newDomain","invert","Timeline_Factory","autoScale","Timeline_Template","AdvancedLegendComponent","legendItems","percentageFormatting","getTotal","sum","getLegendItems","origialLabel","AdvancedLegendComponent_Factory","AdvancedLegendComponent_Template","COMPONENTS","ChartCommonModule","ChartCommonModule_Factory","calculateViewDimensions","margins","showXAxis","showYAxis","xAxisHeight","yAxisWidth","showXLabel","showYLabel","legendPosition","columns","xOffset","chartHeight","colorSets","selectable","ColorHelper","cs","colorDomain","generateColorScheme","colorScale","Quantile","points","found","mapping","toLowerCase","getLinearGradientStops","colorValueScale","currentVal","originalOffset","getUniqueXDomainValues","valueSet","Set","add","from","getScaleType","checkDateType","allDates","every","allNumbers","getXDomainArray","xScaleMin","xScaleMax","mappedValues","sort","a","aDate","getTime","bDate","sortLinear","property","sortByDomain","aVal","bVal","aIdx","bIdx","sortByTime","AreaSeriesComponent","stacked","normalized","updateGradient","currentArea","startingArea","xProperty","y0","d0values","d1values","AreaSeriesComponent_Factory","AreaSeriesComponent_Template","AreaChartComponent","legendTitle","xAxis","yAxis","timeline","roundDomains","timelinePadding","filteredDomain","yDomain","getYDomain","seriesDomain","getSeriesDomain","getYScale","updateTimeline","setColors","getLegendOptions","clipPathId","timelineXDomain","yScaleMin","yScaleMax","nice","date","num","deactivateAll","opts","entries","ɵAreaChartComponent_BaseFactory","AreaChartComponent_Factory","ɵɵgetInheritedFactory","contentQueries","AreaChartComponent_ContentQueries","dirIndex","ɵɵcontentQuery","AreaChartComponent_HostBindings","AreaChartComponent_mouseleave_HostBindingHandler","ɵɵInheritDefinitionFeature","AreaChartComponent_Template","AreaChartComponent_Template_ngx_charts_chart_legendLabelClick_0_listener","AreaChartComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener","AreaChartComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener","AreaChartNormalizedComponent","valueOf","ɵAreaChartNormalizedComponent_BaseFactory","AreaChartNormalizedComponent_Factory","AreaChartNormalizedComponent_ContentQueries","AreaChartNormalizedComponent_HostBindings","AreaChartNormalizedComponent_mouseleave_HostBindingHandler","AreaChartNormalizedComponent_Template","AreaChartNormalizedComponent_Template_ngx_charts_chart_legendLabelClick_0_listener","AreaChartNormalizedComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener","AreaChartNormalizedComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener","AreaChartStackedComponent","ɵAreaChartStackedComponent_BaseFactory","AreaChartStackedComponent_Factory","AreaChartStackedComponent_ContentQueries","AreaChartStackedComponent_HostBindings","AreaChartStackedComponent_mouseleave_HostBindingHandler","AreaChartStackedComponent_Template","AreaChartStackedComponent_Template_ngx_charts_chart_legendLabelClick_0_listener","AreaChartStackedComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener","AreaChartStackedComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener","AreaChartModule","AreaChartModule_Factory","BarComponent","checkToHideBar","getStartingPath","getPath","getStartOpacity","getRadius","edges","BarComponent_Factory","BarComponent_HostBindings","BarComponent_mouseenter_HostBindingHandler","BarComponent_mouseleave_HostBindingHandler","BarComponent_Template","BarComponent_Template_path_click_1_listener","BarChartType","D0Types","BarLabelComponent","horizontalPadding","verticalPadding","getSize","formatedValue","barX","barWidth","barY","barHeight","BarLabelComponent_Factory","BarLabelComponent_Template","SeriesHorizontal","updateTooltipSettings","positive","d0Type","getLabel","bar","offset0","offset1","updateDataLabels","section","totalPositive","totalNegative","active","dataItem","barLabel","SeriesHorizontal_Factory","SeriesHorizontal_Template","BarHorizontalComponent","barPadding","rangeRound","fromLegend","ɵBarHorizontalComponent_BaseFactory","BarHorizontalComponent_Factory","BarHorizontalComponent_ContentQueries","BarHorizontalComponent_Template","BarHorizontalComponent_Template_ngx_charts_chart_legendLabelClick_0_listener","BarHorizontalComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener","BarHorizontalComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener","BarHorizontalComponent_Template_g_select_4_listener","BarHorizontalComponent_Template_g_activate_4_listener","BarHorizontalComponent_Template_g_deactivate_4_listener","BarHorizontalComponent_Template_g_dataLabelWidthChanged_4_listener","BarHorizontal2DComponent","groupPadding","groupDomain","getGroupDomain","innerDomain","getInnerDomain","valueDomain","getValueDomain","getGroupScale","getInnerScale","getValueScale","paddingOuter","groupIndex","flat","ɵBarHorizontal2DComponent_BaseFactory","BarHorizontal2DComponent_Factory","BarHorizontal2DComponent_ContentQueries","BarHorizontal2DComponent_Template","BarHorizontal2DComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener","BarHorizontal2DComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener","BarHorizontal2DComponent_Template_ngx_charts_chart_legendLabelClick_0_listener","BarHorizontalNormalizedComponent","ɵBarHorizontalNormalizedComponent_BaseFactory","BarHorizontalNormalizedComponent_Factory","BarHorizontalNormalizedComponent_ContentQueries","BarHorizontalNormalizedComponent_Template","BarHorizontalNormalizedComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener","BarHorizontalNormalizedComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener","BarHorizontalNormalizedComponent_Template_ngx_charts_chart_legendLabelClick_0_listener","BarHorizontalStackedComponent","smallest","biggest","smallestSum","biggestSum","ɵBarHorizontalStackedComponent_BaseFactory","BarHorizontalStackedComponent_Factory","BarHorizontalStackedComponent_ContentQueries","BarHorizontalStackedComponent_Template","BarHorizontalStackedComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener","BarHorizontalStackedComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener","BarHorizontalStackedComponent_Template_ngx_charts_chart_legendLabelClick_0_listener","SeriesVerticalComponent","SeriesVerticalComponent_Factory","SeriesVerticalComponent_Template","BarVerticalComponent","some","isNaN","ɵBarVerticalComponent_BaseFactory","BarVerticalComponent_Factory","BarVerticalComponent_ContentQueries","BarVerticalComponent_Template","BarVerticalComponent_Template_ngx_charts_chart_legendLabelClick_0_listener","BarVerticalComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener","BarVerticalComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener","BarVerticalComponent_Template_g_activate_4_listener","BarVerticalComponent_Template_g_deactivate_4_listener","BarVerticalComponent_Template_g_select_4_listener","BarVerticalComponent_Template_g_dataLabelHeightChanged_4_listener","BarVertical2DComponent","ɵBarVertical2DComponent_BaseFactory","BarVertical2DComponent_Factory","BarVertical2DComponent_ContentQueries","BarVertical2DComponent_Template","BarVertical2DComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener","BarVertical2DComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener","BarVertical2DComponent_Template_ngx_charts_chart_legendLabelClick_0_listener","BarVerticalNormalizedComponent","ɵBarVerticalNormalizedComponent_BaseFactory","BarVerticalNormalizedComponent_Factory","BarVerticalNormalizedComponent_ContentQueries","BarVerticalNormalizedComponent_Template","BarVerticalNormalizedComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener","BarVerticalNormalizedComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener","BarVerticalNormalizedComponent_Template_ngx_charts_chart_legendLabelClick_0_listener","BarVerticalStackedComponent","ɵBarVerticalStackedComponent_BaseFactory","BarVerticalStackedComponent_Factory","BarVerticalStackedComponent_ContentQueries","BarVerticalStackedComponent_Template","BarVerticalStackedComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener","BarVerticalStackedComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener","BarVerticalStackedComponent_Template_ngx_charts_chart_legendLabelClick_0_listener","BarChartModule","BarChartModule_Factory","cloneDeep","BoxComponent","boxStrokeWidth","updateLineEl","maskLineId","boxPath","oldPath","oldLineCoordinates","getStartingLineCoordinates","nodeBar","selectAll","ease","attrTween","pathTween","lineEl","lineCoordinates","_","lineTween","nodeLineEl","baseVal","precision","path0","path1","cloneNode","setAttribute","n0","getTotalLength","n1","distances","dt","p0","getPointAtLength","p1","p","BoxComponent_Factory","BoxComponent_HostBindings","BoxComponent_mouseenter_HostBindingHandler","BoxComponent_mouseleave_HostBindingHandler","BoxComponent_Template","BoxComponent_Template_path_click_7_listener","BoxSeriesComponent","counts","mappedCounts","serie","whiskers","groupCounts","quartiles","getBoxQuantiles","getLinesCoordinates","box","formattedTooltipLabel","inputData","commonX","offsetX","whiskerLineWidth","whiskerZero","whiskerOne","median","topLine","medianLine","bottomLine","verticalLine","BoxSeriesComponent_Factory","BoxSeriesComponent_Template","BoxSeriesComponent_Template_g_select_0_listener","BoxSeriesComponent_Template_g_activate_0_listener","BoxSeriesComponent_Template_g_deactivate_0_listener","BoxChartComponent","setScales","getUniqueBoxChartXDomainValues","legendOpts","ɵBoxChartComponent_BaseFactory","BoxChartComponent_Factory","BoxChartComponent_ContentQueries","legendOptionsConfig","BoxChartComponent_Template","BoxChartComponent_Template_ngx_charts_chart_legendLabelClick_0_listener","BoxChartComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener","BoxChartComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener","BoxChartComponent_Template_g_dimensionsChanged_2_listener","BoxChartComponent_Template_g_dimensionsChanged_3_listener","BoxChartModule","BoxChartModule_Factory","getDomain","minVal","maxVal","getScale","BubbleSeriesComponent","circles","getCircles","hasRadius","hasTooltipLabel","hasSeriesName","radiusValue","BubbleSeriesComponent_Factory","BubbleSeriesComponent_Template","BubbleChartComponent","maxRadius","minRadius","bubblePadding","rDomain","getRDomain","getRScale","getBubblePadding","yMin","xMin","yMax","xMax","Infinity","ɵBubbleChartComponent_BaseFactory","BubbleChartComponent_Factory","BubbleChartComponent_ContentQueries","BubbleChartComponent_HostBindings","BubbleChartComponent_mouseleave_HostBindingHandler","BubbleChartComponent_Template","BubbleChartComponent_Template_ngx_charts_chart_legendLabelClick_0_listener","BubbleChartComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener","BubbleChartComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener","BubbleChartComponent_Template_rect_mouseenter_7_listener","BubbleChartModule","BubbleChartModule_Factory","HeatMapCellComponent","animateToCurrentForm","HeatMapCellComponent_Factory","HeatMapCellComponent_HostBindings","HeatMapCellComponent_mouseenter_HostBindingHandler","HeatMapCellComponent_mouseleave_HostBindingHandler","HeatMapCellComponent_Template","HeatMapCellComponent_Template_rect_click_2_listener","HeatCellSeriesComponent","cells","getCells","row","HeatCellSeriesComponent_Factory","HeatCellSeriesComponent_Template","HeatMapComponent","innerPadding","rects","getRects","getDimension","N","L","f","yVal","ɵHeatMapComponent_BaseFactory","HeatMapComponent_Factory","HeatMapComponent_ContentQueries","HeatMapComponent_Template","HeatMapComponent_Template_ngx_charts_chart_legendLabelClick_0_listener","HeatMapComponent_Template_g_select_5_listener","HeatMapComponent_Template_g_activate_5_listener","HeatMapComponent_Template_g_deactivate_5_listener","HeatMapModule","HeatMapModule_Factory","LineComponent","LineComponent_Factory","LineComponent_Template","strokeDasharray","strokeDashoffset","LineSeriesComponent","updateGradients","sortData","lineGen","getLineGenerator","areaGen","getAreaGenerator","getRangeGenerator","areaGradientStops","LineSeriesComponent_Factory","LineSeriesComponent_Template","LineChartComponent","ɵLineChartComponent_BaseFactory","LineChartComponent_Factory","LineChartComponent_ContentQueries","LineChartComponent_HostBindings","LineChartComponent_mouseleave_HostBindingHandler","LineChartComponent_Template","LineChartComponent_Template_ngx_charts_chart_legendLabelClick_0_listener","LineChartComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener","LineChartComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener","LineChartModule","LineChartModule_Factory","PieLabelComponent","setTransforms","styleTransform","textX","textY","attrTransform","textTransition","isIE","startRadius","innerArc","innerPos","centroid","pos","outerPos","midAngle","PieLabelComponent_Factory","PieLabelComponent_Template","PolarSeriesComponent","linearScaleType","getAngle","cData","defaultTooltipText","PolarSeriesComponent_Factory","PolarSeriesComponent_Template","twoPI","PolarChartComponent","showSeriesOnHover","yAxisMinScale","setDims","setTicks","halfWidth","halfHeight","yOffset","xValues","getXValues","dd","startPos","minDistance","o","getYValues","ɵPolarChartComponent_BaseFactory","PolarChartComponent_Factory","PolarChartComponent_ContentQueries","PolarChartComponent_Template","PolarChartComponent_Template_ngx_charts_chart_legendLabelClick_0_listener","PolarChartComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener","PolarChartComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener","PieArcComponent","getPointerEvents","calc","calculateArc","updateAnimation","_current","copyOfD","interpolater","_timeout","onDblClick","preventDefault","stopPropagation","nativeEvent","PieArcComponent_Factory","PieArcComponent_Template","PieArcComponent_Template_path_click_2_listener","PieArcComponent_Template_path_dblclick_2_listener","PieArcComponent_Template_path_mouseenter_2_listener","PieArcComponent_Template_path_mouseleave_2_listener","PieSeriesComponent","pieGenerator","arcData","calculateLabelPositions","outerArc","factor","pieData","labelPositions","myArc","PieSeriesComponent_Factory","PieSeriesComponent_Template","AdvancedPieChartComponent","ɵAdvancedPieChartComponent_BaseFactory","AdvancedPieChartComponent_Factory","AdvancedPieChartComponent_ContentQueries","nameFormatting","AdvancedPieChartComponent_Template","AdvancedPieChartComponent_Template_g_select_4_listener","AdvancedPieChartComponent_Template_g_activate_4_listener","AdvancedPieChartComponent_Template_g_deactivate_4_listener","AdvancedPieChartComponent_Template_ngx_charts_advanced_legend_select_6_listener","AdvancedPieChartComponent_Template_ngx_charts_advanced_legend_activate_6_listener","AdvancedPieChartComponent_Template_ngx_charts_advanced_legend_deactivate_6_listener","PieChartComponent","labels","doughnut","arcWidth","hasNoOptionalMarginsSet","translation","ɵPieChartComponent_BaseFactory","PieChartComponent_Factory","PieChartComponent_ContentQueries","PieChartComponent_Template","PieChartComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener","PieChartComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener","PieChartComponent_Template_ngx_charts_chart_legendLabelClick_0_listener","PieChartComponent_Template_g_dblclick_2_listener","PieChartComponent_Template_g_select_2_listener","PieChartComponent_Template_g_activate_2_listener","PieChartComponent_Template_g_deactivate_2_listener","gridSize","minWidth","rows","cols","ceil","gridLayout","designatedTotal","res","cardWidth","cardHeight","extra","PieGridSeriesComponent","layout","arcs","getArcs","other","PieGridSeriesComponent_Factory","PieGridSeriesComponent_Template","PieGridComponent","getSeries","baselineLabelHeight","yPos","ɵPieGridComponent_BaseFactory","PieGridComponent_Factory","PieGridComponent_ContentQueries","PieGridComponent_Template","PieChartModule","PieChartModule_Factory","PolarChartModule","PolarChartModule_Factory","calculateTextWidth","fontFamilyKey","defaultWidth","acc","curr","VERDANA_FONT_WIDTHS_16_PX","A","B","C","D","E","F","G","H","I","J","K","M","O","P","Q","R","S","T","U","V","W","X","Y","Z","k","l","m","n","q","u","z","$","CardComponent","textFontSize","bandHeight","textPadding","labelFontSize","scaleTextSSR","hasValue","card","textWidth","cardData","paddedValue","setPadding","scaleText","startCount","repeat","decs","textEl","availableWidth","availableHeight","resizeScale","CardComponent_Factory","CardComponent_Query","CardComponent_Template","CardComponent_Template_g_click_0_listener","hexToRgb","rgb","invertColor","yiq","depth","shadeRGBColor","CardSeriesComponent","sortedLengths","cards","getCards","emptySlots","yPadding","xPadding","valueColor","cardColor","CardSeriesComponent_Factory","CardSeriesComponent_Template","NumberCardComponent","clickable","observers","ɵNumberCardComponent_BaseFactory","NumberCardComponent_Factory","NumberCardComponent_Template","NumberCardComponent_Template_g_select_2_listener","NumberCardModule","NumberCardModule_Factory","TreeMapCellComponent","cellData","TreeMapCellComponent_Factory","TreeMapCellComponent_Template","TreeMapCellComponent_Template_rect_click_2_listener","TreeMapCellSeriesComponent","children","TreeMapCellSeriesComponent_Factory","TreeMapCellSeriesComponent_Template","TreeMapComponent","rootNode","isRoot","parentId","ɵTreeMapComponent_BaseFactory","TreeMapComponent_Factory","TreeMapComponent_ContentQueries","TreeMapComponent_Template","TreeMapComponent_Template_g_select_2_listener","TreeMapModule","TreeMapModule_Factory","ElementType","LinearGaugeComponent","valueResizeScale","unitsResizeScale","valueTextTransform","valueTranslate","unitsTextTransform","unitsTranslate","Value","Units","hasPreviousValue","previousValue","getDisplayValue","el","valueTextEl","unitsTextEl","oldScale","resizeScaleWidth","resizeScaleHeight","ɵLinearGaugeComponent_BaseFactory","LinearGaugeComponent_Factory","LinearGaugeComponent_Query","LinearGaugeComponent_Template","LinearGaugeComponent_Template_ngx_charts_chart_click_0_listener","ɵɵpureFunction0","GaugeArcComponent","GaugeArcComponent_Factory","GaugeArcComponent_Template","GaugeArcComponent_Template_g_select_1_listener","GaugeArcComponent_Template_g_activate_1_listener","GaugeArcComponent_Template_g_deactivate_1_listener","GaugeAxisComponent","rotate","rotationAngle","bigTickSegment","smallTickSegment","big","small","startDistance","textDist","angleDeg","getTextAnchor","skip","getTickPath","smallAngleDeg","smallAngle","lineGenerator","GaugeAxisComponent_Factory","GaugeAxisComponent_Template","GaugeComponent","showAxis","showText","availableRadius","radiusPerArc","textRadius","dataMin","dataMax","textValue","availableSpace","ɵGaugeComponent_BaseFactory","GaugeComponent_Factory","GaugeComponent_ContentQueries","GaugeComponent_Query","GaugeComponent_Template","GaugeComponent_Template_ngx_charts_chart_legendLabelClick_0_listener","GaugeComponent_Template_ngx_charts_chart_legendLabelActivate_0_listener","GaugeComponent_Template_ngx_charts_chart_legendLabelDeactivate_0_listener","GaugeModule","GaugeModule_Factory","ngxChartsPolyfills","SVGElement","HTMLDivElement","SankeyComponent","linkDefs","nodeDefs","flatMap","sankeyGenerator","nodeId","nodeAlign","nodeWidth","nodePadding","nodes","links","nodeRects","rect","getNodeTooltipText","linkPaths","link","linkPath","getLinkTooltipText","sourceNode","targetNode","maximumFractionDigits","layer","ɵSankeyComponent_BaseFactory","SankeyComponent_Factory","SankeyComponent_ContentQueries","SankeyComponent_Template","SankeyModule","SankeyModule_Factory","NgxChartsModule","NgxChartsModule_Factory","fieldType","groupByType","formatter"],"sources":["/Users/joannyprignol/code/JoPrignol/oc-project-2/node_modules/@swimlane/ngx-charts/fesm2020/swimlane-ngx-charts.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { PLATFORM_ID, Component, ViewEncapsulation, Inject, Input, ViewChild, HostBinding, HostListener, Injectable, ChangeDetectionStrategy, EventEmitter, Output, Directive, NgModule, ContentChild } from '@angular/core';\nimport * as i2 from '@angular/common';\nimport { isPlatformBrowser, isPlatformServer, CommonModule } from '@angular/common';\nimport { __decorate } from 'tslib';\nimport { DomPortalOutlet, ComponentPortal } from '@angular/cdk/portal';\nimport { fromEvent } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\nimport { trigger, transition, style, animate } from '@angular/animations';\nimport { select } from 'd3-selection';\nimport { brushX } from 'd3-brush';\nimport { scaleTime, scaleLinear, scalePoint, scaleOrdinal, scaleQuantile, scaleBand } from 'd3-scale';\nimport { area, curveLinear, line, arc, lineRadial, curveCardinalClosed, pie } from 'd3-shape';\nimport { range, min, max, quantile } from 'd3-array';\nimport { interpolate } from 'd3-interpolate';\nimport { easeSinInOut } from 'd3-ease';\nimport rfdc from 'rfdc';\nimport { format } from 'd3-format';\nimport * as d3_color from 'd3-color';\nimport { treemap, stratify } from 'd3-hierarchy';\nimport { sankey, sankeyLeft, sankeyLinkHorizontal } from 'd3-sankey';\nimport { timeFormat } from 'd3-time-format';\n\n/**\n * Throttle a function\n *\n */\nfunction throttle(func, wait, options) {\n    options = options || {};\n    let context;\n    let args;\n    let result;\n    let timeout = null;\n    let previous = 0;\n    function later() {\n        previous = options.leading === false ? 0 : +new Date();\n        timeout = null;\n        result = func.apply(context, args);\n    }\n    return function () {\n        const now = +new Date();\n        if (!previous && options.leading === false) {\n            previous = now;\n        }\n        const remaining = wait - (now - previous);\n        context = this;\n        // eslint-disable-next-line prefer-rest-params\n        args = arguments;\n        if (remaining <= 0) {\n            clearTimeout(timeout);\n            timeout = null;\n            previous = now;\n            result = func.apply(context, args);\n        }\n        else if (!timeout && options.trailing !== false) {\n            timeout = setTimeout(later, remaining);\n        }\n        return result;\n    };\n}\n/**\n * Throttle decorator\n *\n *  class MyClass {\n *    throttleable(10)\n *    myFn() { ... }\n *  }\n */\nfunction throttleable(duration, options) {\n    return function innerDecorator(target, key, descriptor) {\n        return {\n            configurable: true,\n            enumerable: descriptor.enumerable,\n            get: function getter() {\n                Object.defineProperty(this, key, {\n                    configurable: true,\n                    enumerable: descriptor.enumerable,\n                    value: throttle(descriptor.value, duration, options)\n                });\n                return this[key];\n            }\n        };\n    };\n}\n\nvar PlacementTypes;\n(function (PlacementTypes) {\n    PlacementTypes[\"Top\"] = \"top\";\n    PlacementTypes[\"Bottom\"] = \"bottom\";\n    PlacementTypes[\"Left\"] = \"left\";\n    PlacementTypes[\"Right\"] = \"right\";\n    PlacementTypes[\"Center\"] = \"center\";\n})(PlacementTypes || (PlacementTypes = {}));\n\nconst caretOffset = 7;\nfunction verticalPosition(elDimensions, popoverDimensions, alignment) {\n    if (alignment === PlacementTypes.Top) {\n        return elDimensions.top - caretOffset;\n    }\n    if (alignment === PlacementTypes.Bottom) {\n        return elDimensions.top + elDimensions.height - popoverDimensions.height + caretOffset;\n    }\n    if (alignment === PlacementTypes.Center) {\n        return elDimensions.top + elDimensions.height / 2 - popoverDimensions.height / 2;\n    }\n    return undefined;\n}\nfunction horizontalPosition(elDimensions, popoverDimensions, alignment) {\n    if (alignment === PlacementTypes.Left) {\n        return elDimensions.left - caretOffset;\n    }\n    if (alignment === PlacementTypes.Right) {\n        return elDimensions.left + elDimensions.width - popoverDimensions.width + caretOffset;\n    }\n    if (alignment === PlacementTypes.Center) {\n        return elDimensions.left + elDimensions.width / 2 - popoverDimensions.width / 2;\n    }\n    return undefined;\n}\n/**\n * Position helper for the popover directive.\n *\n * @export\n */\nclass PositionHelper {\n    /**\n     * Calculate vertical alignment position\n     *\n     * @memberOf PositionHelper\n     */\n    static calculateVerticalAlignment(elDimensions, popoverDimensions, alignment) {\n        let result = verticalPosition(elDimensions, popoverDimensions, alignment);\n        if (result + popoverDimensions.height > window.innerHeight) {\n            result = window.innerHeight - popoverDimensions.height;\n        }\n        return result;\n    }\n    /**\n     * Calculate vertical caret position\n     *\n     * @memberOf PositionHelper\n     */\n    static calculateVerticalCaret(elDimensions, popoverDimensions, caretDimensions, alignment) {\n        let result;\n        if (alignment === PlacementTypes.Top) {\n            result = elDimensions.height / 2 - caretDimensions.height / 2 + caretOffset;\n        }\n        if (alignment === PlacementTypes.Bottom) {\n            result = popoverDimensions.height - elDimensions.height / 2 - caretDimensions.height / 2 - caretOffset;\n        }\n        if (alignment === PlacementTypes.Center) {\n            result = popoverDimensions.height / 2 - caretDimensions.height / 2;\n        }\n        const popoverPosition = verticalPosition(elDimensions, popoverDimensions, alignment);\n        if (popoverPosition + popoverDimensions.height > window.innerHeight) {\n            result += popoverPosition + popoverDimensions.height - window.innerHeight;\n        }\n        return result;\n    }\n    /**\n     * Calculate horz alignment position\n     *\n     * @memberOf PositionHelper\n     */\n    static calculateHorizontalAlignment(elDimensions, popoverDimensions, alignment) {\n        let result = horizontalPosition(elDimensions, popoverDimensions, alignment);\n        if (result + popoverDimensions.width > window.innerWidth) {\n            result = window.innerWidth - popoverDimensions.width;\n        }\n        return result;\n    }\n    /**\n     * Calculate horz caret position\n     *\n     * @memberOf PositionHelper\n     */\n    static calculateHorizontalCaret(elDimensions, popoverDimensions, caretDimensions, alignment) {\n        let result;\n        if (alignment === PlacementTypes.Left) {\n            result = elDimensions.width / 2 - caretDimensions.width / 2 + caretOffset;\n        }\n        if (alignment === PlacementTypes.Right) {\n            result = popoverDimensions.width - elDimensions.width / 2 - caretDimensions.width / 2 - caretOffset;\n        }\n        if (alignment === PlacementTypes.Center) {\n            result = popoverDimensions.width / 2 - caretDimensions.width / 2;\n        }\n        const popoverPosition = horizontalPosition(elDimensions, popoverDimensions, alignment);\n        if (popoverPosition + popoverDimensions.width > window.innerWidth) {\n            result += popoverPosition + popoverDimensions.width - window.innerWidth;\n        }\n        return result;\n    }\n    /**\n     * Checks if the element's position should be flipped\n     *\n     * @memberOf PositionHelper\n     */\n    static shouldFlip(elDimensions, popoverDimensions, placement, spacing) {\n        let flip = false;\n        if (placement === PlacementTypes.Right) {\n            if (elDimensions.left + elDimensions.width + popoverDimensions.width + spacing > window.innerWidth) {\n                flip = true;\n            }\n        }\n        if (placement === PlacementTypes.Left) {\n            if (elDimensions.left - popoverDimensions.width - spacing < 0) {\n                flip = true;\n            }\n        }\n        if (placement === PlacementTypes.Top) {\n            if (elDimensions.top - popoverDimensions.height - spacing < 0) {\n                flip = true;\n            }\n        }\n        if (placement === PlacementTypes.Bottom) {\n            if (elDimensions.top + elDimensions.height + popoverDimensions.height + spacing > window.innerHeight) {\n                flip = true;\n            }\n        }\n        return flip;\n    }\n    /**\n     * Position caret\n     *\n     * @memberOf PositionHelper\n     */\n    static positionCaret(placement, elmDim, hostDim, caretDimensions, alignment) {\n        let top = 0;\n        let left = 0;\n        if (placement === PlacementTypes.Right) {\n            left = -7;\n            top = PositionHelper.calculateVerticalCaret(hostDim, elmDim, caretDimensions, alignment);\n        }\n        else if (placement === PlacementTypes.Left) {\n            left = elmDim.width;\n            top = PositionHelper.calculateVerticalCaret(hostDim, elmDim, caretDimensions, alignment);\n        }\n        else if (placement === PlacementTypes.Top) {\n            top = elmDim.height;\n            left = PositionHelper.calculateHorizontalCaret(hostDim, elmDim, caretDimensions, alignment);\n        }\n        else if (placement === PlacementTypes.Bottom) {\n            top = -7;\n            left = PositionHelper.calculateHorizontalCaret(hostDim, elmDim, caretDimensions, alignment);\n        }\n        return { top, left };\n    }\n    /**\n     * Position content\n     *\n     * @memberOf PositionHelper\n     */\n    static positionContent(placement, elmDim, hostDim, spacing, alignment) {\n        let top = 0;\n        let left = 0;\n        if (placement === PlacementTypes.Right) {\n            left = hostDim.left + hostDim.width + spacing;\n            top = PositionHelper.calculateVerticalAlignment(hostDim, elmDim, alignment);\n        }\n        else if (placement === PlacementTypes.Left) {\n            left = hostDim.left - elmDim.width - spacing;\n            top = PositionHelper.calculateVerticalAlignment(hostDim, elmDim, alignment);\n        }\n        else if (placement === PlacementTypes.Top) {\n            top = hostDim.top - elmDim.height - spacing;\n            left = PositionHelper.calculateHorizontalAlignment(hostDim, elmDim, alignment);\n        }\n        else if (placement === PlacementTypes.Bottom) {\n            top = hostDim.top + hostDim.height + spacing;\n            left = PositionHelper.calculateHorizontalAlignment(hostDim, elmDim, alignment);\n        }\n        return { top, left };\n    }\n    /**\n     * Determine placement based on flip\n     *\n     * @memberOf PositionHelper\n     */\n    static determinePlacement(placement, elmDim, hostDim, spacing) {\n        const shouldFlip = PositionHelper.shouldFlip(hostDim, elmDim, placement, spacing);\n        if (shouldFlip) {\n            if (placement === PlacementTypes.Right) {\n                return PlacementTypes.Left;\n            }\n            else if (placement === PlacementTypes.Left) {\n                return PlacementTypes.Right;\n            }\n            else if (placement === PlacementTypes.Top) {\n                return PlacementTypes.Bottom;\n            }\n            else if (placement === PlacementTypes.Bottom) {\n                return PlacementTypes.Top;\n            }\n        }\n        return placement;\n    }\n}\n\nclass TooltipContentComponent {\n    constructor(element, renderer, platformId) {\n        this.element = element;\n        this.renderer = renderer;\n        this.platformId = platformId;\n    }\n    get cssClasses() {\n        let clz = 'ngx-charts-tooltip-content';\n        clz += ` position-${this.placement}`;\n        clz += ` type-${this.type}`;\n        clz += ` ${this.cssClass}`;\n        return clz;\n    }\n    ngAfterViewInit() {\n        setTimeout(this.position.bind(this));\n    }\n    position() {\n        if (!isPlatformBrowser(this.platformId)) {\n            return;\n        }\n        const nativeElm = this.element.nativeElement;\n        const hostDim = this.host.nativeElement.getBoundingClientRect();\n        // if no dims were found, never show\n        if (!hostDim.height && !hostDim.width)\n            return;\n        const elmDim = nativeElm.getBoundingClientRect();\n        this.checkFlip(hostDim, elmDim);\n        this.positionContent(nativeElm, hostDim, elmDim);\n        if (this.showCaret) {\n            this.positionCaret(hostDim, elmDim);\n        }\n        // animate its entry\n        setTimeout(() => this.renderer.addClass(nativeElm, 'animate'), 1);\n    }\n    positionContent(nativeElm, hostDim, elmDim) {\n        const { top, left } = PositionHelper.positionContent(this.placement, elmDim, hostDim, this.spacing, this.alignment);\n        this.renderer.setStyle(nativeElm, 'top', `${top}px`);\n        this.renderer.setStyle(nativeElm, 'left', `${left}px`);\n    }\n    positionCaret(hostDim, elmDim) {\n        const caretElm = this.caretElm.nativeElement;\n        const caretDimensions = caretElm.getBoundingClientRect();\n        const { top, left } = PositionHelper.positionCaret(this.placement, elmDim, hostDim, caretDimensions, this.alignment);\n        this.renderer.setStyle(caretElm, 'top', `${top}px`);\n        this.renderer.setStyle(caretElm, 'left', `${left}px`);\n    }\n    checkFlip(hostDim, elmDim) {\n        this.placement = PositionHelper.determinePlacement(this.placement, elmDim, hostDim, this.spacing);\n    }\n    onWindowResize() {\n        this.position();\n    }\n}\nTooltipContentComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TooltipContentComponent, deps: [{ token: i0.ElementRef }, { token: i0.Renderer2 }, { token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Component });\nTooltipContentComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: TooltipContentComponent, selector: \"ngx-tooltip-content\", inputs: { host: \"host\", showCaret: \"showCaret\", type: \"type\", placement: \"placement\", alignment: \"alignment\", spacing: \"spacing\", cssClass: \"cssClass\", title: \"title\", template: \"template\", context: \"context\" }, host: { listeners: { \"window:resize\": \"onWindowResize()\" }, properties: { \"class\": \"this.cssClasses\" } }, viewQueries: [{ propertyName: \"caretElm\", first: true, predicate: [\"caretElm\"], descendants: true }], ngImport: i0, template: `\n    <div>\n      <span #caretElm [hidden]=\"!showCaret\" class=\"tooltip-caret position-{{ this.placement }}\"> </span>\n      <div class=\"tooltip-content\">\n        <span *ngIf=\"!title\">\n          <ng-template [ngTemplateOutlet]=\"template\" [ngTemplateOutletContext]=\"{ model: context }\"> </ng-template>\n        </span>\n        <span *ngIf=\"title\" [innerHTML]=\"title\"> </span>\n      </div>\n    </div>\n  `, isInline: true, styles: [\".ngx-charts-tooltip-content{position:fixed;border-radius:3px;z-index:5000;display:block;font-weight:400;opacity:0;pointer-events:none!important}.ngx-charts-tooltip-content.type-popover{background:#fff;color:#060709;border:1px solid #72809b;box-shadow:0 1px 3px #0003,0 1px 1px #00000024,0 2px 1px -1px #0000001f;font-size:13px;padding:4px}.ngx-charts-tooltip-content.type-popover .tooltip-caret{position:absolute;z-index:5001;width:0;height:0}.ngx-charts-tooltip-content.type-popover .tooltip-caret.position-left{border-top:7px solid transparent;border-bottom:7px solid transparent;border-left:7px solid #fff}.ngx-charts-tooltip-content.type-popover .tooltip-caret.position-top{border-left:7px solid transparent;border-right:7px solid transparent;border-top:7px solid #fff}.ngx-charts-tooltip-content.type-popover .tooltip-caret.position-right{border-top:7px solid transparent;border-bottom:7px solid transparent;border-right:7px solid #fff}.ngx-charts-tooltip-content.type-popover .tooltip-caret.position-bottom{border-left:7px solid transparent;border-right:7px solid transparent;border-bottom:7px solid #fff}.ngx-charts-tooltip-content.type-tooltip{color:#fff;background:rgba(0,0,0,.75);font-size:12px;padding:0 10px;text-align:center;pointer-events:auto}.ngx-charts-tooltip-content.type-tooltip .tooltip-caret.position-left{border-top:7px solid transparent;border-bottom:7px solid transparent;border-left:7px solid rgba(0,0,0,.75)}.ngx-charts-tooltip-content.type-tooltip .tooltip-caret.position-top{border-left:7px solid transparent;border-right:7px solid transparent;border-top:7px solid rgba(0,0,0,.75)}.ngx-charts-tooltip-content.type-tooltip .tooltip-caret.position-right{border-top:7px solid transparent;border-bottom:7px solid transparent;border-right:7px solid rgba(0,0,0,.75)}.ngx-charts-tooltip-content.type-tooltip .tooltip-caret.position-bottom{border-left:7px solid transparent;border-right:7px solid transparent;border-bottom:7px solid rgba(0,0,0,.75)}.ngx-charts-tooltip-content .tooltip-label{display:block;line-height:1em;padding:8px 5px 5px;font-size:1em}.ngx-charts-tooltip-content .tooltip-val{display:block;font-size:1.3em;line-height:1em;padding:0 5px 8px}.ngx-charts-tooltip-content .tooltip-caret{position:absolute;z-index:5001;width:0;height:0}.ngx-charts-tooltip-content.position-right{transform:translate(10px)}.ngx-charts-tooltip-content.position-left{transform:translate(-10px)}.ngx-charts-tooltip-content.position-top{transform:translateY(-10px)}.ngx-charts-tooltip-content.position-bottom{transform:translateY(10px)}.ngx-charts-tooltip-content.animate{opacity:1;transition:opacity .3s,transform .3s;transform:translate(0);pointer-events:auto}.area-tooltip-container{padding:5px 0;pointer-events:none}.tooltip-item{text-align:left;line-height:1.2em;padding:5px 0}.tooltip-item .tooltip-item-color{display:inline-block;height:12px;width:12px;margin-right:5px;color:#5b646b;border-radius:3px}\\n\"], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }], encapsulation: i0.ViewEncapsulation.None });\n__decorate([\n    throttleable(100)\n], TooltipContentComponent.prototype, \"onWindowResize\", null);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TooltipContentComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-tooltip-content', template: `\n    <div>\n      <span #caretElm [hidden]=\"!showCaret\" class=\"tooltip-caret position-{{ this.placement }}\"> </span>\n      <div class=\"tooltip-content\">\n        <span *ngIf=\"!title\">\n          <ng-template [ngTemplateOutlet]=\"template\" [ngTemplateOutletContext]=\"{ model: context }\"> </ng-template>\n        </span>\n        <span *ngIf=\"title\" [innerHTML]=\"title\"> </span>\n      </div>\n    </div>\n  `, encapsulation: ViewEncapsulation.None, styles: [\".ngx-charts-tooltip-content{position:fixed;border-radius:3px;z-index:5000;display:block;font-weight:400;opacity:0;pointer-events:none!important}.ngx-charts-tooltip-content.type-popover{background:#fff;color:#060709;border:1px solid #72809b;box-shadow:0 1px 3px #0003,0 1px 1px #00000024,0 2px 1px -1px #0000001f;font-size:13px;padding:4px}.ngx-charts-tooltip-content.type-popover .tooltip-caret{position:absolute;z-index:5001;width:0;height:0}.ngx-charts-tooltip-content.type-popover .tooltip-caret.position-left{border-top:7px solid transparent;border-bottom:7px solid transparent;border-left:7px solid #fff}.ngx-charts-tooltip-content.type-popover .tooltip-caret.position-top{border-left:7px solid transparent;border-right:7px solid transparent;border-top:7px solid #fff}.ngx-charts-tooltip-content.type-popover .tooltip-caret.position-right{border-top:7px solid transparent;border-bottom:7px solid transparent;border-right:7px solid #fff}.ngx-charts-tooltip-content.type-popover .tooltip-caret.position-bottom{border-left:7px solid transparent;border-right:7px solid transparent;border-bottom:7px solid #fff}.ngx-charts-tooltip-content.type-tooltip{color:#fff;background:rgba(0,0,0,.75);font-size:12px;padding:0 10px;text-align:center;pointer-events:auto}.ngx-charts-tooltip-content.type-tooltip .tooltip-caret.position-left{border-top:7px solid transparent;border-bottom:7px solid transparent;border-left:7px solid rgba(0,0,0,.75)}.ngx-charts-tooltip-content.type-tooltip .tooltip-caret.position-top{border-left:7px solid transparent;border-right:7px solid transparent;border-top:7px solid rgba(0,0,0,.75)}.ngx-charts-tooltip-content.type-tooltip .tooltip-caret.position-right{border-top:7px solid transparent;border-bottom:7px solid transparent;border-right:7px solid rgba(0,0,0,.75)}.ngx-charts-tooltip-content.type-tooltip .tooltip-caret.position-bottom{border-left:7px solid transparent;border-right:7px solid transparent;border-bottom:7px solid rgba(0,0,0,.75)}.ngx-charts-tooltip-content .tooltip-label{display:block;line-height:1em;padding:8px 5px 5px;font-size:1em}.ngx-charts-tooltip-content .tooltip-val{display:block;font-size:1.3em;line-height:1em;padding:0 5px 8px}.ngx-charts-tooltip-content .tooltip-caret{position:absolute;z-index:5001;width:0;height:0}.ngx-charts-tooltip-content.position-right{transform:translate(10px)}.ngx-charts-tooltip-content.position-left{transform:translate(-10px)}.ngx-charts-tooltip-content.position-top{transform:translateY(-10px)}.ngx-charts-tooltip-content.position-bottom{transform:translateY(10px)}.ngx-charts-tooltip-content.animate{opacity:1;transition:opacity .3s,transform .3s;transform:translate(0);pointer-events:auto}.area-tooltip-container{padding:5px 0;pointer-events:none}.tooltip-item{text-align:left;line-height:1.2em;padding:5px 0}.tooltip-item .tooltip-item-color{display:inline-block;height:12px;width:12px;margin-right:5px;color:#5b646b;border-radius:3px}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.Renderer2 }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }]; }, propDecorators: { host: [{\n                type: Input\n            }], showCaret: [{\n                type: Input\n            }], type: [{\n                type: Input\n            }], placement: [{\n                type: Input\n            }], alignment: [{\n                type: Input\n            }], spacing: [{\n                type: Input\n            }], cssClass: [{\n                type: Input\n            }], title: [{\n                type: Input\n            }], template: [{\n                type: Input\n            }], context: [{\n                type: Input\n            }], caretElm: [{\n                type: ViewChild,\n                args: ['caretElm']\n            }], cssClasses: [{\n                type: HostBinding,\n                args: ['class']\n            }], onWindowResize: [{\n                type: HostListener,\n                args: ['window:resize']\n            }] } });\n\nclass InjectionRegisteryService {\n    constructor(injectionService) {\n        this.injectionService = injectionService;\n        this.defaults = {};\n        this.components = new Map();\n    }\n    getByType(type = this.type) {\n        return this.components.get(type);\n    }\n    create(bindings) {\n        return this.createByType(this.type, bindings);\n    }\n    createByType(type, bindings) {\n        bindings = this.assignDefaults(bindings);\n        const component = this.injectComponent(type, bindings);\n        this.register(type, component);\n        return component;\n    }\n    destroy(instance) {\n        const compsByType = this.components.get(instance.componentType);\n        if (compsByType && compsByType.length) {\n            const idx = compsByType.indexOf(instance);\n            if (idx > -1) {\n                const component = compsByType[idx];\n                component.destroy();\n                compsByType.splice(idx, 1);\n            }\n        }\n    }\n    destroyAll() {\n        this.destroyByType(this.type);\n    }\n    destroyByType(type) {\n        const comps = this.components.get(type);\n        if (comps && comps.length) {\n            let i = comps.length - 1;\n            while (i >= 0) {\n                this.destroy(comps[i--]);\n            }\n        }\n    }\n    injectComponent(type, bindings) {\n        return this.injectionService.appendComponent(type, bindings);\n    }\n    assignDefaults(bindings) {\n        const inputs = { ...this.defaults.inputs };\n        const outputs = { ...this.defaults.outputs };\n        if (!bindings.inputs && !bindings.outputs) {\n            bindings = { inputs: bindings };\n        }\n        if (inputs) {\n            bindings.inputs = { ...inputs, ...bindings.inputs };\n        }\n        if (outputs) {\n            bindings.outputs = { ...outputs, ...bindings.outputs };\n        }\n        return bindings;\n    }\n    register(type, component) {\n        if (!this.components.has(type)) {\n            this.components.set(type, []);\n        }\n        const types = this.components.get(type);\n        types.push(component);\n    }\n}\n\nfunction isViewContainerRef(x) {\n    return x.element;\n}\n/**\n * Injection service is a helper to append components\n * dynamically to a known location in the DOM, most\n * noteably for dialogs/tooltips appending to body.\n *\n * @export\n */\nclass InjectionService {\n    constructor(applicationRef, componentFactoryResolver, injector) {\n        this.applicationRef = applicationRef;\n        this.componentFactoryResolver = componentFactoryResolver;\n        this.injector = injector;\n    }\n    /**\n     * Sets a default global root view container. This is useful for\n     * things like ngUpgrade that doesn't have a ApplicationRef root.\n     *\n     * @param container\n     */\n    static setGlobalRootViewContainer(container) {\n        InjectionService.globalRootViewContainer = container;\n    }\n    /**\n     * Gets the root view container to inject the component to.\n     *\n     * @memberOf InjectionService\n     */\n    getRootViewContainer() {\n        if (this._container)\n            return this._container;\n        if (InjectionService.globalRootViewContainer)\n            return InjectionService.globalRootViewContainer;\n        if (this.applicationRef.components.length)\n            return this.applicationRef.components[0];\n        throw new Error('View Container not found! ngUpgrade needs to manually set this via setRootViewContainer or setGlobalRootViewContainer.');\n    }\n    /**\n     * Overrides the default root view container. This is useful for\n     * things like ngUpgrade that doesn't have a ApplicationRef root.\n     *\n     * @param container\n     *\n     * @memberOf InjectionService\n     */\n    setRootViewContainer(container) {\n        this._container = container;\n    }\n    /**\n     * Gets the html element for a component ref.\n     *\n     * @param componentRef\n     *\n     * @memberOf InjectionService\n     */\n    getComponentRootNode(component) {\n        if (isViewContainerRef(component)) {\n            return component.element.nativeElement;\n        }\n        if (component.hostView && component.hostView.rootNodes.length > 0) {\n            return component.hostView.rootNodes[0];\n        }\n        // the top most component root node has no `hostView`\n        return component.location.nativeElement;\n    }\n    /**\n     * Gets the root component container html element.\n     *\n     * @memberOf InjectionService\n     */\n    getRootViewContainerNode(component) {\n        return this.getComponentRootNode(component);\n    }\n    /**\n     * Projects the bindings onto the component\n     *\n     * @param component\n     * @param options\n     *\n     * @memberOf InjectionService\n     */\n    projectComponentBindings(component, bindings) {\n        if (bindings) {\n            if (bindings.inputs !== undefined) {\n                const bindingKeys = Object.getOwnPropertyNames(bindings.inputs);\n                for (const bindingName of bindingKeys) {\n                    component.instance[bindingName] = bindings.inputs[bindingName];\n                }\n            }\n            if (bindings.outputs !== undefined) {\n                const eventKeys = Object.getOwnPropertyNames(bindings.outputs);\n                for (const eventName of eventKeys) {\n                    component.instance[eventName] = bindings.outputs[eventName];\n                }\n            }\n        }\n        return component;\n    }\n    /**\n     * Appends a component to a adjacent location\n     *\n     * @param componentClass\n     * @param [options={}]\n     * @param [location]\n     *\n     * @memberOf InjectionService\n     */\n    appendComponent(componentClass, bindings = {}, location) {\n        if (!location)\n            location = this.getRootViewContainer();\n        const appendLocation = this.getComponentRootNode(location);\n        const portalHost = new DomPortalOutlet(appendLocation, this.componentFactoryResolver, this.applicationRef, this.injector);\n        const portal = new ComponentPortal(componentClass);\n        const componentRef = portalHost.attach(portal);\n        this.projectComponentBindings(componentRef, bindings);\n        return componentRef;\n    }\n}\nInjectionService.globalRootViewContainer = null;\nInjectionService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: InjectionService, deps: [{ token: i0.ApplicationRef }, { token: i0.ComponentFactoryResolver }, { token: i0.Injector }], target: i0.ɵɵFactoryTarget.Injectable });\nInjectionService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: InjectionService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: InjectionService, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: i0.ApplicationRef }, { type: i0.ComponentFactoryResolver }, { type: i0.Injector }]; } });\n\nclass TooltipService extends InjectionRegisteryService {\n    constructor(injectionService) {\n        super(injectionService);\n        this.type = TooltipContentComponent;\n    }\n}\nTooltipService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TooltipService, deps: [{ token: InjectionService }], target: i0.ɵɵFactoryTarget.Injectable });\nTooltipService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TooltipService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TooltipService, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: InjectionService }]; } });\n\nvar LegendPosition;\n(function (LegendPosition) {\n    LegendPosition[\"Right\"] = \"right\";\n    LegendPosition[\"Below\"] = \"below\";\n})(LegendPosition || (LegendPosition = {}));\nvar LegendType;\n(function (LegendType) {\n    LegendType[\"ScaleLegend\"] = \"scaleLegend\";\n    LegendType[\"Legend\"] = \"legend\";\n})(LegendType || (LegendType = {}));\n\nvar ScaleType;\n(function (ScaleType) {\n    ScaleType[\"Time\"] = \"time\";\n    ScaleType[\"Linear\"] = \"linear\";\n    ScaleType[\"Ordinal\"] = \"ordinal\";\n    ScaleType[\"Quantile\"] = \"quantile\";\n})(ScaleType || (ScaleType = {}));\n\nclass ScaleLegendComponent {\n    constructor() {\n        this.horizontal = false;\n    }\n    ngOnChanges(changes) {\n        const gradientValues = this.gradientString(this.colors.range(), this.colors.domain());\n        const direction = this.horizontal ? 'right' : 'bottom';\n        this.gradient = `linear-gradient(to ${direction}, ${gradientValues})`;\n    }\n    /**\n     * Generates the string used in the gradient stylesheet properties\n     * @param colors array of colors\n     * @param splits array of splits on a scale of (0, 1)\n     */\n    gradientString(colors, splits) {\n        // add the 100%\n        splits.push(1);\n        const pairs = [];\n        colors.reverse().forEach((c, i) => {\n            pairs.push(`${c} ${Math.round(splits[i] * 100)}%`);\n        });\n        return pairs.join(', ');\n    }\n}\nScaleLegendComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: ScaleLegendComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nScaleLegendComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: ScaleLegendComponent, selector: \"ngx-charts-scale-legend\", inputs: { valueRange: \"valueRange\", colors: \"colors\", height: \"height\", width: \"width\", horizontal: \"horizontal\" }, usesOnChanges: true, ngImport: i0, template: `\n    <div\n      class=\"scale-legend\"\n      [class.horizontal-legend]=\"horizontal\"\n      [style.height.px]=\"horizontal ? undefined : height\"\n      [style.width.px]=\"width\"\n    >\n      <div class=\"scale-legend-label\">\n        <span>{{ valueRange[1].toLocaleString() }}</span>\n      </div>\n      <div class=\"scale-legend-wrap\" [style.background]=\"gradient\"></div>\n      <div class=\"scale-legend-label\">\n        <span>{{ valueRange[0].toLocaleString() }}</span>\n      </div>\n    </div>\n  `, isInline: true, styles: [\".chart-legend{display:inline-block;padding:0;width:auto!important}.chart-legend .scale-legend{text-align:center;display:flex;flex-direction:column}.chart-legend .scale-legend-wrap{display:inline-block;flex:1;width:30px;border-radius:5px;margin:0 auto}.chart-legend .scale-legend-label{font-size:12px}.chart-legend .horizontal-legend.scale-legend{flex-direction:row}.chart-legend .horizontal-legend .scale-legend-wrap{width:auto;height:30px;margin:0 16px}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: ScaleLegendComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-scale-legend', template: `\n    <div\n      class=\"scale-legend\"\n      [class.horizontal-legend]=\"horizontal\"\n      [style.height.px]=\"horizontal ? undefined : height\"\n      [style.width.px]=\"width\"\n    >\n      <div class=\"scale-legend-label\">\n        <span>{{ valueRange[1].toLocaleString() }}</span>\n      </div>\n      <div class=\"scale-legend-wrap\" [style.background]=\"gradient\"></div>\n      <div class=\"scale-legend-label\">\n        <span>{{ valueRange[0].toLocaleString() }}</span>\n      </div>\n    </div>\n  `, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".chart-legend{display:inline-block;padding:0;width:auto!important}.chart-legend .scale-legend{text-align:center;display:flex;flex-direction:column}.chart-legend .scale-legend-wrap{display:inline-block;flex:1;width:30px;border-radius:5px;margin:0 auto}.chart-legend .scale-legend-label{font-size:12px}.chart-legend .horizontal-legend.scale-legend{flex-direction:row}.chart-legend .horizontal-legend .scale-legend-wrap{width:auto;height:30px;margin:0 16px}\\n\"] }]\n        }], propDecorators: { valueRange: [{\n                type: Input\n            }], colors: [{\n                type: Input\n            }], height: [{\n                type: Input\n            }], width: [{\n                type: Input\n            }], horizontal: [{\n                type: Input\n            }] } });\n\n/**\n * Formats a label given a date, number or string.\n *\n * @export\n */\nfunction formatLabel(label) {\n    if (label instanceof Date) {\n        label = label.toLocaleDateString();\n    }\n    else {\n        label = label.toLocaleString();\n    }\n    return label;\n}\n/**\n * Escapes a label.\n *\n * @export\n */\nfunction escapeLabel(label) {\n    return label.toLocaleString().replace(/[&'`\"<>]/g, match => {\n        return {\n            '&': '&amp;',\n            // tslint:disable-next-line: quotemark\n            \"'\": '&#x27;',\n            '`': '&#x60;',\n            '\"': '&quot;',\n            '<': '&lt;',\n            '>': '&gt;'\n        }[match];\n    });\n}\n\nclass LegendEntryComponent {\n    constructor() {\n        this.isActive = false;\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.toggle = new EventEmitter();\n    }\n    get trimmedLabel() {\n        return this.formattedLabel || '(empty)';\n    }\n    onMouseEnter() {\n        this.activate.emit({ name: this.label });\n    }\n    onMouseLeave() {\n        this.deactivate.emit({ name: this.label });\n    }\n}\nLegendEntryComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: LegendEntryComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nLegendEntryComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: LegendEntryComponent, selector: \"ngx-charts-legend-entry\", inputs: { color: \"color\", label: \"label\", formattedLabel: \"formattedLabel\", isActive: \"isActive\" }, outputs: { select: \"select\", activate: \"activate\", deactivate: \"deactivate\", toggle: \"toggle\" }, host: { listeners: { \"mouseenter\": \"onMouseEnter()\", \"mouseleave\": \"onMouseLeave()\" } }, ngImport: i0, template: `\n    <span [title]=\"formattedLabel\" tabindex=\"-1\" [class.active]=\"isActive\" (click)=\"select.emit(formattedLabel)\">\n      <span class=\"legend-label-color\" [style.background-color]=\"color\" (click)=\"toggle.emit(formattedLabel)\"> </span>\n      <span class=\"legend-label-text\">\n        {{ trimmedLabel }}\n      </span>\n    </span>\n  `, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: LegendEntryComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ngx-charts-legend-entry',\n                    template: `\n    <span [title]=\"formattedLabel\" tabindex=\"-1\" [class.active]=\"isActive\" (click)=\"select.emit(formattedLabel)\">\n      <span class=\"legend-label-color\" [style.background-color]=\"color\" (click)=\"toggle.emit(formattedLabel)\"> </span>\n      <span class=\"legend-label-text\">\n        {{ trimmedLabel }}\n      </span>\n    </span>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], propDecorators: { color: [{\n                type: Input\n            }], label: [{\n                type: Input\n            }], formattedLabel: [{\n                type: Input\n            }], isActive: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], toggle: [{\n                type: Output\n            }], onMouseEnter: [{\n                type: HostListener,\n                args: ['mouseenter']\n            }], onMouseLeave: [{\n                type: HostListener,\n                args: ['mouseleave']\n            }] } });\n\nclass LegendComponent {\n    constructor(cd) {\n        this.cd = cd;\n        this.horizontal = false;\n        this.labelClick = new EventEmitter();\n        this.labelActivate = new EventEmitter();\n        this.labelDeactivate = new EventEmitter();\n        this.legendEntries = [];\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    update() {\n        this.cd.markForCheck();\n        this.legendEntries = this.getLegendEntries();\n    }\n    getLegendEntries() {\n        const items = [];\n        for (const label of this.data) {\n            const formattedLabel = formatLabel(label);\n            const idx = items.findIndex(i => {\n                return i.label === formattedLabel;\n            });\n            if (idx === -1) {\n                items.push({\n                    label,\n                    formattedLabel,\n                    color: this.colors.getColor(label)\n                });\n            }\n        }\n        return items;\n    }\n    isActive(entry) {\n        if (!this.activeEntries)\n            return false;\n        const item = this.activeEntries.find(d => {\n            return entry.label === d.name;\n        });\n        return item !== undefined;\n    }\n    activate(item) {\n        this.labelActivate.emit(item);\n    }\n    deactivate(item) {\n        this.labelDeactivate.emit(item);\n    }\n    trackBy(index, item) {\n        return item.label;\n    }\n}\nLegendComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: LegendComponent, deps: [{ token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nLegendComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: LegendComponent, selector: \"ngx-charts-legend\", inputs: { data: \"data\", title: \"title\", colors: \"colors\", height: \"height\", width: \"width\", activeEntries: \"activeEntries\", horizontal: \"horizontal\" }, outputs: { labelClick: \"labelClick\", labelActivate: \"labelActivate\", labelDeactivate: \"labelDeactivate\" }, usesOnChanges: true, ngImport: i0, template: `\n    <div [style.width.px]=\"width\">\n      <header class=\"legend-title\" *ngIf=\"title?.length > 0\">\n        <span class=\"legend-title-text\">{{ title }}</span>\n      </header>\n      <div class=\"legend-wrap\">\n        <ul class=\"legend-labels\" [class.horizontal-legend]=\"horizontal\" [style.max-height.px]=\"height - 45\">\n          <li *ngFor=\"let entry of legendEntries; trackBy: trackBy\" class=\"legend-label\">\n            <ngx-charts-legend-entry\n              [label]=\"entry.label\"\n              [formattedLabel]=\"entry.formattedLabel\"\n              [color]=\"entry.color\"\n              [isActive]=\"isActive(entry)\"\n              (select)=\"labelClick.emit($event)\"\n              (activate)=\"activate($event)\"\n              (deactivate)=\"deactivate($event)\"\n            >\n            </ngx-charts-legend-entry>\n          </li>\n        </ul>\n      </div>\n    </div>\n  `, isInline: true, styles: [\".chart-legend{display:inline-block;padding:0;width:auto!important}.chart-legend .legend-title{white-space:nowrap;overflow:hidden;margin-left:10px;margin-bottom:5px;font-size:14px;font-weight:700}.chart-legend ul,.chart-legend li{padding:0;margin:0;list-style:none}.chart-legend .horizontal-legend li{display:inline-block}.chart-legend .legend-wrap{width:calc(100% - 10px)}.chart-legend .legend-labels{line-height:85%;list-style:none;text-align:left;float:left;width:100%;border-radius:3px;overflow-y:auto;overflow-x:hidden;white-space:nowrap;background:rgba(0,0,0,.05)}.chart-legend .legend-label{cursor:pointer;font-size:90%;margin:8px;color:#afb7c8}.chart-legend .legend-label:hover{color:#000;transition:.2s}.chart-legend .legend-label .active .legend-label-text{color:#000}.chart-legend .legend-label-color{display:inline-block;height:15px;width:15px;margin-right:5px;color:#5b646b;border-radius:3px}.chart-legend .legend-label-text{display:inline-block;vertical-align:top;line-height:15px;font-size:12px;width:calc(100% - 20px);text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.chart-legend .legend-title-text{vertical-align:bottom;display:inline-block;line-height:16px;overflow:hidden;white-space:nowrap;text-overflow:ellipsis}\\n\"], components: [{ type: LegendEntryComponent, selector: \"ngx-charts-legend-entry\", inputs: [\"color\", \"label\", \"formattedLabel\", \"isActive\"], outputs: [\"select\", \"activate\", \"deactivate\", \"toggle\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: LegendComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-legend', template: `\n    <div [style.width.px]=\"width\">\n      <header class=\"legend-title\" *ngIf=\"title?.length > 0\">\n        <span class=\"legend-title-text\">{{ title }}</span>\n      </header>\n      <div class=\"legend-wrap\">\n        <ul class=\"legend-labels\" [class.horizontal-legend]=\"horizontal\" [style.max-height.px]=\"height - 45\">\n          <li *ngFor=\"let entry of legendEntries; trackBy: trackBy\" class=\"legend-label\">\n            <ngx-charts-legend-entry\n              [label]=\"entry.label\"\n              [formattedLabel]=\"entry.formattedLabel\"\n              [color]=\"entry.color\"\n              [isActive]=\"isActive(entry)\"\n              (select)=\"labelClick.emit($event)\"\n              (activate)=\"activate($event)\"\n              (deactivate)=\"deactivate($event)\"\n            >\n            </ngx-charts-legend-entry>\n          </li>\n        </ul>\n      </div>\n    </div>\n  `, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".chart-legend{display:inline-block;padding:0;width:auto!important}.chart-legend .legend-title{white-space:nowrap;overflow:hidden;margin-left:10px;margin-bottom:5px;font-size:14px;font-weight:700}.chart-legend ul,.chart-legend li{padding:0;margin:0;list-style:none}.chart-legend .horizontal-legend li{display:inline-block}.chart-legend .legend-wrap{width:calc(100% - 10px)}.chart-legend .legend-labels{line-height:85%;list-style:none;text-align:left;float:left;width:100%;border-radius:3px;overflow-y:auto;overflow-x:hidden;white-space:nowrap;background:rgba(0,0,0,.05)}.chart-legend .legend-label{cursor:pointer;font-size:90%;margin:8px;color:#afb7c8}.chart-legend .legend-label:hover{color:#000;transition:.2s}.chart-legend .legend-label .active .legend-label-text{color:#000}.chart-legend .legend-label-color{display:inline-block;height:15px;width:15px;margin-right:5px;color:#5b646b;border-radius:3px}.chart-legend .legend-label-text{display:inline-block;vertical-align:top;line-height:15px;font-size:12px;width:calc(100% - 20px);text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.chart-legend .legend-title-text{vertical-align:bottom;display:inline-block;line-height:16px;overflow:hidden;white-space:nowrap;text-overflow:ellipsis}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }]; }, propDecorators: { data: [{\n                type: Input\n            }], title: [{\n                type: Input\n            }], colors: [{\n                type: Input\n            }], height: [{\n                type: Input\n            }], width: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], horizontal: [{\n                type: Input\n            }], labelClick: [{\n                type: Output\n            }], labelActivate: [{\n                type: Output\n            }], labelDeactivate: [{\n                type: Output\n            }] } });\n\nclass ChartComponent {\n    constructor() {\n        this.showLegend = false;\n        this.animations = true;\n        this.legendLabelClick = new EventEmitter();\n        this.legendLabelActivate = new EventEmitter();\n        this.legendLabelDeactivate = new EventEmitter();\n        this.LegendPosition = LegendPosition;\n        this.LegendType = LegendType;\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    update() {\n        let legendColumns = 0;\n        if (this.showLegend) {\n            this.legendType = this.getLegendType();\n            if (!this.legendOptions || this.legendOptions.position === LegendPosition.Right) {\n                if (this.legendType === LegendType.ScaleLegend) {\n                    legendColumns = 1;\n                }\n                else {\n                    legendColumns = 2;\n                }\n            }\n        }\n        const chartColumns = 12 - legendColumns;\n        this.chartWidth = Math.floor((this.view[0] * chartColumns) / 12.0);\n        this.legendWidth =\n            !this.legendOptions || this.legendOptions.position === LegendPosition.Right\n                ? Math.floor((this.view[0] * legendColumns) / 12.0)\n                : this.chartWidth;\n    }\n    getLegendType() {\n        return this.legendOptions.scaleType === ScaleType.Linear ? LegendType.ScaleLegend : LegendType.Legend;\n    }\n}\nChartComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: ChartComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nChartComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: ChartComponent, selector: \"ngx-charts-chart\", inputs: { view: \"view\", showLegend: \"showLegend\", legendOptions: \"legendOptions\", legendType: \"legendType\", activeEntries: \"activeEntries\", animations: \"animations\" }, outputs: { legendLabelClick: \"legendLabelClick\", legendLabelActivate: \"legendLabelActivate\", legendLabelDeactivate: \"legendLabelDeactivate\" }, providers: [TooltipService], usesOnChanges: true, ngImport: i0, template: `\n    <div class=\"ngx-charts-outer\" [style.width.px]=\"view[0]\" [style.height.px]=\"view[1]\">\n      <svg class=\"ngx-charts\" [attr.width]=\"chartWidth\" [attr.height]=\"view[1]\">\n        <ng-content></ng-content>\n      </svg>\n      <ngx-charts-scale-legend\n        *ngIf=\"showLegend && legendType === LegendType.ScaleLegend\"\n        class=\"chart-legend\"\n        [horizontal]=\"legendOptions && legendOptions.position === LegendPosition.Below\"\n        [valueRange]=\"legendOptions.domain\"\n        [colors]=\"legendOptions.colors\"\n        [height]=\"view[1]\"\n        [width]=\"legendWidth\"\n      >\n      </ngx-charts-scale-legend>\n      <ngx-charts-legend\n        *ngIf=\"showLegend && legendType === LegendType.Legend\"\n        class=\"chart-legend\"\n        [horizontal]=\"legendOptions && legendOptions.position === LegendPosition.Below\"\n        [data]=\"legendOptions.domain\"\n        [title]=\"legendOptions.title\"\n        [colors]=\"legendOptions.colors\"\n        [height]=\"view[1]\"\n        [width]=\"legendWidth\"\n        [activeEntries]=\"activeEntries\"\n        (labelClick)=\"legendLabelClick.emit($event)\"\n        (labelActivate)=\"legendLabelActivate.emit($event)\"\n        (labelDeactivate)=\"legendLabelDeactivate.emit($event)\"\n      >\n      </ngx-charts-legend>\n    </div>\n  `, isInline: true, components: [{ type: ScaleLegendComponent, selector: \"ngx-charts-scale-legend\", inputs: [\"valueRange\", \"colors\", \"height\", \"width\", \"horizontal\"] }, { type: LegendComponent, selector: \"ngx-charts-legend\", inputs: [\"data\", \"title\", \"colors\", \"height\", \"width\", \"activeEntries\", \"horizontal\"], outputs: [\"labelClick\", \"labelActivate\", \"labelDeactivate\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: ChartComponent, decorators: [{\n            type: Component,\n            args: [{\n                    providers: [TooltipService],\n                    selector: 'ngx-charts-chart',\n                    template: `\n    <div class=\"ngx-charts-outer\" [style.width.px]=\"view[0]\" [style.height.px]=\"view[1]\">\n      <svg class=\"ngx-charts\" [attr.width]=\"chartWidth\" [attr.height]=\"view[1]\">\n        <ng-content></ng-content>\n      </svg>\n      <ngx-charts-scale-legend\n        *ngIf=\"showLegend && legendType === LegendType.ScaleLegend\"\n        class=\"chart-legend\"\n        [horizontal]=\"legendOptions && legendOptions.position === LegendPosition.Below\"\n        [valueRange]=\"legendOptions.domain\"\n        [colors]=\"legendOptions.colors\"\n        [height]=\"view[1]\"\n        [width]=\"legendWidth\"\n      >\n      </ngx-charts-scale-legend>\n      <ngx-charts-legend\n        *ngIf=\"showLegend && legendType === LegendType.Legend\"\n        class=\"chart-legend\"\n        [horizontal]=\"legendOptions && legendOptions.position === LegendPosition.Below\"\n        [data]=\"legendOptions.domain\"\n        [title]=\"legendOptions.title\"\n        [colors]=\"legendOptions.colors\"\n        [height]=\"view[1]\"\n        [width]=\"legendWidth\"\n        [activeEntries]=\"activeEntries\"\n        (labelClick)=\"legendLabelClick.emit($event)\"\n        (labelActivate)=\"legendLabelActivate.emit($event)\"\n        (labelDeactivate)=\"legendLabelDeactivate.emit($event)\"\n      >\n      </ngx-charts-legend>\n    </div>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], propDecorators: { view: [{\n                type: Input\n            }], showLegend: [{\n                type: Input\n            }], legendOptions: [{\n                type: Input\n            }], legendType: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], legendLabelClick: [{\n                type: Output\n            }], legendLabelActivate: [{\n                type: Output\n            }], legendLabelDeactivate: [{\n                type: Output\n            }] } });\n\n/**\n * Visibility Observer\n */\nclass VisibilityObserver {\n    constructor(element, zone) {\n        this.element = element;\n        this.zone = zone;\n        this.visible = new EventEmitter();\n        this.isVisible = false;\n        this.runCheck();\n    }\n    destroy() {\n        clearTimeout(this.timeout);\n    }\n    onVisibilityChange() {\n        // trigger zone recalc for columns\n        this.zone.run(() => {\n            this.isVisible = true;\n            this.visible.emit(true);\n        });\n    }\n    runCheck() {\n        const check = () => {\n            if (!this.element) {\n                return;\n            }\n            // https://davidwalsh.name/offsetheight-visibility\n            const { offsetHeight, offsetWidth } = this.element.nativeElement;\n            if (offsetHeight && offsetWidth) {\n                clearTimeout(this.timeout);\n                this.onVisibilityChange();\n            }\n            else {\n                clearTimeout(this.timeout);\n                this.zone.runOutsideAngular(() => {\n                    this.timeout = setTimeout(() => check(), 100);\n                });\n            }\n        };\n        this.zone.runOutsideAngular(() => {\n            this.timeout = setTimeout(() => check());\n        });\n    }\n}\nVisibilityObserver.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: VisibilityObserver, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive });\nVisibilityObserver.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: VisibilityObserver, selector: \"visibility-observer\", outputs: { visible: \"visible\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: VisibilityObserver, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'visibility-observer'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.NgZone }]; }, propDecorators: { visible: [{\n                type: Output\n            }] } });\n\nfunction isDate(value) {\n    return toString.call(value) === '[object Date]';\n}\nfunction isNumber(value) {\n    return typeof value === 'number';\n}\n\nclass BaseChartComponent {\n    constructor(chartElement, zone, cd, platformId) {\n        this.chartElement = chartElement;\n        this.zone = zone;\n        this.cd = cd;\n        this.platformId = platformId;\n        this.scheme = 'cool';\n        this.schemeType = ScaleType.Ordinal;\n        this.animations = true;\n        this.select = new EventEmitter();\n    }\n    ngOnInit() {\n        if (isPlatformServer(this.platformId)) {\n            this.animations = false;\n        }\n    }\n    ngAfterViewInit() {\n        this.bindWindowResizeEvent();\n        // listen for visibility of the element for hidden by default scenario\n        this.visibilityObserver = new VisibilityObserver(this.chartElement, this.zone);\n        this.visibilityObserver.visible.subscribe(this.update.bind(this));\n    }\n    ngOnDestroy() {\n        this.unbindEvents();\n        if (this.visibilityObserver) {\n            this.visibilityObserver.visible.unsubscribe();\n            this.visibilityObserver.destroy();\n        }\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    update() {\n        if (this.results) {\n            this.results = this.cloneData(this.results);\n        }\n        else {\n            this.results = [];\n        }\n        if (this.view) {\n            this.width = this.view[0];\n            this.height = this.view[1];\n        }\n        else {\n            const dims = this.getContainerDims();\n            if (dims) {\n                this.width = dims.width;\n                this.height = dims.height;\n            }\n        }\n        // default values if width or height are 0 or undefined\n        if (!this.width) {\n            this.width = 600;\n        }\n        if (!this.height) {\n            this.height = 400;\n        }\n        this.width = Math.floor(this.width);\n        this.height = Math.floor(this.height);\n        if (this.cd) {\n            this.cd.markForCheck();\n        }\n    }\n    getContainerDims() {\n        let width;\n        let height;\n        const hostElem = this.chartElement.nativeElement;\n        if (isPlatformBrowser(this.platformId) && hostElem.parentNode !== null) {\n            // Get the container dimensions\n            const dims = hostElem.parentNode.getBoundingClientRect();\n            width = dims.width;\n            height = dims.height;\n        }\n        if (width && height) {\n            return { width, height };\n        }\n        return null;\n    }\n    /**\n     * Converts all date objects that appear as name\n     * into formatted date strings\n     */\n    formatDates() {\n        for (let i = 0; i < this.results.length; i++) {\n            const g = this.results[i];\n            g.label = g.name;\n            if (isDate(g.label)) {\n                g.label = g.label.toLocaleDateString();\n            }\n            if (g.series) {\n                for (let j = 0; j < g.series.length; j++) {\n                    const d = g.series[j];\n                    d.label = d.name;\n                    if (isDate(d.label)) {\n                        d.label = d.label.toLocaleDateString();\n                    }\n                }\n            }\n        }\n    }\n    unbindEvents() {\n        if (this.resizeSubscription) {\n            this.resizeSubscription.unsubscribe();\n        }\n    }\n    bindWindowResizeEvent() {\n        if (!isPlatformBrowser(this.platformId)) {\n            return;\n        }\n        const source = fromEvent(window, 'resize');\n        const subscription = source.pipe(debounceTime(200)).subscribe(e => {\n            this.update();\n            if (this.cd) {\n                this.cd.markForCheck();\n            }\n        });\n        this.resizeSubscription = subscription;\n    }\n    /**\n     * Clones the data into a new object\n     *\n     * @memberOf BaseChart\n     */\n    cloneData(data) {\n        const results = [];\n        for (const item of data) {\n            const copy = {};\n            if (item['name'] !== undefined) {\n                copy['name'] = item['name'];\n            }\n            if (item['value'] !== undefined) {\n                copy['value'] = item['value'];\n            }\n            if (item['series'] !== undefined) {\n                copy['series'] = [];\n                for (const seriesItem of item['series']) {\n                    const seriesItemCopy = Object.assign({}, seriesItem);\n                    copy['series'].push(seriesItemCopy);\n                }\n            }\n            if (item['extra'] !== undefined) {\n                copy['extra'] = JSON.parse(JSON.stringify(item['extra']));\n            }\n            if (item['source'] !== undefined) {\n                copy['source'] = item['source'];\n            }\n            if (item['target'] !== undefined) {\n                copy['target'] = item['target'];\n            }\n            results.push(copy);\n        }\n        return results;\n    }\n}\nBaseChartComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BaseChartComponent, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }, { token: i0.ChangeDetectorRef }, { token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Component });\nBaseChartComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: BaseChartComponent, selector: \"base-chart\", inputs: { results: \"results\", view: \"view\", scheme: \"scheme\", schemeType: \"schemeType\", customColors: \"customColors\", animations: \"animations\" }, outputs: { select: \"select\" }, usesOnChanges: true, ngImport: i0, template: ` <div></div> `, isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BaseChartComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'base-chart',\n                    template: ` <div></div> `\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.NgZone }, { type: i0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }]; }, propDecorators: { results: [{\n                type: Input\n            }], view: [{\n                type: Input\n            }], scheme: [{\n                type: Input\n            }], schemeType: [{\n                type: Input\n            }], customColors: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }] } });\n\nvar Orientation;\n(function (Orientation) {\n    Orientation[\"Top\"] = \"top\";\n    Orientation[\"Bottom\"] = \"bottom\";\n    Orientation[\"Left\"] = \"left\";\n    Orientation[\"Right\"] = \"right\";\n})(Orientation || (Orientation = {}));\n\nclass AxisLabelComponent {\n    constructor(element) {\n        this.textHeight = 25;\n        this.margin = 5;\n        this.element = element.nativeElement;\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    update() {\n        this.strokeWidth = '0.01';\n        this.textAnchor = 'middle';\n        this.transform = '';\n        switch (this.orient) {\n            case Orientation.Top:\n                this.y = this.offset;\n                this.x = this.width / 2;\n                break;\n            case Orientation.Bottom:\n                this.y = this.offset;\n                this.x = this.width / 2;\n                break;\n            case Orientation.Left:\n                this.y = -(this.offset + this.textHeight + this.margin);\n                this.x = -this.height / 2;\n                this.transform = 'rotate(270)';\n                break;\n            case Orientation.Right:\n                this.y = this.offset + this.margin;\n                this.x = -this.height / 2;\n                this.transform = 'rotate(270)';\n                break;\n            default:\n        }\n    }\n}\nAxisLabelComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AxisLabelComponent, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\nAxisLabelComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: AxisLabelComponent, selector: \"g[ngx-charts-axis-label]\", inputs: { orient: \"orient\", label: \"label\", offset: \"offset\", width: \"width\", height: \"height\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:text\n      [attr.stroke-width]=\"strokeWidth\"\n      [attr.x]=\"x\"\n      [attr.y]=\"y\"\n      [attr.text-anchor]=\"textAnchor\"\n      [attr.transform]=\"transform\"\n    >\n      {{ label }}\n    </svg:text>\n  `, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AxisLabelComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-axis-label]',\n                    template: `\n    <svg:text\n      [attr.stroke-width]=\"strokeWidth\"\n      [attr.x]=\"x\"\n      [attr.y]=\"y\"\n      [attr.text-anchor]=\"textAnchor\"\n      [attr.transform]=\"transform\"\n    >\n      {{ label }}\n    </svg:text>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { orient: [{\n                type: Input\n            }], label: [{\n                type: Input\n            }], offset: [{\n                type: Input\n            }], width: [{\n                type: Input\n            }], height: [{\n                type: Input\n            }] } });\n\nfunction trimLabel(s, max = 16) {\n    if (typeof s !== 'string') {\n        if (typeof s === 'number') {\n            return s + '';\n        }\n        else {\n            return '';\n        }\n    }\n    s = s.trim();\n    if (s.length <= max) {\n        return s;\n    }\n    else {\n        return `${s.slice(0, max)}...`;\n    }\n}\n\nfunction reduceTicks(ticks, maxTicks) {\n    if (ticks.length > maxTicks) {\n        const reduced = [];\n        const modulus = Math.floor(ticks.length / maxTicks);\n        for (let i = 0; i < ticks.length; i++) {\n            if (i % modulus === 0) {\n                reduced.push(ticks[i]);\n            }\n        }\n        ticks = reduced;\n    }\n    return ticks;\n}\nfunction getTickLines(label, maxLength, maxLines) {\n    const labelString = (label || '').toString();\n    let totalLines = [];\n    if (/\\s/.test(labelString)) {\n        totalLines = labelString.split(/\\s+/).reduce((lines, line) => {\n            const last = (lines.pop() || '') + ' ';\n            return last.length + line.length > maxLength ? [...lines, last.trim(), line.trim()] : [...lines, last + line];\n        }, []);\n    }\n    else {\n        let startIndex = 0;\n        while (startIndex < labelString.length) {\n            totalLines.push(labelString.substring(startIndex, startIndex + maxLength));\n            startIndex += maxLength;\n        }\n    }\n    if (totalLines.length > maxLines) {\n        totalLines = totalLines.splice(0, maxLines);\n        totalLines[totalLines.length - 1] += '...';\n    }\n    return totalLines;\n}\n\nvar TextAnchor;\n(function (TextAnchor) {\n    TextAnchor[\"Start\"] = \"start\";\n    TextAnchor[\"Middle\"] = \"middle\";\n    TextAnchor[\"End\"] = \"end\";\n})(TextAnchor || (TextAnchor = {}));\n\nclass XAxisTicksComponent {\n    constructor(platformId) {\n        this.platformId = platformId;\n        this.tickArguments = [5];\n        this.tickStroke = '#ccc';\n        this.trimTicks = true;\n        this.maxTickLength = 16;\n        this.showGridLines = false;\n        this.rotateTicks = true;\n        this.wrapTicks = false;\n        this.dimensionsChanged = new EventEmitter();\n        this.verticalSpacing = 20;\n        this.rotateLabels = false;\n        this.innerTickSize = 6;\n        this.outerTickSize = 6;\n        this.tickPadding = 3;\n        this.textAnchor = TextAnchor.Middle;\n        this.maxTicksLength = 0;\n        this.maxAllowedLength = 16;\n        this.height = 0;\n        this.approxHeight = 10;\n        this.maxPossibleLengthForTickIfWrapped = 16;\n    }\n    get isWrapTicksSupported() {\n        return this.wrapTicks && this.scale.step;\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    ngAfterViewInit() {\n        setTimeout(() => this.updateDims());\n    }\n    updateDims() {\n        if (!isPlatformBrowser(this.platformId)) {\n            // for SSR, use approximate value instead of measured\n            this.dimensionsChanged.emit({ height: this.approxHeight });\n            return;\n        }\n        const height = parseInt(this.ticksElement.nativeElement.getBoundingClientRect().height, 10);\n        if (height !== this.height) {\n            this.height = height;\n            this.dimensionsChanged.emit({ height: this.height });\n            setTimeout(() => this.updateDims());\n        }\n    }\n    update() {\n        const scale = this.scale;\n        this.ticks = this.getTicks();\n        if (this.tickFormatting) {\n            this.tickFormat = this.tickFormatting;\n        }\n        else if (scale.tickFormat) {\n            // eslint-disable-next-line prefer-spread\n            this.tickFormat = scale.tickFormat.apply(scale, this.tickArguments);\n        }\n        else {\n            this.tickFormat = function (d) {\n                if (d.constructor.name === 'Date') {\n                    return d.toLocaleDateString();\n                }\n                return d.toLocaleString();\n            };\n        }\n        const angle = this.rotateTicks ? this.getRotationAngle(this.ticks) : null;\n        this.adjustedScale = this.scale.bandwidth\n            ? function (d) {\n                return this.scale(d) + this.scale.bandwidth() * 0.5;\n            }\n            : this.scale;\n        this.textTransform = '';\n        if (angle && angle !== 0) {\n            this.textTransform = `rotate(${angle})`;\n            this.textAnchor = TextAnchor.End;\n            this.verticalSpacing = 10;\n        }\n        else {\n            this.textAnchor = TextAnchor.Middle;\n        }\n        setTimeout(() => this.updateDims());\n    }\n    getRotationAngle(ticks) {\n        let angle = 0;\n        this.maxTicksLength = 0;\n        for (let i = 0; i < ticks.length; i++) {\n            const tick = this.tickFormat(ticks[i]).toString();\n            let tickLength = tick.length;\n            if (this.trimTicks) {\n                tickLength = this.tickTrim(tick).length;\n            }\n            if (tickLength > this.maxTicksLength) {\n                this.maxTicksLength = tickLength;\n            }\n        }\n        const len = Math.min(this.maxTicksLength, this.maxAllowedLength);\n        const charWidth = 7; // need to measure this\n        const wordWidth = len * charWidth;\n        let baseWidth = wordWidth;\n        const maxBaseWidth = Math.floor(this.width / ticks.length);\n        // calculate optimal angle\n        while (baseWidth > maxBaseWidth && angle > -90) {\n            angle -= 30;\n            baseWidth = Math.cos(angle * (Math.PI / 180)) * wordWidth;\n        }\n        let labelHeight = 14;\n        if (this.isWrapTicksSupported) {\n            const longestTick = this.ticks.reduce((earlier, current) => (current.length > earlier.length ? current : earlier), '');\n            const tickLines = this.tickChunks(longestTick);\n            labelHeight = 14 * (tickLines.length || 1);\n            this.maxPossibleLengthForTickIfWrapped = this.getMaxPossibleLengthForTick(longestTick);\n        }\n        const requiredHeight = angle !== 0\n            ? Math.max(Math.abs(Math.sin((angle * Math.PI) / 180)) * this.maxTickLength * charWidth, 10)\n            : labelHeight;\n        this.approxHeight = Math.min(requiredHeight, 200);\n        return angle;\n    }\n    getTicks() {\n        let ticks;\n        const maxTicks = this.getMaxTicks(20);\n        const maxScaleTicks = this.getMaxTicks(100);\n        if (this.tickValues) {\n            ticks = this.tickValues;\n        }\n        else if (this.scale.ticks) {\n            ticks = this.scale.ticks.apply(this.scale, [maxScaleTicks]);\n        }\n        else {\n            ticks = this.scale.domain();\n            ticks = reduceTicks(ticks, maxTicks);\n        }\n        return ticks;\n    }\n    getMaxTicks(tickWidth) {\n        return Math.floor(this.width / tickWidth);\n    }\n    tickTransform(tick) {\n        return 'translate(' + this.adjustedScale(tick) + ',' + this.verticalSpacing + ')';\n    }\n    gridLineTransform() {\n        return `translate(0,${-this.verticalSpacing - 5})`;\n    }\n    tickTrim(label) {\n        return this.trimTicks ? trimLabel(label, this.maxTickLength) : label;\n    }\n    getMaxPossibleLengthForTick(longestLabel) {\n        if (this.scale.bandwidth) {\n            const averageCharacterWidth = 7; // approximate char width\n            const maxCharacters = Math.floor(this.scale.bandwidth() / averageCharacterWidth);\n            const truncatedText = longestLabel.slice(0, maxCharacters);\n            return Math.max(truncatedText.length, this.maxTickLength);\n        }\n        return this.maxTickLength;\n    }\n    tickChunks(label) {\n        if (label.toString().length > this.maxTickLength && this.scale.bandwidth) {\n            const maxAllowedLines = 5;\n            let maxLines = this.rotateTicks ? Math.floor(this.scale.step() / 14) : maxAllowedLines;\n            if (maxLines <= 1) {\n                return [this.tickTrim(label)];\n            }\n            let possibleStringLength = Math.max(this.maxPossibleLengthForTickIfWrapped, this.maxTickLength);\n            if (!isPlatformBrowser(this.platformId)) {\n                possibleStringLength = Math.floor(Math.min(this.approxHeight / maxAllowedLines, Math.max(this.maxPossibleLengthForTickIfWrapped, this.maxTickLength)));\n            }\n            maxLines = Math.min(maxLines, maxAllowedLines);\n            const lines = getTickLines(label, possibleStringLength, maxLines < 1 ? 1 : maxLines);\n            return lines;\n        }\n        return [this.tickTrim(label)];\n    }\n}\nXAxisTicksComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: XAxisTicksComponent, deps: [{ token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Component });\nXAxisTicksComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: XAxisTicksComponent, selector: \"g[ngx-charts-x-axis-ticks]\", inputs: { scale: \"scale\", orient: \"orient\", tickArguments: \"tickArguments\", tickValues: \"tickValues\", tickStroke: \"tickStroke\", trimTicks: \"trimTicks\", maxTickLength: \"maxTickLength\", tickFormatting: \"tickFormatting\", showGridLines: \"showGridLines\", gridLineHeight: \"gridLineHeight\", width: \"width\", rotateTicks: \"rotateTicks\", wrapTicks: \"wrapTicks\" }, outputs: { dimensionsChanged: \"dimensionsChanged\" }, viewQueries: [{ propertyName: \"ticksElement\", first: true, predicate: [\"ticksel\"], descendants: true }], usesOnChanges: true, ngImport: i0, template: `\n    <svg:g #ticksel>\n      <svg:g *ngFor=\"let tick of ticks\" class=\"tick\" [attr.transform]=\"tickTransform(tick)\">\n        <ng-container *ngIf=\"tickFormat(tick) as tickFormatted\">\n          <title>{{ tickFormatted }}</title>\n          <svg:text\n            stroke-width=\"0.01\"\n            font-size=\"12px\"\n            [attr.text-anchor]=\"textAnchor\"\n            [attr.transform]=\"textTransform\"\n          >\n            <ng-container *ngIf=\"isWrapTicksSupported; then tmplMultilineTick; else tmplSinglelineTick\"></ng-container>\n          </svg:text>\n\n          <ng-template #tmplMultilineTick>\n            <ng-container *ngIf=\"tickChunks(tick) as tickLines\">\n              <svg:tspan *ngFor=\"let tickLine of tickLines; let i = index\" x=\"0\" [attr.y]=\"i * 12\">\n                {{ tickLine }}\n              </svg:tspan>\n            </ng-container>\n          </ng-template>\n\n          <ng-template #tmplSinglelineTick>\n            {{ tickTrim(tickFormatted) }}\n          </ng-template>\n        </ng-container>\n      </svg:g>\n    </svg:g>\n\n    <svg:g *ngFor=\"let tick of ticks\" [attr.transform]=\"tickTransform(tick)\">\n      <svg:g *ngIf=\"showGridLines\" [attr.transform]=\"gridLineTransform()\">\n        <svg:line class=\"gridline-path gridline-path-vertical\" [attr.y1]=\"-gridLineHeight\" y2=\"0\" />\n      </svg:g>\n    </svg:g>\n  `, isInline: true, directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: XAxisTicksComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-x-axis-ticks]',\n                    template: `\n    <svg:g #ticksel>\n      <svg:g *ngFor=\"let tick of ticks\" class=\"tick\" [attr.transform]=\"tickTransform(tick)\">\n        <ng-container *ngIf=\"tickFormat(tick) as tickFormatted\">\n          <title>{{ tickFormatted }}</title>\n          <svg:text\n            stroke-width=\"0.01\"\n            font-size=\"12px\"\n            [attr.text-anchor]=\"textAnchor\"\n            [attr.transform]=\"textTransform\"\n          >\n            <ng-container *ngIf=\"isWrapTicksSupported; then tmplMultilineTick; else tmplSinglelineTick\"></ng-container>\n          </svg:text>\n\n          <ng-template #tmplMultilineTick>\n            <ng-container *ngIf=\"tickChunks(tick) as tickLines\">\n              <svg:tspan *ngFor=\"let tickLine of tickLines; let i = index\" x=\"0\" [attr.y]=\"i * 12\">\n                {{ tickLine }}\n              </svg:tspan>\n            </ng-container>\n          </ng-template>\n\n          <ng-template #tmplSinglelineTick>\n            {{ tickTrim(tickFormatted) }}\n          </ng-template>\n        </ng-container>\n      </svg:g>\n    </svg:g>\n\n    <svg:g *ngFor=\"let tick of ticks\" [attr.transform]=\"tickTransform(tick)\">\n      <svg:g *ngIf=\"showGridLines\" [attr.transform]=\"gridLineTransform()\">\n        <svg:line class=\"gridline-path gridline-path-vertical\" [attr.y1]=\"-gridLineHeight\" y2=\"0\" />\n      </svg:g>\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }]; }, propDecorators: { scale: [{\n                type: Input\n            }], orient: [{\n                type: Input\n            }], tickArguments: [{\n                type: Input\n            }], tickValues: [{\n                type: Input\n            }], tickStroke: [{\n                type: Input\n            }], trimTicks: [{\n                type: Input\n            }], maxTickLength: [{\n                type: Input\n            }], tickFormatting: [{\n                type: Input\n            }], showGridLines: [{\n                type: Input\n            }], gridLineHeight: [{\n                type: Input\n            }], width: [{\n                type: Input\n            }], rotateTicks: [{\n                type: Input\n            }], wrapTicks: [{\n                type: Input\n            }], dimensionsChanged: [{\n                type: Output\n            }], ticksElement: [{\n                type: ViewChild,\n                args: ['ticksel']\n            }] } });\n\nclass XAxisComponent {\n    constructor() {\n        this.rotateTicks = true;\n        this.showGridLines = false;\n        this.xOrient = Orientation.Bottom;\n        this.xAxisOffset = 0;\n        this.wrapTicks = false;\n        this.dimensionsChanged = new EventEmitter();\n        this.xAxisClassName = 'x axis';\n        this.labelOffset = 0;\n        this.fill = 'none';\n        this.stroke = 'stroke';\n        this.tickStroke = '#ccc';\n        this.strokeWidth = 'none';\n        this.padding = 5;\n        this.orientation = Orientation;\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    update() {\n        this.transform = `translate(0,${this.xAxisOffset + this.padding + this.dims.height})`;\n        if (typeof this.xAxisTickCount !== 'undefined') {\n            this.tickArguments = [this.xAxisTickCount];\n        }\n    }\n    emitTicksHeight({ height }) {\n        const newLabelOffset = height + 25 + 5;\n        if (newLabelOffset !== this.labelOffset) {\n            this.labelOffset = newLabelOffset;\n            setTimeout(() => {\n                this.dimensionsChanged.emit({ height });\n            }, 0);\n        }\n    }\n}\nXAxisComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: XAxisComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nXAxisComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: XAxisComponent, selector: \"g[ngx-charts-x-axis]\", inputs: { xScale: \"xScale\", dims: \"dims\", trimTicks: \"trimTicks\", rotateTicks: \"rotateTicks\", maxTickLength: \"maxTickLength\", tickFormatting: \"tickFormatting\", showGridLines: \"showGridLines\", showLabel: \"showLabel\", labelText: \"labelText\", ticks: \"ticks\", xAxisTickCount: \"xAxisTickCount\", xOrient: \"xOrient\", xAxisOffset: \"xAxisOffset\", wrapTicks: \"wrapTicks\" }, outputs: { dimensionsChanged: \"dimensionsChanged\" }, viewQueries: [{ propertyName: \"ticksComponent\", first: true, predicate: XAxisTicksComponent, descendants: true }], usesOnChanges: true, ngImport: i0, template: `\n    <svg:g [attr.class]=\"xAxisClassName\" [attr.transform]=\"transform\">\n      <svg:g\n        ngx-charts-x-axis-ticks\n        *ngIf=\"xScale\"\n        [trimTicks]=\"trimTicks\"\n        [rotateTicks]=\"rotateTicks\"\n        [maxTickLength]=\"maxTickLength\"\n        [tickFormatting]=\"tickFormatting\"\n        [tickArguments]=\"tickArguments\"\n        [tickStroke]=\"tickStroke\"\n        [scale]=\"xScale\"\n        [orient]=\"xOrient\"\n        [showGridLines]=\"showGridLines\"\n        [gridLineHeight]=\"dims.height\"\n        [width]=\"dims.width\"\n        [tickValues]=\"ticks\"\n        [wrapTicks]=\"wrapTicks\"\n        (dimensionsChanged)=\"emitTicksHeight($event)\"\n      />\n      <svg:g\n        ngx-charts-axis-label\n        *ngIf=\"showLabel\"\n        [label]=\"labelText\"\n        [offset]=\"labelOffset\"\n        [orient]=\"orientation.Bottom\"\n        [height]=\"dims.height\"\n        [width]=\"dims.width\"\n      ></svg:g>\n    </svg:g>\n  `, isInline: true, components: [{ type: XAxisTicksComponent, selector: \"g[ngx-charts-x-axis-ticks]\", inputs: [\"scale\", \"orient\", \"tickArguments\", \"tickValues\", \"tickStroke\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"showGridLines\", \"gridLineHeight\", \"width\", \"rotateTicks\", \"wrapTicks\"], outputs: [\"dimensionsChanged\"] }, { type: AxisLabelComponent, selector: \"g[ngx-charts-axis-label]\", inputs: [\"orient\", \"label\", \"offset\", \"width\", \"height\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: XAxisComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-x-axis]',\n                    template: `\n    <svg:g [attr.class]=\"xAxisClassName\" [attr.transform]=\"transform\">\n      <svg:g\n        ngx-charts-x-axis-ticks\n        *ngIf=\"xScale\"\n        [trimTicks]=\"trimTicks\"\n        [rotateTicks]=\"rotateTicks\"\n        [maxTickLength]=\"maxTickLength\"\n        [tickFormatting]=\"tickFormatting\"\n        [tickArguments]=\"tickArguments\"\n        [tickStroke]=\"tickStroke\"\n        [scale]=\"xScale\"\n        [orient]=\"xOrient\"\n        [showGridLines]=\"showGridLines\"\n        [gridLineHeight]=\"dims.height\"\n        [width]=\"dims.width\"\n        [tickValues]=\"ticks\"\n        [wrapTicks]=\"wrapTicks\"\n        (dimensionsChanged)=\"emitTicksHeight($event)\"\n      />\n      <svg:g\n        ngx-charts-axis-label\n        *ngIf=\"showLabel\"\n        [label]=\"labelText\"\n        [offset]=\"labelOffset\"\n        [orient]=\"orientation.Bottom\"\n        [height]=\"dims.height\"\n        [width]=\"dims.width\"\n      ></svg:g>\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], propDecorators: { xScale: [{\n                type: Input\n            }], dims: [{\n                type: Input\n            }], trimTicks: [{\n                type: Input\n            }], rotateTicks: [{\n                type: Input\n            }], maxTickLength: [{\n                type: Input\n            }], tickFormatting: [{\n                type: Input\n            }], showGridLines: [{\n                type: Input\n            }], showLabel: [{\n                type: Input\n            }], labelText: [{\n                type: Input\n            }], ticks: [{\n                type: Input\n            }], xAxisTickCount: [{\n                type: Input\n            }], xOrient: [{\n                type: Input\n            }], xAxisOffset: [{\n                type: Input\n            }], wrapTicks: [{\n                type: Input\n            }], dimensionsChanged: [{\n                type: Output\n            }], ticksComponent: [{\n                type: ViewChild,\n                args: [XAxisTicksComponent]\n            }] } });\n\n/**\n * Generates a rounded rectanglar path\n *\n * @export\n * @param x, y, w, h, r, tl, tr, bl, br\n */\nfunction roundedRect(x, y, w, h, r, [tl, tr, bl, br]) {\n    let retval = '';\n    w = Math.floor(w);\n    h = Math.floor(h);\n    w = w === 0 ? 1 : w;\n    h = h === 0 ? 1 : h;\n    retval = `M${[x + r, y]}`;\n    retval += `h${w - 2 * r}`;\n    if (tr) {\n        retval += `a${[r, r]} 0 0 1 ${[r, r]}`;\n    }\n    else {\n        retval += `h${r}v${r}`;\n    }\n    retval += `v${h - 2 * r}`;\n    if (br) {\n        retval += `a${[r, r]} 0 0 1 ${[-r, r]}`;\n    }\n    else {\n        retval += `v${r}h${-r}`;\n    }\n    retval += `h${2 * r - w}`;\n    if (bl) {\n        retval += `a${[r, r]} 0 0 1 ${[-r, -r]}`;\n    }\n    else {\n        retval += `h${-r}v${-r}`;\n    }\n    retval += `v${2 * r - h}`;\n    if (tl) {\n        retval += `a${[r, r]} 0 0 1 ${[r, -r]}`;\n    }\n    else {\n        retval += `v${-r}h${r}`;\n    }\n    retval += `z`;\n    return retval;\n}\n\nclass YAxisTicksComponent {\n    constructor(platformId) {\n        this.platformId = platformId;\n        this.tickArguments = [5];\n        this.tickStroke = '#ccc';\n        this.trimTicks = true;\n        this.maxTickLength = 16;\n        this.showGridLines = false;\n        this.showRefLabels = false;\n        this.showRefLines = false;\n        this.wrapTicks = false;\n        this.dimensionsChanged = new EventEmitter();\n        this.innerTickSize = 6;\n        this.tickPadding = 3;\n        this.verticalSpacing = 20;\n        this.textAnchor = TextAnchor.Middle;\n        this.width = 0;\n        this.outerTickSize = 6;\n        this.rotateLabels = false;\n        this.referenceLineLength = 0;\n        this.Orientation = Orientation;\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    ngAfterViewInit() {\n        setTimeout(() => this.updateDims());\n    }\n    updateDims() {\n        if (!isPlatformBrowser(this.platformId)) {\n            // for SSR, use approximate value instead of measured\n            this.width = this.getApproximateAxisWidth();\n            this.dimensionsChanged.emit({ width: this.width });\n            return;\n        }\n        const width = parseInt(this.ticksElement.nativeElement.getBoundingClientRect().width, 10);\n        if (width !== this.width) {\n            this.width = width;\n            this.dimensionsChanged.emit({ width });\n            setTimeout(() => this.updateDims());\n        }\n    }\n    update() {\n        const scale = this.scale;\n        const sign = this.orient === Orientation.Top || this.orient === Orientation.Right ? -1 : 1;\n        this.tickSpacing = Math.max(this.innerTickSize, 0) + this.tickPadding;\n        this.ticks = this.getTicks();\n        if (this.tickFormatting) {\n            this.tickFormat = this.tickFormatting;\n        }\n        else if (scale.tickFormat) {\n            // eslint-disable-next-line prefer-spread\n            this.tickFormat = scale.tickFormat.apply(scale, this.tickArguments);\n        }\n        else {\n            this.tickFormat = function (d) {\n                if (d.constructor.name === 'Date') {\n                    return d.toLocaleDateString();\n                }\n                return d.toLocaleString();\n            };\n        }\n        this.adjustedScale = scale.bandwidth\n            ? d => {\n                // position the tick to middle considering number of lines of the tick\n                const positionMiddle = scale(d) + scale.bandwidth() * 0.5;\n                if (this.wrapTicks && d.toString().length > this.maxTickLength) {\n                    const chunksLength = this.tickChunks(d).length;\n                    if (chunksLength === 1) {\n                        return positionMiddle;\n                    }\n                    const bandWidth = scale.bandwidth();\n                    const heightOfLines = chunksLength * 8;\n                    const availableFreeSpace = bandWidth * 0.5 - heightOfLines * 0.5;\n                    return scale(d) + availableFreeSpace;\n                }\n                return positionMiddle;\n            }\n            : scale;\n        if (this.showRefLines && this.referenceLines) {\n            this.setReferencelines();\n        }\n        switch (this.orient) {\n            case Orientation.Top:\n                this.transform = function (tick) {\n                    return 'translate(' + this.adjustedScale(tick) + ',0)';\n                };\n                this.textAnchor = TextAnchor.Middle;\n                this.y2 = this.innerTickSize * sign;\n                this.y1 = this.tickSpacing * sign;\n                this.dy = sign < 0 ? '0em' : '.71em';\n                break;\n            case Orientation.Bottom:\n                this.transform = function (tick) {\n                    return 'translate(' + this.adjustedScale(tick) + ',0)';\n                };\n                this.textAnchor = TextAnchor.Middle;\n                this.y2 = this.innerTickSize * sign;\n                this.y1 = this.tickSpacing * sign;\n                this.dy = sign < 0 ? '0em' : '.71em';\n                break;\n            case Orientation.Left:\n                this.transform = function (tick) {\n                    return 'translate(0,' + this.adjustedScale(tick) + ')';\n                };\n                this.textAnchor = TextAnchor.End;\n                this.x2 = this.innerTickSize * -sign;\n                this.x1 = this.tickSpacing * -sign;\n                this.dy = '.32em';\n                break;\n            case Orientation.Right:\n                this.transform = function (tick) {\n                    return 'translate(0,' + this.adjustedScale(tick) + ')';\n                };\n                this.textAnchor = TextAnchor.Start;\n                this.x2 = this.innerTickSize * -sign;\n                this.x1 = this.tickSpacing * -sign;\n                this.dy = '.32em';\n                break;\n            default:\n        }\n        setTimeout(() => this.updateDims());\n    }\n    setReferencelines() {\n        this.refMin = this.adjustedScale(Math.min.apply(null, this.referenceLines.map(item => item.value)));\n        this.refMax = this.adjustedScale(Math.max.apply(null, this.referenceLines.map(item => item.value)));\n        this.referenceLineLength = this.referenceLines.length;\n        this.referenceAreaPath = roundedRect(0, this.refMax, this.gridLineWidth, this.refMin - this.refMax, 0, [\n            false,\n            false,\n            false,\n            false\n        ]);\n    }\n    getTicks() {\n        let ticks;\n        const maxTicks = this.getMaxTicks(20);\n        const maxScaleTicks = this.getMaxTicks(50);\n        if (this.tickValues) {\n            ticks = this.tickValues;\n        }\n        else if (this.scale.ticks) {\n            ticks = this.scale.ticks.apply(this.scale, [maxScaleTicks]);\n        }\n        else {\n            ticks = this.scale.domain();\n            ticks = reduceTicks(ticks, maxTicks);\n        }\n        return ticks;\n    }\n    getMaxTicks(tickHeight) {\n        return Math.floor(this.height / tickHeight);\n    }\n    tickTransform(tick) {\n        return `translate(${this.adjustedScale(tick)},${this.verticalSpacing})`;\n    }\n    gridLineTransform() {\n        return `translate(5,0)`;\n    }\n    tickTrim(label) {\n        return this.trimTicks ? trimLabel(label, this.maxTickLength) : label;\n    }\n    getApproximateAxisWidth() {\n        const maxChars = Math.max(...this.ticks.map(t => this.tickTrim(this.tickFormat(t)).length));\n        const charWidth = 7;\n        return maxChars * charWidth;\n    }\n    tickChunks(label) {\n        if (label.toString().length > this.maxTickLength && this.scale.bandwidth) {\n            // for y-axis the width of the tick is fixed\n            const preferredWidth = this.maxTickLength;\n            const maxLines = Math.floor(this.scale.bandwidth() / 15);\n            if (maxLines <= 1) {\n                return [this.tickTrim(label)];\n            }\n            return getTickLines(label, preferredWidth, Math.min(maxLines, 5));\n        }\n        return [this.tickFormat(label)];\n    }\n}\nYAxisTicksComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: YAxisTicksComponent, deps: [{ token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Component });\nYAxisTicksComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: YAxisTicksComponent, selector: \"g[ngx-charts-y-axis-ticks]\", inputs: { scale: \"scale\", orient: \"orient\", tickArguments: \"tickArguments\", tickValues: \"tickValues\", tickStroke: \"tickStroke\", trimTicks: \"trimTicks\", maxTickLength: \"maxTickLength\", tickFormatting: \"tickFormatting\", showGridLines: \"showGridLines\", gridLineWidth: \"gridLineWidth\", height: \"height\", referenceLines: \"referenceLines\", showRefLabels: \"showRefLabels\", showRefLines: \"showRefLines\", wrapTicks: \"wrapTicks\" }, outputs: { dimensionsChanged: \"dimensionsChanged\" }, viewQueries: [{ propertyName: \"ticksElement\", first: true, predicate: [\"ticksel\"], descendants: true }], usesOnChanges: true, ngImport: i0, template: `\n    <svg:g #ticksel>\n      <svg:g *ngFor=\"let tick of ticks\" class=\"tick\" [attr.transform]=\"transform(tick)\">\n        <ng-container *ngIf=\"tickFormat(tick) as tickFormatted\">\n          <title>{{ tickFormatted }}</title>\n          <svg:text\n            stroke-width=\"0.01\"\n            [attr.dy]=\"dy\"\n            [attr.x]=\"x1\"\n            [attr.y]=\"y1\"\n            [attr.text-anchor]=\"textAnchor\"\n            [style.font-size]=\"'12px'\"\n          >\n            <ng-container *ngIf=\"wrapTicks; then tmplMultilineTick; else tmplSinglelineTick\"></ng-container>\n          </svg:text>\n\n          <ng-template #tmplMultilineTick>\n            <ng-container *ngIf=\"tickChunks(tick) as tickLines\">\n              <ng-container *ngIf=\"tickLines.length > 1; else tmplSinglelineTick\">\n                <svg:tspan *ngFor=\"let tickLine of tickLines; let i = index\" x=\"0\" [attr.y]=\"i * (8 + tickSpacing)\">\n                  {{ tickLine }}\n                </svg:tspan>\n              </ng-container>\n            </ng-container>\n          </ng-template>\n\n          <ng-template #tmplSinglelineTick>\n            {{ tickTrim(tickFormatted) }}\n          </ng-template>\n        </ng-container>\n      </svg:g>\n    </svg:g>\n\n    <svg:path\n      *ngIf=\"referenceLineLength > 1 && refMax && refMin && showRefLines\"\n      class=\"reference-area\"\n      [attr.d]=\"referenceAreaPath\"\n      [attr.transform]=\"gridLineTransform()\"\n    />\n    <svg:g *ngFor=\"let tick of ticks\" [attr.transform]=\"transform(tick)\">\n      <svg:g *ngIf=\"showGridLines\" [attr.transform]=\"gridLineTransform()\">\n        <svg:line\n          *ngIf=\"orient === Orientation.Left\"\n          class=\"gridline-path gridline-path-horizontal\"\n          x1=\"0\"\n          [attr.x2]=\"gridLineWidth\"\n        />\n        <svg:line\n          *ngIf=\"orient === Orientation.Right\"\n          class=\"gridline-path gridline-path-horizontal\"\n          x1=\"0\"\n          [attr.x2]=\"-gridLineWidth\"\n        />\n      </svg:g>\n    </svg:g>\n\n    <svg:g *ngFor=\"let refLine of referenceLines\">\n      <svg:g *ngIf=\"showRefLines\" [attr.transform]=\"transform(refLine.value)\">\n        <svg:line\n          class=\"refline-path gridline-path-horizontal\"\n          x1=\"0\"\n          [attr.x2]=\"gridLineWidth\"\n          [attr.transform]=\"gridLineTransform()\"\n        />\n        <svg:g *ngIf=\"showRefLabels\">\n          <title>{{ tickTrim(tickFormat(refLine.value)) }}</title>\n          <svg:text\n            class=\"refline-label\"\n            [attr.dy]=\"dy\"\n            [attr.y]=\"-6\"\n            [attr.x]=\"gridLineWidth\"\n            [attr.text-anchor]=\"textAnchor\"\n          >\n            {{ refLine.name }}\n          </svg:text>\n        </svg:g>\n      </svg:g>\n    </svg:g>\n  `, isInline: true, directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: YAxisTicksComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-y-axis-ticks]',\n                    template: `\n    <svg:g #ticksel>\n      <svg:g *ngFor=\"let tick of ticks\" class=\"tick\" [attr.transform]=\"transform(tick)\">\n        <ng-container *ngIf=\"tickFormat(tick) as tickFormatted\">\n          <title>{{ tickFormatted }}</title>\n          <svg:text\n            stroke-width=\"0.01\"\n            [attr.dy]=\"dy\"\n            [attr.x]=\"x1\"\n            [attr.y]=\"y1\"\n            [attr.text-anchor]=\"textAnchor\"\n            [style.font-size]=\"'12px'\"\n          >\n            <ng-container *ngIf=\"wrapTicks; then tmplMultilineTick; else tmplSinglelineTick\"></ng-container>\n          </svg:text>\n\n          <ng-template #tmplMultilineTick>\n            <ng-container *ngIf=\"tickChunks(tick) as tickLines\">\n              <ng-container *ngIf=\"tickLines.length > 1; else tmplSinglelineTick\">\n                <svg:tspan *ngFor=\"let tickLine of tickLines; let i = index\" x=\"0\" [attr.y]=\"i * (8 + tickSpacing)\">\n                  {{ tickLine }}\n                </svg:tspan>\n              </ng-container>\n            </ng-container>\n          </ng-template>\n\n          <ng-template #tmplSinglelineTick>\n            {{ tickTrim(tickFormatted) }}\n          </ng-template>\n        </ng-container>\n      </svg:g>\n    </svg:g>\n\n    <svg:path\n      *ngIf=\"referenceLineLength > 1 && refMax && refMin && showRefLines\"\n      class=\"reference-area\"\n      [attr.d]=\"referenceAreaPath\"\n      [attr.transform]=\"gridLineTransform()\"\n    />\n    <svg:g *ngFor=\"let tick of ticks\" [attr.transform]=\"transform(tick)\">\n      <svg:g *ngIf=\"showGridLines\" [attr.transform]=\"gridLineTransform()\">\n        <svg:line\n          *ngIf=\"orient === Orientation.Left\"\n          class=\"gridline-path gridline-path-horizontal\"\n          x1=\"0\"\n          [attr.x2]=\"gridLineWidth\"\n        />\n        <svg:line\n          *ngIf=\"orient === Orientation.Right\"\n          class=\"gridline-path gridline-path-horizontal\"\n          x1=\"0\"\n          [attr.x2]=\"-gridLineWidth\"\n        />\n      </svg:g>\n    </svg:g>\n\n    <svg:g *ngFor=\"let refLine of referenceLines\">\n      <svg:g *ngIf=\"showRefLines\" [attr.transform]=\"transform(refLine.value)\">\n        <svg:line\n          class=\"refline-path gridline-path-horizontal\"\n          x1=\"0\"\n          [attr.x2]=\"gridLineWidth\"\n          [attr.transform]=\"gridLineTransform()\"\n        />\n        <svg:g *ngIf=\"showRefLabels\">\n          <title>{{ tickTrim(tickFormat(refLine.value)) }}</title>\n          <svg:text\n            class=\"refline-label\"\n            [attr.dy]=\"dy\"\n            [attr.y]=\"-6\"\n            [attr.x]=\"gridLineWidth\"\n            [attr.text-anchor]=\"textAnchor\"\n          >\n            {{ refLine.name }}\n          </svg:text>\n        </svg:g>\n      </svg:g>\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }]; }, propDecorators: { scale: [{\n                type: Input\n            }], orient: [{\n                type: Input\n            }], tickArguments: [{\n                type: Input\n            }], tickValues: [{\n                type: Input\n            }], tickStroke: [{\n                type: Input\n            }], trimTicks: [{\n                type: Input\n            }], maxTickLength: [{\n                type: Input\n            }], tickFormatting: [{\n                type: Input\n            }], showGridLines: [{\n                type: Input\n            }], gridLineWidth: [{\n                type: Input\n            }], height: [{\n                type: Input\n            }], referenceLines: [{\n                type: Input\n            }], showRefLabels: [{\n                type: Input\n            }], showRefLines: [{\n                type: Input\n            }], wrapTicks: [{\n                type: Input\n            }], dimensionsChanged: [{\n                type: Output\n            }], ticksElement: [{\n                type: ViewChild,\n                args: ['ticksel']\n            }] } });\n\nclass YAxisComponent {\n    constructor() {\n        this.showGridLines = false;\n        this.yOrient = Orientation.Left;\n        this.yAxisOffset = 0;\n        this.wrapTicks = false;\n        this.dimensionsChanged = new EventEmitter();\n        this.yAxisClassName = 'y axis';\n        this.labelOffset = 15;\n        this.fill = 'none';\n        this.stroke = '#CCC';\n        this.tickStroke = '#CCC';\n        this.strokeWidth = 1;\n        this.padding = 5;\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    update() {\n        this.offset = -(this.yAxisOffset + this.padding);\n        if (this.yOrient === Orientation.Right) {\n            this.labelOffset = 65;\n            this.transform = `translate(${this.offset + this.dims.width} , 0)`;\n        }\n        else {\n            this.transform = `translate(${this.offset} , 0)`;\n        }\n        if (this.yAxisTickCount !== undefined) {\n            this.tickArguments = [this.yAxisTickCount];\n        }\n    }\n    emitTicksWidth({ width }) {\n        if (width !== this.labelOffset && this.yOrient === Orientation.Right) {\n            this.labelOffset = width + this.labelOffset;\n            setTimeout(() => {\n                this.dimensionsChanged.emit({ width });\n            }, 0);\n        }\n        else if (width !== this.labelOffset) {\n            this.labelOffset = width;\n            setTimeout(() => {\n                this.dimensionsChanged.emit({ width });\n            }, 0);\n        }\n    }\n}\nYAxisComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: YAxisComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nYAxisComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: YAxisComponent, selector: \"g[ngx-charts-y-axis]\", inputs: { yScale: \"yScale\", dims: \"dims\", trimTicks: \"trimTicks\", maxTickLength: \"maxTickLength\", tickFormatting: \"tickFormatting\", ticks: \"ticks\", showGridLines: \"showGridLines\", showLabel: \"showLabel\", labelText: \"labelText\", yAxisTickCount: \"yAxisTickCount\", yOrient: \"yOrient\", referenceLines: \"referenceLines\", showRefLines: \"showRefLines\", showRefLabels: \"showRefLabels\", yAxisOffset: \"yAxisOffset\", wrapTicks: \"wrapTicks\" }, outputs: { dimensionsChanged: \"dimensionsChanged\" }, viewQueries: [{ propertyName: \"ticksComponent\", first: true, predicate: YAxisTicksComponent, descendants: true }], usesOnChanges: true, ngImport: i0, template: `\n    <svg:g [attr.class]=\"yAxisClassName\" [attr.transform]=\"transform\">\n      <svg:g\n        ngx-charts-y-axis-ticks\n        *ngIf=\"yScale\"\n        [trimTicks]=\"trimTicks\"\n        [maxTickLength]=\"maxTickLength\"\n        [tickFormatting]=\"tickFormatting\"\n        [tickArguments]=\"tickArguments\"\n        [tickValues]=\"ticks\"\n        [tickStroke]=\"tickStroke\"\n        [scale]=\"yScale\"\n        [orient]=\"yOrient\"\n        [showGridLines]=\"showGridLines\"\n        [gridLineWidth]=\"dims.width\"\n        [referenceLines]=\"referenceLines\"\n        [showRefLines]=\"showRefLines\"\n        [showRefLabels]=\"showRefLabels\"\n        [height]=\"dims.height\"\n        [wrapTicks]=\"wrapTicks\"\n        (dimensionsChanged)=\"emitTicksWidth($event)\"\n      />\n\n      <svg:g\n        ngx-charts-axis-label\n        *ngIf=\"showLabel\"\n        [label]=\"labelText\"\n        [offset]=\"labelOffset\"\n        [orient]=\"yOrient\"\n        [height]=\"dims.height\"\n        [width]=\"dims.width\"\n      ></svg:g>\n    </svg:g>\n  `, isInline: true, components: [{ type: YAxisTicksComponent, selector: \"g[ngx-charts-y-axis-ticks]\", inputs: [\"scale\", \"orient\", \"tickArguments\", \"tickValues\", \"tickStroke\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"showGridLines\", \"gridLineWidth\", \"height\", \"referenceLines\", \"showRefLabels\", \"showRefLines\", \"wrapTicks\"], outputs: [\"dimensionsChanged\"] }, { type: AxisLabelComponent, selector: \"g[ngx-charts-axis-label]\", inputs: [\"orient\", \"label\", \"offset\", \"width\", \"height\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: YAxisComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-y-axis]',\n                    template: `\n    <svg:g [attr.class]=\"yAxisClassName\" [attr.transform]=\"transform\">\n      <svg:g\n        ngx-charts-y-axis-ticks\n        *ngIf=\"yScale\"\n        [trimTicks]=\"trimTicks\"\n        [maxTickLength]=\"maxTickLength\"\n        [tickFormatting]=\"tickFormatting\"\n        [tickArguments]=\"tickArguments\"\n        [tickValues]=\"ticks\"\n        [tickStroke]=\"tickStroke\"\n        [scale]=\"yScale\"\n        [orient]=\"yOrient\"\n        [showGridLines]=\"showGridLines\"\n        [gridLineWidth]=\"dims.width\"\n        [referenceLines]=\"referenceLines\"\n        [showRefLines]=\"showRefLines\"\n        [showRefLabels]=\"showRefLabels\"\n        [height]=\"dims.height\"\n        [wrapTicks]=\"wrapTicks\"\n        (dimensionsChanged)=\"emitTicksWidth($event)\"\n      />\n\n      <svg:g\n        ngx-charts-axis-label\n        *ngIf=\"showLabel\"\n        [label]=\"labelText\"\n        [offset]=\"labelOffset\"\n        [orient]=\"yOrient\"\n        [height]=\"dims.height\"\n        [width]=\"dims.width\"\n      ></svg:g>\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], propDecorators: { yScale: [{\n                type: Input\n            }], dims: [{\n                type: Input\n            }], trimTicks: [{\n                type: Input\n            }], maxTickLength: [{\n                type: Input\n            }], tickFormatting: [{\n                type: Input\n            }], ticks: [{\n                type: Input\n            }], showGridLines: [{\n                type: Input\n            }], showLabel: [{\n                type: Input\n            }], labelText: [{\n                type: Input\n            }], yAxisTickCount: [{\n                type: Input\n            }], yOrient: [{\n                type: Input\n            }], referenceLines: [{\n                type: Input\n            }], showRefLines: [{\n                type: Input\n            }], showRefLabels: [{\n                type: Input\n            }], yAxisOffset: [{\n                type: Input\n            }], wrapTicks: [{\n                type: Input\n            }], dimensionsChanged: [{\n                type: Output\n            }], ticksComponent: [{\n                type: ViewChild,\n                args: [YAxisTicksComponent]\n            }] } });\n\nclass AxesModule {\n}\nAxesModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AxesModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nAxesModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AxesModule, declarations: [AxisLabelComponent, XAxisComponent, XAxisTicksComponent, YAxisComponent, YAxisTicksComponent], imports: [CommonModule], exports: [AxisLabelComponent, XAxisComponent, XAxisTicksComponent, YAxisComponent, YAxisTicksComponent] });\nAxesModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AxesModule, imports: [[CommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AxesModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule],\n                    declarations: [AxisLabelComponent, XAxisComponent, XAxisTicksComponent, YAxisComponent, YAxisTicksComponent],\n                    exports: [AxisLabelComponent, XAxisComponent, XAxisTicksComponent, YAxisComponent, YAxisTicksComponent]\n                }]\n        }] });\n\nvar StyleTypes;\n(function (StyleTypes) {\n    StyleTypes[\"popover\"] = \"popover\";\n    StyleTypes[\"tooltip\"] = \"tooltip\";\n})(StyleTypes || (StyleTypes = {}));\n\nvar ShowTypes;\n(function (ShowTypes) {\n    ShowTypes[ShowTypes[\"all\"] = 'all'] = \"all\";\n    ShowTypes[ShowTypes[\"focus\"] = 'focus'] = \"focus\";\n    ShowTypes[ShowTypes[\"mouseover\"] = 'mouseover'] = \"mouseover\";\n})(ShowTypes || (ShowTypes = {}));\n\nclass TooltipDirective {\n    constructor(tooltipService, viewContainerRef, renderer) {\n        this.tooltipService = tooltipService;\n        this.viewContainerRef = viewContainerRef;\n        this.renderer = renderer;\n        this.tooltipCssClass = '';\n        this.tooltipAppendToBody = true;\n        this.tooltipSpacing = 10;\n        this.tooltipDisabled = false;\n        this.tooltipShowCaret = true;\n        this.tooltipPlacement = PlacementTypes.Top;\n        this.tooltipAlignment = PlacementTypes.Center;\n        this.tooltipType = StyleTypes.popover;\n        this.tooltipCloseOnClickOutside = true;\n        this.tooltipCloseOnMouseLeave = true;\n        this.tooltipHideTimeout = 300;\n        this.tooltipShowTimeout = 100;\n        this.tooltipShowEvent = ShowTypes.all;\n        this.tooltipImmediateExit = false;\n        this.show = new EventEmitter();\n        this.hide = new EventEmitter();\n    }\n    get listensForFocus() {\n        return this.tooltipShowEvent === ShowTypes.all || this.tooltipShowEvent === ShowTypes.focus;\n    }\n    get listensForHover() {\n        return this.tooltipShowEvent === ShowTypes.all || this.tooltipShowEvent === ShowTypes.mouseover;\n    }\n    ngOnDestroy() {\n        this.hideTooltip(true);\n    }\n    onFocus() {\n        if (this.listensForFocus) {\n            this.showTooltip();\n        }\n    }\n    onBlur() {\n        if (this.listensForFocus) {\n            this.hideTooltip(true);\n        }\n    }\n    onMouseEnter() {\n        if (this.listensForHover) {\n            this.showTooltip();\n        }\n    }\n    onMouseLeave(target) {\n        if (this.listensForHover && this.tooltipCloseOnMouseLeave) {\n            clearTimeout(this.timeout);\n            if (this.component) {\n                const contentDom = this.component.instance.element.nativeElement;\n                const contains = contentDom.contains(target);\n                if (contains)\n                    return;\n            }\n            this.hideTooltip(this.tooltipImmediateExit);\n        }\n    }\n    onMouseClick() {\n        if (this.listensForHover) {\n            this.hideTooltip(true);\n        }\n    }\n    showTooltip(immediate) {\n        if (this.component || this.tooltipDisabled)\n            return;\n        const time = immediate\n            ? 0\n            : this.tooltipShowTimeout + (navigator.userAgent.match(/\\(i[^;]+;( U;)? CPU.+Mac OS X/) ? 400 : 0);\n        clearTimeout(this.timeout);\n        this.timeout = setTimeout(() => {\n            this.tooltipService.destroyAll();\n            const options = this.createBoundOptions();\n            this.component = this.tooltipService.create(options);\n            // add a tiny timeout to avoid event re-triggers\n            setTimeout(() => {\n                if (this.component) {\n                    this.addHideListeners(this.component.instance.element.nativeElement);\n                }\n            }, 10);\n            this.show.emit(true);\n        }, time);\n    }\n    addHideListeners(tooltip) {\n        // on mouse enter, cancel the hide triggered by the leave\n        this.mouseEnterContentEvent = this.renderer.listen(tooltip, 'mouseenter', () => {\n            clearTimeout(this.timeout);\n        });\n        // content mouse leave listener\n        if (this.tooltipCloseOnMouseLeave) {\n            this.mouseLeaveContentEvent = this.renderer.listen(tooltip, 'mouseleave', () => {\n                this.hideTooltip(this.tooltipImmediateExit);\n            });\n        }\n        // content close on click outside\n        if (this.tooltipCloseOnClickOutside) {\n            this.documentClickEvent = this.renderer.listen('window', 'click', event => {\n                const contains = tooltip.contains(event.target);\n                if (!contains)\n                    this.hideTooltip();\n            });\n        }\n    }\n    hideTooltip(immediate = false) {\n        if (!this.component)\n            return;\n        const destroyFn = () => {\n            // remove events\n            if (this.mouseLeaveContentEvent)\n                this.mouseLeaveContentEvent();\n            if (this.mouseEnterContentEvent)\n                this.mouseEnterContentEvent();\n            if (this.documentClickEvent)\n                this.documentClickEvent();\n            // emit events\n            this.hide.emit(true);\n            // destroy component\n            this.tooltipService.destroy(this.component);\n            this.component = undefined;\n        };\n        clearTimeout(this.timeout);\n        if (!immediate) {\n            this.timeout = setTimeout(destroyFn, this.tooltipHideTimeout);\n        }\n        else {\n            destroyFn();\n        }\n    }\n    createBoundOptions() {\n        return {\n            title: this.tooltipTitle,\n            template: this.tooltipTemplate,\n            host: this.viewContainerRef.element,\n            placement: this.tooltipPlacement,\n            alignment: this.tooltipAlignment,\n            type: this.tooltipType,\n            showCaret: this.tooltipShowCaret,\n            cssClass: this.tooltipCssClass,\n            spacing: this.tooltipSpacing,\n            context: this.tooltipContext\n        };\n    }\n}\nTooltipDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TooltipDirective, deps: [{ token: TooltipService }, { token: i0.ViewContainerRef }, { token: i0.Renderer2 }], target: i0.ɵɵFactoryTarget.Directive });\nTooltipDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: TooltipDirective, selector: \"[ngx-tooltip]\", inputs: { tooltipCssClass: \"tooltipCssClass\", tooltipTitle: \"tooltipTitle\", tooltipAppendToBody: \"tooltipAppendToBody\", tooltipSpacing: \"tooltipSpacing\", tooltipDisabled: \"tooltipDisabled\", tooltipShowCaret: \"tooltipShowCaret\", tooltipPlacement: \"tooltipPlacement\", tooltipAlignment: \"tooltipAlignment\", tooltipType: \"tooltipType\", tooltipCloseOnClickOutside: \"tooltipCloseOnClickOutside\", tooltipCloseOnMouseLeave: \"tooltipCloseOnMouseLeave\", tooltipHideTimeout: \"tooltipHideTimeout\", tooltipShowTimeout: \"tooltipShowTimeout\", tooltipTemplate: \"tooltipTemplate\", tooltipShowEvent: \"tooltipShowEvent\", tooltipContext: \"tooltipContext\", tooltipImmediateExit: \"tooltipImmediateExit\" }, outputs: { show: \"show\", hide: \"hide\" }, host: { listeners: { \"focusin\": \"onFocus()\", \"blur\": \"onBlur()\", \"mouseenter\": \"onMouseEnter()\", \"mouseleave\": \"onMouseLeave($event.target)\", \"click\": \"onMouseClick()\" } }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TooltipDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: '[ngx-tooltip]' }]\n        }], ctorParameters: function () { return [{ type: TooltipService }, { type: i0.ViewContainerRef }, { type: i0.Renderer2 }]; }, propDecorators: { tooltipCssClass: [{\n                type: Input\n            }], tooltipTitle: [{\n                type: Input\n            }], tooltipAppendToBody: [{\n                type: Input\n            }], tooltipSpacing: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], tooltipShowCaret: [{\n                type: Input\n            }], tooltipPlacement: [{\n                type: Input\n            }], tooltipAlignment: [{\n                type: Input\n            }], tooltipType: [{\n                type: Input\n            }], tooltipCloseOnClickOutside: [{\n                type: Input\n            }], tooltipCloseOnMouseLeave: [{\n                type: Input\n            }], tooltipHideTimeout: [{\n                type: Input\n            }], tooltipShowTimeout: [{\n                type: Input\n            }], tooltipTemplate: [{\n                type: Input\n            }], tooltipShowEvent: [{\n                type: Input\n            }], tooltipContext: [{\n                type: Input\n            }], tooltipImmediateExit: [{\n                type: Input\n            }], show: [{\n                type: Output\n            }], hide: [{\n                type: Output\n            }], onFocus: [{\n                type: HostListener,\n                args: ['focusin']\n            }], onBlur: [{\n                type: HostListener,\n                args: ['blur']\n            }], onMouseEnter: [{\n                type: HostListener,\n                args: ['mouseenter']\n            }], onMouseLeave: [{\n                type: HostListener,\n                args: ['mouseleave', ['$event.target']]\n            }], onMouseClick: [{\n                type: HostListener,\n                args: ['click']\n            }] } });\n\nclass TooltipModule {\n}\nTooltipModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TooltipModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nTooltipModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TooltipModule, declarations: [TooltipContentComponent, TooltipDirective], imports: [CommonModule], exports: [TooltipContentComponent, TooltipDirective] });\nTooltipModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TooltipModule, providers: [InjectionService, TooltipService], imports: [[CommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TooltipModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [TooltipContentComponent, TooltipDirective],\n                    providers: [InjectionService, TooltipService],\n                    exports: [TooltipContentComponent, TooltipDirective],\n                    imports: [CommonModule],\n                    entryComponents: [TooltipContentComponent]\n                }]\n        }] });\n\nconst cache = {};\n/**\n * Generates a short id.\n *\n * Description:\n *   A 4-character alphanumeric sequence (364 = 1.6 million)\n *   This should only be used for JavaScript specific models.\n *   http://stackoverflow.com/questions/6248666/how-to-generate-short-uid-like-ax4j9z-in-js\n *\n *   Example: `ebgf`\n */\nfunction id() {\n    let newId = ('0000' + ((Math.random() * Math.pow(36, 4)) << 0).toString(36)).slice(-4);\n    // append a 'a' because neo gets mad\n    newId = `a${newId}`;\n    // ensure not already used\n    if (!cache[newId]) {\n        cache[newId] = true;\n        return newId;\n    }\n    return id();\n}\n\nvar BarOrientation;\n(function (BarOrientation) {\n    BarOrientation[\"Vertical\"] = \"vertical\";\n    BarOrientation[\"Horizontal\"] = \"horizontal\";\n})(BarOrientation || (BarOrientation = {}));\n\nclass SvgLinearGradientComponent {\n    constructor() {\n        this.orientation = BarOrientation.Vertical;\n    }\n    ngOnChanges(changes) {\n        this.x1 = '0%';\n        this.x2 = '0%';\n        this.y1 = '0%';\n        this.y2 = '0%';\n        if (this.orientation === BarOrientation.Horizontal) {\n            this.x2 = '100%';\n        }\n        else if (this.orientation === BarOrientation.Vertical) {\n            this.y1 = '100%';\n        }\n    }\n}\nSvgLinearGradientComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: SvgLinearGradientComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nSvgLinearGradientComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: SvgLinearGradientComponent, selector: \"g[ngx-charts-svg-linear-gradient]\", inputs: { orientation: \"orientation\", name: \"name\", stops: \"stops\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:linearGradient [id]=\"name\" [attr.x1]=\"x1\" [attr.y1]=\"y1\" [attr.x2]=\"x2\" [attr.y2]=\"y2\">\n      <svg:stop\n        *ngFor=\"let stop of stops\"\n        [attr.offset]=\"stop.offset + '%'\"\n        [style.stop-color]=\"stop.color\"\n        [style.stop-opacity]=\"stop.opacity\"\n      />\n    </svg:linearGradient>\n  `, isInline: true, directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: SvgLinearGradientComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-svg-linear-gradient]',\n                    template: `\n    <svg:linearGradient [id]=\"name\" [attr.x1]=\"x1\" [attr.y1]=\"y1\" [attr.x2]=\"x2\" [attr.y2]=\"y2\">\n      <svg:stop\n        *ngFor=\"let stop of stops\"\n        [attr.offset]=\"stop.offset + '%'\"\n        [style.stop-color]=\"stop.color\"\n        [style.stop-opacity]=\"stop.opacity\"\n      />\n    </svg:linearGradient>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], propDecorators: { orientation: [{\n                type: Input\n            }], name: [{\n                type: Input\n            }], stops: [{\n                type: Input\n            }] } });\n\nclass CircleComponent {\n    constructor() {\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n    }\n    onClick() {\n        this.select.emit(this.data);\n    }\n    onMouseEnter() {\n        this.activate.emit(this.data);\n    }\n    onMouseLeave() {\n        this.deactivate.emit(this.data);\n    }\n    ngOnChanges(changes) {\n        this.classNames = Array.isArray(this.classNames) ? this.classNames.join(' ') : '';\n        this.classNames += 'circle';\n    }\n}\nCircleComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CircleComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nCircleComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: CircleComponent, selector: \"g[ngx-charts-circle]\", inputs: { cx: \"cx\", cy: \"cy\", r: \"r\", fill: \"fill\", stroke: \"stroke\", data: \"data\", classNames: \"classNames\", circleOpacity: \"circleOpacity\", pointerEvents: \"pointerEvents\" }, outputs: { select: \"select\", activate: \"activate\", deactivate: \"deactivate\" }, host: { listeners: { \"click\": \"onClick()\", \"mouseenter\": \"onMouseEnter()\", \"mouseleave\": \"onMouseLeave()\" } }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:circle\n      [attr.cx]=\"cx\"\n      [attr.cy]=\"cy\"\n      [attr.r]=\"r\"\n      [attr.fill]=\"fill\"\n      [attr.stroke]=\"stroke\"\n      [attr.opacity]=\"circleOpacity\"\n      [attr.class]=\"classNames\"\n      [attr.pointer-events]=\"pointerEvents\"\n    />\n  `, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CircleComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-circle]',\n                    template: `\n    <svg:circle\n      [attr.cx]=\"cx\"\n      [attr.cy]=\"cy\"\n      [attr.r]=\"r\"\n      [attr.fill]=\"fill\"\n      [attr.stroke]=\"stroke\"\n      [attr.opacity]=\"circleOpacity\"\n      [attr.class]=\"classNames\"\n      [attr.pointer-events]=\"pointerEvents\"\n    />\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], propDecorators: { cx: [{\n                type: Input\n            }], cy: [{\n                type: Input\n            }], r: [{\n                type: Input\n            }], fill: [{\n                type: Input\n            }], stroke: [{\n                type: Input\n            }], data: [{\n                type: Input\n            }], classNames: [{\n                type: Input\n            }], circleOpacity: [{\n                type: Input\n            }], pointerEvents: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], onClick: [{\n                type: HostListener,\n                args: ['click']\n            }], onMouseEnter: [{\n                type: HostListener,\n                args: ['mouseenter']\n            }], onMouseLeave: [{\n                type: HostListener,\n                args: ['mouseleave']\n            }] } });\n\nvar SeriesType;\n(function (SeriesType) {\n    SeriesType[\"Standard\"] = \"standard\";\n    SeriesType[\"Stacked\"] = \"stacked\";\n})(SeriesType || (SeriesType = {}));\nclass CircleSeriesComponent {\n    constructor(platformId) {\n        this.platformId = platformId;\n        this.type = SeriesType.Standard;\n        this.tooltipDisabled = false;\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.barVisible = false;\n        this.barOrientation = BarOrientation;\n        this.placementTypes = PlacementTypes;\n        this.styleTypes = StyleTypes;\n        this.isSSR = false;\n    }\n    ngOnInit() {\n        this.gradientId = 'grad' + id().toString();\n        this.gradientFill = `url(#${this.gradientId})`;\n        if (isPlatformServer(this.platformId)) {\n            this.isSSR = true;\n        }\n    }\n    ngOnChanges() {\n        this.update();\n    }\n    update() {\n        this.circle = this.getActiveCircle();\n    }\n    getActiveCircle() {\n        const indexActiveDataPoint = this.data.series.findIndex(d => {\n            const label = d.name;\n            return label && this.visibleValue && label.toString() === this.visibleValue.toString() && d.value !== undefined;\n        });\n        if (indexActiveDataPoint === -1) {\n            // No valid point is 'active/hovered over' at this moment.\n            return undefined;\n        }\n        return this.mapDataPointToCircle(this.data.series[indexActiveDataPoint], indexActiveDataPoint);\n    }\n    mapDataPointToCircle(d, i) {\n        const seriesName = this.data.name;\n        const value = d.value;\n        const label = d.name;\n        const tooltipLabel = formatLabel(label);\n        let cx;\n        if (this.scaleType === ScaleType.Time) {\n            cx = this.xScale(label);\n        }\n        else if (this.scaleType === ScaleType.Linear) {\n            cx = this.xScale(Number(label));\n        }\n        else {\n            cx = this.xScale(label);\n        }\n        const cy = this.yScale(this.type === SeriesType.Standard ? value : d.d1);\n        const radius = 5;\n        const height = this.yScale.range()[0] - cy;\n        const opacity = 1;\n        let color;\n        if (this.colors.scaleType === ScaleType.Linear) {\n            if (this.type === SeriesType.Standard) {\n                color = this.colors.getColor(value);\n            }\n            else {\n                color = this.colors.getColor(d.d1);\n            }\n        }\n        else {\n            color = this.colors.getColor(seriesName);\n        }\n        const data = Object.assign({}, d, {\n            series: seriesName,\n            value,\n            name: label\n        });\n        return {\n            classNames: [`circle-data-${i}`],\n            value,\n            label,\n            data,\n            cx,\n            cy,\n            radius,\n            height,\n            tooltipLabel,\n            color,\n            opacity,\n            seriesName,\n            gradientStops: this.getGradientStops(color),\n            min: d.min,\n            max: d.max\n        };\n    }\n    getTooltipText({ tooltipLabel, value, seriesName, min, max }) {\n        return `\n      <span class=\"tooltip-label\">${escapeLabel(seriesName)} • ${escapeLabel(tooltipLabel)}</span>\n      <span class=\"tooltip-val\">${value.toLocaleString()}${this.getTooltipMinMaxText(min, max)}</span>\n    `;\n    }\n    getTooltipMinMaxText(min, max) {\n        if (min !== undefined || max !== undefined) {\n            let result = ' (';\n            if (min !== undefined) {\n                if (max === undefined) {\n                    result += '≥';\n                }\n                result += min.toLocaleString();\n                if (max !== undefined) {\n                    result += ' - ';\n                }\n            }\n            else if (max !== undefined) {\n                result += '≤';\n            }\n            if (max !== undefined) {\n                result += max.toLocaleString();\n            }\n            result += ')';\n            return result;\n        }\n        else {\n            return '';\n        }\n    }\n    getGradientStops(color) {\n        return [\n            {\n                offset: 0,\n                color,\n                opacity: 0.2\n            },\n            {\n                offset: 100,\n                color,\n                opacity: 1\n            }\n        ];\n    }\n    onClick(data) {\n        this.select.emit(data);\n    }\n    isActive(entry) {\n        if (!this.activeEntries)\n            return false;\n        const item = this.activeEntries.find(d => {\n            return entry.name === d.name;\n        });\n        return item !== undefined;\n    }\n    activateCircle() {\n        this.barVisible = true;\n        this.activate.emit({ name: this.data.name });\n    }\n    deactivateCircle() {\n        this.barVisible = false;\n        this.circle.opacity = 0;\n        this.deactivate.emit({ name: this.data.name });\n    }\n}\nCircleSeriesComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CircleSeriesComponent, deps: [{ token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Component });\nCircleSeriesComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: CircleSeriesComponent, selector: \"g[ngx-charts-circle-series]\", inputs: { data: \"data\", type: \"type\", xScale: \"xScale\", yScale: \"yScale\", colors: \"colors\", scaleType: \"scaleType\", visibleValue: \"visibleValue\", activeEntries: \"activeEntries\", tooltipDisabled: \"tooltipDisabled\", tooltipTemplate: \"tooltipTemplate\" }, outputs: { select: \"select\", activate: \"activate\", deactivate: \"deactivate\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:g *ngIf=\"circle\">\n      <defs>\n        <svg:g\n          ngx-charts-svg-linear-gradient\n          [orientation]=\"barOrientation.Vertical\"\n          [name]=\"gradientId\"\n          [stops]=\"circle.gradientStops\"\n        />\n      </defs>\n      <svg:rect\n        *ngIf=\"!isSSR && barVisible && type === 'standard'\"\n        [@animationState]=\"'active'\"\n        [attr.x]=\"circle.cx - circle.radius\"\n        [attr.y]=\"circle.cy\"\n        [attr.width]=\"circle.radius * 2\"\n        [attr.height]=\"circle.height\"\n        [attr.fill]=\"gradientFill\"\n        class=\"tooltip-bar\"\n      />\n      <svg:rect\n        *ngIf=\"isSSR && barVisible && type === 'standard'\"\n        [attr.x]=\"circle.cx - circle.radius\"\n        [attr.y]=\"circle.cy\"\n        [attr.width]=\"circle.radius * 2\"\n        [attr.height]=\"circle.height\"\n        [attr.fill]=\"gradientFill\"\n        class=\"tooltip-bar\"\n      />\n      <svg:g\n        ngx-charts-circle\n        class=\"circle\"\n        [cx]=\"circle.cx\"\n        [cy]=\"circle.cy\"\n        [r]=\"circle.radius\"\n        [fill]=\"circle.color\"\n        [class.active]=\"isActive({ name: circle.seriesName })\"\n        [pointerEvents]=\"circle.value === 0 ? 'none' : 'all'\"\n        [data]=\"circle.value\"\n        [classNames]=\"circle.classNames\"\n        (select)=\"onClick(circle.data)\"\n        (activate)=\"activateCircle()\"\n        (deactivate)=\"deactivateCircle()\"\n        ngx-tooltip\n        [tooltipDisabled]=\"tooltipDisabled\"\n        [tooltipPlacement]=\"placementTypes.Top\"\n        [tooltipType]=\"styleTypes.tooltip\"\n        [tooltipTitle]=\"tooltipTemplate ? undefined : getTooltipText(circle)\"\n        [tooltipTemplate]=\"tooltipTemplate\"\n        [tooltipContext]=\"circle.data\"\n      />\n    </svg:g>\n  `, isInline: true, components: [{ type: SvgLinearGradientComponent, selector: \"g[ngx-charts-svg-linear-gradient]\", inputs: [\"orientation\", \"name\", \"stops\"] }, { type: CircleComponent, selector: \"g[ngx-charts-circle]\", inputs: [\"cx\", \"cy\", \"r\", \"fill\", \"stroke\", \"data\", \"classNames\", \"circleOpacity\", \"pointerEvents\"], outputs: [\"select\", \"activate\", \"deactivate\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: TooltipDirective, selector: \"[ngx-tooltip]\", inputs: [\"tooltipCssClass\", \"tooltipTitle\", \"tooltipAppendToBody\", \"tooltipSpacing\", \"tooltipDisabled\", \"tooltipShowCaret\", \"tooltipPlacement\", \"tooltipAlignment\", \"tooltipType\", \"tooltipCloseOnClickOutside\", \"tooltipCloseOnMouseLeave\", \"tooltipHideTimeout\", \"tooltipShowTimeout\", \"tooltipTemplate\", \"tooltipShowEvent\", \"tooltipContext\", \"tooltipImmediateExit\"], outputs: [\"show\", \"hide\"] }], animations: [\n        trigger('animationState', [\n            transition(':enter', [\n                style({\n                    opacity: 0\n                }),\n                animate(250, style({ opacity: 1 }))\n            ])\n        ])\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CircleSeriesComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-circle-series]',\n                    template: `\n    <svg:g *ngIf=\"circle\">\n      <defs>\n        <svg:g\n          ngx-charts-svg-linear-gradient\n          [orientation]=\"barOrientation.Vertical\"\n          [name]=\"gradientId\"\n          [stops]=\"circle.gradientStops\"\n        />\n      </defs>\n      <svg:rect\n        *ngIf=\"!isSSR && barVisible && type === 'standard'\"\n        [@animationState]=\"'active'\"\n        [attr.x]=\"circle.cx - circle.radius\"\n        [attr.y]=\"circle.cy\"\n        [attr.width]=\"circle.radius * 2\"\n        [attr.height]=\"circle.height\"\n        [attr.fill]=\"gradientFill\"\n        class=\"tooltip-bar\"\n      />\n      <svg:rect\n        *ngIf=\"isSSR && barVisible && type === 'standard'\"\n        [attr.x]=\"circle.cx - circle.radius\"\n        [attr.y]=\"circle.cy\"\n        [attr.width]=\"circle.radius * 2\"\n        [attr.height]=\"circle.height\"\n        [attr.fill]=\"gradientFill\"\n        class=\"tooltip-bar\"\n      />\n      <svg:g\n        ngx-charts-circle\n        class=\"circle\"\n        [cx]=\"circle.cx\"\n        [cy]=\"circle.cy\"\n        [r]=\"circle.radius\"\n        [fill]=\"circle.color\"\n        [class.active]=\"isActive({ name: circle.seriesName })\"\n        [pointerEvents]=\"circle.value === 0 ? 'none' : 'all'\"\n        [data]=\"circle.value\"\n        [classNames]=\"circle.classNames\"\n        (select)=\"onClick(circle.data)\"\n        (activate)=\"activateCircle()\"\n        (deactivate)=\"deactivateCircle()\"\n        ngx-tooltip\n        [tooltipDisabled]=\"tooltipDisabled\"\n        [tooltipPlacement]=\"placementTypes.Top\"\n        [tooltipType]=\"styleTypes.tooltip\"\n        [tooltipTitle]=\"tooltipTemplate ? undefined : getTooltipText(circle)\"\n        [tooltipTemplate]=\"tooltipTemplate\"\n        [tooltipContext]=\"circle.data\"\n      />\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    animations: [\n                        trigger('animationState', [\n                            transition(':enter', [\n                                style({\n                                    opacity: 0\n                                }),\n                                animate(250, style({ opacity: 1 }))\n                            ])\n                        ])\n                    ]\n                }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }]; }, propDecorators: { data: [{\n                type: Input\n            }], type: [{\n                type: Input\n            }], xScale: [{\n                type: Input\n            }], yScale: [{\n                type: Input\n            }], colors: [{\n                type: Input\n            }], scaleType: [{\n                type: Input\n            }], visibleValue: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], tooltipTemplate: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }] } });\n\nclass GridPanelComponent {\n}\nGridPanelComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: GridPanelComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nGridPanelComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: GridPanelComponent, selector: \"g[ngx-charts-grid-panel]\", inputs: { width: \"width\", height: \"height\", x: \"x\", y: \"y\" }, ngImport: i0, template: `\n    <svg:rect [attr.height]=\"height\" [attr.width]=\"width\" [attr.x]=\"x\" [attr.y]=\"y\" stroke=\"none\" class=\"gridpanel\" />\n  `, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: GridPanelComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-grid-panel]',\n                    template: `\n    <svg:rect [attr.height]=\"height\" [attr.width]=\"width\" [attr.x]=\"x\" [attr.y]=\"y\" stroke=\"none\" class=\"gridpanel\" />\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], propDecorators: { width: [{\n                type: Input\n            }], height: [{\n                type: Input\n            }], x: [{\n                type: Input\n            }], y: [{\n                type: Input\n            }] } });\n\nvar ClassEnum;\n(function (ClassEnum) {\n    ClassEnum[\"Odd\"] = \"odd\";\n    ClassEnum[\"Even\"] = \"even\";\n})(ClassEnum || (ClassEnum = {}));\nclass GridPanelSeriesComponent {\n    ngOnChanges(changes) {\n        this.update();\n    }\n    update() {\n        this.gridPanels = this.getGridPanels();\n    }\n    getGridPanels() {\n        return this.data.map(d => {\n            let offset;\n            let width;\n            let height;\n            let x;\n            let y;\n            let className = ClassEnum.Odd;\n            if (this.orient === BarOrientation.Vertical) {\n                const position = this.xScale(d.name);\n                const positionIndex = Number.parseInt((position / this.xScale.step()).toString(), 10);\n                if (positionIndex % 2 === 1) {\n                    className = ClassEnum.Even;\n                }\n                offset = this.xScale.bandwidth() * this.xScale.paddingInner();\n                width = this.xScale.bandwidth() + offset;\n                height = this.dims.height;\n                x = this.xScale(d.name) - offset / 2;\n                y = 0;\n            }\n            else if (this.orient === BarOrientation.Horizontal) {\n                const position = this.yScale(d.name);\n                const positionIndex = Number.parseInt((position / this.yScale.step()).toString(), 10);\n                if (positionIndex % 2 === 1) {\n                    className = ClassEnum.Even;\n                }\n                offset = this.yScale.bandwidth() * this.yScale.paddingInner();\n                width = this.dims.width;\n                height = this.yScale.bandwidth() + offset;\n                x = 0;\n                y = this.yScale(d.name) - offset / 2;\n            }\n            return {\n                name: d.name,\n                class: className,\n                height,\n                width,\n                x,\n                y\n            };\n        });\n    }\n}\nGridPanelSeriesComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: GridPanelSeriesComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nGridPanelSeriesComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: GridPanelSeriesComponent, selector: \"g[ngx-charts-grid-panel-series]\", inputs: { data: \"data\", dims: \"dims\", xScale: \"xScale\", yScale: \"yScale\", orient: \"orient\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:g\n      ngx-charts-grid-panel\n      *ngFor=\"let gridPanel of gridPanels\"\n      [height]=\"gridPanel.height\"\n      [width]=\"gridPanel.width\"\n      [x]=\"gridPanel.x\"\n      [y]=\"gridPanel.y\"\n      [class.grid-panel]=\"true\"\n      [class.odd]=\"gridPanel.class === 'odd'\"\n      [class.even]=\"gridPanel.class === 'even'\"\n    ></svg:g>\n  `, isInline: true, components: [{ type: GridPanelComponent, selector: \"g[ngx-charts-grid-panel]\", inputs: [\"width\", \"height\", \"x\", \"y\"] }], directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: GridPanelSeriesComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-grid-panel-series]',\n                    template: `\n    <svg:g\n      ngx-charts-grid-panel\n      *ngFor=\"let gridPanel of gridPanels\"\n      [height]=\"gridPanel.height\"\n      [width]=\"gridPanel.width\"\n      [x]=\"gridPanel.x\"\n      [y]=\"gridPanel.y\"\n      [class.grid-panel]=\"true\"\n      [class.odd]=\"gridPanel.class === 'odd'\"\n      [class.even]=\"gridPanel.class === 'even'\"\n    ></svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], propDecorators: { data: [{\n                type: Input\n            }], dims: [{\n                type: Input\n            }], xScale: [{\n                type: Input\n            }], yScale: [{\n                type: Input\n            }], orient: [{\n                type: Input\n            }] } });\n\nclass SvgRadialGradientComponent {\n    constructor() {\n        this.endOpacity = 1;\n        this.cx = 0;\n        this.cy = 0;\n    }\n    get stops() {\n        return this.stopsInput || this.stopsDefault;\n    }\n    set stops(value) {\n        this.stopsInput = value;\n    }\n    ngOnChanges(changes) {\n        this.r = '30%';\n        if ('color' in changes || 'startOpacity' in changes || 'endOpacity' in changes) {\n            this.stopsDefault = [\n                {\n                    offset: 0,\n                    color: this.color,\n                    opacity: this.startOpacity\n                },\n                {\n                    offset: 100,\n                    color: this.color,\n                    opacity: this.endOpacity\n                }\n            ];\n        }\n    }\n}\nSvgRadialGradientComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: SvgRadialGradientComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nSvgRadialGradientComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: SvgRadialGradientComponent, selector: \"g[ngx-charts-svg-radial-gradient]\", inputs: { color: \"color\", name: \"name\", startOpacity: \"startOpacity\", endOpacity: \"endOpacity\", cx: \"cx\", cy: \"cy\", stops: \"stops\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:radialGradient [id]=\"name\" [attr.cx]=\"cx\" [attr.cy]=\"cy\" [attr.r]=\"r\" gradientUnits=\"userSpaceOnUse\">\n      <svg:stop\n        *ngFor=\"let stop of stops\"\n        [attr.offset]=\"stop.offset + '%'\"\n        [style.stop-color]=\"stop.color\"\n        [style.stop-opacity]=\"stop.opacity\"\n      />\n    </svg:radialGradient>\n  `, isInline: true, directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: SvgRadialGradientComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-svg-radial-gradient]',\n                    template: `\n    <svg:radialGradient [id]=\"name\" [attr.cx]=\"cx\" [attr.cy]=\"cy\" [attr.r]=\"r\" gradientUnits=\"userSpaceOnUse\">\n      <svg:stop\n        *ngFor=\"let stop of stops\"\n        [attr.offset]=\"stop.offset + '%'\"\n        [style.stop-color]=\"stop.color\"\n        [style.stop-opacity]=\"stop.opacity\"\n      />\n    </svg:radialGradient>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], propDecorators: { color: [{\n                type: Input\n            }], name: [{\n                type: Input\n            }], startOpacity: [{\n                type: Input\n            }], endOpacity: [{\n                type: Input\n            }], cx: [{\n                type: Input\n            }], cy: [{\n                type: Input\n            }], stops: [{\n                type: Input\n            }] } });\n\nclass AreaComponent {\n    constructor(element) {\n        this.opacity = 1;\n        this.startOpacity = 0.5;\n        this.endOpacity = 1;\n        this.gradient = false;\n        this.animations = true;\n        this.select = new EventEmitter();\n        this.animationsLoaded = false;\n        this.hasGradient = false;\n        this.barOrientation = BarOrientation;\n        this.element = element.nativeElement;\n    }\n    ngOnChanges() {\n        this.update();\n        if (!this.animationsLoaded) {\n            this.loadAnimation();\n            this.animationsLoaded = true;\n        }\n    }\n    update() {\n        this.gradientId = 'grad' + id().toString();\n        this.gradientFill = `url(#${this.gradientId})`;\n        if (this.gradient || this.stops) {\n            this.gradientStops = this.getGradient();\n            this.hasGradient = true;\n        }\n        else {\n            this.hasGradient = false;\n        }\n        this.updatePathEl();\n    }\n    loadAnimation() {\n        this.areaPath = this.startingPath;\n        setTimeout(this.updatePathEl.bind(this), 100);\n    }\n    updatePathEl() {\n        const node = select(this.element).select('.area');\n        if (this.animations) {\n            node.transition().duration(750).attr('d', this.path);\n        }\n        else {\n            node.attr('d', this.path);\n        }\n    }\n    getGradient() {\n        if (this.stops) {\n            return this.stops;\n        }\n        return [\n            {\n                offset: 0,\n                color: this.fill,\n                opacity: this.startOpacity\n            },\n            {\n                offset: 100,\n                color: this.fill,\n                opacity: this.endOpacity\n            }\n        ];\n    }\n}\nAreaComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AreaComponent, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\nAreaComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: AreaComponent, selector: \"g[ngx-charts-area]\", inputs: { data: \"data\", path: \"path\", startingPath: \"startingPath\", fill: \"fill\", opacity: \"opacity\", startOpacity: \"startOpacity\", endOpacity: \"endOpacity\", gradient: \"gradient\", stops: \"stops\", animations: \"animations\" }, outputs: { select: \"select\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:defs *ngIf=\"gradient\">\n      <svg:g\n        ngx-charts-svg-linear-gradient\n        [orientation]=\"barOrientation.Vertical\"\n        [name]=\"gradientId\"\n        [stops]=\"gradientStops\"\n      />\n    </svg:defs>\n    <svg:path class=\"area\" [attr.d]=\"areaPath\" [attr.fill]=\"gradient ? gradientFill : fill\" [style.opacity]=\"opacity\" />\n  `, isInline: true, components: [{ type: SvgLinearGradientComponent, selector: \"g[ngx-charts-svg-linear-gradient]\", inputs: [\"orientation\", \"name\", \"stops\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AreaComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-area]',\n                    template: `\n    <svg:defs *ngIf=\"gradient\">\n      <svg:g\n        ngx-charts-svg-linear-gradient\n        [orientation]=\"barOrientation.Vertical\"\n        [name]=\"gradientId\"\n        [stops]=\"gradientStops\"\n      />\n    </svg:defs>\n    <svg:path class=\"area\" [attr.d]=\"areaPath\" [attr.fill]=\"gradient ? gradientFill : fill\" [style.opacity]=\"opacity\" />\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { data: [{\n                type: Input\n            }], path: [{\n                type: Input\n            }], startingPath: [{\n                type: Input\n            }], fill: [{\n                type: Input\n            }], opacity: [{\n                type: Input\n            }], startOpacity: [{\n                type: Input\n            }], endOpacity: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], stops: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }] } });\n\n// Robert Penner's easeOutExpo\nfunction easeOutExpo(t, b, c, d) {\n    return (c * (-Math.pow(2, (-10 * t) / d) + 1) * 1024) / 1023 + b;\n}\n/**\n * Counts from a number to the end incrementally.\n */\nfunction count(countFrom, countTo, countDecimals, countDuration, callback) {\n    const startVal = Number(countFrom);\n    const endVal = Number(countTo);\n    const countDown = startVal > endVal;\n    const decimals = Math.max(0, countDecimals);\n    const dec = Math.pow(10, decimals);\n    const duration = Number(countDuration) * 1000;\n    let startTime;\n    function runCount(timestamp) {\n        let frameVal;\n        const progress = timestamp - startTime;\n        if (countDown) {\n            frameVal = startVal - easeOutExpo(progress, 0, startVal - endVal, duration);\n        }\n        else {\n            frameVal = easeOutExpo(progress, startVal, endVal - startVal, duration);\n        }\n        if (countDown) {\n            frameVal = frameVal < endVal ? endVal : frameVal;\n        }\n        else {\n            frameVal = frameVal > endVal ? endVal : frameVal;\n        }\n        frameVal = Math.round(frameVal * dec) / dec;\n        const tick = progress < duration;\n        callback({\n            value: frameVal,\n            progress,\n            timestamp,\n            finished: !tick\n        });\n        if (tick) {\n            return requestAnimationFrame(val => runCount(val));\n        }\n    }\n    return requestAnimationFrame(timestamp => {\n        startTime = timestamp;\n        return runCount(timestamp);\n    });\n}\n/**\n * Determine decimals places\n *\n * @export\n */\nfunction decimalChecker(countTo) {\n    const endVal = Number(countTo);\n    if (endVal % 1 !== 0 && Math.abs(endVal) <= 10) {\n        return 2;\n    }\n    return 0;\n}\n\n/**\n * Count up component\n *\n * Loosely inspired by:\n *  - https://github.com/izupet/angular2-counto\n *  - https://inorganik.github.io/countUp.js/\n *\n * @export\n */\nclass CountUpDirective {\n    constructor(cd, element) {\n        this.cd = cd;\n        this.countDuration = 1;\n        this.countPrefix = '';\n        this.countSuffix = '';\n        this.countChange = new EventEmitter();\n        this.countFinish = new EventEmitter();\n        this.value = '';\n        this._countDecimals = 0;\n        this._countTo = 0;\n        this._countFrom = 0;\n        this.nativeElement = element.nativeElement;\n    }\n    set countDecimals(val) {\n        this._countDecimals = val;\n    }\n    get countDecimals() {\n        if (this._countDecimals)\n            return this._countDecimals;\n        return decimalChecker(this.countTo);\n    }\n    set countTo(val) {\n        this._countTo = parseFloat(val);\n        this.start();\n    }\n    get countTo() {\n        return this._countTo;\n    }\n    set countFrom(val) {\n        this._countFrom = parseFloat(val);\n        this.start();\n    }\n    get countFrom() {\n        return this._countFrom;\n    }\n    ngOnDestroy() {\n        cancelAnimationFrame(this.animationReq);\n    }\n    start() {\n        cancelAnimationFrame(this.animationReq);\n        const valueFormatting = this.valueFormatting || (value => `${this.countPrefix}${value.toLocaleString()}${this.countSuffix}`);\n        const callback = ({ value, progress, finished }) => {\n            this.value = valueFormatting(value);\n            this.cd.markForCheck();\n            if (!finished)\n                this.countChange.emit({ value: this.value, progress });\n            if (finished)\n                this.countFinish.emit({ value: this.value, progress });\n        };\n        this.animationReq = count(this.countFrom, this.countTo, this.countDecimals, this.countDuration, callback);\n    }\n}\nCountUpDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CountUpDirective, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\nCountUpDirective.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: CountUpDirective, selector: \"[ngx-charts-count-up]\", inputs: { countDuration: \"countDuration\", countPrefix: \"countPrefix\", countSuffix: \"countSuffix\", valueFormatting: \"valueFormatting\", countDecimals: \"countDecimals\", countTo: \"countTo\", countFrom: \"countFrom\" }, outputs: { countChange: \"countChange\", countFinish: \"countFinish\" }, ngImport: i0, template: ` {{ value }} `, isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CountUpDirective, decorators: [{\n            type: Component,\n            args: [{\n                    selector: '[ngx-charts-count-up]',\n                    template: ` {{ value }} `\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }]; }, propDecorators: { countDuration: [{\n                type: Input\n            }], countPrefix: [{\n                type: Input\n            }], countSuffix: [{\n                type: Input\n            }], valueFormatting: [{\n                type: Input\n            }], countDecimals: [{\n                type: Input\n            }], countTo: [{\n                type: Input\n            }], countFrom: [{\n                type: Input\n            }], countChange: [{\n                type: Output\n            }], countFinish: [{\n                type: Output\n            }] } });\n\n// If we don't check whether 'window' and 'global' variables are defined,\n// code will fail in browser/node with 'variable is undefined' error.\nlet root;\nif (typeof window !== 'undefined') {\n    root = window;\n}\nelse if (typeof global !== 'undefined') {\n    root = global;\n}\n// tslint:disable-next-line:variable-name\nconst MouseEvent = root.MouseEvent;\nfunction createMouseEvent(name, bubbles = false, cancelable = true) {\n    // Calling new of an event does not work correctly on IE. The following is a tested workaround\n    // See https://stackoverflow.com/questions/27176983/dispatchevent-not-working-in-ie11\n    if (typeof MouseEvent === 'function') {\n        // Sane browsers\n        return new MouseEvent(name, { bubbles, cancelable });\n    }\n    else {\n        // IE\n        const event = document.createEvent('MouseEvent');\n        event.initEvent(name, bubbles, cancelable);\n        return event;\n    }\n}\n\nclass TooltipArea {\n    constructor(platformId) {\n        this.platformId = platformId;\n        this.anchorOpacity = 0;\n        this.anchorPos = -1;\n        this.anchorValues = [];\n        this.placementTypes = PlacementTypes;\n        this.styleTypes = StyleTypes;\n        this.showPercentage = false;\n        this.tooltipDisabled = false;\n        this.hover = new EventEmitter();\n    }\n    getValues(xVal) {\n        const results = [];\n        for (const group of this.results) {\n            const item = group.series.find(d => d.name.toString() === xVal.toString());\n            let groupName = group.name;\n            if (groupName instanceof Date) {\n                groupName = groupName.toLocaleDateString();\n            }\n            if (item) {\n                const label = item.name;\n                let val = item.value;\n                if (this.showPercentage) {\n                    val = (item.d1 - item.d0).toFixed(2) + '%';\n                }\n                let color;\n                if (this.colors.scaleType === ScaleType.Linear) {\n                    let v = val;\n                    if (item.d1) {\n                        v = item.d1;\n                    }\n                    color = this.colors.getColor(v);\n                }\n                else {\n                    color = this.colors.getColor(group.name);\n                }\n                const data = Object.assign({}, item, {\n                    value: val,\n                    name: label,\n                    series: groupName,\n                    min: item.min,\n                    max: item.max,\n                    color\n                });\n                results.push(data);\n            }\n        }\n        return results;\n    }\n    mouseMove(event) {\n        if (!isPlatformBrowser(this.platformId)) {\n            return;\n        }\n        const xPos = event.pageX - event.target.getBoundingClientRect().left;\n        const closestIndex = this.findClosestPointIndex(xPos);\n        const closestPoint = this.xSet[closestIndex];\n        this.anchorPos = this.xScale(closestPoint);\n        this.anchorPos = Math.max(0, this.anchorPos);\n        this.anchorPos = Math.min(this.dims.width, this.anchorPos);\n        this.anchorValues = this.getValues(closestPoint);\n        if (this.anchorPos !== this.lastAnchorPos) {\n            const ev = createMouseEvent('mouseleave');\n            this.tooltipAnchor.nativeElement.dispatchEvent(ev);\n            this.anchorOpacity = 0.7;\n            this.hover.emit({\n                value: closestPoint\n            });\n            this.showTooltip();\n            this.lastAnchorPos = this.anchorPos;\n        }\n    }\n    findClosestPointIndex(xPos) {\n        let minIndex = 0;\n        let maxIndex = this.xSet.length - 1;\n        let minDiff = Number.MAX_VALUE;\n        let closestIndex = 0;\n        while (minIndex <= maxIndex) {\n            const currentIndex = ((minIndex + maxIndex) / 2) | 0;\n            const currentElement = this.xScale(this.xSet[currentIndex]);\n            const curDiff = Math.abs(currentElement - xPos);\n            if (curDiff < minDiff) {\n                minDiff = curDiff;\n                closestIndex = currentIndex;\n            }\n            if (currentElement < xPos) {\n                minIndex = currentIndex + 1;\n            }\n            else if (currentElement > xPos) {\n                maxIndex = currentIndex - 1;\n            }\n            else {\n                minDiff = 0;\n                closestIndex = currentIndex;\n                break;\n            }\n        }\n        return closestIndex;\n    }\n    showTooltip() {\n        const event = createMouseEvent('mouseenter');\n        this.tooltipAnchor.nativeElement.dispatchEvent(event);\n    }\n    hideTooltip() {\n        const event = createMouseEvent('mouseleave');\n        this.tooltipAnchor.nativeElement.dispatchEvent(event);\n        this.anchorOpacity = 0;\n        this.lastAnchorPos = -1;\n    }\n    getToolTipText(tooltipItem) {\n        let result = '';\n        if (tooltipItem.series !== undefined) {\n            result += tooltipItem.series;\n        }\n        else {\n            result += '???';\n        }\n        result += ': ';\n        if (tooltipItem.value !== undefined) {\n            result += tooltipItem.value.toLocaleString();\n        }\n        if (tooltipItem.min !== undefined || tooltipItem.max !== undefined) {\n            result += ' (';\n            if (tooltipItem.min !== undefined) {\n                if (tooltipItem.max === undefined) {\n                    result += '≥';\n                }\n                result += tooltipItem.min.toLocaleString();\n                if (tooltipItem.max !== undefined) {\n                    result += ' - ';\n                }\n            }\n            else if (tooltipItem.max !== undefined) {\n                result += '≤';\n            }\n            if (tooltipItem.max !== undefined) {\n                result += tooltipItem.max.toLocaleString();\n            }\n            result += ')';\n        }\n        return result;\n    }\n}\nTooltipArea.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TooltipArea, deps: [{ token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Component });\nTooltipArea.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: TooltipArea, selector: \"g[ngx-charts-tooltip-area]\", inputs: { dims: \"dims\", xSet: \"xSet\", xScale: \"xScale\", yScale: \"yScale\", results: \"results\", colors: \"colors\", showPercentage: \"showPercentage\", tooltipDisabled: \"tooltipDisabled\", tooltipTemplate: \"tooltipTemplate\" }, outputs: { hover: \"hover\" }, viewQueries: [{ propertyName: \"tooltipAnchor\", first: true, predicate: [\"tooltipAnchor\"], descendants: true }], ngImport: i0, template: `\n    <svg:g>\n      <svg:rect\n        class=\"tooltip-area\"\n        [attr.x]=\"0\"\n        y=\"0\"\n        [attr.width]=\"dims.width\"\n        [attr.height]=\"dims.height\"\n        style=\"opacity: 0; cursor: 'auto';\"\n        (mousemove)=\"mouseMove($event)\"\n        (mouseleave)=\"hideTooltip()\"\n      />\n      <ng-template #defaultTooltipTemplate let-model=\"model\">\n        <xhtml:div class=\"area-tooltip-container\">\n          <xhtml:div *ngFor=\"let tooltipItem of model\" class=\"tooltip-item\">\n            <xhtml:span class=\"tooltip-item-color\" [style.background-color]=\"tooltipItem.color\"></xhtml:span>\n            {{ getToolTipText(tooltipItem) }}\n          </xhtml:div>\n        </xhtml:div>\n      </ng-template>\n      <svg:rect\n        #tooltipAnchor\n        [@animationState]=\"anchorOpacity !== 0 ? 'active' : 'inactive'\"\n        class=\"tooltip-anchor\"\n        [attr.x]=\"anchorPos\"\n        y=\"0\"\n        [attr.width]=\"1\"\n        [attr.height]=\"dims.height\"\n        [style.opacity]=\"anchorOpacity\"\n        [style.pointer-events]=\"'none'\"\n        ngx-tooltip\n        [tooltipDisabled]=\"tooltipDisabled\"\n        [tooltipPlacement]=\"placementTypes.Right\"\n        [tooltipType]=\"styleTypes.tooltip\"\n        [tooltipSpacing]=\"15\"\n        [tooltipTemplate]=\"tooltipTemplate ? tooltipTemplate : defaultTooltipTemplate\"\n        [tooltipContext]=\"anchorValues\"\n        [tooltipImmediateExit]=\"true\"\n      />\n    </svg:g>\n  `, isInline: true, directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: TooltipDirective, selector: \"[ngx-tooltip]\", inputs: [\"tooltipCssClass\", \"tooltipTitle\", \"tooltipAppendToBody\", \"tooltipSpacing\", \"tooltipDisabled\", \"tooltipShowCaret\", \"tooltipPlacement\", \"tooltipAlignment\", \"tooltipType\", \"tooltipCloseOnClickOutside\", \"tooltipCloseOnMouseLeave\", \"tooltipHideTimeout\", \"tooltipShowTimeout\", \"tooltipTemplate\", \"tooltipShowEvent\", \"tooltipContext\", \"tooltipImmediateExit\"], outputs: [\"show\", \"hide\"] }], animations: [\n        trigger('animationState', [\n            transition('inactive => active', [\n                style({\n                    opacity: 0\n                }),\n                animate(250, style({ opacity: 0.7 }))\n            ]),\n            transition('active => inactive', [\n                style({\n                    opacity: 0.7\n                }),\n                animate(250, style({ opacity: 0 }))\n            ])\n        ])\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TooltipArea, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-tooltip-area]',\n                    template: `\n    <svg:g>\n      <svg:rect\n        class=\"tooltip-area\"\n        [attr.x]=\"0\"\n        y=\"0\"\n        [attr.width]=\"dims.width\"\n        [attr.height]=\"dims.height\"\n        style=\"opacity: 0; cursor: 'auto';\"\n        (mousemove)=\"mouseMove($event)\"\n        (mouseleave)=\"hideTooltip()\"\n      />\n      <ng-template #defaultTooltipTemplate let-model=\"model\">\n        <xhtml:div class=\"area-tooltip-container\">\n          <xhtml:div *ngFor=\"let tooltipItem of model\" class=\"tooltip-item\">\n            <xhtml:span class=\"tooltip-item-color\" [style.background-color]=\"tooltipItem.color\"></xhtml:span>\n            {{ getToolTipText(tooltipItem) }}\n          </xhtml:div>\n        </xhtml:div>\n      </ng-template>\n      <svg:rect\n        #tooltipAnchor\n        [@animationState]=\"anchorOpacity !== 0 ? 'active' : 'inactive'\"\n        class=\"tooltip-anchor\"\n        [attr.x]=\"anchorPos\"\n        y=\"0\"\n        [attr.width]=\"1\"\n        [attr.height]=\"dims.height\"\n        [style.opacity]=\"anchorOpacity\"\n        [style.pointer-events]=\"'none'\"\n        ngx-tooltip\n        [tooltipDisabled]=\"tooltipDisabled\"\n        [tooltipPlacement]=\"placementTypes.Right\"\n        [tooltipType]=\"styleTypes.tooltip\"\n        [tooltipSpacing]=\"15\"\n        [tooltipTemplate]=\"tooltipTemplate ? tooltipTemplate : defaultTooltipTemplate\"\n        [tooltipContext]=\"anchorValues\"\n        [tooltipImmediateExit]=\"true\"\n      />\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    animations: [\n                        trigger('animationState', [\n                            transition('inactive => active', [\n                                style({\n                                    opacity: 0\n                                }),\n                                animate(250, style({ opacity: 0.7 }))\n                            ]),\n                            transition('active => inactive', [\n                                style({\n                                    opacity: 0.7\n                                }),\n                                animate(250, style({ opacity: 0 }))\n                            ])\n                        ])\n                    ]\n                }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }]; }, propDecorators: { dims: [{\n                type: Input\n            }], xSet: [{\n                type: Input\n            }], xScale: [{\n                type: Input\n            }], yScale: [{\n                type: Input\n            }], results: [{\n                type: Input\n            }], colors: [{\n                type: Input\n            }], showPercentage: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], tooltipTemplate: [{\n                type: Input\n            }], hover: [{\n                type: Output\n            }], tooltipAnchor: [{\n                type: ViewChild,\n                args: ['tooltipAnchor', { static: false }]\n            }] } });\n\nclass Timeline {\n    constructor(element, cd) {\n        this.cd = cd;\n        this.height = 50;\n        this.select = new EventEmitter();\n        this.onDomainChange = new EventEmitter();\n        this.initialized = false;\n        this.element = element.nativeElement;\n    }\n    ngOnChanges(changes) {\n        this.update();\n        if (!this.initialized) {\n            this.addBrush();\n            this.initialized = true;\n        }\n    }\n    update() {\n        this.dims = this.getDims();\n        this.height = this.dims.height;\n        const offsetY = this.view[1] - this.height;\n        this.xDomain = this.getXDomain();\n        this.xScale = this.getXScale();\n        if (this.brush) {\n            this.updateBrush();\n        }\n        this.transform = `translate(0 , ${offsetY})`;\n        this.filterId = 'filter' + id().toString();\n        this.filter = `url(#${this.filterId})`;\n        this.cd.markForCheck();\n    }\n    getXDomain() {\n        let values = [];\n        for (const results of this.results) {\n            for (const d of results.series) {\n                if (!values.includes(d.name)) {\n                    values.push(d.name);\n                }\n            }\n        }\n        let domain = [];\n        if (this.scaleType === ScaleType.Time) {\n            const min = Math.min(...values);\n            const max = Math.max(...values);\n            domain = [min, max];\n        }\n        else if (this.scaleType === ScaleType.Linear) {\n            values = values.map(v => Number(v));\n            const min = Math.min(...values);\n            const max = Math.max(...values);\n            domain = [min, max];\n        }\n        else {\n            domain = values;\n        }\n        return domain;\n    }\n    getXScale() {\n        let scale;\n        if (this.scaleType === ScaleType.Time) {\n            scale = scaleTime().range([0, this.dims.width]).domain(this.xDomain);\n        }\n        else if (this.scaleType === ScaleType.Linear) {\n            scale = scaleLinear().range([0, this.dims.width]).domain(this.xDomain);\n        }\n        else if (this.scaleType === ScaleType.Ordinal) {\n            scale = scalePoint().range([0, this.dims.width]).padding(0.1).domain(this.xDomain);\n        }\n        return scale;\n    }\n    addBrush() {\n        if (this.brush)\n            return;\n        const height = this.height;\n        const width = this.view[0];\n        this.brush = brushX()\n            .extent([\n            [0, 0],\n            [width, height]\n        ])\n            .on('brush end', ({ selection }) => {\n            const newSelection = selection || this.xScale.range();\n            const newDomain = newSelection.map(this.xScale.invert);\n            this.onDomainChange.emit(newDomain);\n            this.cd.markForCheck();\n        });\n        select(this.element).select('.brush').call(this.brush);\n    }\n    updateBrush() {\n        if (!this.brush)\n            return;\n        const height = this.height;\n        const width = this.view[0];\n        this.brush.extent([\n            [0, 0],\n            [width, height]\n        ]);\n        select(this.element).select('.brush').call(this.brush);\n        // clear hardcoded properties so they can be defined by CSS\n        select(this.element)\n            .select('.selection')\n            .attr('fill', undefined)\n            .attr('stroke', undefined)\n            .attr('fill-opacity', undefined);\n        this.cd.markForCheck();\n    }\n    getDims() {\n        const width = this.view[0];\n        const dims = {\n            width,\n            height: this.height\n        };\n        return dims;\n    }\n}\nTimeline.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: Timeline, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nTimeline.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: Timeline, selector: \"g[ngx-charts-timeline]\", inputs: { view: \"view\", results: \"results\", scheme: \"scheme\", customColors: \"customColors\", legend: \"legend\", autoScale: \"autoScale\", scaleType: \"scaleType\", height: \"height\" }, outputs: { select: \"select\", onDomainChange: \"onDomainChange\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:g class=\"timeline\" [attr.transform]=\"transform\">\n      <svg:filter [attr.id]=\"filterId\">\n        <svg:feColorMatrix\n          in=\"SourceGraphic\"\n          type=\"matrix\"\n          values=\"0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0\"\n        />\n      </svg:filter>\n      <svg:g class=\"embedded-chart\">\n        <ng-content></ng-content>\n      </svg:g>\n      <svg:rect x=\"0\" [attr.width]=\"view[0]\" y=\"0\" [attr.height]=\"height\" class=\"brush-background\" />\n      <svg:g class=\"brush\"></svg:g>\n    </svg:g>\n  `, isInline: true, styles: [\".timeline .brush-background{fill:#0000000d}.timeline .brush .selection{fill:#0000001a;stroke-width:1px;stroke:#888}.timeline .brush .handle{fill-opacity:0}.timeline .embedded-chart{opacity:.6}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: Timeline, decorators: [{\n            type: Component,\n            args: [{ selector: 'g[ngx-charts-timeline]', template: `\n    <svg:g class=\"timeline\" [attr.transform]=\"transform\">\n      <svg:filter [attr.id]=\"filterId\">\n        <svg:feColorMatrix\n          in=\"SourceGraphic\"\n          type=\"matrix\"\n          values=\"0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0\"\n        />\n      </svg:filter>\n      <svg:g class=\"embedded-chart\">\n        <ng-content></ng-content>\n      </svg:g>\n      <svg:rect x=\"0\" [attr.width]=\"view[0]\" y=\"0\" [attr.height]=\"height\" class=\"brush-background\" />\n      <svg:g class=\"brush\"></svg:g>\n    </svg:g>\n  `, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".timeline .brush-background{fill:#0000000d}.timeline .brush .selection{fill:#0000001a;stroke-width:1px;stroke:#888}.timeline .brush .handle{fill-opacity:0}.timeline .embedded-chart{opacity:.6}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { view: [{\n                type: Input\n            }], results: [{\n                type: Input\n            }], scheme: [{\n                type: Input\n            }], customColors: [{\n                type: Input\n            }], legend: [{\n                type: Input\n            }], autoScale: [{\n                type: Input\n            }], scaleType: [{\n                type: Input\n            }], height: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], onDomainChange: [{\n                type: Output\n            }] } });\n\nclass AdvancedLegendComponent {\n    constructor() {\n        this.label = 'Total';\n        this.animations = true;\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.legendItems = [];\n        this.labelFormatting = label => label;\n        this.percentageFormatting = percentage => percentage;\n        this.defaultValueFormatting = value => value.toLocaleString();\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    getTotal() {\n        return this.data.map(d => Number(d.value)).reduce((sum, d) => sum + d, 0);\n    }\n    update() {\n        this.total = this.getTotal();\n        this.roundedTotal = this.total;\n        this.legendItems = this.getLegendItems();\n    }\n    getLegendItems() {\n        return this.data.map(d => {\n            const label = formatLabel(d.name);\n            const value = d.value;\n            const color = this.colors.getColor(label);\n            const percentage = this.total > 0 ? (value / this.total) * 100 : 0;\n            const formattedLabel = typeof this.labelFormatting === 'function' ? this.labelFormatting(label) : label;\n            return {\n                _value: value,\n                data: d,\n                value,\n                color,\n                label: formattedLabel,\n                displayLabel: trimLabel(formattedLabel, 20),\n                origialLabel: d.name,\n                percentage: this.percentageFormatting ? this.percentageFormatting(percentage) : percentage.toLocaleString()\n            };\n        });\n    }\n    trackBy(index, item) {\n        return item.label;\n    }\n}\nAdvancedLegendComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AdvancedLegendComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nAdvancedLegendComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: AdvancedLegendComponent, selector: \"ngx-charts-advanced-legend\", inputs: { width: \"width\", data: \"data\", colors: \"colors\", label: \"label\", animations: \"animations\", valueFormatting: \"valueFormatting\", labelFormatting: \"labelFormatting\", percentageFormatting: \"percentageFormatting\" }, outputs: { select: \"select\", activate: \"activate\", deactivate: \"deactivate\" }, usesOnChanges: true, ngImport: i0, template: `\n    <div class=\"advanced-pie-legend\" [style.width.px]=\"width\">\n      <div\n        *ngIf=\"animations\"\n        class=\"total-value\"\n        ngx-charts-count-up\n        [countTo]=\"roundedTotal\"\n        [valueFormatting]=\"valueFormatting\"\n      ></div>\n      <div class=\"total-value\" *ngIf=\"!animations\">\n        {{ valueFormatting ? valueFormatting(roundedTotal) : defaultValueFormatting(roundedTotal) }}\n      </div>\n      <div class=\"total-label\">\n        {{ label }}\n      </div>\n      <div class=\"legend-items-container\">\n        <div class=\"legend-items\">\n          <div\n            *ngFor=\"let legendItem of legendItems; trackBy: trackBy\"\n            tabindex=\"-1\"\n            class=\"legend-item\"\n            (mouseenter)=\"activate.emit(legendItem.data)\"\n            (mouseleave)=\"deactivate.emit(legendItem.data)\"\n            (click)=\"select.emit(legendItem.data)\"\n          >\n            <div class=\"item-color\" [style.border-left-color]=\"legendItem.color\"></div>\n            <div\n              *ngIf=\"animations\"\n              class=\"item-value\"\n              ngx-charts-count-up\n              [countTo]=\"legendItem._value\"\n              [valueFormatting]=\"valueFormatting\"\n            ></div>\n            <div *ngIf=\"!animations\" class=\"item-value\">\n              {{ valueFormatting ? valueFormatting(legendItem.value) : defaultValueFormatting(legendItem.value) }}\n            </div>\n            <div class=\"item-label\">{{ legendItem.displayLabel }}</div>\n            <div\n              *ngIf=\"animations\"\n              class=\"item-percent\"\n              ngx-charts-count-up\n              [countTo]=\"legendItem.percentage\"\n              [countSuffix]=\"'%'\"\n            ></div>\n            <div *ngIf=\"!animations\" class=\"item-percent\">{{ legendItem.percentage.toLocaleString() }}%</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  `, isInline: true, styles: [\".advanced-pie-legend{float:left;position:relative;top:50%;transform:translateY(-50%)}.advanced-pie-legend .total-value{font-size:36px}.advanced-pie-legend .total-label{font-size:24px;margin-bottom:19px}.advanced-pie-legend .legend-items-container{width:100%}.advanced-pie-legend .legend-items-container .legend-items{white-space:nowrap;overflow:auto}.advanced-pie-legend .legend-items-container .legend-items .legend-item{margin-right:20px;display:inline-block;cursor:pointer}.advanced-pie-legend .legend-items-container .legend-items .legend-item:focus{outline:none}.advanced-pie-legend .legend-items-container .legend-items .legend-item:hover{color:#000;transition:.2s}.advanced-pie-legend .legend-items-container .legend-items .legend-item .item-value{font-size:24px;margin-top:-6px;margin-left:11px}.advanced-pie-legend .legend-items-container .legend-items .legend-item .item-label{font-size:14px;opacity:.7;margin-left:11px;margin-top:-6px}.advanced-pie-legend .legend-items-container .legend-items .legend-item .item-percent{font-size:24px;opacity:.7;margin-left:11px}.advanced-pie-legend .legend-items-container .legend-items .legend-item .item-color{border-left:4px solid;width:4px;height:42px;float:left;margin-right:7px}\\n\"], components: [{ type: CountUpDirective, selector: \"[ngx-charts-count-up]\", inputs: [\"countDuration\", \"countPrefix\", \"countSuffix\", \"valueFormatting\", \"countDecimals\", \"countTo\", \"countFrom\"], outputs: [\"countChange\", \"countFinish\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AdvancedLegendComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-advanced-legend', template: `\n    <div class=\"advanced-pie-legend\" [style.width.px]=\"width\">\n      <div\n        *ngIf=\"animations\"\n        class=\"total-value\"\n        ngx-charts-count-up\n        [countTo]=\"roundedTotal\"\n        [valueFormatting]=\"valueFormatting\"\n      ></div>\n      <div class=\"total-value\" *ngIf=\"!animations\">\n        {{ valueFormatting ? valueFormatting(roundedTotal) : defaultValueFormatting(roundedTotal) }}\n      </div>\n      <div class=\"total-label\">\n        {{ label }}\n      </div>\n      <div class=\"legend-items-container\">\n        <div class=\"legend-items\">\n          <div\n            *ngFor=\"let legendItem of legendItems; trackBy: trackBy\"\n            tabindex=\"-1\"\n            class=\"legend-item\"\n            (mouseenter)=\"activate.emit(legendItem.data)\"\n            (mouseleave)=\"deactivate.emit(legendItem.data)\"\n            (click)=\"select.emit(legendItem.data)\"\n          >\n            <div class=\"item-color\" [style.border-left-color]=\"legendItem.color\"></div>\n            <div\n              *ngIf=\"animations\"\n              class=\"item-value\"\n              ngx-charts-count-up\n              [countTo]=\"legendItem._value\"\n              [valueFormatting]=\"valueFormatting\"\n            ></div>\n            <div *ngIf=\"!animations\" class=\"item-value\">\n              {{ valueFormatting ? valueFormatting(legendItem.value) : defaultValueFormatting(legendItem.value) }}\n            </div>\n            <div class=\"item-label\">{{ legendItem.displayLabel }}</div>\n            <div\n              *ngIf=\"animations\"\n              class=\"item-percent\"\n              ngx-charts-count-up\n              [countTo]=\"legendItem.percentage\"\n              [countSuffix]=\"'%'\"\n            ></div>\n            <div *ngIf=\"!animations\" class=\"item-percent\">{{ legendItem.percentage.toLocaleString() }}%</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  `, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".advanced-pie-legend{float:left;position:relative;top:50%;transform:translateY(-50%)}.advanced-pie-legend .total-value{font-size:36px}.advanced-pie-legend .total-label{font-size:24px;margin-bottom:19px}.advanced-pie-legend .legend-items-container{width:100%}.advanced-pie-legend .legend-items-container .legend-items{white-space:nowrap;overflow:auto}.advanced-pie-legend .legend-items-container .legend-items .legend-item{margin-right:20px;display:inline-block;cursor:pointer}.advanced-pie-legend .legend-items-container .legend-items .legend-item:focus{outline:none}.advanced-pie-legend .legend-items-container .legend-items .legend-item:hover{color:#000;transition:.2s}.advanced-pie-legend .legend-items-container .legend-items .legend-item .item-value{font-size:24px;margin-top:-6px;margin-left:11px}.advanced-pie-legend .legend-items-container .legend-items .legend-item .item-label{font-size:14px;opacity:.7;margin-left:11px;margin-top:-6px}.advanced-pie-legend .legend-items-container .legend-items .legend-item .item-percent{font-size:24px;opacity:.7;margin-left:11px}.advanced-pie-legend .legend-items-container .legend-items .legend-item .item-color{border-left:4px solid;width:4px;height:42px;float:left;margin-right:7px}\\n\"] }]\n        }], propDecorators: { width: [{\n                type: Input\n            }], data: [{\n                type: Input\n            }], colors: [{\n                type: Input\n            }], label: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], valueFormatting: [{\n                type: Input\n            }], labelFormatting: [{\n                type: Input\n            }], percentageFormatting: [{\n                type: Input\n            }] } });\n\nconst COMPONENTS = [\n    AreaComponent,\n    BaseChartComponent,\n    CountUpDirective,\n    TooltipArea,\n    ChartComponent,\n    LegendComponent,\n    LegendEntryComponent,\n    ScaleLegendComponent,\n    CircleComponent,\n    CircleSeriesComponent,\n    GridPanelComponent,\n    GridPanelSeriesComponent,\n    SvgLinearGradientComponent,\n    SvgRadialGradientComponent,\n    Timeline,\n    AdvancedLegendComponent\n];\nclass ChartCommonModule {\n}\nChartCommonModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: ChartCommonModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nChartCommonModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: ChartCommonModule, declarations: [AreaComponent,\n        BaseChartComponent,\n        CountUpDirective,\n        TooltipArea,\n        ChartComponent,\n        LegendComponent,\n        LegendEntryComponent,\n        ScaleLegendComponent,\n        CircleComponent,\n        CircleSeriesComponent,\n        GridPanelComponent,\n        GridPanelSeriesComponent,\n        SvgLinearGradientComponent,\n        SvgRadialGradientComponent,\n        Timeline,\n        AdvancedLegendComponent, VisibilityObserver], imports: [CommonModule, AxesModule, TooltipModule], exports: [CommonModule, AxesModule, TooltipModule, AreaComponent,\n        BaseChartComponent,\n        CountUpDirective,\n        TooltipArea,\n        ChartComponent,\n        LegendComponent,\n        LegendEntryComponent,\n        ScaleLegendComponent,\n        CircleComponent,\n        CircleSeriesComponent,\n        GridPanelComponent,\n        GridPanelSeriesComponent,\n        SvgLinearGradientComponent,\n        SvgRadialGradientComponent,\n        Timeline,\n        AdvancedLegendComponent, VisibilityObserver] });\nChartCommonModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: ChartCommonModule, imports: [[CommonModule, AxesModule, TooltipModule], CommonModule, AxesModule, TooltipModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: ChartCommonModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, AxesModule, TooltipModule],\n                    declarations: [...COMPONENTS, VisibilityObserver],\n                    exports: [CommonModule, AxesModule, TooltipModule, ...COMPONENTS, VisibilityObserver]\n                }]\n        }] });\n\nfunction calculateViewDimensions({ width, height, margins, showXAxis = false, showYAxis = false, xAxisHeight = 0, yAxisWidth = 0, showXLabel = false, showYLabel = false, showLegend = false, legendType = ScaleType.Ordinal, legendPosition = LegendPosition.Right, columns = 12 }) {\n    let xOffset = margins[3];\n    let chartWidth = width;\n    let chartHeight = height - margins[0] - margins[2];\n    if (showLegend && legendPosition === LegendPosition.Right) {\n        if (legendType === ScaleType.Ordinal) {\n            columns -= 2;\n        }\n        else {\n            columns -= 1;\n        }\n    }\n    chartWidth = (chartWidth * columns) / 12;\n    chartWidth = chartWidth - margins[1] - margins[3];\n    if (showXAxis) {\n        chartHeight -= 5;\n        chartHeight -= xAxisHeight;\n        if (showXLabel) {\n            // text height + spacing between axis label and tick labels\n            const offset = 25 + 5;\n            chartHeight -= offset;\n        }\n    }\n    if (showYAxis) {\n        chartWidth -= 5;\n        chartWidth -= yAxisWidth;\n        xOffset += yAxisWidth;\n        xOffset += 10;\n        if (showYLabel) {\n            // text height + spacing between axis label and tick labels\n            const offset = 25 + 5;\n            chartWidth -= offset;\n            xOffset += offset;\n        }\n    }\n    chartWidth = Math.max(0, chartWidth);\n    chartHeight = Math.max(0, chartHeight);\n    return {\n        width: Math.floor(chartWidth),\n        height: Math.floor(chartHeight),\n        xOffset: Math.floor(xOffset)\n    };\n}\n\nconst colorSets = [\n    {\n        name: 'vivid',\n        selectable: true,\n        group: ScaleType.Ordinal,\n        domain: [\n            '#647c8a',\n            '#3f51b5',\n            '#2196f3',\n            '#00b862',\n            '#afdf0a',\n            '#a7b61a',\n            '#f3e562',\n            '#ff9800',\n            '#ff5722',\n            '#ff4514'\n        ]\n    },\n    {\n        name: 'natural',\n        selectable: true,\n        group: ScaleType.Ordinal,\n        domain: [\n            '#bf9d76',\n            '#e99450',\n            '#d89f59',\n            '#f2dfa7',\n            '#a5d7c6',\n            '#7794b1',\n            '#afafaf',\n            '#707160',\n            '#ba9383',\n            '#d9d5c3'\n        ]\n    },\n    {\n        name: 'cool',\n        selectable: true,\n        group: ScaleType.Ordinal,\n        domain: [\n            '#a8385d',\n            '#7aa3e5',\n            '#a27ea8',\n            '#aae3f5',\n            '#adcded',\n            '#a95963',\n            '#8796c0',\n            '#7ed3ed',\n            '#50abcc',\n            '#ad6886'\n        ]\n    },\n    {\n        name: 'fire',\n        selectable: true,\n        group: ScaleType.Ordinal,\n        domain: ['#ff3d00', '#bf360c', '#ff8f00', '#ff6f00', '#ff5722', '#e65100', '#ffca28', '#ffab00']\n    },\n    {\n        name: 'solar',\n        selectable: true,\n        group: ScaleType.Linear,\n        domain: [\n            '#fff8e1',\n            '#ffecb3',\n            '#ffe082',\n            '#ffd54f',\n            '#ffca28',\n            '#ffc107',\n            '#ffb300',\n            '#ffa000',\n            '#ff8f00',\n            '#ff6f00'\n        ]\n    },\n    {\n        name: 'air',\n        selectable: true,\n        group: ScaleType.Linear,\n        domain: [\n            '#e1f5fe',\n            '#b3e5fc',\n            '#81d4fa',\n            '#4fc3f7',\n            '#29b6f6',\n            '#03a9f4',\n            '#039be5',\n            '#0288d1',\n            '#0277bd',\n            '#01579b'\n        ]\n    },\n    {\n        name: 'aqua',\n        selectable: true,\n        group: ScaleType.Linear,\n        domain: [\n            '#e0f7fa',\n            '#b2ebf2',\n            '#80deea',\n            '#4dd0e1',\n            '#26c6da',\n            '#00bcd4',\n            '#00acc1',\n            '#0097a7',\n            '#00838f',\n            '#006064'\n        ]\n    },\n    {\n        name: 'flame',\n        selectable: false,\n        group: ScaleType.Ordinal,\n        domain: [\n            '#A10A28',\n            '#D3342D',\n            '#EF6D49',\n            '#FAAD67',\n            '#FDDE90',\n            '#DBED91',\n            '#A9D770',\n            '#6CBA67',\n            '#2C9653',\n            '#146738'\n        ]\n    },\n    {\n        name: 'ocean',\n        selectable: false,\n        group: ScaleType.Ordinal,\n        domain: [\n            '#1D68FB',\n            '#33C0FC',\n            '#4AFFFE',\n            '#AFFFFF',\n            '#FFFC63',\n            '#FDBD2D',\n            '#FC8A25',\n            '#FA4F1E',\n            '#FA141B',\n            '#BA38D1'\n        ]\n    },\n    {\n        name: 'forest',\n        selectable: false,\n        group: ScaleType.Ordinal,\n        domain: [\n            '#55C22D',\n            '#C1F33D',\n            '#3CC099',\n            '#AFFFFF',\n            '#8CFC9D',\n            '#76CFFA',\n            '#BA60FB',\n            '#EE6490',\n            '#C42A1C',\n            '#FC9F32'\n        ]\n    },\n    {\n        name: 'horizon',\n        selectable: false,\n        group: ScaleType.Ordinal,\n        domain: [\n            '#2597FB',\n            '#65EBFD',\n            '#99FDD0',\n            '#FCEE4B',\n            '#FEFCFA',\n            '#FDD6E3',\n            '#FCB1A8',\n            '#EF6F7B',\n            '#CB96E8',\n            '#EFDEE0'\n        ]\n    },\n    {\n        name: 'neons',\n        selectable: false,\n        group: ScaleType.Ordinal,\n        domain: [\n            '#FF3333',\n            '#FF33FF',\n            '#CC33FF',\n            '#0000FF',\n            '#33CCFF',\n            '#33FFFF',\n            '#33FF66',\n            '#CCFF33',\n            '#FFCC00',\n            '#FF6600'\n        ]\n    },\n    {\n        name: 'picnic',\n        selectable: false,\n        group: ScaleType.Ordinal,\n        domain: [\n            '#FAC51D',\n            '#66BD6D',\n            '#FAA026',\n            '#29BB9C',\n            '#E96B56',\n            '#55ACD2',\n            '#B7332F',\n            '#2C83C9',\n            '#9166B8',\n            '#92E7E8'\n        ]\n    },\n    {\n        name: 'night',\n        selectable: false,\n        group: ScaleType.Ordinal,\n        domain: [\n            '#2B1B5A',\n            '#501356',\n            '#183356',\n            '#28203F',\n            '#391B3C',\n            '#1E2B3C',\n            '#120634',\n            '#2D0432',\n            '#051932',\n            '#453080',\n            '#75267D',\n            '#2C507D',\n            '#4B3880',\n            '#752F7D',\n            '#35547D'\n        ]\n    },\n    {\n        name: 'nightLights',\n        selectable: false,\n        group: ScaleType.Ordinal,\n        domain: [\n            '#4e31a5',\n            '#9c25a7',\n            '#3065ab',\n            '#57468b',\n            '#904497',\n            '#46648b',\n            '#32118d',\n            '#a00fb3',\n            '#1052a2',\n            '#6e51bd',\n            '#b63cc3',\n            '#6c97cb',\n            '#8671c1',\n            '#b455be',\n            '#7496c3'\n        ]\n    }\n];\n\nclass ColorHelper {\n    constructor(scheme, type, domain, customColors) {\n        if (typeof scheme === 'string') {\n            scheme = colorSets.find(cs => {\n                return cs.name === scheme;\n            });\n        }\n        this.colorDomain = scheme.domain;\n        this.scaleType = type;\n        this.domain = domain;\n        this.customColors = customColors;\n        this.scale = this.generateColorScheme(scheme, type, this.domain);\n    }\n    generateColorScheme(scheme, type, domain) {\n        if (typeof scheme === 'string') {\n            scheme = colorSets.find(cs => {\n                return cs.name === scheme;\n            });\n        }\n        let colorScale;\n        switch (type) {\n            case ScaleType.Quantile:\n                colorScale = scaleQuantile()\n                    .range(scheme.domain)\n                    .domain(domain);\n                break;\n            case ScaleType.Ordinal:\n                colorScale = scaleOrdinal()\n                    .range(scheme.domain)\n                    .domain(domain);\n                break;\n            case ScaleType.Linear:\n                {\n                    const colorDomain = [...scheme.domain];\n                    if (colorDomain.length === 1) {\n                        colorDomain.push(colorDomain[0]);\n                        this.colorDomain = colorDomain;\n                    }\n                    const points = range(0, 1, 1.0 / colorDomain.length);\n                    colorScale = scaleLinear()\n                        .range(colorDomain)\n                        .domain(points);\n                }\n                break;\n            default:\n                break;\n        }\n        return colorScale;\n    }\n    getColor(value) {\n        if (value === undefined || value === null) {\n            throw new Error('Value can not be null');\n        }\n        if (this.scaleType === ScaleType.Linear) {\n            const valueScale = scaleLinear()\n                .domain(this.domain)\n                .range([0, 1]);\n            return this.scale(valueScale(value));\n        }\n        else {\n            if (typeof this.customColors === 'function') {\n                return this.customColors(value);\n            }\n            const formattedValue = value.toString();\n            let found; // todo type customColors\n            if (this.customColors && this.customColors.length > 0) {\n                found = this.customColors.find(mapping => {\n                    return mapping.name.toLowerCase() === formattedValue.toLowerCase();\n                });\n            }\n            if (found) {\n                return found.value;\n            }\n            else {\n                return this.scale(value);\n            }\n        }\n    }\n    getLinearGradientStops(value, start) {\n        if (start === undefined) {\n            start = this.domain[0];\n        }\n        const valueScale = scaleLinear()\n            .domain(this.domain)\n            .range([0, 1]);\n        const colorValueScale = scaleBand().domain(this.colorDomain).range([0, 1]);\n        const endColor = this.getColor(value);\n        // generate the stops\n        const startVal = valueScale(start);\n        const startColor = this.getColor(start);\n        const endVal = valueScale(value);\n        let i = 1;\n        let currentVal = startVal;\n        const stops = [];\n        stops.push({\n            color: startColor,\n            offset: startVal,\n            originalOffset: startVal,\n            opacity: 1\n        });\n        while (currentVal < endVal && i < this.colorDomain.length) {\n            const color = this.colorDomain[i];\n            const offset = colorValueScale(color);\n            if (offset <= startVal) {\n                i++;\n                continue;\n            }\n            if (offset.toFixed(4) >= (endVal - colorValueScale.bandwidth()).toFixed(4)) {\n                break;\n            }\n            stops.push({\n                color,\n                offset,\n                opacity: 1\n            });\n            currentVal = offset;\n            i++;\n        }\n        if (stops[stops.length - 1].offset < 100) {\n            stops.push({\n                color: endColor,\n                offset: endVal,\n                opacity: 1\n            });\n        }\n        if (endVal === startVal) {\n            stops[0].offset = 0;\n            stops[1].offset = 100;\n        }\n        else {\n            // normalize the offsets into percentages\n            if (stops[stops.length - 1].offset !== 100) {\n                for (const s of stops) {\n                    s.offset = ((s.offset - startVal) / (endVal - startVal)) * 100;\n                }\n            }\n        }\n        return stops;\n    }\n}\n\n/**\n * Based on the data, return an array with unique values.\n *\n * @export\n * @returns array\n */\nfunction getUniqueXDomainValues(results) {\n    const valueSet = new Set();\n    for (const result of results) {\n        for (const d of result.series) {\n            valueSet.add(d.name);\n        }\n    }\n    return Array.from(valueSet);\n}\n/**\n * Get the scaleType of enumerable of values.\n * @returns  'time', 'linear' or 'ordinal'\n */\nfunction getScaleType(values, checkDateType = true) {\n    if (checkDateType) {\n        const allDates = values.every(value => value instanceof Date);\n        if (allDates) {\n            return ScaleType.Time;\n        }\n    }\n    const allNumbers = values.every(value => typeof value === 'number');\n    if (allNumbers) {\n        return ScaleType.Linear;\n    }\n    return ScaleType.Ordinal;\n}\nfunction getXDomainArray(values, xScaleMin, xScaleMax) {\n    const scaleType = getScaleType(values);\n    let xSet = [];\n    let domain = [];\n    if (scaleType === ScaleType.Linear) {\n        values = values.map(v => Number(v));\n    }\n    let min;\n    let max;\n    if (scaleType === ScaleType.Time || scaleType === ScaleType.Linear) {\n        const mappedValues = values.map(v => Number(v));\n        min = xScaleMin ? xScaleMin : Math.min(...mappedValues);\n        max = xScaleMax ? xScaleMax : Math.max(...mappedValues);\n    }\n    if (scaleType === ScaleType.Time) {\n        domain = [new Date(min), new Date(max)];\n        xSet = [...values].sort((a, b) => {\n            const aDate = a.getTime();\n            const bDate = b.getTime();\n            if (aDate > bDate)\n                return 1;\n            if (bDate > aDate)\n                return -1;\n            return 0;\n        });\n    }\n    else if (scaleType === ScaleType.Linear) {\n        domain = [min, max];\n        // Use compare function to sort numbers numerically\n        xSet = [...values].sort((a, b) => a - b);\n    }\n    else {\n        domain = values;\n        xSet = values;\n    }\n    return { domain, xSet, scaleType };\n}\n\nfunction sortLinear(data, property, direction = 'asc') {\n    return data.sort((a, b) => {\n        if (direction === 'asc') {\n            return a[property] - b[property];\n        }\n        else {\n            return b[property] - a[property];\n        }\n    });\n}\nfunction sortByDomain(data, property, direction = 'asc', domain) {\n    return data.sort((a, b) => {\n        const aVal = a[property];\n        const bVal = b[property];\n        const aIdx = domain.indexOf(aVal);\n        const bIdx = domain.indexOf(bVal);\n        if (direction === 'asc') {\n            return aIdx - bIdx;\n        }\n        else {\n            return bIdx - aIdx;\n        }\n    });\n}\nfunction sortByTime(data, property, direction = 'asc') {\n    return data.sort((a, b) => {\n        const aDate = a[property].getTime();\n        const bDate = b[property].getTime();\n        if (direction === 'asc') {\n            if (aDate > bDate)\n                return 1;\n            if (bDate > aDate)\n                return -1;\n            return 0;\n        }\n        else {\n            if (aDate > bDate)\n                return -1;\n            if (bDate > aDate)\n                return 1;\n            return 0;\n        }\n    });\n}\n\nclass AreaSeriesComponent {\n    constructor() {\n        this.baseValue = 'auto';\n        this.stacked = false;\n        this.normalized = false;\n        this.animations = true;\n        this.select = new EventEmitter();\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    update() {\n        this.updateGradient();\n        let currentArea;\n        let startingArea;\n        const xProperty = d => {\n            const label = d.name;\n            return this.xScale(label);\n        };\n        if (this.stacked || this.normalized) {\n            currentArea = area()\n                .x(xProperty)\n                .y0((d, i) => this.yScale(d.d0))\n                .y1((d, i) => this.yScale(d.d1));\n            startingArea = area()\n                .x(xProperty)\n                .y0(d => this.yScale.range()[0])\n                .y1(d => this.yScale.range()[0]);\n        }\n        else {\n            currentArea = area()\n                .x(xProperty)\n                .y0(() => (this.baseValue === 'auto' ? this.yScale.range()[0] : this.yScale(this.baseValue)))\n                .y1(d => this.yScale(d.value));\n            startingArea = area()\n                .x(xProperty)\n                .y0(d => (this.baseValue === 'auto' ? this.yScale.range()[0] : this.yScale(this.baseValue)))\n                .y1(d => (this.baseValue === 'auto' ? this.yScale.range()[0] : this.yScale(this.baseValue)));\n        }\n        currentArea.curve(this.curve);\n        startingArea.curve(this.curve);\n        this.opacity = 0.8;\n        let data = this.data.series;\n        if (this.scaleType === ScaleType.Linear) {\n            data = sortLinear(data, 'name');\n        }\n        else if (this.scaleType === ScaleType.Time) {\n            data = sortByTime(data, 'name');\n        }\n        else {\n            data = sortByDomain(data, 'name', 'asc', this.xScale.domain());\n        }\n        this.path = currentArea(data);\n        this.startingPath = startingArea(data);\n    }\n    updateGradient() {\n        if (this.colors.scaleType === ScaleType.Linear) {\n            this.hasGradient = true;\n            if (this.stacked || this.normalized) {\n                const d0values = this.data.series.map(d => d.d0);\n                const d1values = this.data.series.map(d => d.d1);\n                const max = Math.max(...d1values);\n                const min = Math.min(...d0values);\n                this.gradientStops = this.colors.getLinearGradientStops(max, min);\n            }\n            else {\n                const values = this.data.series.map(d => d.value);\n                const max = Math.max(...values);\n                this.gradientStops = this.colors.getLinearGradientStops(max);\n            }\n        }\n        else {\n            this.hasGradient = false;\n            this.gradientStops = undefined;\n        }\n    }\n    isActive(entry) {\n        if (!this.activeEntries)\n            return false;\n        const item = this.activeEntries.find(d => {\n            return entry.name === d.name;\n        });\n        return item !== undefined;\n    }\n    isInactive(entry) {\n        if (!this.activeEntries || this.activeEntries.length === 0)\n            return false;\n        const item = this.activeEntries.find(d => {\n            return entry.name === d.name;\n        });\n        return item === undefined;\n    }\n}\nAreaSeriesComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AreaSeriesComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nAreaSeriesComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: AreaSeriesComponent, selector: \"g[ngx-charts-area-series]\", inputs: { data: \"data\", xScale: \"xScale\", yScale: \"yScale\", baseValue: \"baseValue\", colors: \"colors\", scaleType: \"scaleType\", stacked: \"stacked\", normalized: \"normalized\", gradient: \"gradient\", curve: \"curve\", activeEntries: \"activeEntries\", animations: \"animations\" }, outputs: { select: \"select\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:g\n      ngx-charts-area\n      class=\"area-series\"\n      [data]=\"data\"\n      [path]=\"path\"\n      [fill]=\"colors.getColor(data.name)\"\n      [stops]=\"gradientStops\"\n      [startingPath]=\"startingPath\"\n      [opacity]=\"opacity\"\n      [gradient]=\"gradient || hasGradient\"\n      [animations]=\"animations\"\n      [class.active]=\"isActive(data)\"\n      [class.inactive]=\"isInactive(data)\"\n    />\n  `, isInline: true, components: [{ type: AreaComponent, selector: \"g[ngx-charts-area]\", inputs: [\"data\", \"path\", \"startingPath\", \"fill\", \"opacity\", \"startOpacity\", \"endOpacity\", \"gradient\", \"stops\", \"animations\"], outputs: [\"select\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AreaSeriesComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-area-series]',\n                    template: `\n    <svg:g\n      ngx-charts-area\n      class=\"area-series\"\n      [data]=\"data\"\n      [path]=\"path\"\n      [fill]=\"colors.getColor(data.name)\"\n      [stops]=\"gradientStops\"\n      [startingPath]=\"startingPath\"\n      [opacity]=\"opacity\"\n      [gradient]=\"gradient || hasGradient\"\n      [animations]=\"animations\"\n      [class.active]=\"isActive(data)\"\n      [class.inactive]=\"isInactive(data)\"\n    />\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], propDecorators: { data: [{\n                type: Input\n            }], xScale: [{\n                type: Input\n            }], yScale: [{\n                type: Input\n            }], baseValue: [{\n                type: Input\n            }], colors: [{\n                type: Input\n            }], scaleType: [{\n                type: Input\n            }], stacked: [{\n                type: Input\n            }], normalized: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], curve: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }] } });\n\nclass AreaChartComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.legend = false;\n        this.legendTitle = 'Legend';\n        this.legendPosition = LegendPosition.Right;\n        this.xAxis = false;\n        this.yAxis = false;\n        this.baseValue = 'auto';\n        this.autoScale = false;\n        this.timeline = false;\n        this.showGridLines = true;\n        this.curve = curveLinear;\n        this.activeEntries = [];\n        this.trimXAxisTicks = true;\n        this.trimYAxisTicks = true;\n        this.rotateXAxisTicks = true;\n        this.maxXAxisTickLength = 16;\n        this.maxYAxisTickLength = 16;\n        this.roundDomains = false;\n        this.tooltipDisabled = false;\n        this.wrapTicks = false;\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.margin = [10, 20, 10, 20];\n        this.xAxisHeight = 0;\n        this.yAxisWidth = 0;\n        this.timelineHeight = 50;\n        this.timelinePadding = 10;\n        this.trackBy = (index, item) => {\n            return item.name;\n        };\n    }\n    update() {\n        super.update();\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showXAxis: this.xAxis,\n            showYAxis: this.yAxis,\n            xAxisHeight: this.xAxisHeight,\n            yAxisWidth: this.yAxisWidth,\n            showXLabel: this.showXAxisLabel,\n            showYLabel: this.showYAxisLabel,\n            showLegend: this.legend,\n            legendType: this.schemeType,\n            legendPosition: this.legendPosition\n        });\n        if (this.timeline) {\n            this.dims.height -= this.timelineHeight + this.margin[2] + this.timelinePadding;\n        }\n        this.xDomain = this.getXDomain();\n        if (this.filteredDomain) {\n            this.xDomain = this.filteredDomain;\n        }\n        this.yDomain = this.getYDomain();\n        this.seriesDomain = this.getSeriesDomain();\n        this.xScale = this.getXScale(this.xDomain, this.dims.width);\n        this.yScale = this.getYScale(this.yDomain, this.dims.height);\n        this.updateTimeline();\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n        this.transform = `translate(${this.dims.xOffset}, ${this.margin[0]})`;\n        this.clipPathId = 'clip' + id().toString();\n        this.clipPath = `url(#${this.clipPathId})`;\n    }\n    updateTimeline() {\n        if (this.timeline) {\n            this.timelineWidth = this.dims.width;\n            this.timelineXDomain = this.getXDomain();\n            this.timelineXScale = this.getXScale(this.timelineXDomain, this.timelineWidth);\n            this.timelineYScale = this.getYScale(this.yDomain, this.timelineHeight);\n            this.timelineTransform = `translate(${this.dims.xOffset}, ${-this.margin[2]})`;\n        }\n    }\n    getXDomain() {\n        let values = getUniqueXDomainValues(this.results);\n        this.scaleType = getScaleType(values);\n        let domain = [];\n        if (this.scaleType === ScaleType.Linear) {\n            values = values.map(v => Number(v));\n        }\n        let min;\n        let max;\n        if (this.scaleType === ScaleType.Time || this.scaleType === ScaleType.Linear) {\n            min = this.xScaleMin ? this.xScaleMin : Math.min(...values);\n            max = this.xScaleMax ? this.xScaleMax : Math.max(...values);\n        }\n        if (this.scaleType === ScaleType.Time) {\n            domain = [new Date(min), new Date(max)];\n            this.xSet = [...values].sort((a, b) => {\n                const aDate = a.getTime();\n                const bDate = b.getTime();\n                if (aDate > bDate)\n                    return 1;\n                if (bDate > aDate)\n                    return -1;\n                return 0;\n            });\n        }\n        else if (this.scaleType === ScaleType.Linear) {\n            domain = [min, max];\n            // Use compare function to sort numbers numerically\n            this.xSet = [...values].sort((a, b) => a - b);\n        }\n        else {\n            domain = values;\n            this.xSet = values;\n        }\n        return domain;\n    }\n    getYDomain() {\n        const domain = [];\n        for (const results of this.results) {\n            for (const d of results.series) {\n                if (!domain.includes(d.value)) {\n                    domain.push(d.value);\n                }\n            }\n        }\n        const values = [...domain];\n        if (!this.autoScale) {\n            values.push(0);\n        }\n        if (this.baseValue !== 'auto') {\n            values.push(this.baseValue);\n        }\n        const min = this.yScaleMin ? this.yScaleMin : Math.min(...values);\n        const max = this.yScaleMax ? this.yScaleMax : Math.max(...values);\n        return [min, max];\n    }\n    getSeriesDomain() {\n        return this.results.map(d => d.name);\n    }\n    getXScale(domain, width) {\n        let scale;\n        if (this.scaleType === ScaleType.Time) {\n            scale = scaleTime();\n        }\n        else if (this.scaleType === ScaleType.Linear) {\n            scale = scaleLinear();\n        }\n        else if (this.scaleType === ScaleType.Ordinal) {\n            scale = scalePoint().padding(0.1);\n        }\n        scale.range([0, width]).domain(domain);\n        return this.roundDomains ? scale.nice() : scale;\n    }\n    getYScale(domain, height) {\n        const scale = scaleLinear().range([height, 0]).domain(domain);\n        return this.roundDomains ? scale.nice() : scale;\n    }\n    getScaleType(values) {\n        let date = true;\n        let num = true;\n        for (const value of values) {\n            if (isDate(value)) {\n                date = false;\n            }\n            if (isNumber(value)) {\n                num = false;\n            }\n        }\n        if (date) {\n            return ScaleType.Time;\n        }\n        if (num) {\n            return ScaleType.Linear;\n        }\n        return ScaleType.Ordinal;\n    }\n    updateDomain(domain) {\n        this.filteredDomain = domain;\n        this.xDomain = this.filteredDomain;\n        this.xScale = this.getXScale(this.xDomain, this.dims.width);\n    }\n    updateHoveredVertical(item) {\n        this.hoveredVertical = item.value;\n        this.deactivateAll();\n    }\n    hideCircles() {\n        this.hoveredVertical = null;\n        this.deactivateAll();\n    }\n    onClick(data, series) {\n        if (series) {\n            data.series = series.name;\n        }\n        this.select.emit(data);\n    }\n    setColors() {\n        let domain;\n        if (this.schemeType === ScaleType.Ordinal) {\n            domain = this.seriesDomain;\n        }\n        else {\n            domain = this.yDomain;\n        }\n        this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    }\n    getLegendOptions() {\n        const opts = {\n            scaleType: this.schemeType,\n            colors: undefined,\n            domain: [],\n            title: undefined,\n            position: this.legendPosition\n        };\n        if (opts.scaleType === ScaleType.Ordinal) {\n            opts.domain = this.seriesDomain;\n            opts.colors = this.colors;\n            opts.title = this.legendTitle;\n        }\n        else {\n            opts.domain = this.yDomain;\n            opts.colors = this.colors.scale;\n        }\n        return opts;\n    }\n    updateYAxisWidth({ width }) {\n        this.yAxisWidth = width;\n        this.update();\n    }\n    updateXAxisHeight({ height }) {\n        this.xAxisHeight = height;\n        this.update();\n    }\n    onActivate(item) {\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value;\n        });\n        if (idx > -1) {\n            return;\n        }\n        this.activeEntries = [item, ...this.activeEntries];\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    }\n    onDeactivate(item) {\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value;\n        });\n        this.activeEntries.splice(idx, 1);\n        this.activeEntries = [...this.activeEntries];\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    }\n    deactivateAll() {\n        this.activeEntries = [...this.activeEntries];\n        for (const entry of this.activeEntries) {\n            this.deactivate.emit({ value: entry, entries: [] });\n        }\n        this.activeEntries = [];\n    }\n}\nAreaChartComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AreaChartComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nAreaChartComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: AreaChartComponent, selector: \"ngx-charts-area-chart\", inputs: { legend: \"legend\", legendTitle: \"legendTitle\", legendPosition: \"legendPosition\", xAxis: \"xAxis\", yAxis: \"yAxis\", baseValue: \"baseValue\", autoScale: \"autoScale\", showXAxisLabel: \"showXAxisLabel\", showYAxisLabel: \"showYAxisLabel\", xAxisLabel: \"xAxisLabel\", yAxisLabel: \"yAxisLabel\", timeline: \"timeline\", gradient: \"gradient\", showGridLines: \"showGridLines\", curve: \"curve\", activeEntries: \"activeEntries\", schemeType: \"schemeType\", trimXAxisTicks: \"trimXAxisTicks\", trimYAxisTicks: \"trimYAxisTicks\", rotateXAxisTicks: \"rotateXAxisTicks\", maxXAxisTickLength: \"maxXAxisTickLength\", maxYAxisTickLength: \"maxYAxisTickLength\", xAxisTickFormatting: \"xAxisTickFormatting\", yAxisTickFormatting: \"yAxisTickFormatting\", xAxisTicks: \"xAxisTicks\", yAxisTicks: \"yAxisTicks\", roundDomains: \"roundDomains\", tooltipDisabled: \"tooltipDisabled\", xScaleMin: \"xScaleMin\", xScaleMax: \"xScaleMax\", yScaleMin: \"yScaleMin\", yScaleMax: \"yScaleMax\", wrapTicks: \"wrapTicks\" }, outputs: { activate: \"activate\", deactivate: \"deactivate\" }, host: { listeners: { \"mouseleave\": \"hideCircles()\" } }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }, { propertyName: \"seriesTooltipTemplate\", first: true, predicate: [\"seriesTooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:defs>\n        <svg:clipPath [attr.id]=\"clipPathId\">\n          <svg:rect\n            [attr.width]=\"dims.width + 10\"\n            [attr.height]=\"dims.height + 10\"\n            [attr.transform]=\"'translate(-5, -5)'\"\n          />\n        </svg:clipPath>\n      </svg:defs>\n      <svg:g [attr.transform]=\"transform\" class=\"area-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g [attr.clip-path]=\"clipPath\">\n          <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n            <svg:g\n              ngx-charts-area-series\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [baseValue]=\"baseValue\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [activeEntries]=\"activeEntries\"\n              [scaleType]=\"scaleType\"\n              [gradient]=\"gradient\"\n              [curve]=\"curve\"\n              [animations]=\"animations\"\n            />\n          </svg:g>\n\n          <svg:g *ngIf=\"!tooltipDisabled\" (mouseleave)=\"hideCircles()\">\n            <svg:g\n              ngx-charts-tooltip-area\n              [dims]=\"dims\"\n              [xSet]=\"xSet\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [results]=\"results\"\n              [colors]=\"colors\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"seriesTooltipTemplate\"\n              (hover)=\"updateHoveredVertical($event)\"\n            />\n\n            <svg:g *ngFor=\"let series of results\">\n              <svg:g\n                ngx-charts-circle-series\n                [xScale]=\"xScale\"\n                [yScale]=\"yScale\"\n                [colors]=\"colors\"\n                [activeEntries]=\"activeEntries\"\n                [data]=\"series\"\n                [scaleType]=\"scaleType\"\n                [visibleValue]=\"hoveredVertical\"\n                [tooltipDisabled]=\"tooltipDisabled\"\n                [tooltipTemplate]=\"tooltipTemplate\"\n                (select)=\"onClick($event, series)\"\n                (activate)=\"onActivate($event)\"\n                (deactivate)=\"onDeactivate($event)\"\n              />\n            </svg:g>\n          </svg:g>\n        </svg:g>\n      </svg:g>\n      <svg:g\n        ngx-charts-timeline\n        *ngIf=\"timeline && scaleType != 'ordinal'\"\n        [attr.transform]=\"timelineTransform\"\n        [results]=\"results\"\n        [view]=\"[timelineWidth, height]\"\n        [height]=\"timelineHeight\"\n        [scheme]=\"scheme\"\n        [customColors]=\"customColors\"\n        [legend]=\"legend\"\n        [scaleType]=\"scaleType\"\n        (onDomainChange)=\"updateDomain($event)\"\n      >\n        <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n          <svg:g\n            ngx-charts-area-series\n            [xScale]=\"timelineXScale\"\n            [yScale]=\"timelineYScale\"\n            [baseValue]=\"baseValue\"\n            [colors]=\"colors\"\n            [data]=\"series\"\n            [scaleType]=\"scaleType\"\n            [gradient]=\"gradient\"\n            [curve]=\"curve\"\n            [animations]=\"animations\"\n          />\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: XAxisComponent, selector: \"g[ngx-charts-x-axis]\", inputs: [\"xScale\", \"dims\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"showGridLines\", \"showLabel\", \"labelText\", \"ticks\", \"xAxisTickCount\", \"xOrient\", \"xAxisOffset\", \"wrapTicks\"], outputs: [\"dimensionsChanged\"] }, { type: YAxisComponent, selector: \"g[ngx-charts-y-axis]\", inputs: [\"yScale\", \"dims\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"showGridLines\", \"showLabel\", \"labelText\", \"yAxisTickCount\", \"yOrient\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"yAxisOffset\", \"wrapTicks\"], outputs: [\"dimensionsChanged\"] }, { type: AreaSeriesComponent, selector: \"g[ngx-charts-area-series]\", inputs: [\"data\", \"xScale\", \"yScale\", \"baseValue\", \"colors\", \"scaleType\", \"stacked\", \"normalized\", \"gradient\", \"curve\", \"activeEntries\", \"animations\"], outputs: [\"select\"] }, { type: TooltipArea, selector: \"g[ngx-charts-tooltip-area]\", inputs: [\"dims\", \"xSet\", \"xScale\", \"yScale\", \"results\", \"colors\", \"showPercentage\", \"tooltipDisabled\", \"tooltipTemplate\"], outputs: [\"hover\"] }, { type: CircleSeriesComponent, selector: \"g[ngx-charts-circle-series]\", inputs: [\"data\", \"type\", \"xScale\", \"yScale\", \"colors\", \"scaleType\", \"visibleValue\", \"activeEntries\", \"tooltipDisabled\", \"tooltipTemplate\"], outputs: [\"select\", \"activate\", \"deactivate\"] }, { type: Timeline, selector: \"g[ngx-charts-timeline]\", inputs: [\"view\", \"results\", \"scheme\", \"customColors\", \"legend\", \"autoScale\", \"scaleType\", \"height\"], outputs: [\"select\", \"onDomainChange\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AreaChartComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-area-chart', template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:defs>\n        <svg:clipPath [attr.id]=\"clipPathId\">\n          <svg:rect\n            [attr.width]=\"dims.width + 10\"\n            [attr.height]=\"dims.height + 10\"\n            [attr.transform]=\"'translate(-5, -5)'\"\n          />\n        </svg:clipPath>\n      </svg:defs>\n      <svg:g [attr.transform]=\"transform\" class=\"area-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g [attr.clip-path]=\"clipPath\">\n          <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n            <svg:g\n              ngx-charts-area-series\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [baseValue]=\"baseValue\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [activeEntries]=\"activeEntries\"\n              [scaleType]=\"scaleType\"\n              [gradient]=\"gradient\"\n              [curve]=\"curve\"\n              [animations]=\"animations\"\n            />\n          </svg:g>\n\n          <svg:g *ngIf=\"!tooltipDisabled\" (mouseleave)=\"hideCircles()\">\n            <svg:g\n              ngx-charts-tooltip-area\n              [dims]=\"dims\"\n              [xSet]=\"xSet\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [results]=\"results\"\n              [colors]=\"colors\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"seriesTooltipTemplate\"\n              (hover)=\"updateHoveredVertical($event)\"\n            />\n\n            <svg:g *ngFor=\"let series of results\">\n              <svg:g\n                ngx-charts-circle-series\n                [xScale]=\"xScale\"\n                [yScale]=\"yScale\"\n                [colors]=\"colors\"\n                [activeEntries]=\"activeEntries\"\n                [data]=\"series\"\n                [scaleType]=\"scaleType\"\n                [visibleValue]=\"hoveredVertical\"\n                [tooltipDisabled]=\"tooltipDisabled\"\n                [tooltipTemplate]=\"tooltipTemplate\"\n                (select)=\"onClick($event, series)\"\n                (activate)=\"onActivate($event)\"\n                (deactivate)=\"onDeactivate($event)\"\n              />\n            </svg:g>\n          </svg:g>\n        </svg:g>\n      </svg:g>\n      <svg:g\n        ngx-charts-timeline\n        *ngIf=\"timeline && scaleType != 'ordinal'\"\n        [attr.transform]=\"timelineTransform\"\n        [results]=\"results\"\n        [view]=\"[timelineWidth, height]\"\n        [height]=\"timelineHeight\"\n        [scheme]=\"scheme\"\n        [customColors]=\"customColors\"\n        [legend]=\"legend\"\n        [scaleType]=\"scaleType\"\n        (onDomainChange)=\"updateDomain($event)\"\n      >\n        <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n          <svg:g\n            ngx-charts-area-series\n            [xScale]=\"timelineXScale\"\n            [yScale]=\"timelineYScale\"\n            [baseValue]=\"baseValue\"\n            [colors]=\"colors\"\n            [data]=\"series\"\n            [scaleType]=\"scaleType\"\n            [gradient]=\"gradient\"\n            [curve]=\"curve\"\n            [animations]=\"animations\"\n          />\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"] }]\n        }], propDecorators: { legend: [{\n                type: Input\n            }], legendTitle: [{\n                type: Input\n            }], legendPosition: [{\n                type: Input\n            }], xAxis: [{\n                type: Input\n            }], yAxis: [{\n                type: Input\n            }], baseValue: [{\n                type: Input\n            }], autoScale: [{\n                type: Input\n            }], showXAxisLabel: [{\n                type: Input\n            }], showYAxisLabel: [{\n                type: Input\n            }], xAxisLabel: [{\n                type: Input\n            }], yAxisLabel: [{\n                type: Input\n            }], timeline: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], showGridLines: [{\n                type: Input\n            }], curve: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], schemeType: [{\n                type: Input\n            }], trimXAxisTicks: [{\n                type: Input\n            }], trimYAxisTicks: [{\n                type: Input\n            }], rotateXAxisTicks: [{\n                type: Input\n            }], maxXAxisTickLength: [{\n                type: Input\n            }], maxYAxisTickLength: [{\n                type: Input\n            }], xAxisTickFormatting: [{\n                type: Input\n            }], yAxisTickFormatting: [{\n                type: Input\n            }], xAxisTicks: [{\n                type: Input\n            }], yAxisTicks: [{\n                type: Input\n            }], roundDomains: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], xScaleMin: [{\n                type: Input\n            }], xScaleMax: [{\n                type: Input\n            }], yScaleMin: [{\n                type: Input\n            }], yScaleMax: [{\n                type: Input\n            }], wrapTicks: [{\n                type: Input\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }], seriesTooltipTemplate: [{\n                type: ContentChild,\n                args: ['seriesTooltipTemplate']\n            }], hideCircles: [{\n                type: HostListener,\n                args: ['mouseleave']\n            }] } });\n\nclass AreaChartNormalizedComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.legend = false;\n        this.legendTitle = 'Legend';\n        this.legendPosition = LegendPosition.Right;\n        this.showXAxisLabel = false;\n        this.showYAxisLabel = false;\n        this.showGridLines = true;\n        this.curve = curveLinear;\n        this.activeEntries = [];\n        this.trimXAxisTicks = true;\n        this.trimYAxisTicks = true;\n        this.rotateXAxisTicks = true;\n        this.maxXAxisTickLength = 16;\n        this.maxYAxisTickLength = 16;\n        this.roundDomains = false;\n        this.tooltipDisabled = false;\n        this.wrapTicks = false;\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.yDomain = [0, 100];\n        this.margin = [10, 20, 10, 20];\n        this.xAxisHeight = 0;\n        this.yAxisWidth = 0;\n        this.seriesType = SeriesType;\n        this.timelineHeight = 50;\n        this.timelinePadding = 10;\n        this.trackBy = (index, item) => {\n            return item.name;\n        };\n    }\n    update() {\n        super.update();\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showXAxis: this.xAxis,\n            showYAxis: this.yAxis,\n            xAxisHeight: this.xAxisHeight,\n            yAxisWidth: this.yAxisWidth,\n            showXLabel: this.showXAxisLabel,\n            showYLabel: this.showYAxisLabel,\n            showLegend: this.legend,\n            legendType: this.schemeType,\n            legendPosition: this.legendPosition\n        });\n        if (this.timeline) {\n            this.dims.height -= this.timelineHeight + this.margin[2] + this.timelinePadding;\n        }\n        this.xDomain = this.getXDomain();\n        if (this.filteredDomain) {\n            this.xDomain = this.filteredDomain;\n        }\n        this.seriesDomain = this.getSeriesDomain();\n        this.xScale = this.getXScale(this.xDomain, this.dims.width);\n        this.yScale = this.getYScale(this.yDomain, this.dims.height);\n        for (let i = 0; i < this.xSet.length; i++) {\n            const val = this.xSet[i];\n            let d0 = 0;\n            let total = 0;\n            for (const group of this.results) {\n                const d = group.series.find(item => {\n                    let a = item.name;\n                    let b = val;\n                    if (this.scaleType === ScaleType.Time) {\n                        a = a.valueOf();\n                        b = b.valueOf();\n                    }\n                    return a === b;\n                });\n                if (d) {\n                    total += d.value;\n                }\n            }\n            for (const group of this.results) {\n                let d = group.series.find(item => {\n                    let a = item.name;\n                    let b = val;\n                    if (this.scaleType === ScaleType.Time) {\n                        a = a.valueOf();\n                        b = b.valueOf();\n                    }\n                    return a === b;\n                });\n                if (d) {\n                    d.d0 = d0;\n                    d.d1 = d0 + d.value;\n                    d0 += d.value;\n                }\n                else {\n                    d = {\n                        name: val,\n                        value: 0,\n                        d0,\n                        d1: d0\n                    };\n                    group.series.push(d);\n                }\n                if (total > 0) {\n                    d.d0 = (d.d0 * 100) / total;\n                    d.d1 = (d.d1 * 100) / total;\n                }\n                else {\n                    d.d0 = 0;\n                    d.d1 = 0;\n                }\n            }\n        }\n        this.updateTimeline();\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n        this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n        this.clipPathId = 'clip' + id().toString();\n        this.clipPath = `url(#${this.clipPathId})`;\n    }\n    updateTimeline() {\n        if (this.timeline) {\n            this.timelineWidth = this.dims.width;\n            this.timelineXDomain = this.getXDomain();\n            this.timelineXScale = this.getXScale(this.timelineXDomain, this.timelineWidth);\n            this.timelineYScale = this.getYScale(this.yDomain, this.timelineHeight);\n            this.timelineTransform = `translate(${this.dims.xOffset}, ${-this.margin[2]})`;\n        }\n    }\n    getXDomain() {\n        let values = getUniqueXDomainValues(this.results);\n        this.scaleType = getScaleType(values);\n        let domain = [];\n        if (this.scaleType === ScaleType.Time) {\n            const min = Math.min(...values);\n            const max = Math.max(...values);\n            domain = [new Date(min), new Date(max)];\n            this.xSet = [...values].sort((a, b) => {\n                const aDate = a.getTime();\n                const bDate = b.getTime();\n                if (aDate > bDate)\n                    return 1;\n                if (bDate > aDate)\n                    return -1;\n                return 0;\n            });\n        }\n        else if (this.scaleType === ScaleType.Linear) {\n            values = values.map(v => Number(v));\n            const min = Math.min(...values);\n            const max = Math.max(...values);\n            domain = [min, max];\n            // Use compare function to sort numbers numerically\n            this.xSet = [...values].sort((a, b) => a - b);\n        }\n        else {\n            domain = values;\n            this.xSet = values;\n        }\n        return domain;\n    }\n    getSeriesDomain() {\n        return this.results.map(d => d.name);\n    }\n    getXScale(domain, width) {\n        let scale;\n        if (this.scaleType === ScaleType.Time) {\n            scale = scaleTime();\n        }\n        else if (this.scaleType === ScaleType.Linear) {\n            scale = scaleLinear();\n        }\n        else if (this.scaleType === ScaleType.Ordinal) {\n            scale = scalePoint().padding(0.1);\n        }\n        scale.range([0, width]).domain(domain);\n        return this.roundDomains ? scale.nice() : scale;\n    }\n    getYScale(domain, height) {\n        const scale = scaleLinear().range([height, 0]).domain(domain);\n        return this.roundDomains ? scale.nice() : scale;\n    }\n    updateDomain(domain) {\n        this.filteredDomain = domain;\n        this.xDomain = this.filteredDomain;\n        this.xScale = this.getXScale(this.xDomain, this.dims.width);\n    }\n    updateHoveredVertical(item) {\n        this.hoveredVertical = item.value;\n        this.deactivateAll();\n    }\n    hideCircles() {\n        this.hoveredVertical = null;\n        this.deactivateAll();\n    }\n    onClick(data, series) {\n        if (series) {\n            data.series = series.name;\n        }\n        this.select.emit(data);\n    }\n    setColors() {\n        let domain;\n        if (this.schemeType === ScaleType.Ordinal) {\n            domain = this.seriesDomain;\n        }\n        else {\n            domain = this.yDomain;\n        }\n        this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    }\n    getLegendOptions() {\n        const opts = {\n            scaleType: this.schemeType,\n            colors: undefined,\n            domain: [],\n            title: undefined,\n            position: this.legendPosition\n        };\n        if (opts.scaleType === ScaleType.Ordinal) {\n            opts.domain = this.seriesDomain;\n            opts.colors = this.colors;\n            opts.title = this.legendTitle;\n        }\n        else {\n            opts.domain = this.yDomain;\n            opts.colors = this.colors.scale;\n        }\n        return opts;\n    }\n    updateYAxisWidth({ width }) {\n        this.yAxisWidth = width;\n        this.update();\n    }\n    updateXAxisHeight({ height }) {\n        this.xAxisHeight = height;\n        this.update();\n    }\n    onActivate(item) {\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value;\n        });\n        if (idx > -1) {\n            return;\n        }\n        this.activeEntries = [item, ...this.activeEntries];\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    }\n    onDeactivate(item) {\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value;\n        });\n        this.activeEntries.splice(idx, 1);\n        this.activeEntries = [...this.activeEntries];\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    }\n    deactivateAll() {\n        this.activeEntries = [...this.activeEntries];\n        for (const entry of this.activeEntries) {\n            this.deactivate.emit({ value: entry, entries: [] });\n        }\n        this.activeEntries = [];\n    }\n}\nAreaChartNormalizedComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AreaChartNormalizedComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nAreaChartNormalizedComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: AreaChartNormalizedComponent, selector: \"ngx-charts-area-chart-normalized\", inputs: { legend: \"legend\", legendTitle: \"legendTitle\", legendPosition: \"legendPosition\", xAxis: \"xAxis\", yAxis: \"yAxis\", showXAxisLabel: \"showXAxisLabel\", showYAxisLabel: \"showYAxisLabel\", xAxisLabel: \"xAxisLabel\", yAxisLabel: \"yAxisLabel\", timeline: \"timeline\", gradient: \"gradient\", showGridLines: \"showGridLines\", curve: \"curve\", activeEntries: \"activeEntries\", schemeType: \"schemeType\", trimXAxisTicks: \"trimXAxisTicks\", trimYAxisTicks: \"trimYAxisTicks\", rotateXAxisTicks: \"rotateXAxisTicks\", maxXAxisTickLength: \"maxXAxisTickLength\", maxYAxisTickLength: \"maxYAxisTickLength\", xAxisTickFormatting: \"xAxisTickFormatting\", yAxisTickFormatting: \"yAxisTickFormatting\", xAxisTicks: \"xAxisTicks\", yAxisTicks: \"yAxisTicks\", roundDomains: \"roundDomains\", tooltipDisabled: \"tooltipDisabled\", wrapTicks: \"wrapTicks\" }, outputs: { activate: \"activate\", deactivate: \"deactivate\" }, host: { listeners: { \"mouseleave\": \"hideCircles()\" } }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }, { propertyName: \"seriesTooltipTemplate\", first: true, predicate: [\"seriesTooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:defs>\n        <svg:clipPath [attr.id]=\"clipPathId\">\n          <svg:rect\n            [attr.width]=\"dims.width + 10\"\n            [attr.height]=\"dims.height + 10\"\n            [attr.transform]=\"'translate(-5, -5)'\"\n          />\n        </svg:clipPath>\n      </svg:defs>\n      <svg:g [attr.transform]=\"transform\" class=\"area-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g [attr.clip-path]=\"clipPath\">\n          <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n            <svg:g\n              ngx-charts-area-series\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [scaleType]=\"scaleType\"\n              [activeEntries]=\"activeEntries\"\n              [gradient]=\"gradient\"\n              [normalized]=\"true\"\n              [curve]=\"curve\"\n              [animations]=\"animations\"\n            />\n          </svg:g>\n\n          <svg:g *ngIf=\"!tooltipDisabled\" (mouseleave)=\"hideCircles()\">\n            <svg:g\n              ngx-charts-tooltip-area\n              [dims]=\"dims\"\n              [xSet]=\"xSet\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [results]=\"results\"\n              [colors]=\"colors\"\n              [showPercentage]=\"true\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"seriesTooltipTemplate\"\n              (hover)=\"updateHoveredVertical($event)\"\n            />\n\n            <svg:g *ngFor=\"let series of results\">\n              <svg:g\n                ngx-charts-circle-series\n                [type]=\"seriesType.Stacked\"\n                [xScale]=\"xScale\"\n                [yScale]=\"yScale\"\n                [colors]=\"colors\"\n                [activeEntries]=\"activeEntries\"\n                [data]=\"series\"\n                [scaleType]=\"scaleType\"\n                [visibleValue]=\"hoveredVertical\"\n                [tooltipDisabled]=\"tooltipDisabled\"\n                [tooltipTemplate]=\"tooltipTemplate\"\n                (select)=\"onClick($event, series)\"\n                (activate)=\"onActivate($event)\"\n                (deactivate)=\"onDeactivate($event)\"\n              />\n            </svg:g>\n          </svg:g>\n        </svg:g>\n      </svg:g>\n      <svg:g\n        ngx-charts-timeline\n        *ngIf=\"timeline && scaleType != 'ordinal'\"\n        [attr.transform]=\"timelineTransform\"\n        [results]=\"results\"\n        [view]=\"[timelineWidth, height]\"\n        [height]=\"timelineHeight\"\n        [scheme]=\"scheme\"\n        [customColors]=\"customColors\"\n        [legend]=\"legend\"\n        [scaleType]=\"scaleType\"\n        (onDomainChange)=\"updateDomain($event)\"\n      >\n        <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n          <svg:g\n            ngx-charts-area-series\n            [xScale]=\"timelineXScale\"\n            [yScale]=\"timelineYScale\"\n            [colors]=\"colors\"\n            [data]=\"series\"\n            [scaleType]=\"scaleType\"\n            [gradient]=\"gradient\"\n            [normalized]=\"true\"\n            [curve]=\"curve\"\n            [animations]=\"animations\"\n          />\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: XAxisComponent, selector: \"g[ngx-charts-x-axis]\", inputs: [\"xScale\", \"dims\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"showGridLines\", \"showLabel\", \"labelText\", \"ticks\", \"xAxisTickCount\", \"xOrient\", \"xAxisOffset\", \"wrapTicks\"], outputs: [\"dimensionsChanged\"] }, { type: YAxisComponent, selector: \"g[ngx-charts-y-axis]\", inputs: [\"yScale\", \"dims\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"showGridLines\", \"showLabel\", \"labelText\", \"yAxisTickCount\", \"yOrient\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"yAxisOffset\", \"wrapTicks\"], outputs: [\"dimensionsChanged\"] }, { type: AreaSeriesComponent, selector: \"g[ngx-charts-area-series]\", inputs: [\"data\", \"xScale\", \"yScale\", \"baseValue\", \"colors\", \"scaleType\", \"stacked\", \"normalized\", \"gradient\", \"curve\", \"activeEntries\", \"animations\"], outputs: [\"select\"] }, { type: TooltipArea, selector: \"g[ngx-charts-tooltip-area]\", inputs: [\"dims\", \"xSet\", \"xScale\", \"yScale\", \"results\", \"colors\", \"showPercentage\", \"tooltipDisabled\", \"tooltipTemplate\"], outputs: [\"hover\"] }, { type: CircleSeriesComponent, selector: \"g[ngx-charts-circle-series]\", inputs: [\"data\", \"type\", \"xScale\", \"yScale\", \"colors\", \"scaleType\", \"visibleValue\", \"activeEntries\", \"tooltipDisabled\", \"tooltipTemplate\"], outputs: [\"select\", \"activate\", \"deactivate\"] }, { type: Timeline, selector: \"g[ngx-charts-timeline]\", inputs: [\"view\", \"results\", \"scheme\", \"customColors\", \"legend\", \"autoScale\", \"scaleType\", \"height\"], outputs: [\"select\", \"onDomainChange\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AreaChartNormalizedComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-area-chart-normalized', template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:defs>\n        <svg:clipPath [attr.id]=\"clipPathId\">\n          <svg:rect\n            [attr.width]=\"dims.width + 10\"\n            [attr.height]=\"dims.height + 10\"\n            [attr.transform]=\"'translate(-5, -5)'\"\n          />\n        </svg:clipPath>\n      </svg:defs>\n      <svg:g [attr.transform]=\"transform\" class=\"area-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g [attr.clip-path]=\"clipPath\">\n          <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n            <svg:g\n              ngx-charts-area-series\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [scaleType]=\"scaleType\"\n              [activeEntries]=\"activeEntries\"\n              [gradient]=\"gradient\"\n              [normalized]=\"true\"\n              [curve]=\"curve\"\n              [animations]=\"animations\"\n            />\n          </svg:g>\n\n          <svg:g *ngIf=\"!tooltipDisabled\" (mouseleave)=\"hideCircles()\">\n            <svg:g\n              ngx-charts-tooltip-area\n              [dims]=\"dims\"\n              [xSet]=\"xSet\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [results]=\"results\"\n              [colors]=\"colors\"\n              [showPercentage]=\"true\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"seriesTooltipTemplate\"\n              (hover)=\"updateHoveredVertical($event)\"\n            />\n\n            <svg:g *ngFor=\"let series of results\">\n              <svg:g\n                ngx-charts-circle-series\n                [type]=\"seriesType.Stacked\"\n                [xScale]=\"xScale\"\n                [yScale]=\"yScale\"\n                [colors]=\"colors\"\n                [activeEntries]=\"activeEntries\"\n                [data]=\"series\"\n                [scaleType]=\"scaleType\"\n                [visibleValue]=\"hoveredVertical\"\n                [tooltipDisabled]=\"tooltipDisabled\"\n                [tooltipTemplate]=\"tooltipTemplate\"\n                (select)=\"onClick($event, series)\"\n                (activate)=\"onActivate($event)\"\n                (deactivate)=\"onDeactivate($event)\"\n              />\n            </svg:g>\n          </svg:g>\n        </svg:g>\n      </svg:g>\n      <svg:g\n        ngx-charts-timeline\n        *ngIf=\"timeline && scaleType != 'ordinal'\"\n        [attr.transform]=\"timelineTransform\"\n        [results]=\"results\"\n        [view]=\"[timelineWidth, height]\"\n        [height]=\"timelineHeight\"\n        [scheme]=\"scheme\"\n        [customColors]=\"customColors\"\n        [legend]=\"legend\"\n        [scaleType]=\"scaleType\"\n        (onDomainChange)=\"updateDomain($event)\"\n      >\n        <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n          <svg:g\n            ngx-charts-area-series\n            [xScale]=\"timelineXScale\"\n            [yScale]=\"timelineYScale\"\n            [colors]=\"colors\"\n            [data]=\"series\"\n            [scaleType]=\"scaleType\"\n            [gradient]=\"gradient\"\n            [normalized]=\"true\"\n            [curve]=\"curve\"\n            [animations]=\"animations\"\n          />\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"] }]\n        }], propDecorators: { legend: [{\n                type: Input\n            }], legendTitle: [{\n                type: Input\n            }], legendPosition: [{\n                type: Input\n            }], xAxis: [{\n                type: Input\n            }], yAxis: [{\n                type: Input\n            }], showXAxisLabel: [{\n                type: Input\n            }], showYAxisLabel: [{\n                type: Input\n            }], xAxisLabel: [{\n                type: Input\n            }], yAxisLabel: [{\n                type: Input\n            }], timeline: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], showGridLines: [{\n                type: Input\n            }], curve: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], schemeType: [{\n                type: Input\n            }], trimXAxisTicks: [{\n                type: Input\n            }], trimYAxisTicks: [{\n                type: Input\n            }], rotateXAxisTicks: [{\n                type: Input\n            }], maxXAxisTickLength: [{\n                type: Input\n            }], maxYAxisTickLength: [{\n                type: Input\n            }], xAxisTickFormatting: [{\n                type: Input\n            }], yAxisTickFormatting: [{\n                type: Input\n            }], xAxisTicks: [{\n                type: Input\n            }], yAxisTicks: [{\n                type: Input\n            }], roundDomains: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], wrapTicks: [{\n                type: Input\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }], seriesTooltipTemplate: [{\n                type: ContentChild,\n                args: ['seriesTooltipTemplate']\n            }], hideCircles: [{\n                type: HostListener,\n                args: ['mouseleave']\n            }] } });\n\nclass AreaChartStackedComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.legend = false;\n        this.legendTitle = 'Legend';\n        this.legendPosition = LegendPosition.Right;\n        this.xAxis = false;\n        this.yAxis = false;\n        this.timeline = false;\n        this.showGridLines = true;\n        this.curve = curveLinear;\n        this.activeEntries = [];\n        this.trimXAxisTicks = true;\n        this.trimYAxisTicks = true;\n        this.rotateXAxisTicks = true;\n        this.maxXAxisTickLength = 16;\n        this.maxYAxisTickLength = 16;\n        this.roundDomains = false;\n        this.tooltipDisabled = false;\n        this.wrapTicks = false;\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.margin = [10, 20, 10, 20];\n        this.xAxisHeight = 0;\n        this.yAxisWidth = 0;\n        this.timelineHeight = 50;\n        this.timelinePadding = 10;\n        this.seriesType = SeriesType;\n    }\n    update() {\n        super.update();\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showXAxis: this.xAxis,\n            showYAxis: this.yAxis,\n            xAxisHeight: this.xAxisHeight,\n            yAxisWidth: this.yAxisWidth,\n            showXLabel: this.showXAxisLabel,\n            showYLabel: this.showYAxisLabel,\n            showLegend: this.legend,\n            legendType: this.schemeType,\n            legendPosition: this.legendPosition\n        });\n        if (this.timeline) {\n            this.dims.height -= this.timelineHeight + this.margin[2] + this.timelinePadding;\n        }\n        this.xDomain = this.getXDomain();\n        if (this.filteredDomain) {\n            this.xDomain = this.filteredDomain;\n        }\n        this.yDomain = this.getYDomain();\n        this.seriesDomain = this.getSeriesDomain();\n        this.xScale = this.getXScale(this.xDomain, this.dims.width);\n        this.yScale = this.getYScale(this.yDomain, this.dims.height);\n        for (let i = 0; i < this.xSet.length; i++) {\n            const val = this.xSet[i];\n            let d0 = 0;\n            for (const group of this.results) {\n                let d = group.series.find(item => {\n                    let a = item.name;\n                    let b = val;\n                    if (this.scaleType === ScaleType.Time) {\n                        a = a.valueOf();\n                        b = b.valueOf();\n                    }\n                    return a === b;\n                });\n                if (d) {\n                    d.d0 = d0;\n                    d.d1 = d0 + d.value;\n                    d0 += d.value;\n                }\n                else {\n                    d = {\n                        name: val,\n                        value: 0,\n                        d0,\n                        d1: d0\n                    };\n                    group.series.push(d);\n                }\n            }\n        }\n        this.updateTimeline();\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n        this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n        this.clipPathId = 'clip' + id().toString();\n        this.clipPath = `url(#${this.clipPathId})`;\n    }\n    updateTimeline() {\n        if (this.timeline) {\n            this.timelineWidth = this.dims.width;\n            this.timelineXDomain = this.getXDomain();\n            this.timelineXScale = this.getXScale(this.timelineXDomain, this.timelineWidth);\n            this.timelineYScale = this.getYScale(this.yDomain, this.timelineHeight);\n            this.timelineTransform = `translate(${this.dims.xOffset}, ${-this.margin[2]})`;\n        }\n    }\n    getXDomain() {\n        let values = getUniqueXDomainValues(this.results);\n        this.scaleType = getScaleType(values);\n        let domain = [];\n        if (this.scaleType === ScaleType.Linear) {\n            values = values.map(v => Number(v));\n        }\n        let min;\n        let max;\n        if (this.scaleType === ScaleType.Time || this.scaleType === ScaleType.Linear) {\n            min = this.xScaleMin ? this.xScaleMin : Math.min(...values);\n            max = this.xScaleMax ? this.xScaleMax : Math.max(...values);\n        }\n        if (this.scaleType === ScaleType.Time) {\n            domain = [new Date(min), new Date(max)];\n            this.xSet = [...values].sort((a, b) => {\n                const aDate = a.getTime();\n                const bDate = b.getTime();\n                if (aDate > bDate)\n                    return 1;\n                if (bDate > aDate)\n                    return -1;\n                return 0;\n            });\n        }\n        else if (this.scaleType === ScaleType.Linear) {\n            domain = [min, max];\n            // Use compare function to sort numbers numerically\n            this.xSet = [...values].sort((a, b) => a - b);\n        }\n        else {\n            domain = values;\n            this.xSet = values;\n        }\n        return domain;\n    }\n    getYDomain() {\n        const domain = [];\n        for (let i = 0; i < this.xSet.length; i++) {\n            const val = this.xSet[i];\n            let sum = 0;\n            for (const group of this.results) {\n                const d = group.series.find(item => {\n                    let a = item.name;\n                    let b = val;\n                    if (this.scaleType === ScaleType.Time) {\n                        a = a.valueOf();\n                        b = b.valueOf();\n                    }\n                    return a === b;\n                });\n                if (d) {\n                    sum += d.value;\n                }\n            }\n            domain.push(sum);\n        }\n        const min = this.yScaleMin ? this.yScaleMin : Math.min(0, ...domain);\n        const max = this.yScaleMax ? this.yScaleMax : Math.max(...domain);\n        return [min, max];\n    }\n    getSeriesDomain() {\n        return this.results.map(d => d.name);\n    }\n    getXScale(domain, width) {\n        let scale;\n        if (this.scaleType === ScaleType.Time) {\n            scale = scaleTime();\n        }\n        else if (this.scaleType === ScaleType.Linear) {\n            scale = scaleLinear();\n        }\n        else if (this.scaleType === ScaleType.Ordinal) {\n            scale = scalePoint().padding(0.1);\n        }\n        scale.range([0, width]).domain(domain);\n        return this.roundDomains ? scale.nice() : scale;\n    }\n    getYScale(domain, height) {\n        const scale = scaleLinear().range([height, 0]).domain(domain);\n        return this.roundDomains ? scale.nice() : scale;\n    }\n    updateDomain(domain) {\n        this.filteredDomain = domain;\n        this.xDomain = this.filteredDomain;\n        this.xScale = this.getXScale(this.xDomain, this.dims.width);\n    }\n    updateHoveredVertical(item) {\n        this.hoveredVertical = item.value;\n        this.deactivateAll();\n    }\n    hideCircles() {\n        this.hoveredVertical = null;\n        this.deactivateAll();\n    }\n    onClick(data, series) {\n        if (series) {\n            data.series = series.name;\n        }\n        this.select.emit(data);\n    }\n    trackBy(index, item) {\n        return `${item.name}`;\n    }\n    setColors() {\n        let domain;\n        if (this.schemeType === ScaleType.Ordinal) {\n            domain = this.seriesDomain;\n        }\n        else {\n            domain = this.yDomain;\n        }\n        this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    }\n    getLegendOptions() {\n        const opts = {\n            scaleType: this.schemeType,\n            colors: undefined,\n            domain: [],\n            title: undefined,\n            position: this.legendPosition\n        };\n        if (opts.scaleType === ScaleType.Ordinal) {\n            opts.domain = this.seriesDomain;\n            opts.colors = this.colors;\n            opts.title = this.legendTitle;\n        }\n        else {\n            opts.domain = this.yDomain;\n            opts.colors = this.colors.scale;\n        }\n        return opts;\n    }\n    updateYAxisWidth({ width }) {\n        this.yAxisWidth = width;\n        this.update();\n    }\n    updateXAxisHeight({ height }) {\n        this.xAxisHeight = height;\n        this.update();\n    }\n    onActivate(item) {\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value;\n        });\n        if (idx > -1) {\n            return;\n        }\n        this.activeEntries = [item, ...this.activeEntries];\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    }\n    onDeactivate(item) {\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value;\n        });\n        this.activeEntries.splice(idx, 1);\n        this.activeEntries = [...this.activeEntries];\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    }\n    deactivateAll() {\n        this.activeEntries = [...this.activeEntries];\n        for (const entry of this.activeEntries) {\n            this.deactivate.emit({ value: entry, entries: [] });\n        }\n        this.activeEntries = [];\n    }\n}\nAreaChartStackedComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AreaChartStackedComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nAreaChartStackedComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: AreaChartStackedComponent, selector: \"ngx-charts-area-chart-stacked\", inputs: { legend: \"legend\", legendTitle: \"legendTitle\", legendPosition: \"legendPosition\", xAxis: \"xAxis\", yAxis: \"yAxis\", showXAxisLabel: \"showXAxisLabel\", showYAxisLabel: \"showYAxisLabel\", xAxisLabel: \"xAxisLabel\", yAxisLabel: \"yAxisLabel\", timeline: \"timeline\", gradient: \"gradient\", showGridLines: \"showGridLines\", curve: \"curve\", activeEntries: \"activeEntries\", schemeType: \"schemeType\", trimXAxisTicks: \"trimXAxisTicks\", trimYAxisTicks: \"trimYAxisTicks\", rotateXAxisTicks: \"rotateXAxisTicks\", maxXAxisTickLength: \"maxXAxisTickLength\", maxYAxisTickLength: \"maxYAxisTickLength\", xAxisTickFormatting: \"xAxisTickFormatting\", yAxisTickFormatting: \"yAxisTickFormatting\", xAxisTicks: \"xAxisTicks\", yAxisTicks: \"yAxisTicks\", roundDomains: \"roundDomains\", tooltipDisabled: \"tooltipDisabled\", xScaleMin: \"xScaleMin\", xScaleMax: \"xScaleMax\", yScaleMin: \"yScaleMin\", yScaleMax: \"yScaleMax\", wrapTicks: \"wrapTicks\" }, outputs: { activate: \"activate\", deactivate: \"deactivate\" }, host: { listeners: { \"mouseleave\": \"hideCircles()\" } }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }, { propertyName: \"seriesTooltipTemplate\", first: true, predicate: [\"seriesTooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:defs>\n        <svg:clipPath [attr.id]=\"clipPathId\">\n          <svg:rect\n            [attr.width]=\"dims.width + 10\"\n            [attr.height]=\"dims.height + 10\"\n            [attr.transform]=\"'translate(-5, -5)'\"\n          />\n        </svg:clipPath>\n      </svg:defs>\n      <svg:g [attr.transform]=\"transform\" class=\"area-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g [attr.clip-path]=\"clipPath\">\n          <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n            <svg:g\n              ngx-charts-area-series\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [scaleType]=\"scaleType\"\n              [gradient]=\"gradient\"\n              [activeEntries]=\"activeEntries\"\n              [stacked]=\"true\"\n              [curve]=\"curve\"\n              [animations]=\"animations\"\n            />\n          </svg:g>\n\n          <svg:g *ngIf=\"!tooltipDisabled\" (mouseleave)=\"hideCircles()\">\n            <svg:g\n              ngx-charts-tooltip-area\n              [dims]=\"dims\"\n              [xSet]=\"xSet\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [results]=\"results\"\n              [colors]=\"colors\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"seriesTooltipTemplate\"\n              (hover)=\"updateHoveredVertical($event)\"\n            />\n\n            <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n              <svg:g\n                ngx-charts-circle-series\n                [type]=\"seriesType.Stacked\"\n                [xScale]=\"xScale\"\n                [yScale]=\"yScale\"\n                [colors]=\"colors\"\n                [activeEntries]=\"activeEntries\"\n                [data]=\"series\"\n                [scaleType]=\"scaleType\"\n                [visibleValue]=\"hoveredVertical\"\n                [tooltipDisabled]=\"tooltipDisabled\"\n                [tooltipTemplate]=\"tooltipTemplate\"\n                (select)=\"onClick($event, series)\"\n                (activate)=\"onActivate($event)\"\n                (deactivate)=\"onDeactivate($event)\"\n              />\n            </svg:g>\n          </svg:g>\n        </svg:g>\n      </svg:g>\n      <svg:g\n        ngx-charts-timeline\n        *ngIf=\"timeline && scaleType != 'ordinal'\"\n        [attr.transform]=\"timelineTransform\"\n        [results]=\"results\"\n        [view]=\"[timelineWidth, height]\"\n        [height]=\"timelineHeight\"\n        [scheme]=\"scheme\"\n        [customColors]=\"customColors\"\n        [legend]=\"legend\"\n        [scaleType]=\"scaleType\"\n        (onDomainChange)=\"updateDomain($event)\"\n      >\n        <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n          <svg:g\n            ngx-charts-area-series\n            [xScale]=\"timelineXScale\"\n            [yScale]=\"timelineYScale\"\n            [colors]=\"colors\"\n            [data]=\"series\"\n            [scaleType]=\"scaleType\"\n            [gradient]=\"gradient\"\n            [stacked]=\"true\"\n            [curve]=\"curve\"\n            [animations]=\"animations\"\n          />\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: XAxisComponent, selector: \"g[ngx-charts-x-axis]\", inputs: [\"xScale\", \"dims\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"showGridLines\", \"showLabel\", \"labelText\", \"ticks\", \"xAxisTickCount\", \"xOrient\", \"xAxisOffset\", \"wrapTicks\"], outputs: [\"dimensionsChanged\"] }, { type: YAxisComponent, selector: \"g[ngx-charts-y-axis]\", inputs: [\"yScale\", \"dims\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"showGridLines\", \"showLabel\", \"labelText\", \"yAxisTickCount\", \"yOrient\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"yAxisOffset\", \"wrapTicks\"], outputs: [\"dimensionsChanged\"] }, { type: AreaSeriesComponent, selector: \"g[ngx-charts-area-series]\", inputs: [\"data\", \"xScale\", \"yScale\", \"baseValue\", \"colors\", \"scaleType\", \"stacked\", \"normalized\", \"gradient\", \"curve\", \"activeEntries\", \"animations\"], outputs: [\"select\"] }, { type: TooltipArea, selector: \"g[ngx-charts-tooltip-area]\", inputs: [\"dims\", \"xSet\", \"xScale\", \"yScale\", \"results\", \"colors\", \"showPercentage\", \"tooltipDisabled\", \"tooltipTemplate\"], outputs: [\"hover\"] }, { type: CircleSeriesComponent, selector: \"g[ngx-charts-circle-series]\", inputs: [\"data\", \"type\", \"xScale\", \"yScale\", \"colors\", \"scaleType\", \"visibleValue\", \"activeEntries\", \"tooltipDisabled\", \"tooltipTemplate\"], outputs: [\"select\", \"activate\", \"deactivate\"] }, { type: Timeline, selector: \"g[ngx-charts-timeline]\", inputs: [\"view\", \"results\", \"scheme\", \"customColors\", \"legend\", \"autoScale\", \"scaleType\", \"height\"], outputs: [\"select\", \"onDomainChange\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AreaChartStackedComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-area-chart-stacked', template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:defs>\n        <svg:clipPath [attr.id]=\"clipPathId\">\n          <svg:rect\n            [attr.width]=\"dims.width + 10\"\n            [attr.height]=\"dims.height + 10\"\n            [attr.transform]=\"'translate(-5, -5)'\"\n          />\n        </svg:clipPath>\n      </svg:defs>\n      <svg:g [attr.transform]=\"transform\" class=\"area-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g [attr.clip-path]=\"clipPath\">\n          <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n            <svg:g\n              ngx-charts-area-series\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [scaleType]=\"scaleType\"\n              [gradient]=\"gradient\"\n              [activeEntries]=\"activeEntries\"\n              [stacked]=\"true\"\n              [curve]=\"curve\"\n              [animations]=\"animations\"\n            />\n          </svg:g>\n\n          <svg:g *ngIf=\"!tooltipDisabled\" (mouseleave)=\"hideCircles()\">\n            <svg:g\n              ngx-charts-tooltip-area\n              [dims]=\"dims\"\n              [xSet]=\"xSet\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [results]=\"results\"\n              [colors]=\"colors\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"seriesTooltipTemplate\"\n              (hover)=\"updateHoveredVertical($event)\"\n            />\n\n            <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n              <svg:g\n                ngx-charts-circle-series\n                [type]=\"seriesType.Stacked\"\n                [xScale]=\"xScale\"\n                [yScale]=\"yScale\"\n                [colors]=\"colors\"\n                [activeEntries]=\"activeEntries\"\n                [data]=\"series\"\n                [scaleType]=\"scaleType\"\n                [visibleValue]=\"hoveredVertical\"\n                [tooltipDisabled]=\"tooltipDisabled\"\n                [tooltipTemplate]=\"tooltipTemplate\"\n                (select)=\"onClick($event, series)\"\n                (activate)=\"onActivate($event)\"\n                (deactivate)=\"onDeactivate($event)\"\n              />\n            </svg:g>\n          </svg:g>\n        </svg:g>\n      </svg:g>\n      <svg:g\n        ngx-charts-timeline\n        *ngIf=\"timeline && scaleType != 'ordinal'\"\n        [attr.transform]=\"timelineTransform\"\n        [results]=\"results\"\n        [view]=\"[timelineWidth, height]\"\n        [height]=\"timelineHeight\"\n        [scheme]=\"scheme\"\n        [customColors]=\"customColors\"\n        [legend]=\"legend\"\n        [scaleType]=\"scaleType\"\n        (onDomainChange)=\"updateDomain($event)\"\n      >\n        <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n          <svg:g\n            ngx-charts-area-series\n            [xScale]=\"timelineXScale\"\n            [yScale]=\"timelineYScale\"\n            [colors]=\"colors\"\n            [data]=\"series\"\n            [scaleType]=\"scaleType\"\n            [gradient]=\"gradient\"\n            [stacked]=\"true\"\n            [curve]=\"curve\"\n            [animations]=\"animations\"\n          />\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"] }]\n        }], propDecorators: { legend: [{\n                type: Input\n            }], legendTitle: [{\n                type: Input\n            }], legendPosition: [{\n                type: Input\n            }], xAxis: [{\n                type: Input\n            }], yAxis: [{\n                type: Input\n            }], showXAxisLabel: [{\n                type: Input\n            }], showYAxisLabel: [{\n                type: Input\n            }], xAxisLabel: [{\n                type: Input\n            }], yAxisLabel: [{\n                type: Input\n            }], timeline: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], showGridLines: [{\n                type: Input\n            }], curve: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], schemeType: [{\n                type: Input\n            }], trimXAxisTicks: [{\n                type: Input\n            }], trimYAxisTicks: [{\n                type: Input\n            }], rotateXAxisTicks: [{\n                type: Input\n            }], maxXAxisTickLength: [{\n                type: Input\n            }], maxYAxisTickLength: [{\n                type: Input\n            }], xAxisTickFormatting: [{\n                type: Input\n            }], yAxisTickFormatting: [{\n                type: Input\n            }], xAxisTicks: [{\n                type: Input\n            }], yAxisTicks: [{\n                type: Input\n            }], roundDomains: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], xScaleMin: [{\n                type: Input\n            }], xScaleMax: [{\n                type: Input\n            }], yScaleMin: [{\n                type: Input\n            }], yScaleMax: [{\n                type: Input\n            }], wrapTicks: [{\n                type: Input\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }], seriesTooltipTemplate: [{\n                type: ContentChild,\n                args: ['seriesTooltipTemplate']\n            }], hideCircles: [{\n                type: HostListener,\n                args: ['mouseleave']\n            }] } });\n\nclass AreaChartModule {\n}\nAreaChartModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AreaChartModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nAreaChartModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AreaChartModule, declarations: [AreaChartComponent, AreaChartNormalizedComponent, AreaChartStackedComponent, AreaSeriesComponent], imports: [ChartCommonModule], exports: [AreaChartComponent, AreaChartNormalizedComponent, AreaChartStackedComponent, AreaSeriesComponent] });\nAreaChartModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AreaChartModule, imports: [[ChartCommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AreaChartModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [ChartCommonModule],\n                    declarations: [AreaChartComponent, AreaChartNormalizedComponent, AreaChartStackedComponent, AreaSeriesComponent],\n                    exports: [AreaChartComponent, AreaChartNormalizedComponent, AreaChartStackedComponent, AreaSeriesComponent]\n                }]\n        }] });\n\nclass BarComponent {\n    constructor(element) {\n        this.roundEdges = true;\n        this.gradient = false;\n        this.offset = 0;\n        this.isActive = false;\n        this.animations = true;\n        this.noBarWhenZero = true;\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.hasGradient = false;\n        this.hideBar = false;\n        this.element = element.nativeElement;\n    }\n    ngOnChanges(changes) {\n        if (changes.roundEdges) {\n            this.loadAnimation();\n        }\n        this.update();\n    }\n    update() {\n        this.gradientId = 'grad' + id().toString();\n        this.gradientFill = `url(#${this.gradientId})`;\n        if (this.gradient || this.stops) {\n            this.gradientStops = this.getGradient();\n            this.hasGradient = true;\n        }\n        else {\n            this.hasGradient = false;\n        }\n        this.updatePathEl();\n        this.checkToHideBar();\n    }\n    loadAnimation() {\n        this.path = this.getStartingPath();\n        setTimeout(this.update.bind(this), 100);\n    }\n    updatePathEl() {\n        const node = select(this.element).select('.bar');\n        const path = this.getPath();\n        if (this.animations) {\n            node.transition().duration(500).attr('d', path);\n        }\n        else {\n            node.attr('d', path);\n        }\n    }\n    getGradient() {\n        if (this.stops) {\n            return this.stops;\n        }\n        return [\n            {\n                offset: 0,\n                color: this.fill,\n                opacity: this.getStartOpacity()\n            },\n            {\n                offset: 100,\n                color: this.fill,\n                opacity: 1\n            }\n        ];\n    }\n    getStartingPath() {\n        if (!this.animations) {\n            return this.getPath();\n        }\n        let radius = this.getRadius();\n        let path;\n        if (this.roundEdges) {\n            if (this.orientation === BarOrientation.Vertical) {\n                radius = Math.min(this.height, radius);\n                path = roundedRect(this.x, this.y + this.height, this.width, 1, 0, this.edges);\n            }\n            else if (this.orientation === BarOrientation.Horizontal) {\n                radius = Math.min(this.width, radius);\n                path = roundedRect(this.x, this.y, 1, this.height, 0, this.edges);\n            }\n        }\n        else {\n            if (this.orientation === BarOrientation.Vertical) {\n                path = roundedRect(this.x, this.y + this.height, this.width, 1, 0, this.edges);\n            }\n            else if (this.orientation === BarOrientation.Horizontal) {\n                path = roundedRect(this.x, this.y, 1, this.height, 0, this.edges);\n            }\n        }\n        return path;\n    }\n    getPath() {\n        let radius = this.getRadius();\n        let path;\n        if (this.roundEdges) {\n            if (this.orientation === BarOrientation.Vertical) {\n                radius = Math.min(this.height, radius);\n                path = roundedRect(this.x, this.y, this.width, this.height, radius, this.edges);\n            }\n            else if (this.orientation === BarOrientation.Horizontal) {\n                radius = Math.min(this.width, radius);\n                path = roundedRect(this.x, this.y, this.width, this.height, radius, this.edges);\n            }\n        }\n        else {\n            path = roundedRect(this.x, this.y, this.width, this.height, radius, this.edges);\n        }\n        return path;\n    }\n    getRadius() {\n        let radius = 0;\n        if (this.roundEdges && this.height > 5 && this.width > 5) {\n            radius = Math.floor(Math.min(5, this.height / 2, this.width / 2));\n        }\n        return radius;\n    }\n    getStartOpacity() {\n        if (this.roundEdges) {\n            return 0.2;\n        }\n        else {\n            return 0.5;\n        }\n    }\n    get edges() {\n        let edges = [false, false, false, false];\n        if (this.roundEdges) {\n            if (this.orientation === BarOrientation.Vertical) {\n                if (this.data.value > 0) {\n                    edges = [true, true, false, false];\n                }\n                else {\n                    edges = [false, false, true, true];\n                }\n            }\n            else if (this.orientation === BarOrientation.Horizontal) {\n                if (this.data.value > 0) {\n                    edges = [false, true, false, true];\n                }\n                else {\n                    edges = [true, false, true, false];\n                }\n            }\n        }\n        return edges;\n    }\n    onMouseEnter() {\n        this.activate.emit(this.data);\n    }\n    onMouseLeave() {\n        this.deactivate.emit(this.data);\n    }\n    checkToHideBar() {\n        this.hideBar =\n            this.noBarWhenZero &&\n                ((this.orientation === BarOrientation.Vertical && this.height === 0) ||\n                    (this.orientation === BarOrientation.Horizontal && this.width === 0));\n    }\n}\nBarComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarComponent, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\nBarComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: BarComponent, selector: \"g[ngx-charts-bar]\", inputs: { fill: \"fill\", data: \"data\", width: \"width\", height: \"height\", x: \"x\", y: \"y\", orientation: \"orientation\", roundEdges: \"roundEdges\", gradient: \"gradient\", offset: \"offset\", isActive: \"isActive\", stops: \"stops\", animations: \"animations\", ariaLabel: \"ariaLabel\", noBarWhenZero: \"noBarWhenZero\" }, outputs: { select: \"select\", activate: \"activate\", deactivate: \"deactivate\" }, host: { listeners: { \"mouseenter\": \"onMouseEnter()\", \"mouseleave\": \"onMouseLeave()\" } }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:defs *ngIf=\"hasGradient\">\n      <svg:g ngx-charts-svg-linear-gradient [orientation]=\"orientation\" [name]=\"gradientId\" [stops]=\"gradientStops\" />\n    </svg:defs>\n    <svg:path\n      class=\"bar\"\n      stroke=\"none\"\n      role=\"img\"\n      tabIndex=\"-1\"\n      [class.active]=\"isActive\"\n      [class.hidden]=\"hideBar\"\n      [attr.d]=\"path\"\n      [attr.aria-label]=\"ariaLabel\"\n      [attr.fill]=\"hasGradient ? gradientFill : fill\"\n      (click)=\"select.emit(data)\"\n    />\n  `, isInline: true, components: [{ type: SvgLinearGradientComponent, selector: \"g[ngx-charts-svg-linear-gradient]\", inputs: [\"orientation\", \"name\", \"stops\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-bar]',\n                    template: `\n    <svg:defs *ngIf=\"hasGradient\">\n      <svg:g ngx-charts-svg-linear-gradient [orientation]=\"orientation\" [name]=\"gradientId\" [stops]=\"gradientStops\" />\n    </svg:defs>\n    <svg:path\n      class=\"bar\"\n      stroke=\"none\"\n      role=\"img\"\n      tabIndex=\"-1\"\n      [class.active]=\"isActive\"\n      [class.hidden]=\"hideBar\"\n      [attr.d]=\"path\"\n      [attr.aria-label]=\"ariaLabel\"\n      [attr.fill]=\"hasGradient ? gradientFill : fill\"\n      (click)=\"select.emit(data)\"\n    />\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { fill: [{\n                type: Input\n            }], data: [{\n                type: Input\n            }], width: [{\n                type: Input\n            }], height: [{\n                type: Input\n            }], x: [{\n                type: Input\n            }], y: [{\n                type: Input\n            }], orientation: [{\n                type: Input\n            }], roundEdges: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], offset: [{\n                type: Input\n            }], isActive: [{\n                type: Input\n            }], stops: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], ariaLabel: [{\n                type: Input\n            }], noBarWhenZero: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], onMouseEnter: [{\n                type: HostListener,\n                args: ['mouseenter']\n            }], onMouseLeave: [{\n                type: HostListener,\n                args: ['mouseleave']\n            }] } });\n\nvar BarChartType;\n(function (BarChartType) {\n    BarChartType[\"Standard\"] = \"standard\";\n    BarChartType[\"Normalized\"] = \"normalized\";\n    BarChartType[\"Stacked\"] = \"stacked\";\n})(BarChartType || (BarChartType = {}));\n\nvar D0Types;\n(function (D0Types) {\n    D0Types[\"positive\"] = \"positive\";\n    D0Types[\"negative\"] = \"negative\";\n})(D0Types || (D0Types = {}));\n\nclass BarLabelComponent {\n    constructor(element) {\n        this.dimensionsChanged = new EventEmitter();\n        this.horizontalPadding = 2;\n        this.verticalPadding = 5;\n        this.element = element.nativeElement;\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    getSize() {\n        const h = this.element.getBoundingClientRect().height;\n        const w = this.element.getBoundingClientRect().width;\n        return { height: h, width: w, negative: this.value < 0 };\n    }\n    ngAfterViewInit() {\n        this.dimensionsChanged.emit(this.getSize());\n    }\n    update() {\n        if (this.valueFormatting) {\n            this.formatedValue = this.valueFormatting(this.value);\n        }\n        else {\n            this.formatedValue = formatLabel(this.value);\n        }\n        if (this.orientation === 'horizontal') {\n            this.x = this.barX + this.barWidth;\n            // if the value is negative then it's on the left of the x0.\n            // we need to put the data label in front of the bar\n            if (this.value < 0) {\n                this.x = this.x - this.horizontalPadding;\n                this.textAnchor = 'end';\n            }\n            else {\n                this.x = this.x + this.horizontalPadding;\n                this.textAnchor = 'start';\n            }\n            this.y = this.barY + this.barHeight / 2;\n        }\n        else {\n            // orientation must be \"vertical\"\n            this.x = this.barX + this.barWidth / 2;\n            this.y = this.barY + this.barHeight;\n            if (this.value < 0) {\n                this.y = this.y + this.verticalPadding;\n                this.textAnchor = 'end';\n            }\n            else {\n                this.y = this.y - this.verticalPadding;\n                this.textAnchor = 'start';\n            }\n            this.transform = `rotate(-45, ${this.x} , ${this.y})`;\n        }\n    }\n}\nBarLabelComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarLabelComponent, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\nBarLabelComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: BarLabelComponent, selector: \"g[ngx-charts-bar-label]\", inputs: { value: \"value\", valueFormatting: \"valueFormatting\", barX: \"barX\", barY: \"barY\", barWidth: \"barWidth\", barHeight: \"barHeight\", orientation: \"orientation\" }, outputs: { dimensionsChanged: \"dimensionsChanged\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:text\n      class=\"textDataLabel\"\n      alignment-baseline=\"middle\"\n      [attr.text-anchor]=\"textAnchor\"\n      [attr.transform]=\"transform\"\n      [attr.x]=\"x\"\n      [attr.y]=\"y\"\n    >\n      {{ formatedValue }}\n    </svg:text>\n  `, isInline: true, styles: [\".textDataLabel{font-size:11px}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarLabelComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'g[ngx-charts-bar-label]', template: `\n    <svg:text\n      class=\"textDataLabel\"\n      alignment-baseline=\"middle\"\n      [attr.text-anchor]=\"textAnchor\"\n      [attr.transform]=\"transform\"\n      [attr.x]=\"x\"\n      [attr.y]=\"y\"\n    >\n      {{ formatedValue }}\n    </svg:text>\n  `, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".textDataLabel{font-size:11px}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { value: [{\n                type: Input\n            }], valueFormatting: [{\n                type: Input\n            }], barX: [{\n                type: Input\n            }], barY: [{\n                type: Input\n            }], barWidth: [{\n                type: Input\n            }], barHeight: [{\n                type: Input\n            }], orientation: [{\n                type: Input\n            }], dimensionsChanged: [{\n                type: Output\n            }] } });\n\nclass SeriesHorizontal {\n    constructor() {\n        this.type = BarChartType.Standard;\n        this.tooltipDisabled = false;\n        this.animations = true;\n        this.showDataLabel = false;\n        this.noBarWhenZero = true;\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.dataLabelWidthChanged = new EventEmitter();\n        this.barsForDataLabels = [];\n        this.barOrientation = BarOrientation;\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    update() {\n        this.updateTooltipSettings();\n        const d0 = {\n            [D0Types.positive]: 0,\n            [D0Types.negative]: 0\n        };\n        let d0Type;\n        d0Type = D0Types.positive;\n        let total;\n        if (this.type === BarChartType.Normalized) {\n            total = this.series.map(d => d.value).reduce((sum, d) => sum + d, 0);\n        }\n        const xScaleMin = Math.max(this.xScale.domain()[0], 0);\n        this.bars = this.series.map(d => {\n            let value = d.value;\n            const label = this.getLabel(d);\n            const formattedLabel = formatLabel(label);\n            const roundEdges = this.roundEdges;\n            d0Type = value > 0 ? D0Types.positive : D0Types.negative;\n            const bar = {\n                value,\n                label,\n                roundEdges,\n                data: d,\n                formattedLabel\n            };\n            bar.height = this.yScale.bandwidth();\n            if (this.type === BarChartType.Standard) {\n                bar.width = Math.abs(this.xScale(value) - this.xScale(xScaleMin));\n                if (value < 0) {\n                    bar.x = this.xScale(value);\n                }\n                else {\n                    bar.x = this.xScale(xScaleMin);\n                }\n                bar.y = this.yScale(label);\n            }\n            else if (this.type === BarChartType.Stacked) {\n                const offset0 = d0[d0Type];\n                const offset1 = offset0 + value;\n                d0[d0Type] += value;\n                bar.width = this.xScale(offset1) - this.xScale(offset0);\n                bar.x = this.xScale(offset0);\n                bar.y = 0;\n                bar.offset0 = offset0;\n                bar.offset1 = offset1;\n            }\n            else if (this.type === BarChartType.Normalized) {\n                let offset0 = d0[d0Type];\n                let offset1 = offset0 + value;\n                d0[d0Type] += value;\n                if (total > 0) {\n                    offset0 = (offset0 * 100) / total;\n                    offset1 = (offset1 * 100) / total;\n                }\n                else {\n                    offset0 = 0;\n                    offset1 = 0;\n                }\n                bar.width = this.xScale(offset1) - this.xScale(offset0);\n                bar.x = this.xScale(offset0);\n                bar.y = 0;\n                bar.offset0 = offset0;\n                bar.offset1 = offset1;\n                value = (offset1 - offset0).toFixed(2) + '%';\n            }\n            if (this.colors.scaleType === ScaleType.Ordinal) {\n                bar.color = this.colors.getColor(label);\n            }\n            else {\n                if (this.type === BarChartType.Standard) {\n                    bar.color = this.colors.getColor(value);\n                    bar.gradientStops = this.colors.getLinearGradientStops(value);\n                }\n                else {\n                    bar.color = this.colors.getColor(bar.offset1);\n                    bar.gradientStops = this.colors.getLinearGradientStops(bar.offset1, bar.offset0);\n                }\n            }\n            let tooltipLabel = formattedLabel;\n            bar.ariaLabel = formattedLabel + ' ' + value.toLocaleString();\n            if (this.seriesName !== null && this.seriesName !== undefined) {\n                tooltipLabel = `${this.seriesName} • ${formattedLabel}`;\n                bar.data.series = this.seriesName;\n                bar.ariaLabel = this.seriesName + ' ' + bar.ariaLabel;\n            }\n            bar.tooltipText = this.tooltipDisabled\n                ? undefined\n                : `\n        <span class=\"tooltip-label\">${escapeLabel(tooltipLabel)}</span>\n        <span class=\"tooltip-val\">${this.dataLabelFormatting ? this.dataLabelFormatting(value) : value.toLocaleString()}</span>\n      `;\n            return bar;\n        });\n        this.updateDataLabels();\n    }\n    updateDataLabels() {\n        if (this.type === BarChartType.Stacked) {\n            this.barsForDataLabels = [];\n            const section = {};\n            section.series = this.seriesName;\n            const totalPositive = this.series.map(d => d.value).reduce((sum, d) => (d > 0 ? sum + d : sum), 0);\n            const totalNegative = this.series.map(d => d.value).reduce((sum, d) => (d < 0 ? sum + d : sum), 0);\n            section.total = totalPositive + totalNegative;\n            section.x = 0;\n            section.y = 0;\n            // if total is positive then we show it on the right, otherwise on the left\n            if (section.total > 0) {\n                section.width = this.xScale(totalPositive);\n            }\n            else {\n                section.width = this.xScale(totalNegative);\n            }\n            section.height = this.yScale.bandwidth();\n            this.barsForDataLabels.push(section);\n        }\n        else {\n            this.barsForDataLabels = this.series.map(d => {\n                const section = {};\n                section.series = this.seriesName ?? d.label;\n                section.total = d.value;\n                section.x = this.xScale(0);\n                section.y = this.yScale(d.label);\n                section.width = this.xScale(section.total) - this.xScale(0);\n                section.height = this.yScale.bandwidth();\n                return section;\n            });\n        }\n    }\n    updateTooltipSettings() {\n        this.tooltipPlacement = this.tooltipDisabled ? undefined : PlacementTypes.Top;\n        this.tooltipType = this.tooltipDisabled ? undefined : StyleTypes.tooltip;\n    }\n    isActive(entry) {\n        if (!this.activeEntries)\n            return false;\n        const item = this.activeEntries.find(active => {\n            return entry.name === active.name && entry.value === active.value;\n        });\n        return item !== undefined;\n    }\n    getLabel(dataItem) {\n        if (dataItem.label) {\n            return dataItem.label;\n        }\n        return dataItem.name;\n    }\n    trackBy(index, bar) {\n        return bar.label;\n    }\n    trackDataLabelBy(index, barLabel) {\n        return index + '#' + barLabel.series + '#' + barLabel.total;\n    }\n    click(data) {\n        this.select.emit(data);\n    }\n}\nSeriesHorizontal.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: SeriesHorizontal, deps: [], target: i0.ɵɵFactoryTarget.Component });\nSeriesHorizontal.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: SeriesHorizontal, selector: \"g[ngx-charts-series-horizontal]\", inputs: { dims: \"dims\", type: \"type\", series: \"series\", xScale: \"xScale\", yScale: \"yScale\", colors: \"colors\", tooltipDisabled: \"tooltipDisabled\", gradient: \"gradient\", activeEntries: \"activeEntries\", seriesName: \"seriesName\", tooltipTemplate: \"tooltipTemplate\", roundEdges: \"roundEdges\", animations: \"animations\", showDataLabel: \"showDataLabel\", dataLabelFormatting: \"dataLabelFormatting\", noBarWhenZero: \"noBarWhenZero\" }, outputs: { select: \"select\", activate: \"activate\", deactivate: \"deactivate\", dataLabelWidthChanged: \"dataLabelWidthChanged\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:g\n      ngx-charts-bar\n      *ngFor=\"let bar of bars; trackBy: trackBy\"\n      [@animationState]=\"'active'\"\n      [width]=\"bar.width\"\n      [height]=\"bar.height\"\n      [x]=\"bar.x\"\n      [y]=\"bar.y\"\n      [fill]=\"bar.color\"\n      [stops]=\"bar.gradientStops\"\n      [data]=\"bar.data\"\n      [orientation]=\"barOrientation.Horizontal\"\n      [roundEdges]=\"bar.roundEdges\"\n      (select)=\"click($event)\"\n      [gradient]=\"gradient\"\n      [isActive]=\"isActive(bar.data)\"\n      [ariaLabel]=\"bar.ariaLabel\"\n      [animations]=\"animations\"\n      (activate)=\"activate.emit($event)\"\n      (deactivate)=\"deactivate.emit($event)\"\n      ngx-tooltip\n      [tooltipDisabled]=\"tooltipDisabled\"\n      [tooltipPlacement]=\"tooltipPlacement\"\n      [tooltipType]=\"tooltipType\"\n      [tooltipTitle]=\"tooltipTemplate ? undefined : bar.tooltipText\"\n      [tooltipTemplate]=\"tooltipTemplate\"\n      [tooltipContext]=\"bar.data\"\n      [noBarWhenZero]=\"noBarWhenZero\"\n    ></svg:g>\n    <svg:g *ngIf=\"showDataLabel\">\n      <svg:g\n        ngx-charts-bar-label\n        *ngFor=\"let b of barsForDataLabels; let i = index; trackBy: trackDataLabelBy\"\n        [barX]=\"b.x\"\n        [barY]=\"b.y\"\n        [barWidth]=\"b.width\"\n        [barHeight]=\"b.height\"\n        [value]=\"b.total\"\n        [valueFormatting]=\"dataLabelFormatting\"\n        [orientation]=\"barOrientation.Horizontal\"\n        (dimensionsChanged)=\"dataLabelWidthChanged.emit({ size: $event, index: i })\"\n      />\n    </svg:g>\n  `, isInline: true, components: [{ type: BarComponent, selector: \"g[ngx-charts-bar]\", inputs: [\"fill\", \"data\", \"width\", \"height\", \"x\", \"y\", \"orientation\", \"roundEdges\", \"gradient\", \"offset\", \"isActive\", \"stops\", \"animations\", \"ariaLabel\", \"noBarWhenZero\"], outputs: [\"select\", \"activate\", \"deactivate\"] }, { type: BarLabelComponent, selector: \"g[ngx-charts-bar-label]\", inputs: [\"value\", \"valueFormatting\", \"barX\", \"barY\", \"barWidth\", \"barHeight\", \"orientation\"], outputs: [\"dimensionsChanged\"] }], directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: TooltipDirective, selector: \"[ngx-tooltip]\", inputs: [\"tooltipCssClass\", \"tooltipTitle\", \"tooltipAppendToBody\", \"tooltipSpacing\", \"tooltipDisabled\", \"tooltipShowCaret\", \"tooltipPlacement\", \"tooltipAlignment\", \"tooltipType\", \"tooltipCloseOnClickOutside\", \"tooltipCloseOnMouseLeave\", \"tooltipHideTimeout\", \"tooltipShowTimeout\", \"tooltipTemplate\", \"tooltipShowEvent\", \"tooltipContext\", \"tooltipImmediateExit\"], outputs: [\"show\", \"hide\"] }, { type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], animations: [\n        trigger('animationState', [\n            transition(':leave', [\n                style({\n                    opacity: 1\n                }),\n                animate(500, style({ opacity: 0 }))\n            ])\n        ])\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: SeriesHorizontal, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-series-horizontal]',\n                    template: `\n    <svg:g\n      ngx-charts-bar\n      *ngFor=\"let bar of bars; trackBy: trackBy\"\n      [@animationState]=\"'active'\"\n      [width]=\"bar.width\"\n      [height]=\"bar.height\"\n      [x]=\"bar.x\"\n      [y]=\"bar.y\"\n      [fill]=\"bar.color\"\n      [stops]=\"bar.gradientStops\"\n      [data]=\"bar.data\"\n      [orientation]=\"barOrientation.Horizontal\"\n      [roundEdges]=\"bar.roundEdges\"\n      (select)=\"click($event)\"\n      [gradient]=\"gradient\"\n      [isActive]=\"isActive(bar.data)\"\n      [ariaLabel]=\"bar.ariaLabel\"\n      [animations]=\"animations\"\n      (activate)=\"activate.emit($event)\"\n      (deactivate)=\"deactivate.emit($event)\"\n      ngx-tooltip\n      [tooltipDisabled]=\"tooltipDisabled\"\n      [tooltipPlacement]=\"tooltipPlacement\"\n      [tooltipType]=\"tooltipType\"\n      [tooltipTitle]=\"tooltipTemplate ? undefined : bar.tooltipText\"\n      [tooltipTemplate]=\"tooltipTemplate\"\n      [tooltipContext]=\"bar.data\"\n      [noBarWhenZero]=\"noBarWhenZero\"\n    ></svg:g>\n    <svg:g *ngIf=\"showDataLabel\">\n      <svg:g\n        ngx-charts-bar-label\n        *ngFor=\"let b of barsForDataLabels; let i = index; trackBy: trackDataLabelBy\"\n        [barX]=\"b.x\"\n        [barY]=\"b.y\"\n        [barWidth]=\"b.width\"\n        [barHeight]=\"b.height\"\n        [value]=\"b.total\"\n        [valueFormatting]=\"dataLabelFormatting\"\n        [orientation]=\"barOrientation.Horizontal\"\n        (dimensionsChanged)=\"dataLabelWidthChanged.emit({ size: $event, index: i })\"\n      />\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    animations: [\n                        trigger('animationState', [\n                            transition(':leave', [\n                                style({\n                                    opacity: 1\n                                }),\n                                animate(500, style({ opacity: 0 }))\n                            ])\n                        ])\n                    ]\n                }]\n        }], propDecorators: { dims: [{\n                type: Input\n            }], type: [{\n                type: Input\n            }], series: [{\n                type: Input\n            }], xScale: [{\n                type: Input\n            }], yScale: [{\n                type: Input\n            }], colors: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], seriesName: [{\n                type: Input\n            }], tooltipTemplate: [{\n                type: Input\n            }], roundEdges: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], showDataLabel: [{\n                type: Input\n            }], dataLabelFormatting: [{\n                type: Input\n            }], noBarWhenZero: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], dataLabelWidthChanged: [{\n                type: Output\n            }] } });\n\nclass BarHorizontalComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.legend = false;\n        this.legendTitle = 'Legend';\n        this.legendPosition = LegendPosition.Right;\n        this.tooltipDisabled = false;\n        this.showGridLines = true;\n        this.activeEntries = [];\n        this.trimXAxisTicks = true;\n        this.trimYAxisTicks = true;\n        this.rotateXAxisTicks = true;\n        this.maxXAxisTickLength = 16;\n        this.maxYAxisTickLength = 16;\n        this.barPadding = 8;\n        this.roundDomains = false;\n        this.roundEdges = true;\n        this.showDataLabel = false;\n        this.noBarWhenZero = true;\n        this.wrapTicks = false;\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.margin = [10, 20, 10, 20];\n        this.xAxisHeight = 0;\n        this.yAxisWidth = 0;\n        this.dataLabelMaxWidth = { negative: 0, positive: 0 };\n    }\n    update() {\n        super.update();\n        if (!this.showDataLabel) {\n            this.dataLabelMaxWidth = { negative: 0, positive: 0 };\n        }\n        this.margin = [10, 20 + this.dataLabelMaxWidth.positive, 10, 20 + this.dataLabelMaxWidth.negative];\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showXAxis: this.xAxis,\n            showYAxis: this.yAxis,\n            xAxisHeight: this.xAxisHeight,\n            yAxisWidth: this.yAxisWidth,\n            showXLabel: this.showXAxisLabel,\n            showYLabel: this.showYAxisLabel,\n            showLegend: this.legend,\n            legendType: this.schemeType,\n            legendPosition: this.legendPosition\n        });\n        this.formatDates();\n        this.xScale = this.getXScale();\n        this.yScale = this.getYScale();\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n        this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n    }\n    getXScale() {\n        this.xDomain = this.getXDomain();\n        const scale = scaleLinear().range([0, this.dims.width]).domain(this.xDomain);\n        return this.roundDomains ? scale.nice() : scale;\n    }\n    getYScale() {\n        this.yDomain = this.getYDomain();\n        const spacing = this.yDomain.length / (this.dims.height / this.barPadding + 1);\n        return scaleBand().rangeRound([0, this.dims.height]).paddingInner(spacing).domain(this.yDomain);\n    }\n    getXDomain() {\n        const values = this.results.map(d => d.value);\n        const min = this.xScaleMin ? Math.min(this.xScaleMin, ...values) : Math.min(0, ...values);\n        const max = this.xScaleMax ? Math.max(this.xScaleMax, ...values) : Math.max(0, ...values);\n        return [min, max];\n    }\n    getYDomain() {\n        return this.results.map(d => d.label);\n    }\n    onClick(data) {\n        this.select.emit(data);\n    }\n    setColors() {\n        let domain;\n        if (this.schemeType === ScaleType.Ordinal) {\n            domain = this.yDomain;\n        }\n        else {\n            domain = this.xDomain;\n        }\n        this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    }\n    getLegendOptions() {\n        const opts = {\n            scaleType: this.schemeType,\n            colors: undefined,\n            domain: [],\n            title: undefined,\n            position: this.legendPosition\n        };\n        if (opts.scaleType === 'ordinal') {\n            opts.domain = this.yDomain;\n            opts.colors = this.colors;\n            opts.title = this.legendTitle;\n        }\n        else {\n            opts.domain = this.xDomain;\n            opts.colors = this.colors.scale;\n        }\n        return opts;\n    }\n    updateYAxisWidth({ width }) {\n        this.yAxisWidth = width;\n        this.update();\n    }\n    updateXAxisHeight({ height }) {\n        this.xAxisHeight = height;\n        this.update();\n    }\n    onDataLabelMaxWidthChanged(event) {\n        if (event.size.negative) {\n            this.dataLabelMaxWidth.negative = Math.max(this.dataLabelMaxWidth.negative, event.size.width);\n        }\n        else {\n            this.dataLabelMaxWidth.positive = Math.max(this.dataLabelMaxWidth.positive, event.size.width);\n        }\n        if (event.index === this.results.length - 1) {\n            setTimeout(() => this.update());\n        }\n    }\n    onActivate(item, fromLegend = false) {\n        item = this.results.find(d => {\n            if (fromLegend) {\n                return d.label === item.name;\n            }\n            else {\n                return d.name === item.name;\n            }\n        });\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value && d.series === item.series;\n        });\n        if (idx > -1) {\n            return;\n        }\n        this.activeEntries = [item, ...this.activeEntries];\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    }\n    onDeactivate(item, fromLegend = false) {\n        item = this.results.find(d => {\n            if (fromLegend) {\n                return d.label === item.name;\n            }\n            else {\n                return d.name === item.name;\n            }\n        });\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value && d.series === item.series;\n        });\n        this.activeEntries.splice(idx, 1);\n        this.activeEntries = [...this.activeEntries];\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    }\n}\nBarHorizontalComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarHorizontalComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nBarHorizontalComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: BarHorizontalComponent, selector: \"ngx-charts-bar-horizontal\", inputs: { legend: \"legend\", legendTitle: \"legendTitle\", legendPosition: \"legendPosition\", xAxis: \"xAxis\", yAxis: \"yAxis\", showXAxisLabel: \"showXAxisLabel\", showYAxisLabel: \"showYAxisLabel\", xAxisLabel: \"xAxisLabel\", yAxisLabel: \"yAxisLabel\", tooltipDisabled: \"tooltipDisabled\", gradient: \"gradient\", showGridLines: \"showGridLines\", activeEntries: \"activeEntries\", schemeType: \"schemeType\", trimXAxisTicks: \"trimXAxisTicks\", trimYAxisTicks: \"trimYAxisTicks\", rotateXAxisTicks: \"rotateXAxisTicks\", maxXAxisTickLength: \"maxXAxisTickLength\", maxYAxisTickLength: \"maxYAxisTickLength\", xAxisTickFormatting: \"xAxisTickFormatting\", yAxisTickFormatting: \"yAxisTickFormatting\", xAxisTicks: \"xAxisTicks\", yAxisTicks: \"yAxisTicks\", barPadding: \"barPadding\", roundDomains: \"roundDomains\", roundEdges: \"roundEdges\", xScaleMax: \"xScaleMax\", xScaleMin: \"xScaleMin\", showDataLabel: \"showDataLabel\", dataLabelFormatting: \"dataLabelFormatting\", noBarWhenZero: \"noBarWhenZero\", wrapTicks: \"wrapTicks\" }, outputs: { activate: \"activate\", deactivate: \"deactivate\" }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, true)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [yAxisOffset]=\"dataLabelMaxWidth.negative\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-series-horizontal\n          [xScale]=\"xScale\"\n          [yScale]=\"yScale\"\n          [colors]=\"colors\"\n          [series]=\"results\"\n          [dims]=\"dims\"\n          [gradient]=\"gradient\"\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [activeEntries]=\"activeEntries\"\n          [roundEdges]=\"roundEdges\"\n          [animations]=\"animations\"\n          [showDataLabel]=\"showDataLabel\"\n          [dataLabelFormatting]=\"dataLabelFormatting\"\n          [noBarWhenZero]=\"noBarWhenZero\"\n          (select)=\"onClick($event)\"\n          (activate)=\"onActivate($event)\"\n          (deactivate)=\"onDeactivate($event)\"\n          (dataLabelWidthChanged)=\"onDataLabelMaxWidthChanged($event)\"\n        ></svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: XAxisComponent, selector: \"g[ngx-charts-x-axis]\", inputs: [\"xScale\", \"dims\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"showGridLines\", \"showLabel\", \"labelText\", \"ticks\", \"xAxisTickCount\", \"xOrient\", \"xAxisOffset\", \"wrapTicks\"], outputs: [\"dimensionsChanged\"] }, { type: YAxisComponent, selector: \"g[ngx-charts-y-axis]\", inputs: [\"yScale\", \"dims\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"showGridLines\", \"showLabel\", \"labelText\", \"yAxisTickCount\", \"yOrient\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"yAxisOffset\", \"wrapTicks\"], outputs: [\"dimensionsChanged\"] }, { type: SeriesHorizontal, selector: \"g[ngx-charts-series-horizontal]\", inputs: [\"dims\", \"type\", \"series\", \"xScale\", \"yScale\", \"colors\", \"tooltipDisabled\", \"gradient\", \"activeEntries\", \"seriesName\", \"tooltipTemplate\", \"roundEdges\", \"animations\", \"showDataLabel\", \"dataLabelFormatting\", \"noBarWhenZero\"], outputs: [\"select\", \"activate\", \"deactivate\", \"dataLabelWidthChanged\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarHorizontalComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-bar-horizontal', template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, true)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [yAxisOffset]=\"dataLabelMaxWidth.negative\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-series-horizontal\n          [xScale]=\"xScale\"\n          [yScale]=\"yScale\"\n          [colors]=\"colors\"\n          [series]=\"results\"\n          [dims]=\"dims\"\n          [gradient]=\"gradient\"\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [activeEntries]=\"activeEntries\"\n          [roundEdges]=\"roundEdges\"\n          [animations]=\"animations\"\n          [showDataLabel]=\"showDataLabel\"\n          [dataLabelFormatting]=\"dataLabelFormatting\"\n          [noBarWhenZero]=\"noBarWhenZero\"\n          (select)=\"onClick($event)\"\n          (activate)=\"onActivate($event)\"\n          (deactivate)=\"onDeactivate($event)\"\n          (dataLabelWidthChanged)=\"onDataLabelMaxWidthChanged($event)\"\n        ></svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"] }]\n        }], propDecorators: { legend: [{\n                type: Input\n            }], legendTitle: [{\n                type: Input\n            }], legendPosition: [{\n                type: Input\n            }], xAxis: [{\n                type: Input\n            }], yAxis: [{\n                type: Input\n            }], showXAxisLabel: [{\n                type: Input\n            }], showYAxisLabel: [{\n                type: Input\n            }], xAxisLabel: [{\n                type: Input\n            }], yAxisLabel: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], showGridLines: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], schemeType: [{\n                type: Input\n            }], trimXAxisTicks: [{\n                type: Input\n            }], trimYAxisTicks: [{\n                type: Input\n            }], rotateXAxisTicks: [{\n                type: Input\n            }], maxXAxisTickLength: [{\n                type: Input\n            }], maxYAxisTickLength: [{\n                type: Input\n            }], xAxisTickFormatting: [{\n                type: Input\n            }], yAxisTickFormatting: [{\n                type: Input\n            }], xAxisTicks: [{\n                type: Input\n            }], yAxisTicks: [{\n                type: Input\n            }], barPadding: [{\n                type: Input\n            }], roundDomains: [{\n                type: Input\n            }], roundEdges: [{\n                type: Input\n            }], xScaleMax: [{\n                type: Input\n            }], xScaleMin: [{\n                type: Input\n            }], showDataLabel: [{\n                type: Input\n            }], dataLabelFormatting: [{\n                type: Input\n            }], noBarWhenZero: [{\n                type: Input\n            }], wrapTicks: [{\n                type: Input\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }] } });\n\nclass BarHorizontal2DComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.legend = false;\n        this.legendTitle = 'Legend';\n        this.legendPosition = LegendPosition.Right;\n        this.tooltipDisabled = false;\n        this.showGridLines = true;\n        this.activeEntries = [];\n        this.trimXAxisTicks = true;\n        this.trimYAxisTicks = true;\n        this.rotateXAxisTicks = true;\n        this.maxXAxisTickLength = 16;\n        this.maxYAxisTickLength = 16;\n        this.groupPadding = 16;\n        this.barPadding = 8;\n        this.roundDomains = false;\n        this.roundEdges = true;\n        this.showDataLabel = false;\n        this.noBarWhenZero = true;\n        this.wrapTicks = false;\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.margin = [10, 20, 10, 20];\n        this.xAxisHeight = 0;\n        this.yAxisWidth = 0;\n        this.dataLabelMaxWidth = { negative: 0, positive: 0 };\n        this.isSSR = false;\n        this.barOrientation = BarOrientation;\n        this.trackBy = (index, item) => {\n            return item.name;\n        };\n    }\n    ngOnInit() {\n        if (isPlatformServer(this.platformId)) {\n            this.isSSR = true;\n        }\n    }\n    update() {\n        super.update();\n        if (!this.showDataLabel) {\n            this.dataLabelMaxWidth = { negative: 0, positive: 0 };\n        }\n        this.margin = [10, 20 + this.dataLabelMaxWidth.positive, 10, 20 + this.dataLabelMaxWidth.negative];\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showXAxis: this.xAxis,\n            showYAxis: this.yAxis,\n            xAxisHeight: this.xAxisHeight,\n            yAxisWidth: this.yAxisWidth,\n            showXLabel: this.showXAxisLabel,\n            showYLabel: this.showYAxisLabel,\n            showLegend: this.legend,\n            legendType: this.schemeType,\n            legendPosition: this.legendPosition\n        });\n        this.formatDates();\n        this.groupDomain = this.getGroupDomain();\n        this.innerDomain = this.getInnerDomain();\n        this.valueDomain = this.getValueDomain();\n        this.groupScale = this.getGroupScale();\n        this.innerScale = this.getInnerScale();\n        this.valueScale = this.getValueScale();\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n        this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n    }\n    getGroupScale() {\n        const spacing = this.groupDomain.length / (this.dims.height / this.groupPadding + 1);\n        return scaleBand()\n            .rangeRound([0, this.dims.height])\n            .paddingInner(spacing)\n            .paddingOuter(spacing / 2)\n            .domain(this.groupDomain);\n    }\n    getInnerScale() {\n        const height = this.groupScale.bandwidth();\n        const spacing = this.innerDomain.length / (height / this.barPadding + 1);\n        return scaleBand().rangeRound([0, height]).paddingInner(spacing).domain(this.innerDomain);\n    }\n    getValueScale() {\n        const scale = scaleLinear().range([0, this.dims.width]).domain(this.valueDomain);\n        return this.roundDomains ? scale.nice() : scale;\n    }\n    getGroupDomain() {\n        const domain = [];\n        for (const group of this.results) {\n            if (!domain.includes(group.label)) {\n                domain.push(group.label);\n            }\n        }\n        return domain;\n    }\n    getInnerDomain() {\n        const domain = [];\n        for (const group of this.results) {\n            for (const d of group.series) {\n                if (!domain.includes(d.label)) {\n                    domain.push(d.label);\n                }\n            }\n        }\n        return domain;\n    }\n    getValueDomain() {\n        const domain = [];\n        for (const group of this.results) {\n            for (const d of group.series) {\n                if (!domain.includes(d.value)) {\n                    domain.push(d.value);\n                }\n            }\n        }\n        const min = Math.min(0, ...domain);\n        const max = this.xScaleMax ? Math.max(this.xScaleMax, ...domain) : Math.max(0, ...domain);\n        return [min, max];\n    }\n    groupTransform(group) {\n        return `translate(0, ${this.groupScale(group.label)})`;\n    }\n    onClick(data, group) {\n        if (group) {\n            data.series = group.name;\n        }\n        this.select.emit(data);\n    }\n    setColors() {\n        let domain;\n        if (this.schemeType === ScaleType.Ordinal) {\n            domain = this.innerDomain;\n        }\n        else {\n            domain = this.valueDomain;\n        }\n        this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    }\n    getLegendOptions() {\n        const opts = {\n            scaleType: this.schemeType,\n            colors: undefined,\n            domain: [],\n            title: undefined,\n            position: this.legendPosition\n        };\n        if (opts.scaleType === ScaleType.Ordinal) {\n            opts.domain = this.innerDomain;\n            opts.colors = this.colors;\n            opts.title = this.legendTitle;\n        }\n        else {\n            opts.domain = this.valueDomain;\n            opts.colors = this.colors.scale;\n        }\n        return opts;\n    }\n    updateYAxisWidth({ width }) {\n        this.yAxisWidth = width;\n        this.update();\n    }\n    updateXAxisHeight({ height }) {\n        this.xAxisHeight = height;\n        this.update();\n    }\n    onDataLabelMaxWidthChanged(event, groupIndex) {\n        if (event.size.negative) {\n            this.dataLabelMaxWidth.negative = Math.max(this.dataLabelMaxWidth.negative, event.size.width);\n        }\n        else {\n            this.dataLabelMaxWidth.positive = Math.max(this.dataLabelMaxWidth.positive, event.size.width);\n        }\n        if (groupIndex === this.results.length - 1) {\n            setTimeout(() => this.update());\n        }\n    }\n    onActivate(event, group, fromLegend = false) {\n        const item = Object.assign({}, event);\n        if (group) {\n            item.series = group.name;\n        }\n        const items = this.results\n            .map(g => g.series)\n            .flat()\n            .filter(i => {\n            if (fromLegend) {\n                return i.label === item.name;\n            }\n            else {\n                return i.name === item.name && i.series === item.series;\n            }\n        });\n        this.activeEntries = [...items];\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    }\n    onDeactivate(event, group, fromLegend = false) {\n        const item = Object.assign({}, event);\n        if (group) {\n            item.series = group.name;\n        }\n        this.activeEntries = this.activeEntries.filter(i => {\n            if (fromLegend) {\n                return i.label !== item.name;\n            }\n            else {\n                return !(i.name === item.name && i.series === item.series);\n            }\n        });\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    }\n}\nBarHorizontal2DComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarHorizontal2DComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nBarHorizontal2DComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: BarHorizontal2DComponent, selector: \"ngx-charts-bar-horizontal-2d\", inputs: { legend: \"legend\", legendTitle: \"legendTitle\", legendPosition: \"legendPosition\", xAxis: \"xAxis\", yAxis: \"yAxis\", showXAxisLabel: \"showXAxisLabel\", showYAxisLabel: \"showYAxisLabel\", xAxisLabel: \"xAxisLabel\", yAxisLabel: \"yAxisLabel\", tooltipDisabled: \"tooltipDisabled\", gradient: \"gradient\", showGridLines: \"showGridLines\", activeEntries: \"activeEntries\", schemeType: \"schemeType\", trimXAxisTicks: \"trimXAxisTicks\", trimYAxisTicks: \"trimYAxisTicks\", rotateXAxisTicks: \"rotateXAxisTicks\", maxXAxisTickLength: \"maxXAxisTickLength\", maxYAxisTickLength: \"maxYAxisTickLength\", xAxisTickFormatting: \"xAxisTickFormatting\", yAxisTickFormatting: \"yAxisTickFormatting\", xAxisTicks: \"xAxisTicks\", yAxisTicks: \"yAxisTicks\", groupPadding: \"groupPadding\", barPadding: \"barPadding\", roundDomains: \"roundDomains\", roundEdges: \"roundEdges\", xScaleMax: \"xScaleMax\", showDataLabel: \"showDataLabel\", dataLabelFormatting: \"dataLabelFormatting\", noBarWhenZero: \"noBarWhenZero\", wrapTicks: \"wrapTicks\" }, outputs: { activate: \"activate\", deactivate: \"deactivate\" }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, undefined, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, undefined, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-grid-panel-series\n          [xScale]=\"valueScale\"\n          [yScale]=\"groupScale\"\n          [data]=\"results\"\n          [dims]=\"dims\"\n          [orient]=\"barOrientation.Horizontal\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"valueScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"groupScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [yAxisOffset]=\"dataLabelMaxWidth.negative\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n\n        <svg:g *ngIf=\"!isSSR\">\n          <svg:g\n            *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n            [@animationState]=\"'active'\"\n            [attr.transform]=\"groupTransform(group)\"\n          >\n            <svg:g\n              ngx-charts-series-horizontal\n              [xScale]=\"valueScale\"\n              [activeEntries]=\"activeEntries\"\n              [yScale]=\"innerScale\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [roundEdges]=\"roundEdges\"\n              [animations]=\"animations\"\n              [showDataLabel]=\"showDataLabel\"\n              [dataLabelFormatting]=\"dataLabelFormatting\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n              (dataLabelWidthChanged)=\"onDataLabelMaxWidthChanged($event, index)\"\n            />\n          </svg:g>\n        </svg:g>\n        <svg:g *ngIf=\"isSSR\">\n          <svg:g\n            *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n            [attr.transform]=\"groupTransform(group)\"\n          >\n            <svg:g\n              ngx-charts-series-horizontal\n              [xScale]=\"valueScale\"\n              [activeEntries]=\"activeEntries\"\n              [yScale]=\"innerScale\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [roundEdges]=\"roundEdges\"\n              [animations]=\"animations\"\n              [showDataLabel]=\"showDataLabel\"\n              [dataLabelFormatting]=\"dataLabelFormatting\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n              (dataLabelWidthChanged)=\"onDataLabelMaxWidthChanged($event, index)\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: GridPanelSeriesComponent, selector: \"g[ngx-charts-grid-panel-series]\", inputs: [\"data\", \"dims\", \"xScale\", \"yScale\", \"orient\"] }, { type: XAxisComponent, selector: \"g[ngx-charts-x-axis]\", inputs: [\"xScale\", \"dims\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"showGridLines\", \"showLabel\", \"labelText\", \"ticks\", \"xAxisTickCount\", \"xOrient\", \"xAxisOffset\", \"wrapTicks\"], outputs: [\"dimensionsChanged\"] }, { type: YAxisComponent, selector: \"g[ngx-charts-y-axis]\", inputs: [\"yScale\", \"dims\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"showGridLines\", \"showLabel\", \"labelText\", \"yAxisTickCount\", \"yOrient\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"yAxisOffset\", \"wrapTicks\"], outputs: [\"dimensionsChanged\"] }, { type: SeriesHorizontal, selector: \"g[ngx-charts-series-horizontal]\", inputs: [\"dims\", \"type\", \"series\", \"xScale\", \"yScale\", \"colors\", \"tooltipDisabled\", \"gradient\", \"activeEntries\", \"seriesName\", \"tooltipTemplate\", \"roundEdges\", \"animations\", \"showDataLabel\", \"dataLabelFormatting\", \"noBarWhenZero\"], outputs: [\"select\", \"activate\", \"deactivate\", \"dataLabelWidthChanged\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], animations: [\n        trigger('animationState', [\n            transition(':leave', [\n                style({\n                    opacity: 1,\n                    transform: '*'\n                }),\n                animate(500, style({ opacity: 0, transform: 'scale(0)' }))\n            ])\n        ])\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarHorizontal2DComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-bar-horizontal-2d', template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, undefined, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, undefined, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-grid-panel-series\n          [xScale]=\"valueScale\"\n          [yScale]=\"groupScale\"\n          [data]=\"results\"\n          [dims]=\"dims\"\n          [orient]=\"barOrientation.Horizontal\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"valueScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"groupScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [yAxisOffset]=\"dataLabelMaxWidth.negative\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n\n        <svg:g *ngIf=\"!isSSR\">\n          <svg:g\n            *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n            [@animationState]=\"'active'\"\n            [attr.transform]=\"groupTransform(group)\"\n          >\n            <svg:g\n              ngx-charts-series-horizontal\n              [xScale]=\"valueScale\"\n              [activeEntries]=\"activeEntries\"\n              [yScale]=\"innerScale\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [roundEdges]=\"roundEdges\"\n              [animations]=\"animations\"\n              [showDataLabel]=\"showDataLabel\"\n              [dataLabelFormatting]=\"dataLabelFormatting\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n              (dataLabelWidthChanged)=\"onDataLabelMaxWidthChanged($event, index)\"\n            />\n          </svg:g>\n        </svg:g>\n        <svg:g *ngIf=\"isSSR\">\n          <svg:g\n            *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n            [attr.transform]=\"groupTransform(group)\"\n          >\n            <svg:g\n              ngx-charts-series-horizontal\n              [xScale]=\"valueScale\"\n              [activeEntries]=\"activeEntries\"\n              [yScale]=\"innerScale\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [roundEdges]=\"roundEdges\"\n              [animations]=\"animations\"\n              [showDataLabel]=\"showDataLabel\"\n              [dataLabelFormatting]=\"dataLabelFormatting\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n              (dataLabelWidthChanged)=\"onDataLabelMaxWidthChanged($event, index)\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, animations: [\n                        trigger('animationState', [\n                            transition(':leave', [\n                                style({\n                                    opacity: 1,\n                                    transform: '*'\n                                }),\n                                animate(500, style({ opacity: 0, transform: 'scale(0)' }))\n                            ])\n                        ])\n                    ], styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"] }]\n        }], propDecorators: { legend: [{\n                type: Input\n            }], legendTitle: [{\n                type: Input\n            }], legendPosition: [{\n                type: Input\n            }], xAxis: [{\n                type: Input\n            }], yAxis: [{\n                type: Input\n            }], showXAxisLabel: [{\n                type: Input\n            }], showYAxisLabel: [{\n                type: Input\n            }], xAxisLabel: [{\n                type: Input\n            }], yAxisLabel: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], showGridLines: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], schemeType: [{\n                type: Input\n            }], trimXAxisTicks: [{\n                type: Input\n            }], trimYAxisTicks: [{\n                type: Input\n            }], rotateXAxisTicks: [{\n                type: Input\n            }], maxXAxisTickLength: [{\n                type: Input\n            }], maxYAxisTickLength: [{\n                type: Input\n            }], xAxisTickFormatting: [{\n                type: Input\n            }], yAxisTickFormatting: [{\n                type: Input\n            }], xAxisTicks: [{\n                type: Input\n            }], yAxisTicks: [{\n                type: Input\n            }], groupPadding: [{\n                type: Input\n            }], barPadding: [{\n                type: Input\n            }], roundDomains: [{\n                type: Input\n            }], roundEdges: [{\n                type: Input\n            }], xScaleMax: [{\n                type: Input\n            }], showDataLabel: [{\n                type: Input\n            }], dataLabelFormatting: [{\n                type: Input\n            }], noBarWhenZero: [{\n                type: Input\n            }], wrapTicks: [{\n                type: Input\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }] } });\n\nclass BarHorizontalNormalizedComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.legend = false;\n        this.legendTitle = 'Legend';\n        this.legendPosition = LegendPosition.Right;\n        this.tooltipDisabled = false;\n        this.showGridLines = true;\n        this.activeEntries = [];\n        this.trimXAxisTicks = true;\n        this.trimYAxisTicks = true;\n        this.rotateXAxisTicks = true;\n        this.maxXAxisTickLength = 16;\n        this.maxYAxisTickLength = 16;\n        this.barPadding = 8;\n        this.roundDomains = false;\n        this.noBarWhenZero = true;\n        this.wrapTicks = false;\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.valueDomain = [0, 100];\n        this.margin = [10, 20, 10, 20];\n        this.xAxisHeight = 0;\n        this.yAxisWidth = 0;\n        this.barChartType = BarChartType;\n        this.isSSR = false;\n        this.trackBy = (index, item) => {\n            return item.name;\n        };\n    }\n    ngOnInit() {\n        if (isPlatformServer(this.platformId)) {\n            this.isSSR = true;\n        }\n    }\n    update() {\n        super.update();\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showXAxis: this.xAxis,\n            showYAxis: this.yAxis,\n            xAxisHeight: this.xAxisHeight,\n            yAxisWidth: this.yAxisWidth,\n            showXLabel: this.showXAxisLabel,\n            showYLabel: this.showYAxisLabel,\n            showLegend: this.legend,\n            legendType: this.schemeType,\n            legendPosition: this.legendPosition\n        });\n        this.formatDates();\n        this.groupDomain = this.getGroupDomain();\n        this.innerDomain = this.getInnerDomain();\n        this.xScale = this.getXScale();\n        this.yScale = this.getYScale();\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n        this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n    }\n    getGroupDomain() {\n        const domain = [];\n        for (const group of this.results) {\n            if (!domain.includes(group.label)) {\n                domain.push(group.label);\n            }\n        }\n        return domain;\n    }\n    getInnerDomain() {\n        const domain = [];\n        for (const group of this.results) {\n            for (const d of group.series) {\n                if (!domain.includes(d.label)) {\n                    domain.push(d.label);\n                }\n            }\n        }\n        return domain;\n    }\n    getYScale() {\n        const spacing = this.groupDomain.length / (this.dims.height / this.barPadding + 1);\n        return scaleBand().rangeRound([0, this.dims.height]).paddingInner(spacing).domain(this.groupDomain);\n    }\n    getXScale() {\n        const scale = scaleLinear().range([0, this.dims.width]).domain(this.valueDomain);\n        return this.roundDomains ? scale.nice() : scale;\n    }\n    groupTransform(group) {\n        return `translate(0, ${this.yScale(group.name)})`;\n    }\n    onClick(data, group) {\n        if (group) {\n            data.series = group.name;\n        }\n        this.select.emit(data);\n    }\n    setColors() {\n        let domain;\n        if (this.schemeType === ScaleType.Ordinal) {\n            domain = this.innerDomain;\n        }\n        else {\n            domain = this.valueDomain;\n        }\n        this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    }\n    getLegendOptions() {\n        const opts = {\n            scaleType: this.schemeType,\n            colors: undefined,\n            domain: [],\n            title: undefined,\n            position: this.legendPosition\n        };\n        if (opts.scaleType === ScaleType.Ordinal) {\n            opts.domain = this.innerDomain;\n            opts.colors = this.colors;\n            opts.title = this.legendTitle;\n        }\n        else {\n            opts.domain = this.valueDomain;\n            opts.colors = this.colors.scale;\n        }\n        return opts;\n    }\n    updateYAxisWidth({ width }) {\n        this.yAxisWidth = width;\n        this.update();\n    }\n    updateXAxisHeight({ height }) {\n        this.xAxisHeight = height;\n        this.update();\n    }\n    onActivate(event, group, fromLegend = false) {\n        const item = Object.assign({}, event);\n        if (group) {\n            item.series = group.name;\n        }\n        const items = this.results\n            .map(g => g.series)\n            .flat()\n            .filter(i => {\n            if (fromLegend) {\n                return i.label === item.name;\n            }\n            else {\n                return i.name === item.name && i.series === item.series;\n            }\n        });\n        this.activeEntries = [...items];\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    }\n    onDeactivate(event, group, fromLegend = false) {\n        const item = Object.assign({}, event);\n        if (group) {\n            item.series = group.name;\n        }\n        this.activeEntries = this.activeEntries.filter(i => {\n            if (fromLegend) {\n                return i.label !== item.name;\n            }\n            else {\n                return !(i.name === item.name && i.series === item.series);\n            }\n        });\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    }\n}\nBarHorizontalNormalizedComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarHorizontalNormalizedComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nBarHorizontalNormalizedComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: BarHorizontalNormalizedComponent, selector: \"ngx-charts-bar-horizontal-normalized\", inputs: { legend: \"legend\", legendTitle: \"legendTitle\", legendPosition: \"legendPosition\", xAxis: \"xAxis\", yAxis: \"yAxis\", showXAxisLabel: \"showXAxisLabel\", showYAxisLabel: \"showYAxisLabel\", xAxisLabel: \"xAxisLabel\", yAxisLabel: \"yAxisLabel\", tooltipDisabled: \"tooltipDisabled\", gradient: \"gradient\", showGridLines: \"showGridLines\", activeEntries: \"activeEntries\", schemeType: \"schemeType\", trimXAxisTicks: \"trimXAxisTicks\", trimYAxisTicks: \"trimYAxisTicks\", rotateXAxisTicks: \"rotateXAxisTicks\", maxXAxisTickLength: \"maxXAxisTickLength\", maxYAxisTickLength: \"maxYAxisTickLength\", xAxisTickFormatting: \"xAxisTickFormatting\", yAxisTickFormatting: \"yAxisTickFormatting\", xAxisTicks: \"xAxisTicks\", yAxisTicks: \"yAxisTicks\", barPadding: \"barPadding\", roundDomains: \"roundDomains\", noBarWhenZero: \"noBarWhenZero\", wrapTicks: \"wrapTicks\" }, outputs: { activate: \"activate\", deactivate: \"deactivate\" }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, undefined, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, undefined, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g *ngIf=\"!isSSR\">\n          <svg:g\n            *ngFor=\"let group of results; trackBy: trackBy\"\n            [@animationState]=\"'active'\"\n            [attr.transform]=\"groupTransform(group)\"\n          >\n            <svg:g\n              ngx-charts-series-horizontal\n              [type]=\"barChartType.Normalized\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [activeEntries]=\"activeEntries\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [animations]=\"animations\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n            />\n          </svg:g>\n        </svg:g>\n        <svg:g *ngIf=\"isSSR\">\n          <svg:g *ngFor=\"let group of results; trackBy: trackBy\" [attr.transform]=\"groupTransform(group)\">\n            <svg:g\n              ngx-charts-series-horizontal\n              [type]=\"barChartType.Normalized\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [activeEntries]=\"activeEntries\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [animations]=\"animations\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: XAxisComponent, selector: \"g[ngx-charts-x-axis]\", inputs: [\"xScale\", \"dims\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"showGridLines\", \"showLabel\", \"labelText\", \"ticks\", \"xAxisTickCount\", \"xOrient\", \"xAxisOffset\", \"wrapTicks\"], outputs: [\"dimensionsChanged\"] }, { type: YAxisComponent, selector: \"g[ngx-charts-y-axis]\", inputs: [\"yScale\", \"dims\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"showGridLines\", \"showLabel\", \"labelText\", \"yAxisTickCount\", \"yOrient\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"yAxisOffset\", \"wrapTicks\"], outputs: [\"dimensionsChanged\"] }, { type: SeriesHorizontal, selector: \"g[ngx-charts-series-horizontal]\", inputs: [\"dims\", \"type\", \"series\", \"xScale\", \"yScale\", \"colors\", \"tooltipDisabled\", \"gradient\", \"activeEntries\", \"seriesName\", \"tooltipTemplate\", \"roundEdges\", \"animations\", \"showDataLabel\", \"dataLabelFormatting\", \"noBarWhenZero\"], outputs: [\"select\", \"activate\", \"deactivate\", \"dataLabelWidthChanged\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], animations: [\n        trigger('animationState', [\n            transition(':leave', [\n                style({\n                    opacity: 1,\n                    transform: '*'\n                }),\n                animate(500, style({ opacity: 0, transform: 'scale(0)' }))\n            ])\n        ])\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarHorizontalNormalizedComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-bar-horizontal-normalized', template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, undefined, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, undefined, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g *ngIf=\"!isSSR\">\n          <svg:g\n            *ngFor=\"let group of results; trackBy: trackBy\"\n            [@animationState]=\"'active'\"\n            [attr.transform]=\"groupTransform(group)\"\n          >\n            <svg:g\n              ngx-charts-series-horizontal\n              [type]=\"barChartType.Normalized\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [activeEntries]=\"activeEntries\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [animations]=\"animations\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n            />\n          </svg:g>\n        </svg:g>\n        <svg:g *ngIf=\"isSSR\">\n          <svg:g *ngFor=\"let group of results; trackBy: trackBy\" [attr.transform]=\"groupTransform(group)\">\n            <svg:g\n              ngx-charts-series-horizontal\n              [type]=\"barChartType.Normalized\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [activeEntries]=\"activeEntries\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [animations]=\"animations\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, animations: [\n                        trigger('animationState', [\n                            transition(':leave', [\n                                style({\n                                    opacity: 1,\n                                    transform: '*'\n                                }),\n                                animate(500, style({ opacity: 0, transform: 'scale(0)' }))\n                            ])\n                        ])\n                    ], styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"] }]\n        }], propDecorators: { legend: [{\n                type: Input\n            }], legendTitle: [{\n                type: Input\n            }], legendPosition: [{\n                type: Input\n            }], xAxis: [{\n                type: Input\n            }], yAxis: [{\n                type: Input\n            }], showXAxisLabel: [{\n                type: Input\n            }], showYAxisLabel: [{\n                type: Input\n            }], xAxisLabel: [{\n                type: Input\n            }], yAxisLabel: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], showGridLines: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], schemeType: [{\n                type: Input\n            }], trimXAxisTicks: [{\n                type: Input\n            }], trimYAxisTicks: [{\n                type: Input\n            }], rotateXAxisTicks: [{\n                type: Input\n            }], maxXAxisTickLength: [{\n                type: Input\n            }], maxYAxisTickLength: [{\n                type: Input\n            }], xAxisTickFormatting: [{\n                type: Input\n            }], yAxisTickFormatting: [{\n                type: Input\n            }], xAxisTicks: [{\n                type: Input\n            }], yAxisTicks: [{\n                type: Input\n            }], barPadding: [{\n                type: Input\n            }], roundDomains: [{\n                type: Input\n            }], noBarWhenZero: [{\n                type: Input\n            }], wrapTicks: [{\n                type: Input\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }] } });\n\nclass BarHorizontalStackedComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.legend = false;\n        this.legendTitle = 'Legend';\n        this.legendPosition = LegendPosition.Right;\n        this.tooltipDisabled = false;\n        this.showGridLines = true;\n        this.activeEntries = [];\n        this.trimXAxisTicks = true;\n        this.trimYAxisTicks = true;\n        this.rotateXAxisTicks = true;\n        this.maxXAxisTickLength = 16;\n        this.maxYAxisTickLength = 16;\n        this.barPadding = 8;\n        this.roundDomains = false;\n        this.showDataLabel = false;\n        this.noBarWhenZero = true;\n        this.wrapTicks = false;\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.margin = [10, 20, 10, 20];\n        this.xAxisHeight = 0;\n        this.yAxisWidth = 0;\n        this.dataLabelMaxWidth = { negative: 0, positive: 0 };\n        this.barChartType = BarChartType;\n        this.isSSR = false;\n        this.trackBy = (index, item) => {\n            return item.name;\n        };\n    }\n    ngOnInit() {\n        if (isPlatformServer(this.platformId)) {\n            this.isSSR = true;\n        }\n    }\n    update() {\n        super.update();\n        if (!this.showDataLabel) {\n            this.dataLabelMaxWidth = { negative: 0, positive: 0 };\n        }\n        this.margin = [10, 20 + this.dataLabelMaxWidth.positive, 10, 20 + this.dataLabelMaxWidth.negative];\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showXAxis: this.xAxis,\n            showYAxis: this.yAxis,\n            xAxisHeight: this.xAxisHeight,\n            yAxisWidth: this.yAxisWidth,\n            showXLabel: this.showXAxisLabel,\n            showYLabel: this.showYAxisLabel,\n            showLegend: this.legend,\n            legendType: this.schemeType,\n            legendPosition: this.legendPosition\n        });\n        this.formatDates();\n        this.groupDomain = this.getGroupDomain();\n        this.innerDomain = this.getInnerDomain();\n        this.valueDomain = this.getValueDomain();\n        this.xScale = this.getXScale();\n        this.yScale = this.getYScale();\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n        this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n    }\n    getGroupDomain() {\n        const domain = [];\n        for (const group of this.results) {\n            if (!domain.includes(group.label)) {\n                domain.push(group.label);\n            }\n        }\n        return domain;\n    }\n    getInnerDomain() {\n        const domain = [];\n        for (const group of this.results) {\n            for (const d of group.series) {\n                if (!domain.includes(d.label)) {\n                    domain.push(d.label);\n                }\n            }\n        }\n        return domain;\n    }\n    getValueDomain() {\n        const domain = [];\n        let smallest = 0;\n        let biggest = 0;\n        for (const group of this.results) {\n            let smallestSum = 0;\n            let biggestSum = 0;\n            for (const d of group.series) {\n                if (d.value < 0) {\n                    smallestSum += d.value;\n                }\n                else {\n                    biggestSum += d.value;\n                }\n                smallest = d.value < smallest ? d.value : smallest;\n                biggest = d.value > biggest ? d.value : biggest;\n            }\n            domain.push(smallestSum);\n            domain.push(biggestSum);\n        }\n        domain.push(smallest);\n        domain.push(biggest);\n        const min = Math.min(0, ...domain);\n        const max = this.xScaleMax ? Math.max(this.xScaleMax, ...domain) : Math.max(...domain);\n        return [min, max];\n    }\n    getYScale() {\n        const spacing = this.groupDomain.length / (this.dims.height / this.barPadding + 1);\n        return scaleBand().rangeRound([0, this.dims.height]).paddingInner(spacing).domain(this.groupDomain);\n    }\n    getXScale() {\n        const scale = scaleLinear().range([0, this.dims.width]).domain(this.valueDomain);\n        return this.roundDomains ? scale.nice() : scale;\n    }\n    groupTransform(group) {\n        return `translate(0, ${this.yScale(group.name)})`;\n    }\n    onClick(data, group) {\n        if (group) {\n            data.series = group.name;\n        }\n        this.select.emit(data);\n    }\n    setColors() {\n        let domain;\n        if (this.schemeType === ScaleType.Ordinal) {\n            domain = this.innerDomain;\n        }\n        else {\n            domain = this.valueDomain;\n        }\n        this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    }\n    getLegendOptions() {\n        const opts = {\n            scaleType: this.schemeType,\n            colors: undefined,\n            domain: [],\n            title: undefined,\n            position: this.legendPosition\n        };\n        if (opts.scaleType === ScaleType.Ordinal) {\n            opts.domain = this.innerDomain;\n            opts.colors = this.colors;\n            opts.title = this.legendTitle;\n        }\n        else {\n            opts.domain = this.valueDomain;\n            opts.colors = this.colors.scale;\n        }\n        return opts;\n    }\n    updateYAxisWidth({ width }) {\n        this.yAxisWidth = width;\n        this.update();\n    }\n    updateXAxisHeight({ height }) {\n        this.xAxisHeight = height;\n        this.update();\n    }\n    onDataLabelMaxWidthChanged(event, groupIndex) {\n        if (event.size.negative) {\n            this.dataLabelMaxWidth.negative = Math.max(this.dataLabelMaxWidth.negative, event.size.width);\n        }\n        else {\n            this.dataLabelMaxWidth.positive = Math.max(this.dataLabelMaxWidth.positive, event.size.width);\n        }\n        if (groupIndex === this.results.length - 1) {\n            setTimeout(() => this.update());\n        }\n    }\n    onActivate(event, group, fromLegend = false) {\n        const item = Object.assign({}, event);\n        if (group) {\n            item.series = group.name;\n        }\n        const items = this.results\n            .map(g => g.series)\n            .flat()\n            .filter(i => {\n            if (fromLegend) {\n                return i.label === item.name;\n            }\n            else {\n                return i.name === item.name && i.series === item.series;\n            }\n        });\n        this.activeEntries = [...items];\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    }\n    onDeactivate(event, group, fromLegend = false) {\n        const item = Object.assign({}, event);\n        if (group) {\n            item.series = group.name;\n        }\n        this.activeEntries = this.activeEntries.filter(i => {\n            if (fromLegend) {\n                return i.label !== item.name;\n            }\n            else {\n                return !(i.name === item.name && i.series === item.series);\n            }\n        });\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    }\n}\nBarHorizontalStackedComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarHorizontalStackedComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nBarHorizontalStackedComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: BarHorizontalStackedComponent, selector: \"ngx-charts-bar-horizontal-stacked\", inputs: { legend: \"legend\", legendTitle: \"legendTitle\", legendPosition: \"legendPosition\", xAxis: \"xAxis\", yAxis: \"yAxis\", showXAxisLabel: \"showXAxisLabel\", showYAxisLabel: \"showYAxisLabel\", xAxisLabel: \"xAxisLabel\", yAxisLabel: \"yAxisLabel\", tooltipDisabled: \"tooltipDisabled\", gradient: \"gradient\", showGridLines: \"showGridLines\", activeEntries: \"activeEntries\", schemeType: \"schemeType\", trimXAxisTicks: \"trimXAxisTicks\", trimYAxisTicks: \"trimYAxisTicks\", rotateXAxisTicks: \"rotateXAxisTicks\", maxXAxisTickLength: \"maxXAxisTickLength\", maxYAxisTickLength: \"maxYAxisTickLength\", xAxisTickFormatting: \"xAxisTickFormatting\", yAxisTickFormatting: \"yAxisTickFormatting\", xAxisTicks: \"xAxisTicks\", yAxisTicks: \"yAxisTicks\", barPadding: \"barPadding\", roundDomains: \"roundDomains\", xScaleMax: \"xScaleMax\", showDataLabel: \"showDataLabel\", dataLabelFormatting: \"dataLabelFormatting\", noBarWhenZero: \"noBarWhenZero\", wrapTicks: \"wrapTicks\" }, outputs: { activate: \"activate\", deactivate: \"deactivate\" }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, undefined, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, undefined, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [yAxisOffset]=\"dataLabelMaxWidth.negative\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g *ngIf=\"!isSSR\">\n          <svg:g\n            *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n            [@animationState]=\"'active'\"\n            [attr.transform]=\"groupTransform(group)\"\n          >\n            <svg:g\n              ngx-charts-series-horizontal\n              [type]=\"barChartType.Stacked\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [activeEntries]=\"activeEntries\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [animations]=\"animations\"\n              [showDataLabel]=\"showDataLabel\"\n              [dataLabelFormatting]=\"dataLabelFormatting\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n              (dataLabelWidthChanged)=\"onDataLabelMaxWidthChanged($event, index)\"\n            />\n          </svg:g>\n        </svg:g>\n        <svg:g *ngIf=\"isSSR\">\n          <svg:g\n            *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n            [attr.transform]=\"groupTransform(group)\"\n          >\n            <svg:g\n              ngx-charts-series-horizontal\n              [type]=\"barChartType.Stacked\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [activeEntries]=\"activeEntries\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [animations]=\"animations\"\n              [showDataLabel]=\"showDataLabel\"\n              [dataLabelFormatting]=\"dataLabelFormatting\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n              (dataLabelWidthChanged)=\"onDataLabelMaxWidthChanged($event, index)\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: XAxisComponent, selector: \"g[ngx-charts-x-axis]\", inputs: [\"xScale\", \"dims\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"showGridLines\", \"showLabel\", \"labelText\", \"ticks\", \"xAxisTickCount\", \"xOrient\", \"xAxisOffset\", \"wrapTicks\"], outputs: [\"dimensionsChanged\"] }, { type: YAxisComponent, selector: \"g[ngx-charts-y-axis]\", inputs: [\"yScale\", \"dims\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"showGridLines\", \"showLabel\", \"labelText\", \"yAxisTickCount\", \"yOrient\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"yAxisOffset\", \"wrapTicks\"], outputs: [\"dimensionsChanged\"] }, { type: SeriesHorizontal, selector: \"g[ngx-charts-series-horizontal]\", inputs: [\"dims\", \"type\", \"series\", \"xScale\", \"yScale\", \"colors\", \"tooltipDisabled\", \"gradient\", \"activeEntries\", \"seriesName\", \"tooltipTemplate\", \"roundEdges\", \"animations\", \"showDataLabel\", \"dataLabelFormatting\", \"noBarWhenZero\"], outputs: [\"select\", \"activate\", \"deactivate\", \"dataLabelWidthChanged\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], animations: [\n        trigger('animationState', [\n            transition(':leave', [\n                style({\n                    opacity: 1,\n                    transform: '*'\n                }),\n                animate(500, style({ opacity: 0, transform: 'scale(0)' }))\n            ])\n        ])\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarHorizontalStackedComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-bar-horizontal-stacked', template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, undefined, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, undefined, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [yAxisOffset]=\"dataLabelMaxWidth.negative\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g *ngIf=\"!isSSR\">\n          <svg:g\n            *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n            [@animationState]=\"'active'\"\n            [attr.transform]=\"groupTransform(group)\"\n          >\n            <svg:g\n              ngx-charts-series-horizontal\n              [type]=\"barChartType.Stacked\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [activeEntries]=\"activeEntries\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [animations]=\"animations\"\n              [showDataLabel]=\"showDataLabel\"\n              [dataLabelFormatting]=\"dataLabelFormatting\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n              (dataLabelWidthChanged)=\"onDataLabelMaxWidthChanged($event, index)\"\n            />\n          </svg:g>\n        </svg:g>\n        <svg:g *ngIf=\"isSSR\">\n          <svg:g\n            *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n            [attr.transform]=\"groupTransform(group)\"\n          >\n            <svg:g\n              ngx-charts-series-horizontal\n              [type]=\"barChartType.Stacked\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [activeEntries]=\"activeEntries\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [animations]=\"animations\"\n              [showDataLabel]=\"showDataLabel\"\n              [dataLabelFormatting]=\"dataLabelFormatting\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n              (dataLabelWidthChanged)=\"onDataLabelMaxWidthChanged($event, index)\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, animations: [\n                        trigger('animationState', [\n                            transition(':leave', [\n                                style({\n                                    opacity: 1,\n                                    transform: '*'\n                                }),\n                                animate(500, style({ opacity: 0, transform: 'scale(0)' }))\n                            ])\n                        ])\n                    ], styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"] }]\n        }], propDecorators: { legend: [{\n                type: Input\n            }], legendTitle: [{\n                type: Input\n            }], legendPosition: [{\n                type: Input\n            }], xAxis: [{\n                type: Input\n            }], yAxis: [{\n                type: Input\n            }], showXAxisLabel: [{\n                type: Input\n            }], showYAxisLabel: [{\n                type: Input\n            }], xAxisLabel: [{\n                type: Input\n            }], yAxisLabel: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], showGridLines: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], schemeType: [{\n                type: Input\n            }], trimXAxisTicks: [{\n                type: Input\n            }], trimYAxisTicks: [{\n                type: Input\n            }], rotateXAxisTicks: [{\n                type: Input\n            }], maxXAxisTickLength: [{\n                type: Input\n            }], maxYAxisTickLength: [{\n                type: Input\n            }], xAxisTickFormatting: [{\n                type: Input\n            }], yAxisTickFormatting: [{\n                type: Input\n            }], xAxisTicks: [{\n                type: Input\n            }], yAxisTicks: [{\n                type: Input\n            }], barPadding: [{\n                type: Input\n            }], roundDomains: [{\n                type: Input\n            }], xScaleMax: [{\n                type: Input\n            }], showDataLabel: [{\n                type: Input\n            }], dataLabelFormatting: [{\n                type: Input\n            }], noBarWhenZero: [{\n                type: Input\n            }], wrapTicks: [{\n                type: Input\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }] } });\n\nclass SeriesVerticalComponent {\n    constructor(platformId) {\n        this.platformId = platformId;\n        this.type = BarChartType.Standard;\n        this.tooltipDisabled = false;\n        this.animations = true;\n        this.showDataLabel = false;\n        this.noBarWhenZero = true;\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.dataLabelHeightChanged = new EventEmitter();\n        this.barsForDataLabels = [];\n        this.barOrientation = BarOrientation;\n        this.isSSR = false;\n    }\n    ngOnInit() {\n        if (isPlatformServer(this.platformId)) {\n            this.isSSR = true;\n        }\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    update() {\n        this.updateTooltipSettings();\n        let width;\n        if (this.series.length) {\n            width = this.xScale.bandwidth();\n        }\n        width = Math.round(width);\n        const yScaleMin = Math.max(this.yScale.domain()[0], 0);\n        const d0 = {\n            [D0Types.positive]: 0,\n            [D0Types.negative]: 0\n        };\n        let d0Type = D0Types.positive;\n        let total;\n        if (this.type === BarChartType.Normalized) {\n            total = this.series.map(d => d.value).reduce((sum, d) => sum + d, 0);\n        }\n        this.bars = this.series.map((d, index) => {\n            let value = d.value;\n            const label = this.getLabel(d);\n            const formattedLabel = formatLabel(label);\n            const roundEdges = this.roundEdges;\n            d0Type = value > 0 ? D0Types.positive : D0Types.negative;\n            const bar = {\n                value,\n                label,\n                roundEdges,\n                data: d,\n                width,\n                formattedLabel,\n                height: 0,\n                x: 0,\n                y: 0\n            };\n            if (this.type === BarChartType.Standard) {\n                bar.height = Math.abs(this.yScale(value) - this.yScale(yScaleMin));\n                bar.x = this.xScale(label);\n                if (value < 0) {\n                    bar.y = this.yScale(0);\n                }\n                else {\n                    bar.y = this.yScale(value);\n                }\n            }\n            else if (this.type === BarChartType.Stacked) {\n                const offset0 = d0[d0Type];\n                const offset1 = offset0 + value;\n                d0[d0Type] += value;\n                bar.height = this.yScale(offset0) - this.yScale(offset1);\n                bar.x = 0;\n                bar.y = this.yScale(offset1);\n                bar.offset0 = offset0;\n                bar.offset1 = offset1;\n            }\n            else if (this.type === BarChartType.Normalized) {\n                let offset0 = d0[d0Type];\n                let offset1 = offset0 + value;\n                d0[d0Type] += value;\n                if (total > 0) {\n                    offset0 = (offset0 * 100) / total;\n                    offset1 = (offset1 * 100) / total;\n                }\n                else {\n                    offset0 = 0;\n                    offset1 = 0;\n                }\n                bar.height = this.yScale(offset0) - this.yScale(offset1);\n                bar.x = 0;\n                bar.y = this.yScale(offset1);\n                bar.offset0 = offset0;\n                bar.offset1 = offset1;\n                value = (offset1 - offset0).toFixed(2) + '%';\n            }\n            if (this.colors.scaleType === ScaleType.Ordinal) {\n                bar.color = this.colors.getColor(label);\n            }\n            else {\n                if (this.type === BarChartType.Standard) {\n                    bar.color = this.colors.getColor(value);\n                    bar.gradientStops = this.colors.getLinearGradientStops(value);\n                }\n                else {\n                    bar.color = this.colors.getColor(bar.offset1);\n                    bar.gradientStops = this.colors.getLinearGradientStops(bar.offset1, bar.offset0);\n                }\n            }\n            let tooltipLabel = formattedLabel;\n            bar.ariaLabel = formattedLabel + ' ' + value.toLocaleString();\n            if (this.seriesName !== null && this.seriesName !== undefined) {\n                tooltipLabel = `${this.seriesName} • ${formattedLabel}`;\n                bar.data.series = this.seriesName;\n                bar.ariaLabel = this.seriesName + ' ' + bar.ariaLabel;\n            }\n            bar.tooltipText = this.tooltipDisabled\n                ? undefined\n                : `\n        <span class=\"tooltip-label\">${escapeLabel(tooltipLabel)}</span>\n        <span class=\"tooltip-val\">${this.dataLabelFormatting ? this.dataLabelFormatting(value) : value.toLocaleString()}</span>\n      `;\n            return bar;\n        });\n        this.updateDataLabels();\n    }\n    updateDataLabels() {\n        if (this.type === BarChartType.Stacked) {\n            this.barsForDataLabels = [];\n            const section = {};\n            section.series = this.seriesName;\n            const totalPositive = this.series.map(d => d.value).reduce((sum, d) => (d > 0 ? sum + d : sum), 0);\n            const totalNegative = this.series.map(d => d.value).reduce((sum, d) => (d < 0 ? sum + d : sum), 0);\n            section.total = totalPositive + totalNegative;\n            section.x = 0;\n            section.y = 0;\n            if (section.total > 0) {\n                section.height = this.yScale(totalPositive);\n            }\n            else {\n                section.height = this.yScale(totalNegative);\n            }\n            section.width = this.xScale.bandwidth();\n            this.barsForDataLabels.push(section);\n        }\n        else {\n            this.barsForDataLabels = this.series.map(d => {\n                const section = {};\n                section.series = this.seriesName ?? d.label;\n                section.total = d.value;\n                section.x = this.xScale(d.label);\n                section.y = this.yScale(0);\n                section.height = this.yScale(section.total) - this.yScale(0);\n                section.width = this.xScale.bandwidth();\n                return section;\n            });\n        }\n    }\n    updateTooltipSettings() {\n        this.tooltipPlacement = this.tooltipDisabled ? undefined : PlacementTypes.Top;\n        this.tooltipType = this.tooltipDisabled ? undefined : StyleTypes.tooltip;\n    }\n    isActive(entry) {\n        if (!this.activeEntries)\n            return false;\n        const item = this.activeEntries.find(active => {\n            return entry.name === active.name && entry.value === active.value;\n        });\n        return item !== undefined;\n    }\n    onClick(data) {\n        this.select.emit(data);\n    }\n    getLabel(dataItem) {\n        if (dataItem.label) {\n            return dataItem.label;\n        }\n        return dataItem.name;\n    }\n    trackBy(index, bar) {\n        return bar.label;\n    }\n    trackDataLabelBy(index, barLabel) {\n        return index + '#' + barLabel.series + '#' + barLabel.total;\n    }\n}\nSeriesVerticalComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: SeriesVerticalComponent, deps: [{ token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Component });\nSeriesVerticalComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: SeriesVerticalComponent, selector: \"g[ngx-charts-series-vertical]\", inputs: { dims: \"dims\", type: \"type\", series: \"series\", xScale: \"xScale\", yScale: \"yScale\", colors: \"colors\", gradient: \"gradient\", activeEntries: \"activeEntries\", seriesName: \"seriesName\", tooltipDisabled: \"tooltipDisabled\", tooltipTemplate: \"tooltipTemplate\", roundEdges: \"roundEdges\", animations: \"animations\", showDataLabel: \"showDataLabel\", dataLabelFormatting: \"dataLabelFormatting\", noBarWhenZero: \"noBarWhenZero\" }, outputs: { select: \"select\", activate: \"activate\", deactivate: \"deactivate\", dataLabelHeightChanged: \"dataLabelHeightChanged\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:g *ngIf=\"!isSSR\">\n      <svg:g\n        ngx-charts-bar\n        *ngFor=\"let bar of bars; trackBy: trackBy\"\n        [@animationState]=\"'active'\"\n        [@.disabled]=\"!animations\"\n        [width]=\"bar.width\"\n        [height]=\"bar.height\"\n        [x]=\"bar.x\"\n        [y]=\"bar.y\"\n        [fill]=\"bar.color\"\n        [stops]=\"bar.gradientStops\"\n        [data]=\"bar.data\"\n        [orientation]=\"barOrientation.Vertical\"\n        [roundEdges]=\"bar.roundEdges\"\n        [gradient]=\"gradient\"\n        [ariaLabel]=\"bar.ariaLabel\"\n        [isActive]=\"isActive(bar.data)\"\n        (select)=\"onClick($event)\"\n        (activate)=\"activate.emit($event)\"\n        (deactivate)=\"deactivate.emit($event)\"\n        ngx-tooltip\n        [tooltipDisabled]=\"tooltipDisabled\"\n        [tooltipPlacement]=\"tooltipPlacement\"\n        [tooltipType]=\"tooltipType\"\n        [tooltipTitle]=\"tooltipTemplate ? undefined : bar.tooltipText\"\n        [tooltipTemplate]=\"tooltipTemplate\"\n        [tooltipContext]=\"bar.data\"\n        [noBarWhenZero]=\"noBarWhenZero\"\n        [animations]=\"animations\"\n      ></svg:g>\n    </svg:g>\n    <svg:g *ngIf=\"isSSR\">\n      <svg:g\n        ngx-charts-bar\n        *ngFor=\"let bar of bars; trackBy: trackBy\"\n        [width]=\"bar.width\"\n        [height]=\"bar.height\"\n        [x]=\"bar.x\"\n        [y]=\"bar.y\"\n        [fill]=\"bar.color\"\n        [stops]=\"bar.gradientStops\"\n        [data]=\"bar.data\"\n        [orientation]=\"barOrientation.Vertical\"\n        [roundEdges]=\"bar.roundEdges\"\n        [gradient]=\"gradient\"\n        [ariaLabel]=\"bar.ariaLabel\"\n        [isActive]=\"isActive(bar.data)\"\n        (select)=\"onClick($event)\"\n        (activate)=\"activate.emit($event)\"\n        (deactivate)=\"deactivate.emit($event)\"\n        ngx-tooltip\n        [tooltipDisabled]=\"tooltipDisabled\"\n        [tooltipPlacement]=\"tooltipPlacement\"\n        [tooltipType]=\"tooltipType\"\n        [tooltipTitle]=\"tooltipTemplate ? undefined : bar.tooltipText\"\n        [tooltipTemplate]=\"tooltipTemplate\"\n        [tooltipContext]=\"bar.data\"\n        [noBarWhenZero]=\"noBarWhenZero\"\n        [animations]=\"animations\"\n      ></svg:g>\n    </svg:g>\n    <svg:g *ngIf=\"showDataLabel\">\n      <svg:g\n        ngx-charts-bar-label\n        *ngFor=\"let b of barsForDataLabels; let i = index; trackBy: trackDataLabelBy\"\n        [barX]=\"b.x\"\n        [barY]=\"b.y\"\n        [barWidth]=\"b.width\"\n        [barHeight]=\"b.height\"\n        [value]=\"b.total\"\n        [valueFormatting]=\"dataLabelFormatting\"\n        [orientation]=\"barOrientation.Vertical\"\n        (dimensionsChanged)=\"dataLabelHeightChanged.emit({ size: $event, index: i })\"\n      />\n    </svg:g>\n  `, isInline: true, components: [{ type: BarComponent, selector: \"g[ngx-charts-bar]\", inputs: [\"fill\", \"data\", \"width\", \"height\", \"x\", \"y\", \"orientation\", \"roundEdges\", \"gradient\", \"offset\", \"isActive\", \"stops\", \"animations\", \"ariaLabel\", \"noBarWhenZero\"], outputs: [\"select\", \"activate\", \"deactivate\"] }, { type: BarLabelComponent, selector: \"g[ngx-charts-bar-label]\", inputs: [\"value\", \"valueFormatting\", \"barX\", \"barY\", \"barWidth\", \"barHeight\", \"orientation\"], outputs: [\"dimensionsChanged\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: TooltipDirective, selector: \"[ngx-tooltip]\", inputs: [\"tooltipCssClass\", \"tooltipTitle\", \"tooltipAppendToBody\", \"tooltipSpacing\", \"tooltipDisabled\", \"tooltipShowCaret\", \"tooltipPlacement\", \"tooltipAlignment\", \"tooltipType\", \"tooltipCloseOnClickOutside\", \"tooltipCloseOnMouseLeave\", \"tooltipHideTimeout\", \"tooltipShowTimeout\", \"tooltipTemplate\", \"tooltipShowEvent\", \"tooltipContext\", \"tooltipImmediateExit\"], outputs: [\"show\", \"hide\"] }], animations: [\n        trigger('animationState', [\n            transition(':leave', [\n                style({\n                    opacity: 1\n                }),\n                animate(500, style({ opacity: 0 }))\n            ])\n        ])\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: SeriesVerticalComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-series-vertical]',\n                    template: `\n    <svg:g *ngIf=\"!isSSR\">\n      <svg:g\n        ngx-charts-bar\n        *ngFor=\"let bar of bars; trackBy: trackBy\"\n        [@animationState]=\"'active'\"\n        [@.disabled]=\"!animations\"\n        [width]=\"bar.width\"\n        [height]=\"bar.height\"\n        [x]=\"bar.x\"\n        [y]=\"bar.y\"\n        [fill]=\"bar.color\"\n        [stops]=\"bar.gradientStops\"\n        [data]=\"bar.data\"\n        [orientation]=\"barOrientation.Vertical\"\n        [roundEdges]=\"bar.roundEdges\"\n        [gradient]=\"gradient\"\n        [ariaLabel]=\"bar.ariaLabel\"\n        [isActive]=\"isActive(bar.data)\"\n        (select)=\"onClick($event)\"\n        (activate)=\"activate.emit($event)\"\n        (deactivate)=\"deactivate.emit($event)\"\n        ngx-tooltip\n        [tooltipDisabled]=\"tooltipDisabled\"\n        [tooltipPlacement]=\"tooltipPlacement\"\n        [tooltipType]=\"tooltipType\"\n        [tooltipTitle]=\"tooltipTemplate ? undefined : bar.tooltipText\"\n        [tooltipTemplate]=\"tooltipTemplate\"\n        [tooltipContext]=\"bar.data\"\n        [noBarWhenZero]=\"noBarWhenZero\"\n        [animations]=\"animations\"\n      ></svg:g>\n    </svg:g>\n    <svg:g *ngIf=\"isSSR\">\n      <svg:g\n        ngx-charts-bar\n        *ngFor=\"let bar of bars; trackBy: trackBy\"\n        [width]=\"bar.width\"\n        [height]=\"bar.height\"\n        [x]=\"bar.x\"\n        [y]=\"bar.y\"\n        [fill]=\"bar.color\"\n        [stops]=\"bar.gradientStops\"\n        [data]=\"bar.data\"\n        [orientation]=\"barOrientation.Vertical\"\n        [roundEdges]=\"bar.roundEdges\"\n        [gradient]=\"gradient\"\n        [ariaLabel]=\"bar.ariaLabel\"\n        [isActive]=\"isActive(bar.data)\"\n        (select)=\"onClick($event)\"\n        (activate)=\"activate.emit($event)\"\n        (deactivate)=\"deactivate.emit($event)\"\n        ngx-tooltip\n        [tooltipDisabled]=\"tooltipDisabled\"\n        [tooltipPlacement]=\"tooltipPlacement\"\n        [tooltipType]=\"tooltipType\"\n        [tooltipTitle]=\"tooltipTemplate ? undefined : bar.tooltipText\"\n        [tooltipTemplate]=\"tooltipTemplate\"\n        [tooltipContext]=\"bar.data\"\n        [noBarWhenZero]=\"noBarWhenZero\"\n        [animations]=\"animations\"\n      ></svg:g>\n    </svg:g>\n    <svg:g *ngIf=\"showDataLabel\">\n      <svg:g\n        ngx-charts-bar-label\n        *ngFor=\"let b of barsForDataLabels; let i = index; trackBy: trackDataLabelBy\"\n        [barX]=\"b.x\"\n        [barY]=\"b.y\"\n        [barWidth]=\"b.width\"\n        [barHeight]=\"b.height\"\n        [value]=\"b.total\"\n        [valueFormatting]=\"dataLabelFormatting\"\n        [orientation]=\"barOrientation.Vertical\"\n        (dimensionsChanged)=\"dataLabelHeightChanged.emit({ size: $event, index: i })\"\n      />\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    animations: [\n                        trigger('animationState', [\n                            transition(':leave', [\n                                style({\n                                    opacity: 1\n                                }),\n                                animate(500, style({ opacity: 0 }))\n                            ])\n                        ])\n                    ]\n                }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }]; }, propDecorators: { dims: [{\n                type: Input\n            }], type: [{\n                type: Input\n            }], series: [{\n                type: Input\n            }], xScale: [{\n                type: Input\n            }], yScale: [{\n                type: Input\n            }], colors: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], seriesName: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], tooltipTemplate: [{\n                type: Input\n            }], roundEdges: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], showDataLabel: [{\n                type: Input\n            }], dataLabelFormatting: [{\n                type: Input\n            }], noBarWhenZero: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], dataLabelHeightChanged: [{\n                type: Output\n            }] } });\n\nclass BarVerticalComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.legend = false;\n        this.legendTitle = 'Legend';\n        this.legendPosition = LegendPosition.Right;\n        this.tooltipDisabled = false;\n        this.showGridLines = true;\n        this.activeEntries = [];\n        this.trimXAxisTicks = true;\n        this.trimYAxisTicks = true;\n        this.rotateXAxisTicks = true;\n        this.maxXAxisTickLength = 16;\n        this.maxYAxisTickLength = 16;\n        this.barPadding = 8;\n        this.roundDomains = false;\n        this.roundEdges = true;\n        this.showDataLabel = false;\n        this.noBarWhenZero = true;\n        this.wrapTicks = false;\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.margin = [10, 20, 10, 20];\n        this.xAxisHeight = 0;\n        this.yAxisWidth = 0;\n        this.dataLabelMaxHeight = { negative: 0, positive: 0 };\n    }\n    update() {\n        super.update();\n        if (!this.showDataLabel) {\n            this.dataLabelMaxHeight = { negative: 0, positive: 0 };\n        }\n        this.margin = [10 + this.dataLabelMaxHeight.positive, 20, 10 + this.dataLabelMaxHeight.negative, 20];\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showXAxis: this.xAxis,\n            showYAxis: this.yAxis,\n            xAxisHeight: this.xAxisHeight,\n            yAxisWidth: this.yAxisWidth,\n            showXLabel: this.showXAxisLabel,\n            showYLabel: this.showYAxisLabel,\n            showLegend: this.legend,\n            legendType: this.schemeType,\n            legendPosition: this.legendPosition\n        });\n        this.formatDates();\n        if (this.showDataLabel) {\n            this.dims.height -= this.dataLabelMaxHeight.negative;\n        }\n        this.xScale = this.getXScale();\n        this.yScale = this.getYScale();\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n        this.transform = `translate(${this.dims.xOffset} , ${this.margin[0] + this.dataLabelMaxHeight.negative})`;\n    }\n    getXScale() {\n        this.xDomain = this.getXDomain();\n        const spacing = this.xDomain.length / (this.dims.width / this.barPadding + 1);\n        return scaleBand().range([0, this.dims.width]).paddingInner(spacing).domain(this.xDomain);\n    }\n    getYScale() {\n        this.yDomain = this.getYDomain();\n        const scale = scaleLinear().range([this.dims.height, 0]).domain(this.yDomain);\n        return this.roundDomains ? scale.nice() : scale;\n    }\n    getXDomain() {\n        return this.results.map(d => d.label);\n    }\n    getYDomain() {\n        const values = this.results.map(d => d.value);\n        let min = this.yScaleMin ? Math.min(this.yScaleMin, ...values) : Math.min(0, ...values);\n        if (this.yAxisTicks && !this.yAxisTicks.some(isNaN)) {\n            min = Math.min(min, ...this.yAxisTicks);\n        }\n        let max = this.yScaleMax ? Math.max(this.yScaleMax, ...values) : Math.max(0, ...values);\n        if (this.yAxisTicks && !this.yAxisTicks.some(isNaN)) {\n            max = Math.max(max, ...this.yAxisTicks);\n        }\n        return [min, max];\n    }\n    onClick(data) {\n        this.select.emit(data);\n    }\n    setColors() {\n        let domain;\n        if (this.schemeType === ScaleType.Ordinal) {\n            domain = this.xDomain;\n        }\n        else {\n            domain = this.yDomain;\n        }\n        this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    }\n    getLegendOptions() {\n        const opts = {\n            scaleType: this.schemeType,\n            colors: undefined,\n            domain: [],\n            title: undefined,\n            position: this.legendPosition\n        };\n        if (opts.scaleType === ScaleType.Ordinal) {\n            opts.domain = this.xDomain;\n            opts.colors = this.colors;\n            opts.title = this.legendTitle;\n        }\n        else {\n            opts.domain = this.yDomain;\n            opts.colors = this.colors.scale;\n        }\n        return opts;\n    }\n    updateYAxisWidth({ width }) {\n        this.yAxisWidth = width;\n        this.update();\n    }\n    updateXAxisHeight({ height }) {\n        this.xAxisHeight = height;\n        this.update();\n    }\n    onDataLabelMaxHeightChanged(event) {\n        if (event.size.negative) {\n            this.dataLabelMaxHeight.negative = Math.max(this.dataLabelMaxHeight.negative, event.size.height);\n        }\n        else {\n            this.dataLabelMaxHeight.positive = Math.max(this.dataLabelMaxHeight.positive, event.size.height);\n        }\n        if (event.index === this.results.length - 1) {\n            setTimeout(() => this.update());\n        }\n    }\n    onActivate(item, fromLegend = false) {\n        item = this.results.find(d => {\n            if (fromLegend) {\n                return d.label === item.name;\n            }\n            else {\n                return d.name === item.name;\n            }\n        });\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value && d.series === item.series;\n        });\n        if (idx > -1) {\n            return;\n        }\n        this.activeEntries = [item, ...this.activeEntries];\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    }\n    onDeactivate(item, fromLegend = false) {\n        item = this.results.find(d => {\n            if (fromLegend) {\n                return d.label === item.name;\n            }\n            else {\n                return d.name === item.name;\n            }\n        });\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value && d.series === item.series;\n        });\n        this.activeEntries.splice(idx, 1);\n        this.activeEntries = [...this.activeEntries];\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    }\n}\nBarVerticalComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarVerticalComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nBarVerticalComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: BarVerticalComponent, selector: \"ngx-charts-bar-vertical\", inputs: { legend: \"legend\", legendTitle: \"legendTitle\", legendPosition: \"legendPosition\", xAxis: \"xAxis\", yAxis: \"yAxis\", showXAxisLabel: \"showXAxisLabel\", showYAxisLabel: \"showYAxisLabel\", xAxisLabel: \"xAxisLabel\", yAxisLabel: \"yAxisLabel\", tooltipDisabled: \"tooltipDisabled\", gradient: \"gradient\", showGridLines: \"showGridLines\", activeEntries: \"activeEntries\", schemeType: \"schemeType\", trimXAxisTicks: \"trimXAxisTicks\", trimYAxisTicks: \"trimYAxisTicks\", rotateXAxisTicks: \"rotateXAxisTicks\", maxXAxisTickLength: \"maxXAxisTickLength\", maxYAxisTickLength: \"maxYAxisTickLength\", xAxisTickFormatting: \"xAxisTickFormatting\", yAxisTickFormatting: \"yAxisTickFormatting\", xAxisTicks: \"xAxisTicks\", yAxisTicks: \"yAxisTicks\", barPadding: \"barPadding\", roundDomains: \"roundDomains\", roundEdges: \"roundEdges\", yScaleMax: \"yScaleMax\", yScaleMin: \"yScaleMin\", showDataLabel: \"showDataLabel\", dataLabelFormatting: \"dataLabelFormatting\", noBarWhenZero: \"noBarWhenZero\", wrapTicks: \"wrapTicks\" }, outputs: { activate: \"activate\", deactivate: \"deactivate\" }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, true)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [xAxisOffset]=\"dataLabelMaxHeight.negative\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-series-vertical\n          [xScale]=\"xScale\"\n          [yScale]=\"yScale\"\n          [colors]=\"colors\"\n          [series]=\"results\"\n          [dims]=\"dims\"\n          [gradient]=\"gradient\"\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [showDataLabel]=\"showDataLabel\"\n          [dataLabelFormatting]=\"dataLabelFormatting\"\n          [activeEntries]=\"activeEntries\"\n          [roundEdges]=\"roundEdges\"\n          [animations]=\"animations\"\n          [noBarWhenZero]=\"noBarWhenZero\"\n          (activate)=\"onActivate($event)\"\n          (deactivate)=\"onDeactivate($event)\"\n          (select)=\"onClick($event)\"\n          (dataLabelHeightChanged)=\"onDataLabelMaxHeightChanged($event)\"\n        ></svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: XAxisComponent, selector: \"g[ngx-charts-x-axis]\", inputs: [\"xScale\", \"dims\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"showGridLines\", \"showLabel\", \"labelText\", \"ticks\", \"xAxisTickCount\", \"xOrient\", \"xAxisOffset\", \"wrapTicks\"], outputs: [\"dimensionsChanged\"] }, { type: YAxisComponent, selector: \"g[ngx-charts-y-axis]\", inputs: [\"yScale\", \"dims\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"showGridLines\", \"showLabel\", \"labelText\", \"yAxisTickCount\", \"yOrient\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"yAxisOffset\", \"wrapTicks\"], outputs: [\"dimensionsChanged\"] }, { type: SeriesVerticalComponent, selector: \"g[ngx-charts-series-vertical]\", inputs: [\"dims\", \"type\", \"series\", \"xScale\", \"yScale\", \"colors\", \"gradient\", \"activeEntries\", \"seriesName\", \"tooltipDisabled\", \"tooltipTemplate\", \"roundEdges\", \"animations\", \"showDataLabel\", \"dataLabelFormatting\", \"noBarWhenZero\"], outputs: [\"select\", \"activate\", \"deactivate\", \"dataLabelHeightChanged\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarVerticalComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-bar-vertical', template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, true)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [xAxisOffset]=\"dataLabelMaxHeight.negative\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-series-vertical\n          [xScale]=\"xScale\"\n          [yScale]=\"yScale\"\n          [colors]=\"colors\"\n          [series]=\"results\"\n          [dims]=\"dims\"\n          [gradient]=\"gradient\"\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [showDataLabel]=\"showDataLabel\"\n          [dataLabelFormatting]=\"dataLabelFormatting\"\n          [activeEntries]=\"activeEntries\"\n          [roundEdges]=\"roundEdges\"\n          [animations]=\"animations\"\n          [noBarWhenZero]=\"noBarWhenZero\"\n          (activate)=\"onActivate($event)\"\n          (deactivate)=\"onDeactivate($event)\"\n          (select)=\"onClick($event)\"\n          (dataLabelHeightChanged)=\"onDataLabelMaxHeightChanged($event)\"\n        ></svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"] }]\n        }], propDecorators: { legend: [{\n                type: Input\n            }], legendTitle: [{\n                type: Input\n            }], legendPosition: [{\n                type: Input\n            }], xAxis: [{\n                type: Input\n            }], yAxis: [{\n                type: Input\n            }], showXAxisLabel: [{\n                type: Input\n            }], showYAxisLabel: [{\n                type: Input\n            }], xAxisLabel: [{\n                type: Input\n            }], yAxisLabel: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], showGridLines: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], schemeType: [{\n                type: Input\n            }], trimXAxisTicks: [{\n                type: Input\n            }], trimYAxisTicks: [{\n                type: Input\n            }], rotateXAxisTicks: [{\n                type: Input\n            }], maxXAxisTickLength: [{\n                type: Input\n            }], maxYAxisTickLength: [{\n                type: Input\n            }], xAxisTickFormatting: [{\n                type: Input\n            }], yAxisTickFormatting: [{\n                type: Input\n            }], xAxisTicks: [{\n                type: Input\n            }], yAxisTicks: [{\n                type: Input\n            }], barPadding: [{\n                type: Input\n            }], roundDomains: [{\n                type: Input\n            }], roundEdges: [{\n                type: Input\n            }], yScaleMax: [{\n                type: Input\n            }], yScaleMin: [{\n                type: Input\n            }], showDataLabel: [{\n                type: Input\n            }], dataLabelFormatting: [{\n                type: Input\n            }], noBarWhenZero: [{\n                type: Input\n            }], wrapTicks: [{\n                type: Input\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }] } });\n\nclass BarVertical2DComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.legend = false;\n        this.legendTitle = 'Legend';\n        this.legendPosition = LegendPosition.Right;\n        this.tooltipDisabled = false;\n        this.scaleType = ScaleType.Ordinal;\n        this.showGridLines = true;\n        this.activeEntries = [];\n        this.trimXAxisTicks = true;\n        this.trimYAxisTicks = true;\n        this.rotateXAxisTicks = true;\n        this.maxXAxisTickLength = 16;\n        this.maxYAxisTickLength = 16;\n        this.groupPadding = 16;\n        this.barPadding = 8;\n        this.roundDomains = false;\n        this.roundEdges = true;\n        this.showDataLabel = false;\n        this.noBarWhenZero = true;\n        this.wrapTicks = false;\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.margin = [10, 20, 10, 20];\n        this.xAxisHeight = 0;\n        this.yAxisWidth = 0;\n        this.dataLabelMaxHeight = { negative: 0, positive: 0 };\n        this.isSSR = false;\n        this.barOrientation = BarOrientation;\n        this.trackBy = (index, item) => {\n            return item.name;\n        };\n    }\n    ngOnInit() {\n        if (isPlatformServer(this.platformId)) {\n            this.isSSR = true;\n        }\n    }\n    update() {\n        super.update();\n        if (!this.showDataLabel) {\n            this.dataLabelMaxHeight = { negative: 0, positive: 0 };\n        }\n        this.margin = [10 + this.dataLabelMaxHeight.positive, 20, 10 + this.dataLabelMaxHeight.negative, 20];\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showXAxis: this.xAxis,\n            showYAxis: this.yAxis,\n            xAxisHeight: this.xAxisHeight,\n            yAxisWidth: this.yAxisWidth,\n            showXLabel: this.showXAxisLabel,\n            showYLabel: this.showYAxisLabel,\n            showLegend: this.legend,\n            legendType: this.schemeType,\n            legendPosition: this.legendPosition\n        });\n        if (this.showDataLabel) {\n            this.dims.height -= this.dataLabelMaxHeight.negative;\n        }\n        this.formatDates();\n        this.groupDomain = this.getGroupDomain();\n        this.innerDomain = this.getInnerDomain();\n        this.valueDomain = this.getValueDomain();\n        this.groupScale = this.getGroupScale();\n        this.innerScale = this.getInnerScale();\n        this.valueScale = this.getValueScale();\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n        this.transform = `translate(${this.dims.xOffset} , ${this.margin[0] + this.dataLabelMaxHeight.negative})`;\n    }\n    onDataLabelMaxHeightChanged(event, groupIndex) {\n        if (event.size.negative) {\n            this.dataLabelMaxHeight.negative = Math.max(this.dataLabelMaxHeight.negative, event.size.height);\n        }\n        else {\n            this.dataLabelMaxHeight.positive = Math.max(this.dataLabelMaxHeight.positive, event.size.height);\n        }\n        if (groupIndex === this.results.length - 1) {\n            setTimeout(() => this.update());\n        }\n    }\n    getGroupScale() {\n        const spacing = this.groupDomain.length / (this.dims.height / this.groupPadding + 1);\n        return scaleBand()\n            .rangeRound([0, this.dims.width])\n            .paddingInner(spacing)\n            .paddingOuter(spacing / 2)\n            .domain(this.groupDomain);\n    }\n    getInnerScale() {\n        const width = this.groupScale.bandwidth();\n        const spacing = this.innerDomain.length / (width / this.barPadding + 1);\n        return scaleBand().rangeRound([0, width]).paddingInner(spacing).domain(this.innerDomain);\n    }\n    getValueScale() {\n        const scale = scaleLinear().range([this.dims.height, 0]).domain(this.valueDomain);\n        return this.roundDomains ? scale.nice() : scale;\n    }\n    getGroupDomain() {\n        const domain = [];\n        for (const group of this.results) {\n            if (!domain.includes(group.label)) {\n                domain.push(group.label);\n            }\n        }\n        return domain;\n    }\n    getInnerDomain() {\n        const domain = [];\n        for (const group of this.results) {\n            for (const d of group.series) {\n                if (!domain.includes(d.label)) {\n                    domain.push(d.label);\n                }\n            }\n        }\n        return domain;\n    }\n    getValueDomain() {\n        const domain = [];\n        for (const group of this.results) {\n            for (const d of group.series) {\n                if (!domain.includes(d.value)) {\n                    domain.push(d.value);\n                }\n            }\n        }\n        const min = Math.min(0, ...domain);\n        const max = this.yScaleMax ? Math.max(this.yScaleMax, ...domain) : Math.max(0, ...domain);\n        return [min, max];\n    }\n    groupTransform(group) {\n        return `translate(${this.groupScale(group.label)}, 0)`;\n    }\n    onClick(data, group) {\n        if (group) {\n            data.series = group.name;\n        }\n        this.select.emit(data);\n    }\n    setColors() {\n        let domain;\n        if (this.schemeType === ScaleType.Ordinal) {\n            domain = this.innerDomain;\n        }\n        else {\n            domain = this.valueDomain;\n        }\n        this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    }\n    getLegendOptions() {\n        const opts = {\n            scaleType: this.schemeType,\n            colors: undefined,\n            domain: [],\n            title: undefined,\n            position: this.legendPosition\n        };\n        if (opts.scaleType === ScaleType.Ordinal) {\n            opts.domain = this.innerDomain;\n            opts.colors = this.colors;\n            opts.title = this.legendTitle;\n        }\n        else {\n            opts.domain = this.valueDomain;\n            opts.colors = this.colors.scale;\n        }\n        return opts;\n    }\n    updateYAxisWidth({ width }) {\n        this.yAxisWidth = width;\n        this.update();\n    }\n    updateXAxisHeight({ height }) {\n        this.xAxisHeight = height;\n        this.update();\n    }\n    onActivate(event, group, fromLegend = false) {\n        const item = Object.assign({}, event);\n        if (group) {\n            item.series = group.name;\n        }\n        const items = this.results\n            .map(g => g.series)\n            .flat()\n            .filter(i => {\n            if (fromLegend) {\n                return i.label === item.name;\n            }\n            else {\n                return i.name === item.name && i.series === item.series;\n            }\n        });\n        this.activeEntries = [...items];\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    }\n    onDeactivate(event, group, fromLegend = false) {\n        const item = Object.assign({}, event);\n        if (group) {\n            item.series = group.name;\n        }\n        this.activeEntries = this.activeEntries.filter(i => {\n            if (fromLegend) {\n                return i.label !== item.name;\n            }\n            else {\n                return !(i.name === item.name && i.series === item.series);\n            }\n        });\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    }\n}\nBarVertical2DComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarVertical2DComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nBarVertical2DComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: BarVertical2DComponent, selector: \"ngx-charts-bar-vertical-2d\", inputs: { legend: \"legend\", legendTitle: \"legendTitle\", legendPosition: \"legendPosition\", xAxis: \"xAxis\", yAxis: \"yAxis\", showXAxisLabel: \"showXAxisLabel\", showYAxisLabel: \"showYAxisLabel\", xAxisLabel: \"xAxisLabel\", yAxisLabel: \"yAxisLabel\", tooltipDisabled: \"tooltipDisabled\", scaleType: \"scaleType\", gradient: \"gradient\", showGridLines: \"showGridLines\", activeEntries: \"activeEntries\", schemeType: \"schemeType\", trimXAxisTicks: \"trimXAxisTicks\", trimYAxisTicks: \"trimYAxisTicks\", rotateXAxisTicks: \"rotateXAxisTicks\", maxXAxisTickLength: \"maxXAxisTickLength\", maxYAxisTickLength: \"maxYAxisTickLength\", xAxisTickFormatting: \"xAxisTickFormatting\", yAxisTickFormatting: \"yAxisTickFormatting\", xAxisTicks: \"xAxisTicks\", yAxisTicks: \"yAxisTicks\", groupPadding: \"groupPadding\", barPadding: \"barPadding\", roundDomains: \"roundDomains\", roundEdges: \"roundEdges\", yScaleMax: \"yScaleMax\", showDataLabel: \"showDataLabel\", dataLabelFormatting: \"dataLabelFormatting\", noBarWhenZero: \"noBarWhenZero\", wrapTicks: \"wrapTicks\" }, outputs: { activate: \"activate\", deactivate: \"deactivate\" }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, undefined, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, undefined, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-grid-panel-series\n          [xScale]=\"groupScale\"\n          [yScale]=\"valueScale\"\n          [data]=\"results\"\n          [dims]=\"dims\"\n          [orient]=\"barOrientation.Vertical\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"groupScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [xAxisOffset]=\"dataLabelMaxHeight.negative\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"valueScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g *ngIf=\"!isSSR\">\n          <svg:g\n            ngx-charts-series-vertical\n            *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n            [@animationState]=\"'active'\"\n            [attr.transform]=\"groupTransform(group)\"\n            [activeEntries]=\"activeEntries\"\n            [xScale]=\"innerScale\"\n            [yScale]=\"valueScale\"\n            [colors]=\"colors\"\n            [series]=\"group.series\"\n            [dims]=\"dims\"\n            [gradient]=\"gradient\"\n            [tooltipDisabled]=\"tooltipDisabled\"\n            [tooltipTemplate]=\"tooltipTemplate\"\n            [showDataLabel]=\"showDataLabel\"\n            [dataLabelFormatting]=\"dataLabelFormatting\"\n            [seriesName]=\"group.name\"\n            [roundEdges]=\"roundEdges\"\n            [animations]=\"animations\"\n            [noBarWhenZero]=\"noBarWhenZero\"\n            (select)=\"onClick($event, group)\"\n            (activate)=\"onActivate($event, group)\"\n            (deactivate)=\"onDeactivate($event, group)\"\n            (dataLabelHeightChanged)=\"onDataLabelMaxHeightChanged($event, index)\"\n          />\n        </svg:g>\n      </svg:g>\n      <svg:g *ngIf=\"isSSR\">\n        <svg:g\n          ngx-charts-series-vertical\n          *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n          [attr.transform]=\"groupTransform(group)\"\n          [activeEntries]=\"activeEntries\"\n          [xScale]=\"innerScale\"\n          [yScale]=\"valueScale\"\n          [colors]=\"colors\"\n          [series]=\"group.series\"\n          [dims]=\"dims\"\n          [gradient]=\"gradient\"\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [showDataLabel]=\"showDataLabel\"\n          [dataLabelFormatting]=\"dataLabelFormatting\"\n          [seriesName]=\"group.name\"\n          [roundEdges]=\"roundEdges\"\n          [animations]=\"animations\"\n          [noBarWhenZero]=\"noBarWhenZero\"\n          (select)=\"onClick($event, group)\"\n          (activate)=\"onActivate($event, group)\"\n          (deactivate)=\"onDeactivate($event, group)\"\n          (dataLabelHeightChanged)=\"onDataLabelMaxHeightChanged($event, index)\"\n        />\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: GridPanelSeriesComponent, selector: \"g[ngx-charts-grid-panel-series]\", inputs: [\"data\", \"dims\", \"xScale\", \"yScale\", \"orient\"] }, { type: XAxisComponent, selector: \"g[ngx-charts-x-axis]\", inputs: [\"xScale\", \"dims\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"showGridLines\", \"showLabel\", \"labelText\", \"ticks\", \"xAxisTickCount\", \"xOrient\", \"xAxisOffset\", \"wrapTicks\"], outputs: [\"dimensionsChanged\"] }, { type: YAxisComponent, selector: \"g[ngx-charts-y-axis]\", inputs: [\"yScale\", \"dims\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"showGridLines\", \"showLabel\", \"labelText\", \"yAxisTickCount\", \"yOrient\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"yAxisOffset\", \"wrapTicks\"], outputs: [\"dimensionsChanged\"] }, { type: SeriesVerticalComponent, selector: \"g[ngx-charts-series-vertical]\", inputs: [\"dims\", \"type\", \"series\", \"xScale\", \"yScale\", \"colors\", \"gradient\", \"activeEntries\", \"seriesName\", \"tooltipDisabled\", \"tooltipTemplate\", \"roundEdges\", \"animations\", \"showDataLabel\", \"dataLabelFormatting\", \"noBarWhenZero\"], outputs: [\"select\", \"activate\", \"deactivate\", \"dataLabelHeightChanged\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], animations: [\n        trigger('animationState', [\n            transition(':leave', [\n                style({\n                    opacity: 1,\n                    transform: '*'\n                }),\n                animate(500, style({ opacity: 0, transform: 'scale(0)' }))\n            ])\n        ])\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarVertical2DComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-bar-vertical-2d', template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, undefined, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, undefined, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-grid-panel-series\n          [xScale]=\"groupScale\"\n          [yScale]=\"valueScale\"\n          [data]=\"results\"\n          [dims]=\"dims\"\n          [orient]=\"barOrientation.Vertical\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"groupScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [xAxisOffset]=\"dataLabelMaxHeight.negative\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"valueScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g *ngIf=\"!isSSR\">\n          <svg:g\n            ngx-charts-series-vertical\n            *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n            [@animationState]=\"'active'\"\n            [attr.transform]=\"groupTransform(group)\"\n            [activeEntries]=\"activeEntries\"\n            [xScale]=\"innerScale\"\n            [yScale]=\"valueScale\"\n            [colors]=\"colors\"\n            [series]=\"group.series\"\n            [dims]=\"dims\"\n            [gradient]=\"gradient\"\n            [tooltipDisabled]=\"tooltipDisabled\"\n            [tooltipTemplate]=\"tooltipTemplate\"\n            [showDataLabel]=\"showDataLabel\"\n            [dataLabelFormatting]=\"dataLabelFormatting\"\n            [seriesName]=\"group.name\"\n            [roundEdges]=\"roundEdges\"\n            [animations]=\"animations\"\n            [noBarWhenZero]=\"noBarWhenZero\"\n            (select)=\"onClick($event, group)\"\n            (activate)=\"onActivate($event, group)\"\n            (deactivate)=\"onDeactivate($event, group)\"\n            (dataLabelHeightChanged)=\"onDataLabelMaxHeightChanged($event, index)\"\n          />\n        </svg:g>\n      </svg:g>\n      <svg:g *ngIf=\"isSSR\">\n        <svg:g\n          ngx-charts-series-vertical\n          *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n          [attr.transform]=\"groupTransform(group)\"\n          [activeEntries]=\"activeEntries\"\n          [xScale]=\"innerScale\"\n          [yScale]=\"valueScale\"\n          [colors]=\"colors\"\n          [series]=\"group.series\"\n          [dims]=\"dims\"\n          [gradient]=\"gradient\"\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [showDataLabel]=\"showDataLabel\"\n          [dataLabelFormatting]=\"dataLabelFormatting\"\n          [seriesName]=\"group.name\"\n          [roundEdges]=\"roundEdges\"\n          [animations]=\"animations\"\n          [noBarWhenZero]=\"noBarWhenZero\"\n          (select)=\"onClick($event, group)\"\n          (activate)=\"onActivate($event, group)\"\n          (deactivate)=\"onDeactivate($event, group)\"\n          (dataLabelHeightChanged)=\"onDataLabelMaxHeightChanged($event, index)\"\n        />\n      </svg:g>\n    </ngx-charts-chart>\n  `, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, animations: [\n                        trigger('animationState', [\n                            transition(':leave', [\n                                style({\n                                    opacity: 1,\n                                    transform: '*'\n                                }),\n                                animate(500, style({ opacity: 0, transform: 'scale(0)' }))\n                            ])\n                        ])\n                    ], styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"] }]\n        }], propDecorators: { legend: [{\n                type: Input\n            }], legendTitle: [{\n                type: Input\n            }], legendPosition: [{\n                type: Input\n            }], xAxis: [{\n                type: Input\n            }], yAxis: [{\n                type: Input\n            }], showXAxisLabel: [{\n                type: Input\n            }], showYAxisLabel: [{\n                type: Input\n            }], xAxisLabel: [{\n                type: Input\n            }], yAxisLabel: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], scaleType: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], showGridLines: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], schemeType: [{\n                type: Input\n            }], trimXAxisTicks: [{\n                type: Input\n            }], trimYAxisTicks: [{\n                type: Input\n            }], rotateXAxisTicks: [{\n                type: Input\n            }], maxXAxisTickLength: [{\n                type: Input\n            }], maxYAxisTickLength: [{\n                type: Input\n            }], xAxisTickFormatting: [{\n                type: Input\n            }], yAxisTickFormatting: [{\n                type: Input\n            }], xAxisTicks: [{\n                type: Input\n            }], yAxisTicks: [{\n                type: Input\n            }], groupPadding: [{\n                type: Input\n            }], barPadding: [{\n                type: Input\n            }], roundDomains: [{\n                type: Input\n            }], roundEdges: [{\n                type: Input\n            }], yScaleMax: [{\n                type: Input\n            }], showDataLabel: [{\n                type: Input\n            }], dataLabelFormatting: [{\n                type: Input\n            }], noBarWhenZero: [{\n                type: Input\n            }], wrapTicks: [{\n                type: Input\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }] } });\n\nclass BarVerticalNormalizedComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.legend = false;\n        this.legendTitle = 'Legend';\n        this.legendPosition = LegendPosition.Right;\n        this.tooltipDisabled = false;\n        this.showGridLines = true;\n        this.activeEntries = [];\n        this.trimXAxisTicks = true;\n        this.trimYAxisTicks = true;\n        this.rotateXAxisTicks = true;\n        this.maxXAxisTickLength = 16;\n        this.maxYAxisTickLength = 16;\n        this.barPadding = 8;\n        this.roundDomains = false;\n        this.noBarWhenZero = true;\n        this.wrapTicks = false;\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.valueDomain = [0, 100];\n        this.margin = [10, 20, 10, 20];\n        this.xAxisHeight = 0;\n        this.yAxisWidth = 0;\n        this.isSSR = false;\n        this.barChartType = BarChartType;\n        this.trackBy = (index, item) => {\n            return item.name;\n        };\n    }\n    ngOnInit() {\n        if (isPlatformServer(this.platformId)) {\n            this.isSSR = true;\n        }\n    }\n    update() {\n        super.update();\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showXAxis: this.xAxis,\n            showYAxis: this.yAxis,\n            xAxisHeight: this.xAxisHeight,\n            yAxisWidth: this.yAxisWidth,\n            showXLabel: this.showXAxisLabel,\n            showYLabel: this.showYAxisLabel,\n            showLegend: this.legend,\n            legendType: this.schemeType,\n            legendPosition: this.legendPosition\n        });\n        this.formatDates();\n        this.groupDomain = this.getGroupDomain();\n        this.innerDomain = this.getInnerDomain();\n        this.xScale = this.getXScale();\n        this.yScale = this.getYScale();\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n        this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n    }\n    getGroupDomain() {\n        const domain = [];\n        for (const group of this.results) {\n            if (!domain.includes(group.label)) {\n                domain.push(group.label);\n            }\n        }\n        return domain;\n    }\n    getInnerDomain() {\n        const domain = [];\n        for (const group of this.results) {\n            for (const d of group.series) {\n                if (!domain.includes(d.label)) {\n                    domain.push(d.label);\n                }\n            }\n        }\n        return domain;\n    }\n    getXScale() {\n        const spacing = this.groupDomain.length / (this.dims.width / this.barPadding + 1);\n        return scaleBand().rangeRound([0, this.dims.width]).paddingInner(spacing).domain(this.groupDomain);\n    }\n    getYScale() {\n        const scale = scaleLinear().range([this.dims.height, 0]).domain(this.valueDomain);\n        return this.roundDomains ? scale.nice() : scale;\n    }\n    groupTransform(group) {\n        return `translate(${this.xScale(group.name)}, 0)`;\n    }\n    onClick(data, group) {\n        if (group) {\n            data.series = group.name;\n        }\n        this.select.emit(data);\n    }\n    setColors() {\n        let domain;\n        if (this.schemeType === ScaleType.Ordinal) {\n            domain = this.innerDomain;\n        }\n        else {\n            domain = this.valueDomain;\n        }\n        this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    }\n    getLegendOptions() {\n        const opts = {\n            scaleType: this.schemeType,\n            colors: undefined,\n            domain: [],\n            title: undefined,\n            position: this.legendPosition\n        };\n        if (opts.scaleType === ScaleType.Ordinal) {\n            opts.domain = this.innerDomain;\n            opts.colors = this.colors;\n            opts.title = this.legendTitle;\n        }\n        else {\n            opts.domain = this.valueDomain;\n            opts.colors = this.colors.scale;\n        }\n        return opts;\n    }\n    updateYAxisWidth({ width }) {\n        this.yAxisWidth = width;\n        this.update();\n    }\n    updateXAxisHeight({ height }) {\n        this.xAxisHeight = height;\n        this.update();\n    }\n    onActivate(event, group, fromLegend = false) {\n        const item = Object.assign({}, event);\n        if (group) {\n            item.series = group.name;\n        }\n        const items = this.results\n            .map(g => g.series)\n            .flat()\n            .filter(i => {\n            if (fromLegend) {\n                return i.label === item.name;\n            }\n            else {\n                return i.name === item.name && i.series === item.series;\n            }\n        });\n        this.activeEntries = [...items];\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    }\n    onDeactivate(event, group, fromLegend = false) {\n        const item = Object.assign({}, event);\n        if (group) {\n            item.series = group.name;\n        }\n        this.activeEntries = this.activeEntries.filter(i => {\n            if (fromLegend) {\n                return i.label !== item.name;\n            }\n            else {\n                return !(i.name === item.name && i.series === item.series);\n            }\n        });\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    }\n}\nBarVerticalNormalizedComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarVerticalNormalizedComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nBarVerticalNormalizedComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: BarVerticalNormalizedComponent, selector: \"ngx-charts-bar-vertical-normalized\", inputs: { legend: \"legend\", legendTitle: \"legendTitle\", legendPosition: \"legendPosition\", xAxis: \"xAxis\", yAxis: \"yAxis\", showXAxisLabel: \"showXAxisLabel\", showYAxisLabel: \"showYAxisLabel\", xAxisLabel: \"xAxisLabel\", yAxisLabel: \"yAxisLabel\", tooltipDisabled: \"tooltipDisabled\", gradient: \"gradient\", showGridLines: \"showGridLines\", activeEntries: \"activeEntries\", schemeType: \"schemeType\", trimXAxisTicks: \"trimXAxisTicks\", trimYAxisTicks: \"trimYAxisTicks\", rotateXAxisTicks: \"rotateXAxisTicks\", maxXAxisTickLength: \"maxXAxisTickLength\", maxYAxisTickLength: \"maxYAxisTickLength\", xAxisTickFormatting: \"xAxisTickFormatting\", yAxisTickFormatting: \"yAxisTickFormatting\", xAxisTicks: \"xAxisTicks\", yAxisTicks: \"yAxisTicks\", barPadding: \"barPadding\", roundDomains: \"roundDomains\", noBarWhenZero: \"noBarWhenZero\", wrapTicks: \"wrapTicks\" }, outputs: { activate: \"activate\", deactivate: \"deactivate\" }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, undefined, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, undefined, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g *ngIf=\"!isSSR\">\n          <svg:g\n            *ngFor=\"let group of results; trackBy: trackBy\"\n            [@animationState]=\"'active'\"\n            [attr.transform]=\"groupTransform(group)\"\n          >\n            <svg:g\n              ngx-charts-series-vertical\n              [type]=\"barChartType.Normalized\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [activeEntries]=\"activeEntries\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [animations]=\"animations\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n            />\n          </svg:g>\n        </svg:g>\n        <svg:g *ngIf=\"isSSR\">\n          <svg:g *ngFor=\"let group of results; trackBy: trackBy\" [attr.transform]=\"groupTransform(group)\">\n            <svg:g\n              ngx-charts-series-vertical\n              [type]=\"barChartType.Normalized\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [activeEntries]=\"activeEntries\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [animations]=\"animations\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: XAxisComponent, selector: \"g[ngx-charts-x-axis]\", inputs: [\"xScale\", \"dims\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"showGridLines\", \"showLabel\", \"labelText\", \"ticks\", \"xAxisTickCount\", \"xOrient\", \"xAxisOffset\", \"wrapTicks\"], outputs: [\"dimensionsChanged\"] }, { type: YAxisComponent, selector: \"g[ngx-charts-y-axis]\", inputs: [\"yScale\", \"dims\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"showGridLines\", \"showLabel\", \"labelText\", \"yAxisTickCount\", \"yOrient\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"yAxisOffset\", \"wrapTicks\"], outputs: [\"dimensionsChanged\"] }, { type: SeriesVerticalComponent, selector: \"g[ngx-charts-series-vertical]\", inputs: [\"dims\", \"type\", \"series\", \"xScale\", \"yScale\", \"colors\", \"gradient\", \"activeEntries\", \"seriesName\", \"tooltipDisabled\", \"tooltipTemplate\", \"roundEdges\", \"animations\", \"showDataLabel\", \"dataLabelFormatting\", \"noBarWhenZero\"], outputs: [\"select\", \"activate\", \"deactivate\", \"dataLabelHeightChanged\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], animations: [\n        trigger('animationState', [\n            transition(':leave', [\n                style({\n                    opacity: 1,\n                    transform: '*'\n                }),\n                animate(500, style({ opacity: 0, transform: 'scale(0)' }))\n            ])\n        ])\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarVerticalNormalizedComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-bar-vertical-normalized', template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, undefined, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, undefined, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g *ngIf=\"!isSSR\">\n          <svg:g\n            *ngFor=\"let group of results; trackBy: trackBy\"\n            [@animationState]=\"'active'\"\n            [attr.transform]=\"groupTransform(group)\"\n          >\n            <svg:g\n              ngx-charts-series-vertical\n              [type]=\"barChartType.Normalized\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [activeEntries]=\"activeEntries\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [animations]=\"animations\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n            />\n          </svg:g>\n        </svg:g>\n        <svg:g *ngIf=\"isSSR\">\n          <svg:g *ngFor=\"let group of results; trackBy: trackBy\" [attr.transform]=\"groupTransform(group)\">\n            <svg:g\n              ngx-charts-series-vertical\n              [type]=\"barChartType.Normalized\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [activeEntries]=\"activeEntries\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [seriesName]=\"group.name\"\n              [animations]=\"animations\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, animations: [\n                        trigger('animationState', [\n                            transition(':leave', [\n                                style({\n                                    opacity: 1,\n                                    transform: '*'\n                                }),\n                                animate(500, style({ opacity: 0, transform: 'scale(0)' }))\n                            ])\n                        ])\n                    ], styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"] }]\n        }], propDecorators: { legend: [{\n                type: Input\n            }], legendTitle: [{\n                type: Input\n            }], legendPosition: [{\n                type: Input\n            }], xAxis: [{\n                type: Input\n            }], yAxis: [{\n                type: Input\n            }], showXAxisLabel: [{\n                type: Input\n            }], showYAxisLabel: [{\n                type: Input\n            }], xAxisLabel: [{\n                type: Input\n            }], yAxisLabel: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], showGridLines: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], schemeType: [{\n                type: Input\n            }], trimXAxisTicks: [{\n                type: Input\n            }], trimYAxisTicks: [{\n                type: Input\n            }], rotateXAxisTicks: [{\n                type: Input\n            }], maxXAxisTickLength: [{\n                type: Input\n            }], maxYAxisTickLength: [{\n                type: Input\n            }], xAxisTickFormatting: [{\n                type: Input\n            }], yAxisTickFormatting: [{\n                type: Input\n            }], xAxisTicks: [{\n                type: Input\n            }], yAxisTicks: [{\n                type: Input\n            }], barPadding: [{\n                type: Input\n            }], roundDomains: [{\n                type: Input\n            }], noBarWhenZero: [{\n                type: Input\n            }], wrapTicks: [{\n                type: Input\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }] } });\n\nclass BarVerticalStackedComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.legend = false;\n        this.legendTitle = 'Legend';\n        this.legendPosition = LegendPosition.Right;\n        this.tooltipDisabled = false;\n        this.showGridLines = true;\n        this.activeEntries = [];\n        this.trimXAxisTicks = true;\n        this.trimYAxisTicks = true;\n        this.rotateXAxisTicks = true;\n        this.maxXAxisTickLength = 16;\n        this.maxYAxisTickLength = 16;\n        this.barPadding = 8;\n        this.roundDomains = false;\n        this.showDataLabel = false;\n        this.noBarWhenZero = true;\n        this.wrapTicks = false;\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.margin = [10, 20, 10, 20];\n        this.xAxisHeight = 0;\n        this.yAxisWidth = 0;\n        this.dataLabelMaxHeight = { negative: 0, positive: 0 };\n        this.isSSR = false;\n        this.barChartType = BarChartType;\n        this.trackBy = (index, item) => {\n            return item.name;\n        };\n    }\n    ngOnInit() {\n        if (isPlatformServer(this.platformId)) {\n            this.isSSR = true;\n        }\n    }\n    update() {\n        super.update();\n        if (!this.showDataLabel) {\n            this.dataLabelMaxHeight = { negative: 0, positive: 0 };\n        }\n        this.margin = [10 + this.dataLabelMaxHeight.positive, 20, 10 + this.dataLabelMaxHeight.negative, 20];\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showXAxis: this.xAxis,\n            showYAxis: this.yAxis,\n            xAxisHeight: this.xAxisHeight,\n            yAxisWidth: this.yAxisWidth,\n            showXLabel: this.showXAxisLabel,\n            showYLabel: this.showYAxisLabel,\n            showLegend: this.legend,\n            legendType: this.schemeType,\n            legendPosition: this.legendPosition\n        });\n        if (this.showDataLabel) {\n            this.dims.height -= this.dataLabelMaxHeight.negative;\n        }\n        this.formatDates();\n        this.groupDomain = this.getGroupDomain();\n        this.innerDomain = this.getInnerDomain();\n        this.valueDomain = this.getValueDomain();\n        this.xScale = this.getXScale();\n        this.yScale = this.getYScale();\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n        this.transform = `translate(${this.dims.xOffset} , ${this.margin[0] + this.dataLabelMaxHeight.negative})`;\n    }\n    getGroupDomain() {\n        const domain = [];\n        for (const group of this.results) {\n            if (!domain.includes(group.label)) {\n                domain.push(group.label);\n            }\n        }\n        return domain;\n    }\n    getInnerDomain() {\n        const domain = [];\n        for (const group of this.results) {\n            for (const d of group.series) {\n                if (!domain.includes(d.label)) {\n                    domain.push(d.label);\n                }\n            }\n        }\n        return domain;\n    }\n    getValueDomain() {\n        const domain = [];\n        let smallest = 0;\n        let biggest = 0;\n        for (const group of this.results) {\n            let smallestSum = 0;\n            let biggestSum = 0;\n            for (const d of group.series) {\n                if (d.value < 0) {\n                    smallestSum += d.value;\n                }\n                else {\n                    biggestSum += d.value;\n                }\n                smallest = d.value < smallest ? d.value : smallest;\n                biggest = d.value > biggest ? d.value : biggest;\n            }\n            domain.push(smallestSum);\n            domain.push(biggestSum);\n        }\n        domain.push(smallest);\n        domain.push(biggest);\n        const min = Math.min(0, ...domain);\n        const max = this.yScaleMax ? Math.max(this.yScaleMax, ...domain) : Math.max(...domain);\n        return [min, max];\n    }\n    getXScale() {\n        const spacing = this.groupDomain.length / (this.dims.width / this.barPadding + 1);\n        return scaleBand().rangeRound([0, this.dims.width]).paddingInner(spacing).domain(this.groupDomain);\n    }\n    getYScale() {\n        const scale = scaleLinear().range([this.dims.height, 0]).domain(this.valueDomain);\n        return this.roundDomains ? scale.nice() : scale;\n    }\n    onDataLabelMaxHeightChanged(event, groupIndex) {\n        if (event.size.negative) {\n            this.dataLabelMaxHeight.negative = Math.max(this.dataLabelMaxHeight.negative, event.size.height);\n        }\n        else {\n            this.dataLabelMaxHeight.positive = Math.max(this.dataLabelMaxHeight.positive, event.size.height);\n        }\n        if (groupIndex === this.results.length - 1) {\n            setTimeout(() => this.update());\n        }\n    }\n    groupTransform(group) {\n        return `translate(${this.xScale(group.name) || 0}, 0)`;\n    }\n    onClick(data, group) {\n        if (group) {\n            data.series = group.name;\n        }\n        this.select.emit(data);\n    }\n    setColors() {\n        let domain;\n        if (this.schemeType === ScaleType.Ordinal) {\n            domain = this.innerDomain;\n        }\n        else {\n            domain = this.valueDomain;\n        }\n        this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    }\n    getLegendOptions() {\n        const opts = {\n            scaleType: this.schemeType,\n            colors: undefined,\n            domain: [],\n            title: undefined,\n            position: this.legendPosition\n        };\n        if (opts.scaleType === ScaleType.Ordinal) {\n            opts.domain = this.innerDomain;\n            opts.colors = this.colors;\n            opts.title = this.legendTitle;\n        }\n        else {\n            opts.domain = this.valueDomain;\n            opts.colors = this.colors.scale;\n        }\n        return opts;\n    }\n    updateYAxisWidth({ width }) {\n        this.yAxisWidth = width;\n        this.update();\n    }\n    updateXAxisHeight({ height }) {\n        this.xAxisHeight = height;\n        this.update();\n    }\n    onActivate(event, group, fromLegend = false) {\n        const item = Object.assign({}, event);\n        if (group) {\n            item.series = group.name;\n        }\n        const items = this.results\n            .map(g => g.series)\n            .flat()\n            .filter(i => {\n            if (fromLegend) {\n                return i.label === item.name;\n            }\n            else {\n                return i.name === item.name && i.series === item.series;\n            }\n        });\n        this.activeEntries = [...items];\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    }\n    onDeactivate(event, group, fromLegend = false) {\n        const item = Object.assign({}, event);\n        if (group) {\n            item.series = group.name;\n        }\n        this.activeEntries = this.activeEntries.filter(i => {\n            if (fromLegend) {\n                return i.label !== item.name;\n            }\n            else {\n                return !(i.name === item.name && i.series === item.series);\n            }\n        });\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    }\n}\nBarVerticalStackedComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarVerticalStackedComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nBarVerticalStackedComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: BarVerticalStackedComponent, selector: \"ngx-charts-bar-vertical-stacked\", inputs: { legend: \"legend\", legendTitle: \"legendTitle\", legendPosition: \"legendPosition\", xAxis: \"xAxis\", yAxis: \"yAxis\", showXAxisLabel: \"showXAxisLabel\", showYAxisLabel: \"showYAxisLabel\", xAxisLabel: \"xAxisLabel\", yAxisLabel: \"yAxisLabel\", tooltipDisabled: \"tooltipDisabled\", gradient: \"gradient\", showGridLines: \"showGridLines\", activeEntries: \"activeEntries\", schemeType: \"schemeType\", trimXAxisTicks: \"trimXAxisTicks\", trimYAxisTicks: \"trimYAxisTicks\", rotateXAxisTicks: \"rotateXAxisTicks\", maxXAxisTickLength: \"maxXAxisTickLength\", maxYAxisTickLength: \"maxYAxisTickLength\", xAxisTickFormatting: \"xAxisTickFormatting\", yAxisTickFormatting: \"yAxisTickFormatting\", xAxisTicks: \"xAxisTicks\", yAxisTicks: \"yAxisTicks\", barPadding: \"barPadding\", roundDomains: \"roundDomains\", yScaleMax: \"yScaleMax\", showDataLabel: \"showDataLabel\", dataLabelFormatting: \"dataLabelFormatting\", noBarWhenZero: \"noBarWhenZero\", wrapTicks: \"wrapTicks\" }, outputs: { activate: \"activate\", deactivate: \"deactivate\" }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, undefined, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, undefined, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [xAxisOffset]=\"dataLabelMaxHeight.negative\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g *ngIf=\"!isSSR\">\n          <svg:g\n            *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n            [@animationState]=\"'active'\"\n            [attr.transform]=\"groupTransform(group)\"\n          >\n            <svg:g\n              ngx-charts-series-vertical\n              [type]=\"barChartType.Stacked\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [activeEntries]=\"activeEntries\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [showDataLabel]=\"showDataLabel\"\n              [dataLabelFormatting]=\"dataLabelFormatting\"\n              [seriesName]=\"group.name\"\n              [animations]=\"animations\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n              (dataLabelHeightChanged)=\"onDataLabelMaxHeightChanged($event, index)\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n      <svg:g *ngIf=\"isSSR\">\n        <svg:g\n          *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n          [attr.transform]=\"groupTransform(group)\"\n        >\n          <svg:g\n            ngx-charts-series-vertical\n            [type]=\"barChartType.Stacked\"\n            [xScale]=\"xScale\"\n            [yScale]=\"yScale\"\n            [activeEntries]=\"activeEntries\"\n            [colors]=\"colors\"\n            [series]=\"group.series\"\n            [dims]=\"dims\"\n            [gradient]=\"gradient\"\n            [tooltipDisabled]=\"tooltipDisabled\"\n            [tooltipTemplate]=\"tooltipTemplate\"\n            [showDataLabel]=\"showDataLabel\"\n            [dataLabelFormatting]=\"dataLabelFormatting\"\n            [seriesName]=\"group.name\"\n            [animations]=\"animations\"\n            [noBarWhenZero]=\"noBarWhenZero\"\n            (select)=\"onClick($event, group)\"\n            (activate)=\"onActivate($event, group)\"\n            (deactivate)=\"onDeactivate($event, group)\"\n            (dataLabelHeightChanged)=\"onDataLabelMaxHeightChanged($event, index)\"\n          />\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: XAxisComponent, selector: \"g[ngx-charts-x-axis]\", inputs: [\"xScale\", \"dims\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"showGridLines\", \"showLabel\", \"labelText\", \"ticks\", \"xAxisTickCount\", \"xOrient\", \"xAxisOffset\", \"wrapTicks\"], outputs: [\"dimensionsChanged\"] }, { type: YAxisComponent, selector: \"g[ngx-charts-y-axis]\", inputs: [\"yScale\", \"dims\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"showGridLines\", \"showLabel\", \"labelText\", \"yAxisTickCount\", \"yOrient\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"yAxisOffset\", \"wrapTicks\"], outputs: [\"dimensionsChanged\"] }, { type: SeriesVerticalComponent, selector: \"g[ngx-charts-series-vertical]\", inputs: [\"dims\", \"type\", \"series\", \"xScale\", \"yScale\", \"colors\", \"gradient\", \"activeEntries\", \"seriesName\", \"tooltipDisabled\", \"tooltipTemplate\", \"roundEdges\", \"animations\", \"showDataLabel\", \"dataLabelFormatting\", \"noBarWhenZero\"], outputs: [\"select\", \"activate\", \"deactivate\", \"dataLabelHeightChanged\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], animations: [\n        trigger('animationState', [\n            transition(':leave', [\n                style({\n                    opacity: 1,\n                    transform: '*'\n                }),\n                animate(500, style({ opacity: 0, transform: 'scale(0)' }))\n            ])\n        ])\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarVerticalStackedComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-bar-vertical-stacked', template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, undefined, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, undefined, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [xAxisOffset]=\"dataLabelMaxHeight.negative\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g *ngIf=\"!isSSR\">\n          <svg:g\n            *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n            [@animationState]=\"'active'\"\n            [attr.transform]=\"groupTransform(group)\"\n          >\n            <svg:g\n              ngx-charts-series-vertical\n              [type]=\"barChartType.Stacked\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [activeEntries]=\"activeEntries\"\n              [colors]=\"colors\"\n              [series]=\"group.series\"\n              [dims]=\"dims\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [showDataLabel]=\"showDataLabel\"\n              [dataLabelFormatting]=\"dataLabelFormatting\"\n              [seriesName]=\"group.name\"\n              [animations]=\"animations\"\n              [noBarWhenZero]=\"noBarWhenZero\"\n              (select)=\"onClick($event, group)\"\n              (activate)=\"onActivate($event, group)\"\n              (deactivate)=\"onDeactivate($event, group)\"\n              (dataLabelHeightChanged)=\"onDataLabelMaxHeightChanged($event, index)\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n      <svg:g *ngIf=\"isSSR\">\n        <svg:g\n          *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n          [attr.transform]=\"groupTransform(group)\"\n        >\n          <svg:g\n            ngx-charts-series-vertical\n            [type]=\"barChartType.Stacked\"\n            [xScale]=\"xScale\"\n            [yScale]=\"yScale\"\n            [activeEntries]=\"activeEntries\"\n            [colors]=\"colors\"\n            [series]=\"group.series\"\n            [dims]=\"dims\"\n            [gradient]=\"gradient\"\n            [tooltipDisabled]=\"tooltipDisabled\"\n            [tooltipTemplate]=\"tooltipTemplate\"\n            [showDataLabel]=\"showDataLabel\"\n            [dataLabelFormatting]=\"dataLabelFormatting\"\n            [seriesName]=\"group.name\"\n            [animations]=\"animations\"\n            [noBarWhenZero]=\"noBarWhenZero\"\n            (select)=\"onClick($event, group)\"\n            (activate)=\"onActivate($event, group)\"\n            (deactivate)=\"onDeactivate($event, group)\"\n            (dataLabelHeightChanged)=\"onDataLabelMaxHeightChanged($event, index)\"\n          />\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, animations: [\n                        trigger('animationState', [\n                            transition(':leave', [\n                                style({\n                                    opacity: 1,\n                                    transform: '*'\n                                }),\n                                animate(500, style({ opacity: 0, transform: 'scale(0)' }))\n                            ])\n                        ])\n                    ], styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"] }]\n        }], propDecorators: { legend: [{\n                type: Input\n            }], legendTitle: [{\n                type: Input\n            }], legendPosition: [{\n                type: Input\n            }], xAxis: [{\n                type: Input\n            }], yAxis: [{\n                type: Input\n            }], showXAxisLabel: [{\n                type: Input\n            }], showYAxisLabel: [{\n                type: Input\n            }], xAxisLabel: [{\n                type: Input\n            }], yAxisLabel: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], showGridLines: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], schemeType: [{\n                type: Input\n            }], trimXAxisTicks: [{\n                type: Input\n            }], trimYAxisTicks: [{\n                type: Input\n            }], rotateXAxisTicks: [{\n                type: Input\n            }], maxXAxisTickLength: [{\n                type: Input\n            }], maxYAxisTickLength: [{\n                type: Input\n            }], xAxisTickFormatting: [{\n                type: Input\n            }], yAxisTickFormatting: [{\n                type: Input\n            }], xAxisTicks: [{\n                type: Input\n            }], yAxisTicks: [{\n                type: Input\n            }], barPadding: [{\n                type: Input\n            }], roundDomains: [{\n                type: Input\n            }], yScaleMax: [{\n                type: Input\n            }], showDataLabel: [{\n                type: Input\n            }], dataLabelFormatting: [{\n                type: Input\n            }], noBarWhenZero: [{\n                type: Input\n            }], wrapTicks: [{\n                type: Input\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }] } });\n\nclass BarChartModule {\n}\nBarChartModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarChartModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nBarChartModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarChartModule, declarations: [BarComponent,\n        BarHorizontalComponent,\n        BarHorizontal2DComponent,\n        BarHorizontalNormalizedComponent,\n        BarHorizontalStackedComponent,\n        BarVerticalComponent,\n        BarVertical2DComponent,\n        BarVerticalNormalizedComponent,\n        BarVerticalStackedComponent,\n        BarLabelComponent,\n        SeriesHorizontal,\n        SeriesVerticalComponent], imports: [ChartCommonModule], exports: [BarComponent,\n        BarHorizontalComponent,\n        BarHorizontal2DComponent,\n        BarHorizontalNormalizedComponent,\n        BarHorizontalStackedComponent,\n        BarVerticalComponent,\n        BarVertical2DComponent,\n        BarVerticalNormalizedComponent,\n        BarVerticalStackedComponent,\n        BarLabelComponent,\n        SeriesHorizontal,\n        SeriesVerticalComponent] });\nBarChartModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarChartModule, imports: [[ChartCommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BarChartModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [ChartCommonModule],\n                    declarations: [\n                        BarComponent,\n                        BarHorizontalComponent,\n                        BarHorizontal2DComponent,\n                        BarHorizontalNormalizedComponent,\n                        BarHorizontalStackedComponent,\n                        BarVerticalComponent,\n                        BarVertical2DComponent,\n                        BarVerticalNormalizedComponent,\n                        BarVerticalStackedComponent,\n                        BarLabelComponent,\n                        SeriesHorizontal,\n                        SeriesVerticalComponent\n                    ],\n                    exports: [\n                        BarComponent,\n                        BarHorizontalComponent,\n                        BarHorizontal2DComponent,\n                        BarHorizontalNormalizedComponent,\n                        BarHorizontalStackedComponent,\n                        BarVerticalComponent,\n                        BarVertical2DComponent,\n                        BarVerticalNormalizedComponent,\n                        BarVerticalStackedComponent,\n                        BarLabelComponent,\n                        SeriesHorizontal,\n                        SeriesVerticalComponent\n                    ]\n                }]\n        }] });\n\nconst cloneDeep = rfdc();\nclass BoxComponent {\n    constructor(element, cd) {\n        this.cd = cd;\n        this.roundEdges = true;\n        this.gradient = false;\n        this.offset = 0;\n        this.isActive = false;\n        this.animations = true;\n        this.noBarWhenZero = true;\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.BarOrientation = BarOrientation;\n        this.initialized = false;\n        this.hasGradient = false;\n        this.hideBar = false;\n        this.nativeElm = element.nativeElement;\n    }\n    ngOnChanges(changes) {\n        if (!this.initialized) {\n            this.loadAnimation();\n            this.initialized = true;\n        }\n        else {\n            this.update();\n        }\n    }\n    update() {\n        this.boxStrokeWidth = Math.max(this.strokeWidth, 1);\n        this.whiskerStrokeWidth = Math.max(this.strokeWidth / 2, 1);\n        this.medianLineWidth = 1.5 * this.strokeWidth;\n        this.gradientId = 'grad' + id().toString();\n        this.gradientFill = `url(#${this.gradientId})`;\n        if (this.gradient) {\n            this.gradientStops = this.getGradient();\n            this.hasGradient = true;\n        }\n        else {\n            this.hasGradient = false;\n        }\n        this.updateLineEl();\n        this.updatePathEl();\n        this.checkToHideBar();\n        this.maskLineId = 'mask' + id().toString();\n        this.maskLine = `url(#${this.maskLineId})`;\n        if (this.cd) {\n            this.cd.markForCheck();\n        }\n    }\n    loadAnimation() {\n        this.boxPath = this.oldPath = this.getStartingPath();\n        this.oldLineCoordinates = this.getStartingLineCoordinates();\n        setTimeout(this.update.bind(this), 100);\n    }\n    updatePathEl() {\n        const nodeBar = select(this.nativeElm).selectAll('.bar');\n        const path = this.getPath();\n        if (this.animations) {\n            nodeBar\n                .attr('d', this.oldPath)\n                .transition()\n                .ease(easeSinInOut)\n                .duration(500)\n                .attrTween('d', this.pathTween(path, 4));\n        }\n        else {\n            nodeBar.attr('d', path);\n        }\n        this.oldPath = path;\n    }\n    updateLineEl() {\n        const lineEl = select(this.nativeElm).selectAll('.bar-line');\n        const lineCoordinates = this.lineCoordinates;\n        const oldLineCoordinates = this.oldLineCoordinates;\n        if (this.animations) {\n            lineEl\n                .attr('x1', (_, index) => oldLineCoordinates[index].v1.x)\n                .attr('y1', (_, index) => oldLineCoordinates[index].v1.y)\n                .attr('x2', (_, index) => oldLineCoordinates[index].v2.x)\n                .attr('y2', (_, index) => oldLineCoordinates[index].v2.y)\n                .transition()\n                .ease(easeSinInOut)\n                .duration(500)\n                .attr('x1', (_, index) => lineCoordinates[index].v1.x)\n                .attr('y1', (_, index) => lineCoordinates[index].v1.y)\n                .attr('x2', (_, index) => lineCoordinates[index].v2.x)\n                .attr('y2', (_, index) => lineCoordinates[index].v2.y);\n        }\n        else {\n            lineEl\n                .attr('x1', (_, index) => lineCoordinates[index].v1.x)\n                .attr('y1', (_, index) => lineCoordinates[index].v1.y)\n                .attr('x2', (_, index) => lineCoordinates[index].v2.x)\n                .attr('y2', (_, index) => lineCoordinates[index].v2.y);\n        }\n        this.oldLineCoordinates = [...lineCoordinates];\n    }\n    /**\n     * See [D3 Selections](https://www.d3indepth.com/selections/)\n     * @param d The joined data.\n     * @param index The index of the element within the selection\n     * @param node The node element (Line).\n     */\n    lineTween(attr, d, index, node) {\n        const nodeLineEl = node[index];\n        return nodeLineEl[attr].baseVal.value;\n    }\n    // TODO: Refactor into another .ts file if https://github.com/swimlane/ngx-charts/pull/1179 gets merged.\n    pathTween(d1, precision) {\n        return function () {\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            const path0 = this;\n            const path1 = this.cloneNode();\n            path1.setAttribute('d', d1);\n            const n0 = path0?.getTotalLength();\n            const n1 = path1?.getTotalLength();\n            // Uniform sampling of distance based on specified precision.\n            const distances = [0];\n            let i = 0;\n            const dt = precision / Math.max(n0, n1);\n            while (i < 1) {\n                distances.push(i);\n                i += dt;\n            }\n            distances.push(1);\n            // Compute point-interpolators at each distance.\n            const points = distances.map((t) => {\n                const p0 = path0.getPointAtLength(t * n0);\n                const p1 = path1.getPointAtLength(t * n1);\n                return interpolate([p0.x, p0.y], [p1.x, p1.y]);\n            });\n            // 't': T is the fraction of time (between 0 and 1) since the transition began.\n            return (t) => {\n                return t < 1 ? 'M' + points.map((p) => p(t)).join('L') : d1;\n            };\n        };\n    }\n    getStartingPath() {\n        if (!this.animations) {\n            return this.getPath();\n        }\n        const radius = this.roundEdges ? 1 : 0;\n        const { x, y } = this.lineCoordinates[2].v1;\n        return roundedRect(x - this.width, y - 1, this.width, 2, radius, this.edges);\n    }\n    getPath() {\n        const radius = this.getRadius();\n        let path = '';\n        path = roundedRect(this.x, this.y, this.width, this.height, Math.min(this.height, radius), this.edges);\n        return path;\n    }\n    getStartingLineCoordinates() {\n        if (!this.animations) {\n            return [...this.lineCoordinates];\n        }\n        const lineCoordinates = cloneDeep(this.lineCoordinates);\n        lineCoordinates[1].v1.y = lineCoordinates[1].v2.y = lineCoordinates[3].v1.y = lineCoordinates[3].v2.y = lineCoordinates[0].v1.y = lineCoordinates[0].v2.y =\n            lineCoordinates[2].v1.y;\n        return lineCoordinates;\n    }\n    getRadius() {\n        let radius = 0;\n        if (this.roundEdges && this.height > 5 && this.width > 5) {\n            radius = Math.floor(Math.min(5, this.height / 2, this.width / 2));\n        }\n        return radius;\n    }\n    getGradient() {\n        return [\n            {\n                offset: 0,\n                color: this.fill,\n                opacity: this.getStartOpacity()\n            },\n            {\n                offset: 100,\n                color: this.fill,\n                opacity: 1\n            }\n        ];\n    }\n    getStartOpacity() {\n        if (this.roundEdges) {\n            return 0.2;\n        }\n        else {\n            return 0.5;\n        }\n    }\n    get edges() {\n        let edges = [false, false, false, false];\n        if (this.roundEdges) {\n            edges = [true, true, true, true];\n        }\n        return edges;\n    }\n    onMouseEnter() {\n        this.activate.emit(this.data);\n    }\n    onMouseLeave() {\n        this.deactivate.emit(this.data);\n    }\n    checkToHideBar() {\n        this.hideBar = this.noBarWhenZero && this.height === 0;\n    }\n}\nBoxComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BoxComponent, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nBoxComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: BoxComponent, selector: \"g[ngx-charts-box]\", inputs: { strokeColor: \"strokeColor\", strokeWidth: \"strokeWidth\", fill: \"fill\", data: \"data\", width: \"width\", height: \"height\", x: \"x\", y: \"y\", lineCoordinates: \"lineCoordinates\", roundEdges: \"roundEdges\", gradient: \"gradient\", gradientStops: \"gradientStops\", offset: \"offset\", isActive: \"isActive\", animations: \"animations\", ariaLabel: \"ariaLabel\", noBarWhenZero: \"noBarWhenZero\" }, outputs: { select: \"select\", activate: \"activate\", deactivate: \"deactivate\" }, host: { listeners: { \"mouseenter\": \"onMouseEnter()\", \"mouseleave\": \"onMouseLeave()\" } }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:defs>\n      <svg:g\n        *ngIf=\"hasGradient\"\n        ngx-charts-svg-linear-gradient\n        [orientation]=\"BarOrientation.Vertical\"\n        [name]=\"gradientId\"\n        [stops]=\"gradientStops\"\n      />\n      <svg:mask [attr.id]=\"maskLineId\">\n        <svg:g>\n          <rect height=\"100%\" width=\"100%\" fill=\"white\" fill-opacity=\"1\" />\n          <path class=\"bar\" [attr.d]=\"boxPath\" fill=\"black\" fill-opacity=\"1\" />\n        </svg:g>\n      </svg:mask>\n    </svg:defs>\n    <svg:g>\n      <svg:path\n        class=\"bar\"\n        role=\"img\"\n        tabIndex=\"-1\"\n        [class.active]=\"isActive\"\n        [class.hidden]=\"hideBar\"\n        [attr.d]=\"boxPath\"\n        [attr.stroke]=\"strokeColor\"\n        [attr.stroke-width]=\"boxStrokeWidth\"\n        [attr.aria-label]=\"ariaLabel\"\n        [attr.fill]=\"hasGradient ? gradientFill : fill\"\n        (click)=\"select.emit(data)\"\n      />\n      <svg:line\n        *ngFor=\"let line of lineCoordinates; let i = index\"\n        class=\"bar-line\"\n        [class.hidden]=\"hideBar\"\n        [attr.x1]=\"line.v1.x\"\n        [attr.y1]=\"line.v1.y\"\n        [attr.x2]=\"line.v2.x\"\n        [attr.y2]=\"line.v2.y\"\n        [attr.stroke]=\"strokeColor\"\n        [attr.stroke-width]=\"i === 2 ? medianLineWidth : whiskerStrokeWidth\"\n        [attr.mask]=\"i ? undefined : maskLine\"\n        fill=\"none\"\n      />\n    </svg:g>\n  `, isInline: true, components: [{ type: SvgLinearGradientComponent, selector: \"g[ngx-charts-svg-linear-gradient]\", inputs: [\"orientation\", \"name\", \"stops\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BoxComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-box]',\n                    template: `\n    <svg:defs>\n      <svg:g\n        *ngIf=\"hasGradient\"\n        ngx-charts-svg-linear-gradient\n        [orientation]=\"BarOrientation.Vertical\"\n        [name]=\"gradientId\"\n        [stops]=\"gradientStops\"\n      />\n      <svg:mask [attr.id]=\"maskLineId\">\n        <svg:g>\n          <rect height=\"100%\" width=\"100%\" fill=\"white\" fill-opacity=\"1\" />\n          <path class=\"bar\" [attr.d]=\"boxPath\" fill=\"black\" fill-opacity=\"1\" />\n        </svg:g>\n      </svg:mask>\n    </svg:defs>\n    <svg:g>\n      <svg:path\n        class=\"bar\"\n        role=\"img\"\n        tabIndex=\"-1\"\n        [class.active]=\"isActive\"\n        [class.hidden]=\"hideBar\"\n        [attr.d]=\"boxPath\"\n        [attr.stroke]=\"strokeColor\"\n        [attr.stroke-width]=\"boxStrokeWidth\"\n        [attr.aria-label]=\"ariaLabel\"\n        [attr.fill]=\"hasGradient ? gradientFill : fill\"\n        (click)=\"select.emit(data)\"\n      />\n      <svg:line\n        *ngFor=\"let line of lineCoordinates; let i = index\"\n        class=\"bar-line\"\n        [class.hidden]=\"hideBar\"\n        [attr.x1]=\"line.v1.x\"\n        [attr.y1]=\"line.v1.y\"\n        [attr.x2]=\"line.v2.x\"\n        [attr.y2]=\"line.v2.y\"\n        [attr.stroke]=\"strokeColor\"\n        [attr.stroke-width]=\"i === 2 ? medianLineWidth : whiskerStrokeWidth\"\n        [attr.mask]=\"i ? undefined : maskLine\"\n        fill=\"none\"\n      />\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { strokeColor: [{\n                type: Input\n            }], strokeWidth: [{\n                type: Input\n            }], fill: [{\n                type: Input\n            }], data: [{\n                type: Input\n            }], width: [{\n                type: Input\n            }], height: [{\n                type: Input\n            }], x: [{\n                type: Input\n            }], y: [{\n                type: Input\n            }], lineCoordinates: [{\n                type: Input\n            }], roundEdges: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], gradientStops: [{\n                type: Input\n            }], offset: [{\n                type: Input\n            }], isActive: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], ariaLabel: [{\n                type: Input\n            }], noBarWhenZero: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], onMouseEnter: [{\n                type: HostListener,\n                args: ['mouseenter']\n            }], onMouseLeave: [{\n                type: HostListener,\n                args: ['mouseleave']\n            }] } });\n\nclass BoxSeriesComponent {\n    constructor() {\n        this.animations = true;\n        this.tooltipDisabled = false;\n        this.gradient = false;\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    onClick(data) {\n        this.select.emit(data);\n    }\n    update() {\n        this.updateTooltipSettings();\n        const width = this.series && this.series.series.length ? Math.round(this.xScale.bandwidth()) : null;\n        const seriesName = this.series.name;\n        // Calculate Quantile and Whiskers for each box serie.\n        this.counts = this.series.series;\n        const mappedCounts = this.counts.map(serie => Number(serie.value));\n        this.whiskers = [min(mappedCounts), max(mappedCounts)];\n        // We get the group count and must sort it in order to retrieve quantiles.\n        const groupCounts = this.counts.map(item => item.value).sort((a, b) => Number(a) - Number(b));\n        this.quartiles = this.getBoxQuantiles(groupCounts);\n        this.lineCoordinates = this.getLinesCoordinates(seriesName.toString(), this.whiskers, this.quartiles, width);\n        const value = this.quartiles[1];\n        const formattedLabel = formatLabel(seriesName);\n        const box = {\n            value,\n            data: this.counts,\n            label: seriesName,\n            formattedLabel,\n            width,\n            height: 0,\n            x: 0,\n            y: 0,\n            roundEdges: this.roundEdges,\n            quartiles: this.quartiles,\n            lineCoordinates: this.lineCoordinates\n        };\n        box.height = Math.abs(this.yScale(this.quartiles[0]) - this.yScale(this.quartiles[2]));\n        box.x = this.xScale(seriesName.toString());\n        box.y = this.yScale(this.quartiles[2]);\n        box.ariaLabel = formattedLabel + ' - Median: ' + value.toLocaleString();\n        if (this.colors.scaleType === ScaleType.Ordinal) {\n            box.color = this.colors.getColor(seriesName);\n        }\n        else {\n            box.color = this.colors.getColor(this.quartiles[1]);\n            box.gradientStops = this.colors.getLinearGradientStops(this.quartiles[0], this.quartiles[2]);\n        }\n        const tooltipLabel = formattedLabel;\n        const formattedTooltipLabel = `\n    <span class=\"tooltip-label\">${escapeLabel(tooltipLabel)}</span>\n    <span class=\"tooltip-val\">\n      • Q1: ${this.quartiles[0]} • Q2: ${this.quartiles[1]} • Q3: ${this.quartiles[2]}<br>\n      • Min: ${this.whiskers[0]} • Max: ${this.whiskers[1]}\n    </span>`;\n        box.tooltipText = this.tooltipDisabled ? undefined : formattedTooltipLabel;\n        this.tooltipTitle = this.tooltipDisabled ? undefined : box.tooltipText;\n        this.box = box;\n    }\n    getBoxQuantiles(inputData) {\n        return [quantile(inputData, 0.25), quantile(inputData, 0.5), quantile(inputData, 0.75)];\n    }\n    getLinesCoordinates(seriesName, whiskers, quartiles, barWidth) {\n        // The X value is not being centered, so had to sum half the width to align it.\n        const commonX = this.xScale(seriesName);\n        const offsetX = commonX + barWidth / 2;\n        const medianLineWidth = Math.max(barWidth + 4 * this.strokeWidth, 1);\n        const whiskerLineWidth = Math.max(barWidth / 3, 1);\n        const whiskerZero = this.yScale(whiskers[0]);\n        const whiskerOne = this.yScale(whiskers[1]);\n        const median = this.yScale(quartiles[1]);\n        const topLine = {\n            v1: { x: offsetX + whiskerLineWidth / 2, y: whiskerZero },\n            v2: { x: offsetX - whiskerLineWidth / 2, y: whiskerZero }\n        };\n        const medianLine = {\n            v1: { x: offsetX + medianLineWidth / 2, y: median },\n            v2: { x: offsetX - medianLineWidth / 2, y: median }\n        };\n        const bottomLine = {\n            v1: { x: offsetX + whiskerLineWidth / 2, y: whiskerOne },\n            v2: { x: offsetX - whiskerLineWidth / 2, y: whiskerOne }\n        };\n        const verticalLine = {\n            v1: { x: offsetX, y: whiskerZero },\n            v2: { x: offsetX, y: whiskerOne }\n        };\n        return [verticalLine, topLine, medianLine, bottomLine];\n    }\n    updateTooltipSettings() {\n        if (this.tooltipDisabled) {\n            this.tooltipPlacement = undefined;\n            this.tooltipType = undefined;\n        }\n        else {\n            if (!this.tooltipPlacement) {\n                this.tooltipPlacement = PlacementTypes.Top;\n            }\n            if (!this.tooltipType) {\n                this.tooltipType = StyleTypes.tooltip;\n            }\n        }\n    }\n}\nBoxSeriesComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BoxSeriesComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nBoxSeriesComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: BoxSeriesComponent, selector: \"g[ngx-charts-box-series]\", inputs: { dims: \"dims\", series: \"series\", xScale: \"xScale\", yScale: \"yScale\", colors: \"colors\", animations: \"animations\", strokeColor: \"strokeColor\", strokeWidth: \"strokeWidth\", tooltipDisabled: \"tooltipDisabled\", tooltipTemplate: \"tooltipTemplate\", tooltipPlacement: \"tooltipPlacement\", tooltipType: \"tooltipType\", roundEdges: \"roundEdges\", gradient: \"gradient\" }, outputs: { select: \"select\", activate: \"activate\", deactivate: \"deactivate\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:g\n      ngx-charts-box\n      [@animationState]=\"'active'\"\n      [@.disabled]=\"!animations\"\n      [width]=\"box.width\"\n      [height]=\"box.height\"\n      [x]=\"box.x\"\n      [y]=\"box.y\"\n      [roundEdges]=\"box.roundEdges\"\n      [fill]=\"box.color\"\n      [gradientStops]=\"box.gradientStops\"\n      [strokeColor]=\"strokeColor\"\n      [strokeWidth]=\"strokeWidth\"\n      [data]=\"box.data\"\n      [lineCoordinates]=\"box.lineCoordinates\"\n      [gradient]=\"gradient\"\n      [ariaLabel]=\"box.ariaLabel\"\n      (select)=\"onClick($event)\"\n      (activate)=\"activate.emit($event)\"\n      (deactivate)=\"deactivate.emit($event)\"\n      ngx-tooltip\n      [tooltipDisabled]=\"tooltipDisabled\"\n      [tooltipPlacement]=\"tooltipPlacement\"\n      [tooltipType]=\"tooltipType\"\n      [tooltipTitle]=\"tooltipTitle\"\n      [tooltipTemplate]=\"tooltipTemplate\"\n      [tooltipContext]=\"box.data\"\n      [animations]=\"animations\"\n    ></svg:g>\n  `, isInline: true, components: [{ type: BoxComponent, selector: \"g[ngx-charts-box]\", inputs: [\"strokeColor\", \"strokeWidth\", \"fill\", \"data\", \"width\", \"height\", \"x\", \"y\", \"lineCoordinates\", \"roundEdges\", \"gradient\", \"gradientStops\", \"offset\", \"isActive\", \"animations\", \"ariaLabel\", \"noBarWhenZero\"], outputs: [\"select\", \"activate\", \"deactivate\"] }], directives: [{ type: TooltipDirective, selector: \"[ngx-tooltip]\", inputs: [\"tooltipCssClass\", \"tooltipTitle\", \"tooltipAppendToBody\", \"tooltipSpacing\", \"tooltipDisabled\", \"tooltipShowCaret\", \"tooltipPlacement\", \"tooltipAlignment\", \"tooltipType\", \"tooltipCloseOnClickOutside\", \"tooltipCloseOnMouseLeave\", \"tooltipHideTimeout\", \"tooltipShowTimeout\", \"tooltipTemplate\", \"tooltipShowEvent\", \"tooltipContext\", \"tooltipImmediateExit\"], outputs: [\"show\", \"hide\"] }], animations: [\n        trigger('animationState', [\n            transition(':leave', [\n                style({\n                    opacity: 1\n                }),\n                animate(500, style({ opacity: 0 }))\n            ])\n        ])\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BoxSeriesComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-box-series]',\n                    template: `\n    <svg:g\n      ngx-charts-box\n      [@animationState]=\"'active'\"\n      [@.disabled]=\"!animations\"\n      [width]=\"box.width\"\n      [height]=\"box.height\"\n      [x]=\"box.x\"\n      [y]=\"box.y\"\n      [roundEdges]=\"box.roundEdges\"\n      [fill]=\"box.color\"\n      [gradientStops]=\"box.gradientStops\"\n      [strokeColor]=\"strokeColor\"\n      [strokeWidth]=\"strokeWidth\"\n      [data]=\"box.data\"\n      [lineCoordinates]=\"box.lineCoordinates\"\n      [gradient]=\"gradient\"\n      [ariaLabel]=\"box.ariaLabel\"\n      (select)=\"onClick($event)\"\n      (activate)=\"activate.emit($event)\"\n      (deactivate)=\"deactivate.emit($event)\"\n      ngx-tooltip\n      [tooltipDisabled]=\"tooltipDisabled\"\n      [tooltipPlacement]=\"tooltipPlacement\"\n      [tooltipType]=\"tooltipType\"\n      [tooltipTitle]=\"tooltipTitle\"\n      [tooltipTemplate]=\"tooltipTemplate\"\n      [tooltipContext]=\"box.data\"\n      [animations]=\"animations\"\n    ></svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    animations: [\n                        trigger('animationState', [\n                            transition(':leave', [\n                                style({\n                                    opacity: 1\n                                }),\n                                animate(500, style({ opacity: 0 }))\n                            ])\n                        ])\n                    ]\n                }]\n        }], propDecorators: { dims: [{\n                type: Input\n            }], series: [{\n                type: Input\n            }], xScale: [{\n                type: Input\n            }], yScale: [{\n                type: Input\n            }], colors: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], strokeColor: [{\n                type: Input\n            }], strokeWidth: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], tooltipTemplate: [{\n                type: Input\n            }], tooltipPlacement: [{\n                type: Input\n            }], tooltipType: [{\n                type: Input\n            }], roundEdges: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }] } });\n\nclass BoxChartComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        /** Show or hide the legend. */\n        this.legend = false;\n        this.legendPosition = LegendPosition.Right;\n        this.legendTitle = 'Legend';\n        this.showGridLines = true;\n        this.xAxis = true;\n        this.yAxis = true;\n        this.showXAxisLabel = true;\n        this.showYAxisLabel = true;\n        this.roundDomains = false;\n        this.roundEdges = true;\n        this.strokeColor = '#FFFFFF';\n        this.strokeWidth = 2;\n        this.tooltipDisabled = false;\n        this.wrapTicks = false;\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        /** Chart Margins (For each side, counterclock wise). */\n        this.margin = [10, 20, 10, 20];\n        /** Chart X axis dimension. */\n        this.xAxisHeight = 0;\n        /** Chart Y axis dimension. */\n        this.yAxisWidth = 0;\n    }\n    trackBy(index, item) {\n        return item.name;\n    }\n    update() {\n        super.update();\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showXAxis: this.xAxis,\n            showYAxis: this.yAxis,\n            xAxisHeight: this.xAxisHeight,\n            yAxisWidth: this.yAxisWidth,\n            showXLabel: this.showXAxisLabel,\n            showYLabel: this.showYAxisLabel,\n            showLegend: this.legend,\n            legendPosition: this.legendPosition\n        });\n        this.xDomain = this.getXDomain();\n        this.yDomain = this.getYDomain();\n        this.seriesDomain = this.getSeriesDomain();\n        this.setScales();\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n        this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n    }\n    setColors() {\n        let domain = [];\n        if (this.schemeType === ScaleType.Ordinal) {\n            domain = this.seriesDomain;\n        }\n        else {\n            domain = this.yDomain;\n        }\n        this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    }\n    setScales() {\n        this.xScale = this.getXScale(this.xDomain, this.dims.width);\n        this.yScale = this.getYScale(this.yDomain, this.dims.height);\n    }\n    getXScale(domain, width) {\n        const scale = scaleBand()\n            .domain(domain.map(d => d.toString()))\n            .rangeRound([0, width])\n            .padding(0.5);\n        return scale;\n    }\n    getYScale(domain, height) {\n        const scale = scaleLinear().domain(domain).range([height, 0]);\n        return this.roundDomains ? scale.nice() : scale;\n    }\n    getUniqueBoxChartXDomainValues(results) {\n        const valueSet = new Set();\n        for (const result of results) {\n            valueSet.add(result.name);\n        }\n        return Array.from(valueSet);\n    }\n    getXDomain() {\n        let domain = [];\n        const values = this.getUniqueBoxChartXDomainValues(this.results);\n        let min;\n        let max;\n        if (typeof values[0] === 'string') {\n            domain = values.map(val => val.toString());\n        }\n        else if (typeof values[0] === 'number') {\n            const mappedValues = values.map(v => Number(v));\n            min = Math.min(...mappedValues);\n            max = Math.max(...mappedValues);\n            domain = [min, max];\n        }\n        else {\n            const mappedValues = values.map(v => Number(new Date(v)));\n            min = Math.min(...mappedValues);\n            max = Math.max(...mappedValues);\n            domain = [new Date(min), new Date(max)];\n        }\n        return domain;\n    }\n    getYDomain() {\n        const domain = [];\n        for (const results of this.results) {\n            for (const d of results.series) {\n                if (domain.indexOf(d.value) < 0) {\n                    domain.push(d.value);\n                }\n            }\n        }\n        const values = [...domain];\n        const mappedValues = values.map(v => Number(v));\n        const min = Math.min(...mappedValues);\n        const max = Math.max(...mappedValues);\n        return [min, max];\n    }\n    getSeriesDomain() {\n        return this.results.map(d => `${d.name}`);\n    }\n    updateYAxisWidth({ width }) {\n        this.yAxisWidth = width;\n        this.update();\n    }\n    updateXAxisHeight({ height }) {\n        this.xAxisHeight = height;\n        this.update();\n    }\n    onClick(data) {\n        this.select.emit(data);\n    }\n    onActivate(data) {\n        this.activate.emit(data);\n    }\n    onDeactivate(data) {\n        this.deactivate.emit(data);\n    }\n    getLegendOptions() {\n        const legendOpts = {\n            scaleType: this.schemeType,\n            colors: this.colors,\n            domain: [],\n            position: this.legendPosition,\n            title: this.legendTitle\n        };\n        if (this.schemeType === ScaleType.Ordinal) {\n            legendOpts.domain = this.xDomain;\n            legendOpts.colors = this.colors;\n        }\n        else {\n            legendOpts.domain = this.yDomain;\n            legendOpts.colors = this.colors.scale;\n        }\n        return legendOpts;\n    }\n}\nBoxChartComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BoxChartComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nBoxChartComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: BoxChartComponent, selector: \"ngx-charts-box-chart\", inputs: { legend: \"legend\", legendPosition: \"legendPosition\", legendTitle: \"legendTitle\", legendOptionsConfig: \"legendOptionsConfig\", showGridLines: \"showGridLines\", xAxis: \"xAxis\", yAxis: \"yAxis\", showXAxisLabel: \"showXAxisLabel\", showYAxisLabel: \"showYAxisLabel\", roundDomains: \"roundDomains\", xAxisLabel: \"xAxisLabel\", yAxisLabel: \"yAxisLabel\", roundEdges: \"roundEdges\", strokeColor: \"strokeColor\", strokeWidth: \"strokeWidth\", tooltipDisabled: \"tooltipDisabled\", gradient: \"gradient\", wrapTicks: \"wrapTicks\" }, outputs: { select: \"select\", activate: \"activate\", deactivate: \"deactivate\" }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"box-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          [showGridLines]=\"showGridLines\"\n          [dims]=\"dims\"\n          [xScale]=\"xScale\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        />\n        <svg:g\n          ngx-charts-y-axis\n          [showGridLines]=\"showGridLines\"\n          [dims]=\"dims\"\n          [yScale]=\"yScale\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        />\n      </svg:g>\n      <svg:g [attr.transform]=\"transform\">\n        <svg:g *ngFor=\"let result of results; trackBy: trackBy\">\n          <svg:g\n            ngx-charts-box-series\n            [xScale]=\"xScale\"\n            [yScale]=\"yScale\"\n            [colors]=\"colors\"\n            [roundEdges]=\"roundEdges\"\n            [strokeColor]=\"strokeColor\"\n            [strokeWidth]=\"strokeWidth\"\n            [tooltipDisabled]=\"tooltipDisabled\"\n            [tooltipTemplate]=\"tooltipTemplate\"\n            [series]=\"result\"\n            [dims]=\"dims\"\n            [animations]=\"animations\"\n            [gradient]=\"gradient\"\n            (activate)=\"onActivate($event)\"\n            (deactivate)=\"onDeactivate($event)\"\n            (select)=\"onClick($event)\"\n          />\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: XAxisComponent, selector: \"g[ngx-charts-x-axis]\", inputs: [\"xScale\", \"dims\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"showGridLines\", \"showLabel\", \"labelText\", \"ticks\", \"xAxisTickCount\", \"xOrient\", \"xAxisOffset\", \"wrapTicks\"], outputs: [\"dimensionsChanged\"] }, { type: YAxisComponent, selector: \"g[ngx-charts-y-axis]\", inputs: [\"yScale\", \"dims\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"showGridLines\", \"showLabel\", \"labelText\", \"yAxisTickCount\", \"yOrient\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"yAxisOffset\", \"wrapTicks\"], outputs: [\"dimensionsChanged\"] }, { type: BoxSeriesComponent, selector: \"g[ngx-charts-box-series]\", inputs: [\"dims\", \"series\", \"xScale\", \"yScale\", \"colors\", \"animations\", \"strokeColor\", \"strokeWidth\", \"tooltipDisabled\", \"tooltipTemplate\", \"tooltipPlacement\", \"tooltipType\", \"roundEdges\", \"gradient\"], outputs: [\"select\", \"activate\", \"deactivate\"] }], directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BoxChartComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-box-chart', template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"box-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          [showGridLines]=\"showGridLines\"\n          [dims]=\"dims\"\n          [xScale]=\"xScale\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        />\n        <svg:g\n          ngx-charts-y-axis\n          [showGridLines]=\"showGridLines\"\n          [dims]=\"dims\"\n          [yScale]=\"yScale\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        />\n      </svg:g>\n      <svg:g [attr.transform]=\"transform\">\n        <svg:g *ngFor=\"let result of results; trackBy: trackBy\">\n          <svg:g\n            ngx-charts-box-series\n            [xScale]=\"xScale\"\n            [yScale]=\"yScale\"\n            [colors]=\"colors\"\n            [roundEdges]=\"roundEdges\"\n            [strokeColor]=\"strokeColor\"\n            [strokeWidth]=\"strokeWidth\"\n            [tooltipDisabled]=\"tooltipDisabled\"\n            [tooltipTemplate]=\"tooltipTemplate\"\n            [series]=\"result\"\n            [dims]=\"dims\"\n            [animations]=\"animations\"\n            [gradient]=\"gradient\"\n            (activate)=\"onActivate($event)\"\n            (deactivate)=\"onDeactivate($event)\"\n            (select)=\"onClick($event)\"\n          />\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"] }]\n        }], propDecorators: { legend: [{\n                type: Input\n            }], legendPosition: [{\n                type: Input\n            }], legendTitle: [{\n                type: Input\n            }], legendOptionsConfig: [{\n                type: Input\n            }], showGridLines: [{\n                type: Input\n            }], xAxis: [{\n                type: Input\n            }], yAxis: [{\n                type: Input\n            }], showXAxisLabel: [{\n                type: Input\n            }], showYAxisLabel: [{\n                type: Input\n            }], roundDomains: [{\n                type: Input\n            }], xAxisLabel: [{\n                type: Input\n            }], yAxisLabel: [{\n                type: Input\n            }], roundEdges: [{\n                type: Input\n            }], strokeColor: [{\n                type: Input\n            }], strokeWidth: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], wrapTicks: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate', { static: false }]\n            }] } });\n\nclass BoxChartModule {\n}\nBoxChartModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BoxChartModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nBoxChartModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BoxChartModule, declarations: [BoxChartComponent, BoxSeriesComponent, BoxComponent], imports: [ChartCommonModule], exports: [BoxChartComponent, BoxSeriesComponent, BoxComponent] });\nBoxChartModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BoxChartModule, imports: [[ChartCommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BoxChartModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [ChartCommonModule],\n                    declarations: [BoxChartComponent, BoxSeriesComponent, BoxComponent],\n                    exports: [BoxChartComponent, BoxSeriesComponent, BoxComponent]\n                }]\n        }] });\n\nfunction getDomain(values, scaleType, autoScale, minVal, maxVal) {\n    let domain = [];\n    if (scaleType === ScaleType.Linear) {\n        values = values.map(v => Number(v));\n        if (!autoScale) {\n            values.push(0);\n        }\n    }\n    if (scaleType === ScaleType.Time || scaleType === ScaleType.Linear) {\n        const min = minVal || minVal === 0 ? minVal : Math.min(...values);\n        const max = maxVal ? maxVal : Math.max(...values);\n        domain = [min, max];\n    }\n    else {\n        domain = values;\n    }\n    return domain;\n}\nfunction getScale(domain, range, scaleType, roundDomains) {\n    switch (scaleType) {\n        case ScaleType.Time:\n            return scaleTime().range(range).domain(domain);\n        case ScaleType.Linear: {\n            const scale = scaleLinear().range(range).domain(domain);\n            if (roundDomains) {\n                return scale.nice();\n            }\n            return scale;\n        }\n        case ScaleType.Ordinal:\n            return scalePoint()\n                .range([range[0], range[1]])\n                .domain(domain.map(r => r.toString()));\n        default:\n            return undefined;\n    }\n}\n\nclass BubbleSeriesComponent {\n    constructor(platformId) {\n        this.platformId = platformId;\n        this.tooltipDisabled = false;\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.placementTypes = PlacementTypes;\n        this.styleTypes = StyleTypes;\n        this.isSSR = false;\n    }\n    ngOnInit() {\n        if (isPlatformServer(this.platformId)) {\n            this.isSSR = true;\n        }\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    update() {\n        this.circles = this.getCircles();\n    }\n    getCircles() {\n        const seriesName = this.data.name;\n        return this.data.series\n            .map((d, i) => {\n            if (typeof d.y !== 'undefined' && typeof d.x !== 'undefined') {\n                const y = d.y;\n                const x = d.x;\n                const r = d.r;\n                const radius = this.rScale(r || 1);\n                const tooltipLabel = formatLabel(d.name);\n                const cx = this.xScaleType === ScaleType.Linear ? this.xScale(Number(x)) : this.xScale(x);\n                const cy = this.yScaleType === ScaleType.Linear ? this.yScale(Number(y)) : this.yScale(y);\n                const color = this.colors.scaleType === ScaleType.Linear ? this.colors.getColor(r) : this.colors.getColor(seriesName);\n                const isActive = !this.activeEntries.length ? true : this.isActive({ name: seriesName });\n                const opacity = isActive ? 1 : 0.3;\n                const data = Object.assign({}, d, {\n                    series: seriesName,\n                    name: d.name,\n                    value: d.y,\n                    x: d.x,\n                    radius: d.r\n                });\n                return {\n                    data,\n                    x,\n                    y,\n                    r,\n                    classNames: [`circle-data-${i}`],\n                    value: y,\n                    label: x,\n                    cx,\n                    cy,\n                    radius,\n                    tooltipLabel,\n                    color,\n                    opacity,\n                    seriesName,\n                    isActive,\n                    transform: `translate(${cx},${cy})`\n                };\n            }\n        })\n            .filter(circle => circle !== undefined);\n    }\n    getTooltipText(circle) {\n        const hasRadius = typeof circle.r !== 'undefined';\n        const hasTooltipLabel = circle.tooltipLabel && circle.tooltipLabel.length;\n        const hasSeriesName = circle.seriesName && circle.seriesName.length;\n        const radiusValue = hasRadius ? formatLabel(circle.r) : '';\n        const xAxisLabel = this.xAxisLabel && this.xAxisLabel !== '' ? `${this.xAxisLabel}:` : '';\n        const yAxisLabel = this.yAxisLabel && this.yAxisLabel !== '' ? `${this.yAxisLabel}:` : '';\n        const x = formatLabel(circle.x);\n        const y = formatLabel(circle.y);\n        const name = hasSeriesName && hasTooltipLabel\n            ? `${circle.seriesName} • ${circle.tooltipLabel}`\n            : circle.seriesName + circle.tooltipLabel;\n        const tooltipTitle = hasSeriesName || hasTooltipLabel ? `<span class=\"tooltip-label\">${escapeLabel(name)}</span>` : '';\n        return `\n      ${tooltipTitle}\n      <span class=\"tooltip-label\">\n        <label>${escapeLabel(xAxisLabel)}</label> ${escapeLabel(x)}<br />\n        <label>${escapeLabel(yAxisLabel)}</label> ${escapeLabel(y)}\n      </span>\n      <span class=\"tooltip-val\">\n        ${escapeLabel(radiusValue)}\n      </span>\n    `;\n    }\n    onClick(data) {\n        this.select.emit(data);\n    }\n    isActive(entry) {\n        if (!this.activeEntries)\n            return false;\n        const item = this.activeEntries.find(d => {\n            return entry.name === d.name;\n        });\n        return item !== undefined;\n    }\n    isVisible(circle) {\n        if (this.activeEntries.length > 0) {\n            return this.isActive({ name: circle.seriesName });\n        }\n        return circle.opacity !== 0;\n    }\n    activateCircle(circle) {\n        circle.barVisible = true;\n        this.activate.emit({ name: this.data.name });\n    }\n    deactivateCircle(circle) {\n        circle.barVisible = false;\n        this.deactivate.emit({ name: this.data.name });\n    }\n    trackBy(index, circle) {\n        return `${circle.data.series} ${circle.data.name}`;\n    }\n}\nBubbleSeriesComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BubbleSeriesComponent, deps: [{ token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Component });\nBubbleSeriesComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: BubbleSeriesComponent, selector: \"g[ngx-charts-bubble-series]\", inputs: { data: \"data\", xScale: \"xScale\", yScale: \"yScale\", rScale: \"rScale\", xScaleType: \"xScaleType\", yScaleType: \"yScaleType\", colors: \"colors\", visibleValue: \"visibleValue\", activeEntries: \"activeEntries\", xAxisLabel: \"xAxisLabel\", yAxisLabel: \"yAxisLabel\", tooltipDisabled: \"tooltipDisabled\", tooltipTemplate: \"tooltipTemplate\" }, outputs: { select: \"select\", activate: \"activate\", deactivate: \"deactivate\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:g *ngFor=\"let circle of circles; trackBy: trackBy\">\n      <svg:g [attr.transform]=\"circle.transform\">\n        <svg:g\n          *ngIf=\"!isSSR\"\n          ngx-charts-circle\n          [@animationState]=\"'active'\"\n          class=\"circle\"\n          [cx]=\"0\"\n          [cy]=\"0\"\n          [r]=\"circle.radius\"\n          [fill]=\"circle.color\"\n          [style.opacity]=\"circle.opacity\"\n          [class.active]=\"circle.isActive\"\n          [pointerEvents]=\"'all'\"\n          [data]=\"circle.value\"\n          [classNames]=\"circle.classNames\"\n          (select)=\"onClick(circle.data)\"\n          (activate)=\"activateCircle(circle)\"\n          (deactivate)=\"deactivateCircle(circle)\"\n          ngx-tooltip\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipPlacement]=\"placementTypes.Top\"\n          [tooltipType]=\"styleTypes.tooltip\"\n          [tooltipTitle]=\"tooltipTemplate ? undefined : getTooltipText(circle)\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [tooltipContext]=\"circle.data\"\n        />\n        <svg:g\n          *ngIf=\"isSSR\"\n          ngx-charts-circle\n          class=\"circle\"\n          [cx]=\"0\"\n          [cy]=\"0\"\n          [r]=\"circle.radius\"\n          [fill]=\"circle.color\"\n          [style.opacity]=\"circle.opacity\"\n          [class.active]=\"circle.isActive\"\n          [pointerEvents]=\"'all'\"\n          [data]=\"circle.value\"\n          [classNames]=\"circle.classNames\"\n          (select)=\"onClick(circle.data)\"\n          (activate)=\"activateCircle(circle)\"\n          (deactivate)=\"deactivateCircle(circle)\"\n          ngx-tooltip\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipPlacement]=\"placementTypes.Top\"\n          [tooltipType]=\"styleTypes.tooltip\"\n          [tooltipTitle]=\"tooltipTemplate ? undefined : getTooltipText(circle)\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [tooltipContext]=\"circle.data\"\n        />\n      </svg:g>\n    </svg:g>\n  `, isInline: true, components: [{ type: CircleComponent, selector: \"g[ngx-charts-circle]\", inputs: [\"cx\", \"cy\", \"r\", \"fill\", \"stroke\", \"data\", \"classNames\", \"circleOpacity\", \"pointerEvents\"], outputs: [\"select\", \"activate\", \"deactivate\"] }], directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: TooltipDirective, selector: \"[ngx-tooltip]\", inputs: [\"tooltipCssClass\", \"tooltipTitle\", \"tooltipAppendToBody\", \"tooltipSpacing\", \"tooltipDisabled\", \"tooltipShowCaret\", \"tooltipPlacement\", \"tooltipAlignment\", \"tooltipType\", \"tooltipCloseOnClickOutside\", \"tooltipCloseOnMouseLeave\", \"tooltipHideTimeout\", \"tooltipShowTimeout\", \"tooltipTemplate\", \"tooltipShowEvent\", \"tooltipContext\", \"tooltipImmediateExit\"], outputs: [\"show\", \"hide\"] }], animations: [\n        trigger('animationState', [\n            transition(':enter', [\n                style({\n                    opacity: 0,\n                    transform: 'scale(0)'\n                }),\n                animate(250, style({ opacity: 1, transform: 'scale(1)' }))\n            ])\n        ])\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BubbleSeriesComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-bubble-series]',\n                    template: `\n    <svg:g *ngFor=\"let circle of circles; trackBy: trackBy\">\n      <svg:g [attr.transform]=\"circle.transform\">\n        <svg:g\n          *ngIf=\"!isSSR\"\n          ngx-charts-circle\n          [@animationState]=\"'active'\"\n          class=\"circle\"\n          [cx]=\"0\"\n          [cy]=\"0\"\n          [r]=\"circle.radius\"\n          [fill]=\"circle.color\"\n          [style.opacity]=\"circle.opacity\"\n          [class.active]=\"circle.isActive\"\n          [pointerEvents]=\"'all'\"\n          [data]=\"circle.value\"\n          [classNames]=\"circle.classNames\"\n          (select)=\"onClick(circle.data)\"\n          (activate)=\"activateCircle(circle)\"\n          (deactivate)=\"deactivateCircle(circle)\"\n          ngx-tooltip\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipPlacement]=\"placementTypes.Top\"\n          [tooltipType]=\"styleTypes.tooltip\"\n          [tooltipTitle]=\"tooltipTemplate ? undefined : getTooltipText(circle)\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [tooltipContext]=\"circle.data\"\n        />\n        <svg:g\n          *ngIf=\"isSSR\"\n          ngx-charts-circle\n          class=\"circle\"\n          [cx]=\"0\"\n          [cy]=\"0\"\n          [r]=\"circle.radius\"\n          [fill]=\"circle.color\"\n          [style.opacity]=\"circle.opacity\"\n          [class.active]=\"circle.isActive\"\n          [pointerEvents]=\"'all'\"\n          [data]=\"circle.value\"\n          [classNames]=\"circle.classNames\"\n          (select)=\"onClick(circle.data)\"\n          (activate)=\"activateCircle(circle)\"\n          (deactivate)=\"deactivateCircle(circle)\"\n          ngx-tooltip\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipPlacement]=\"placementTypes.Top\"\n          [tooltipType]=\"styleTypes.tooltip\"\n          [tooltipTitle]=\"tooltipTemplate ? undefined : getTooltipText(circle)\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [tooltipContext]=\"circle.data\"\n        />\n      </svg:g>\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    animations: [\n                        trigger('animationState', [\n                            transition(':enter', [\n                                style({\n                                    opacity: 0,\n                                    transform: 'scale(0)'\n                                }),\n                                animate(250, style({ opacity: 1, transform: 'scale(1)' }))\n                            ])\n                        ])\n                    ]\n                }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }]; }, propDecorators: { data: [{\n                type: Input\n            }], xScale: [{\n                type: Input\n            }], yScale: [{\n                type: Input\n            }], rScale: [{\n                type: Input\n            }], xScaleType: [{\n                type: Input\n            }], yScaleType: [{\n                type: Input\n            }], colors: [{\n                type: Input\n            }], visibleValue: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], xAxisLabel: [{\n                type: Input\n            }], yAxisLabel: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], tooltipTemplate: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }] } });\n\nclass BubbleChartComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.showGridLines = true;\n        this.legend = false;\n        this.legendTitle = 'Legend';\n        this.legendPosition = LegendPosition.Right;\n        this.xAxis = true;\n        this.yAxis = true;\n        this.trimXAxisTicks = true;\n        this.trimYAxisTicks = true;\n        this.rotateXAxisTicks = true;\n        this.maxXAxisTickLength = 16;\n        this.maxYAxisTickLength = 16;\n        this.roundDomains = false;\n        this.maxRadius = 10;\n        this.minRadius = 3;\n        this.schemeType = ScaleType.Ordinal;\n        this.tooltipDisabled = false;\n        this.wrapTicks = false;\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.scaleType = ScaleType.Linear;\n        this.margin = [10, 20, 10, 20];\n        this.bubblePadding = [0, 0, 0, 0];\n        this.xAxisHeight = 0;\n        this.yAxisWidth = 0;\n        this.activeEntries = [];\n        this.isSSR = false;\n    }\n    ngOnInit() {\n        if (isPlatformServer(this.platformId)) {\n            this.isSSR = true;\n        }\n    }\n    update() {\n        super.update();\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showXAxis: this.xAxis,\n            showYAxis: this.yAxis,\n            xAxisHeight: this.xAxisHeight,\n            yAxisWidth: this.yAxisWidth,\n            showXLabel: this.showXAxisLabel,\n            showYLabel: this.showYAxisLabel,\n            showLegend: this.legend,\n            legendType: this.schemeType,\n            legendPosition: this.legendPosition\n        });\n        this.seriesDomain = this.results.map(d => d.name);\n        this.rDomain = this.getRDomain();\n        this.xDomain = this.getXDomain();\n        this.yDomain = this.getYDomain();\n        this.transform = `translate(${this.dims.xOffset},${this.margin[0]})`;\n        const colorDomain = this.schemeType === ScaleType.Ordinal ? this.seriesDomain : this.rDomain;\n        this.colors = new ColorHelper(this.scheme, this.schemeType, colorDomain, this.customColors);\n        this.data = this.results;\n        this.minRadius = Math.max(this.minRadius, 1);\n        this.maxRadius = Math.max(this.maxRadius, 1);\n        this.rScale = this.getRScale(this.rDomain, [this.minRadius, this.maxRadius]);\n        this.bubblePadding = [0, 0, 0, 0];\n        this.setScales();\n        this.bubblePadding = this.getBubblePadding();\n        this.setScales();\n        this.legendOptions = this.getLegendOptions();\n        this.clipPathId = 'clip' + id().toString();\n        this.clipPath = `url(#${this.clipPathId})`;\n    }\n    hideCircles() {\n        this.deactivateAll();\n    }\n    onClick(data, series) {\n        if (series) {\n            data.series = series.name;\n        }\n        this.select.emit(data);\n    }\n    getBubblePadding() {\n        let yMin = 0;\n        let xMin = 0;\n        let yMax = this.dims.height;\n        let xMax = this.dims.width;\n        for (const s of this.data) {\n            for (const d of s.series) {\n                const r = this.rScale(d.r);\n                const cx = this.xScaleType === ScaleType.Linear ? this.xScale(Number(d.x)) : this.xScale(d.x);\n                const cy = this.yScaleType === ScaleType.Linear ? this.yScale(Number(d.y)) : this.yScale(d.y);\n                xMin = Math.max(r - cx, xMin);\n                yMin = Math.max(r - cy, yMin);\n                yMax = Math.max(cy + r, yMax);\n                xMax = Math.max(cx + r, xMax);\n            }\n        }\n        xMax = Math.max(xMax - this.dims.width, 0);\n        yMax = Math.max(yMax - this.dims.height, 0);\n        return [yMin, xMax, yMax, xMin];\n    }\n    setScales() {\n        let width = this.dims.width;\n        if (this.xScaleMin === undefined && this.xScaleMax === undefined) {\n            width = width - this.bubblePadding[1];\n        }\n        let height = this.dims.height;\n        if (this.yScaleMin === undefined && this.yScaleMax === undefined) {\n            height = height - this.bubblePadding[2];\n        }\n        this.xScale = this.getXScale(this.xDomain, width);\n        this.yScale = this.getYScale(this.yDomain, height);\n    }\n    getYScale(domain, height) {\n        return getScale(domain, [height, this.bubblePadding[0]], this.yScaleType, this.roundDomains);\n    }\n    getXScale(domain, width) {\n        return getScale(domain, [this.bubblePadding[3], width], this.xScaleType, this.roundDomains);\n    }\n    getRScale(domain, range) {\n        const scale = scaleLinear().range(range).domain(domain);\n        return this.roundDomains ? scale.nice() : scale;\n    }\n    getLegendOptions() {\n        const opts = {\n            scaleType: this.schemeType,\n            colors: undefined,\n            domain: [],\n            position: this.legendPosition,\n            title: undefined\n        };\n        if (opts.scaleType === ScaleType.Ordinal) {\n            opts.domain = this.seriesDomain;\n            opts.colors = this.colors;\n            opts.title = this.legendTitle;\n        }\n        else {\n            opts.domain = this.rDomain;\n            opts.colors = this.colors.scale;\n        }\n        return opts;\n    }\n    getXDomain() {\n        const values = [];\n        for (const results of this.results) {\n            for (const d of results.series) {\n                if (!values.includes(d.x)) {\n                    values.push(d.x);\n                }\n            }\n        }\n        this.xScaleType = getScaleType(values);\n        return getDomain(values, this.xScaleType, this.autoScale, this.xScaleMin, this.xScaleMax);\n    }\n    getYDomain() {\n        const values = [];\n        for (const results of this.results) {\n            for (const d of results.series) {\n                if (!values.includes(d.y)) {\n                    values.push(d.y);\n                }\n            }\n        }\n        this.yScaleType = getScaleType(values);\n        return getDomain(values, this.yScaleType, this.autoScale, this.yScaleMin, this.yScaleMax);\n    }\n    getRDomain() {\n        let min = Infinity;\n        let max = -Infinity;\n        for (const results of this.results) {\n            for (const d of results.series) {\n                const value = Number(d.r) || 1;\n                min = Math.min(min, value);\n                max = Math.max(max, value);\n            }\n        }\n        return [min, max];\n    }\n    updateYAxisWidth({ width }) {\n        this.yAxisWidth = width;\n        this.update();\n    }\n    updateXAxisHeight({ height }) {\n        this.xAxisHeight = height;\n        this.update();\n    }\n    onActivate(item) {\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name;\n        });\n        if (idx > -1) {\n            return;\n        }\n        this.activeEntries = [item, ...this.activeEntries];\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    }\n    onDeactivate(item) {\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name;\n        });\n        this.activeEntries.splice(idx, 1);\n        this.activeEntries = [...this.activeEntries];\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    }\n    deactivateAll() {\n        this.activeEntries = [...this.activeEntries];\n        for (const entry of this.activeEntries) {\n            this.deactivate.emit({ value: entry, entries: [] });\n        }\n        this.activeEntries = [];\n    }\n    trackBy(index, item) {\n        return `${item.name}`;\n    }\n}\nBubbleChartComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BubbleChartComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nBubbleChartComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: BubbleChartComponent, selector: \"ngx-charts-bubble-chart\", inputs: { showGridLines: \"showGridLines\", legend: \"legend\", legendTitle: \"legendTitle\", legendPosition: \"legendPosition\", xAxis: \"xAxis\", yAxis: \"yAxis\", showXAxisLabel: \"showXAxisLabel\", showYAxisLabel: \"showYAxisLabel\", xAxisLabel: \"xAxisLabel\", yAxisLabel: \"yAxisLabel\", trimXAxisTicks: \"trimXAxisTicks\", trimYAxisTicks: \"trimYAxisTicks\", rotateXAxisTicks: \"rotateXAxisTicks\", maxXAxisTickLength: \"maxXAxisTickLength\", maxYAxisTickLength: \"maxYAxisTickLength\", xAxisTickFormatting: \"xAxisTickFormatting\", yAxisTickFormatting: \"yAxisTickFormatting\", xAxisTicks: \"xAxisTicks\", yAxisTicks: \"yAxisTicks\", roundDomains: \"roundDomains\", maxRadius: \"maxRadius\", minRadius: \"minRadius\", autoScale: \"autoScale\", schemeType: \"schemeType\", tooltipDisabled: \"tooltipDisabled\", xScaleMin: \"xScaleMin\", xScaleMax: \"xScaleMax\", yScaleMin: \"yScaleMin\", yScaleMax: \"yScaleMax\", wrapTicks: \"wrapTicks\" }, outputs: { activate: \"activate\", deactivate: \"deactivate\" }, host: { listeners: { \"mouseleave\": \"hideCircles()\" } }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [activeEntries]=\"activeEntries\"\n      [legendOptions]=\"legendOptions\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:defs>\n        <svg:clipPath [attr.id]=\"clipPathId\">\n          <svg:rect\n            [attr.width]=\"dims.width + 10\"\n            [attr.height]=\"dims.height + 10\"\n            [attr.transform]=\"'translate(-5, -5)'\"\n          />\n        </svg:clipPath>\n      </svg:defs>\n      <svg:g [attr.transform]=\"transform\" class=\"bubble-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [showGridLines]=\"showGridLines\"\n          [dims]=\"dims\"\n          [xScale]=\"xScale\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        />\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [showGridLines]=\"showGridLines\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        />\n        <svg:rect\n          class=\"bubble-chart-area\"\n          x=\"0\"\n          y=\"0\"\n          [attr.width]=\"dims.width\"\n          [attr.height]=\"dims.height\"\n          style=\"fill: rgb(255, 0, 0); opacity: 0; cursor: 'auto';\"\n          (mouseenter)=\"deactivateAll()\"\n        />\n        <svg:g *ngIf=\"!isSSR\" [attr.clip-path]=\"clipPath\">\n          <svg:g *ngFor=\"let series of data; trackBy: trackBy\" [@animationState]=\"'active'\">\n            <svg:g\n              ngx-charts-bubble-series\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [rScale]=\"rScale\"\n              [xScaleType]=\"xScaleType\"\n              [yScaleType]=\"yScaleType\"\n              [xAxisLabel]=\"xAxisLabel\"\n              [yAxisLabel]=\"yAxisLabel\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [activeEntries]=\"activeEntries\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              (select)=\"onClick($event, series)\"\n              (activate)=\"onActivate($event)\"\n              (deactivate)=\"onDeactivate($event)\"\n            />\n          </svg:g>\n        </svg:g>\n        <svg:g *ngIf=\"isSSR\" [attr.clip-path]=\"clipPath\">\n          <svg:g *ngFor=\"let series of data; trackBy: trackBy\">\n            <svg:g\n              ngx-charts-bubble-series\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [rScale]=\"rScale\"\n              [xScaleType]=\"xScaleType\"\n              [yScaleType]=\"yScaleType\"\n              [xAxisLabel]=\"xAxisLabel\"\n              [yAxisLabel]=\"yAxisLabel\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [activeEntries]=\"activeEntries\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              (select)=\"onClick($event, series)\"\n              (activate)=\"onActivate($event)\"\n              (deactivate)=\"onDeactivate($event)\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: XAxisComponent, selector: \"g[ngx-charts-x-axis]\", inputs: [\"xScale\", \"dims\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"showGridLines\", \"showLabel\", \"labelText\", \"ticks\", \"xAxisTickCount\", \"xOrient\", \"xAxisOffset\", \"wrapTicks\"], outputs: [\"dimensionsChanged\"] }, { type: YAxisComponent, selector: \"g[ngx-charts-y-axis]\", inputs: [\"yScale\", \"dims\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"showGridLines\", \"showLabel\", \"labelText\", \"yAxisTickCount\", \"yOrient\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"yAxisOffset\", \"wrapTicks\"], outputs: [\"dimensionsChanged\"] }, { type: BubbleSeriesComponent, selector: \"g[ngx-charts-bubble-series]\", inputs: [\"data\", \"xScale\", \"yScale\", \"rScale\", \"xScaleType\", \"yScaleType\", \"colors\", \"visibleValue\", \"activeEntries\", \"xAxisLabel\", \"yAxisLabel\", \"tooltipDisabled\", \"tooltipTemplate\"], outputs: [\"select\", \"activate\", \"deactivate\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], animations: [\n        trigger('animationState', [\n            transition(':leave', [\n                style({\n                    opacity: 1\n                }),\n                animate(500, style({\n                    opacity: 0\n                }))\n            ])\n        ])\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BubbleChartComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-bubble-chart', template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [activeEntries]=\"activeEntries\"\n      [legendOptions]=\"legendOptions\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:defs>\n        <svg:clipPath [attr.id]=\"clipPathId\">\n          <svg:rect\n            [attr.width]=\"dims.width + 10\"\n            [attr.height]=\"dims.height + 10\"\n            [attr.transform]=\"'translate(-5, -5)'\"\n          />\n        </svg:clipPath>\n      </svg:defs>\n      <svg:g [attr.transform]=\"transform\" class=\"bubble-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [showGridLines]=\"showGridLines\"\n          [dims]=\"dims\"\n          [xScale]=\"xScale\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        />\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [showGridLines]=\"showGridLines\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        />\n        <svg:rect\n          class=\"bubble-chart-area\"\n          x=\"0\"\n          y=\"0\"\n          [attr.width]=\"dims.width\"\n          [attr.height]=\"dims.height\"\n          style=\"fill: rgb(255, 0, 0); opacity: 0; cursor: 'auto';\"\n          (mouseenter)=\"deactivateAll()\"\n        />\n        <svg:g *ngIf=\"!isSSR\" [attr.clip-path]=\"clipPath\">\n          <svg:g *ngFor=\"let series of data; trackBy: trackBy\" [@animationState]=\"'active'\">\n            <svg:g\n              ngx-charts-bubble-series\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [rScale]=\"rScale\"\n              [xScaleType]=\"xScaleType\"\n              [yScaleType]=\"yScaleType\"\n              [xAxisLabel]=\"xAxisLabel\"\n              [yAxisLabel]=\"yAxisLabel\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [activeEntries]=\"activeEntries\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              (select)=\"onClick($event, series)\"\n              (activate)=\"onActivate($event)\"\n              (deactivate)=\"onDeactivate($event)\"\n            />\n          </svg:g>\n        </svg:g>\n        <svg:g *ngIf=\"isSSR\" [attr.clip-path]=\"clipPath\">\n          <svg:g *ngFor=\"let series of data; trackBy: trackBy\">\n            <svg:g\n              ngx-charts-bubble-series\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [rScale]=\"rScale\"\n              [xScaleType]=\"xScaleType\"\n              [yScaleType]=\"yScaleType\"\n              [xAxisLabel]=\"xAxisLabel\"\n              [yAxisLabel]=\"yAxisLabel\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [activeEntries]=\"activeEntries\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              (select)=\"onClick($event, series)\"\n              (activate)=\"onActivate($event)\"\n              (deactivate)=\"onDeactivate($event)\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, animations: [\n                        trigger('animationState', [\n                            transition(':leave', [\n                                style({\n                                    opacity: 1\n                                }),\n                                animate(500, style({\n                                    opacity: 0\n                                }))\n                            ])\n                        ])\n                    ], styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"] }]\n        }], propDecorators: { showGridLines: [{\n                type: Input\n            }], legend: [{\n                type: Input\n            }], legendTitle: [{\n                type: Input\n            }], legendPosition: [{\n                type: Input\n            }], xAxis: [{\n                type: Input\n            }], yAxis: [{\n                type: Input\n            }], showXAxisLabel: [{\n                type: Input\n            }], showYAxisLabel: [{\n                type: Input\n            }], xAxisLabel: [{\n                type: Input\n            }], yAxisLabel: [{\n                type: Input\n            }], trimXAxisTicks: [{\n                type: Input\n            }], trimYAxisTicks: [{\n                type: Input\n            }], rotateXAxisTicks: [{\n                type: Input\n            }], maxXAxisTickLength: [{\n                type: Input\n            }], maxYAxisTickLength: [{\n                type: Input\n            }], xAxisTickFormatting: [{\n                type: Input\n            }], yAxisTickFormatting: [{\n                type: Input\n            }], xAxisTicks: [{\n                type: Input\n            }], yAxisTicks: [{\n                type: Input\n            }], roundDomains: [{\n                type: Input\n            }], maxRadius: [{\n                type: Input\n            }], minRadius: [{\n                type: Input\n            }], autoScale: [{\n                type: Input\n            }], schemeType: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], xScaleMin: [{\n                type: Input\n            }], xScaleMax: [{\n                type: Input\n            }], yScaleMin: [{\n                type: Input\n            }], yScaleMax: [{\n                type: Input\n            }], wrapTicks: [{\n                type: Input\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }], hideCircles: [{\n                type: HostListener,\n                args: ['mouseleave']\n            }] } });\n\nclass BubbleChartModule {\n}\nBubbleChartModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BubbleChartModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nBubbleChartModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BubbleChartModule, declarations: [BubbleChartComponent, BubbleSeriesComponent], imports: [ChartCommonModule], exports: [BubbleChartComponent, BubbleSeriesComponent] });\nBubbleChartModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BubbleChartModule, imports: [[ChartCommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BubbleChartModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [ChartCommonModule],\n                    declarations: [BubbleChartComponent, BubbleSeriesComponent],\n                    exports: [BubbleChartComponent, BubbleSeriesComponent]\n                }]\n        }] });\n\nclass HeatMapCellComponent {\n    constructor(element) {\n        this.gradient = false;\n        this.animations = true;\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.barOrientation = BarOrientation;\n        this.element = element.nativeElement;\n    }\n    ngOnChanges(changes) {\n        this.transform = `translate(${this.x} , ${this.y})`;\n        this.startOpacity = 0.3;\n        this.gradientId = 'grad' + id().toString();\n        this.gradientUrl = `url(#${this.gradientId})`;\n        this.gradientStops = this.getGradientStops();\n        if (this.animations) {\n            this.loadAnimation();\n        }\n    }\n    getGradientStops() {\n        return [\n            {\n                offset: 0,\n                color: this.fill,\n                opacity: this.startOpacity\n            },\n            {\n                offset: 100,\n                color: this.fill,\n                opacity: 1\n            }\n        ];\n    }\n    loadAnimation() {\n        const node = select(this.element).select('.cell');\n        node.attr('opacity', 0);\n        this.animateToCurrentForm();\n    }\n    animateToCurrentForm() {\n        const node = select(this.element).select('.cell');\n        node.transition().duration(750).attr('opacity', 1);\n    }\n    onClick() {\n        this.select.emit(this.data);\n    }\n    onMouseEnter() {\n        this.activate.emit(this.data);\n    }\n    onMouseLeave() {\n        this.deactivate.emit(this.data);\n    }\n}\nHeatMapCellComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: HeatMapCellComponent, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\nHeatMapCellComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: HeatMapCellComponent, selector: \"g[ngx-charts-heat-map-cell]\", inputs: { fill: \"fill\", x: \"x\", y: \"y\", width: \"width\", height: \"height\", data: \"data\", gradient: \"gradient\", animations: \"animations\" }, outputs: { select: \"select\", activate: \"activate\", deactivate: \"deactivate\" }, host: { listeners: { \"mouseenter\": \"onMouseEnter()\", \"mouseleave\": \"onMouseLeave()\" } }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:g [attr.transform]=\"transform\" class=\"cell\">\n      <defs *ngIf=\"gradient\">\n        <svg:g\n          ngx-charts-svg-linear-gradient\n          [orientation]=\"barOrientation.Vertical\"\n          [name]=\"gradientId\"\n          [stops]=\"gradientStops\"\n        />\n      </defs>\n      <svg:rect\n        [attr.fill]=\"gradient ? gradientUrl : fill\"\n        rx=\"3\"\n        [attr.width]=\"width\"\n        [attr.height]=\"height\"\n        class=\"cell\"\n        (click)=\"onClick()\"\n      />\n    </svg:g>\n  `, isInline: true, components: [{ type: SvgLinearGradientComponent, selector: \"g[ngx-charts-svg-linear-gradient]\", inputs: [\"orientation\", \"name\", \"stops\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: HeatMapCellComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-heat-map-cell]',\n                    template: `\n    <svg:g [attr.transform]=\"transform\" class=\"cell\">\n      <defs *ngIf=\"gradient\">\n        <svg:g\n          ngx-charts-svg-linear-gradient\n          [orientation]=\"barOrientation.Vertical\"\n          [name]=\"gradientId\"\n          [stops]=\"gradientStops\"\n        />\n      </defs>\n      <svg:rect\n        [attr.fill]=\"gradient ? gradientUrl : fill\"\n        rx=\"3\"\n        [attr.width]=\"width\"\n        [attr.height]=\"height\"\n        class=\"cell\"\n        (click)=\"onClick()\"\n      />\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { fill: [{\n                type: Input\n            }], x: [{\n                type: Input\n            }], y: [{\n                type: Input\n            }], width: [{\n                type: Input\n            }], height: [{\n                type: Input\n            }], data: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], onMouseEnter: [{\n                type: HostListener,\n                args: ['mouseenter']\n            }], onMouseLeave: [{\n                type: HostListener,\n                args: ['mouseleave']\n            }] } });\n\nclass HeatCellSeriesComponent {\n    constructor() {\n        this.tooltipDisabled = false;\n        this.animations = true;\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.placementTypes = PlacementTypes;\n        this.styleTypes = StyleTypes;\n    }\n    ngOnInit() {\n        if (!this.tooltipText) {\n            this.tooltipText = this.getTooltipText;\n        }\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    update() {\n        this.cells = this.getCells();\n    }\n    getCells() {\n        const cells = [];\n        this.data.map(row => {\n            row.series.map(cell => {\n                const value = cell.value;\n                cell.series = row.name;\n                cells.push({\n                    row,\n                    cell,\n                    x: this.xScale(row.name),\n                    y: this.yScale(cell.name),\n                    width: this.xScale.bandwidth(),\n                    height: this.yScale.bandwidth(),\n                    fill: this.colors.getColor(value),\n                    data: value,\n                    label: formatLabel(cell.name),\n                    series: row.name\n                });\n            });\n        });\n        return cells;\n    }\n    getTooltipText({ label, data, series }) {\n        return `\n      <span class=\"tooltip-label\">${escapeLabel(series)} • ${escapeLabel(label)}</span>\n      <span class=\"tooltip-val\">${data.toLocaleString()}</span>\n    `;\n    }\n    trackBy(index, item) {\n        return item.label;\n    }\n    onClick(data) {\n        this.select.emit(data);\n    }\n}\nHeatCellSeriesComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: HeatCellSeriesComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nHeatCellSeriesComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: HeatCellSeriesComponent, selector: \"g[ngx-charts-heat-map-cell-series]\", inputs: { data: \"data\", colors: \"colors\", xScale: \"xScale\", yScale: \"yScale\", gradient: \"gradient\", tooltipDisabled: \"tooltipDisabled\", tooltipText: \"tooltipText\", tooltipTemplate: \"tooltipTemplate\", animations: \"animations\" }, outputs: { select: \"select\", activate: \"activate\", deactivate: \"deactivate\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:g\n      ngx-charts-heat-map-cell\n      *ngFor=\"let c of cells; trackBy: trackBy\"\n      [x]=\"c.x\"\n      [y]=\"c.y\"\n      [width]=\"c.width\"\n      [height]=\"c.height\"\n      [fill]=\"c.fill\"\n      [data]=\"c.data\"\n      (select)=\"onClick(c.cell)\"\n      (activate)=\"activate.emit(c.cell)\"\n      (deactivate)=\"deactivate.emit(c.cell)\"\n      [gradient]=\"gradient\"\n      [animations]=\"animations\"\n      ngx-tooltip\n      [tooltipDisabled]=\"tooltipDisabled\"\n      [tooltipPlacement]=\"placementTypes.Top\"\n      [tooltipType]=\"styleTypes.tooltip\"\n      [tooltipTitle]=\"tooltipTemplate ? undefined : tooltipText(c)\"\n      [tooltipTemplate]=\"tooltipTemplate\"\n      [tooltipContext]=\"{ series: c.series, name: c.label, value: c.data }\"\n    ></svg:g>\n  `, isInline: true, components: [{ type: HeatMapCellComponent, selector: \"g[ngx-charts-heat-map-cell]\", inputs: [\"fill\", \"x\", \"y\", \"width\", \"height\", \"data\", \"gradient\", \"animations\"], outputs: [\"select\", \"activate\", \"deactivate\"] }], directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: TooltipDirective, selector: \"[ngx-tooltip]\", inputs: [\"tooltipCssClass\", \"tooltipTitle\", \"tooltipAppendToBody\", \"tooltipSpacing\", \"tooltipDisabled\", \"tooltipShowCaret\", \"tooltipPlacement\", \"tooltipAlignment\", \"tooltipType\", \"tooltipCloseOnClickOutside\", \"tooltipCloseOnMouseLeave\", \"tooltipHideTimeout\", \"tooltipShowTimeout\", \"tooltipTemplate\", \"tooltipShowEvent\", \"tooltipContext\", \"tooltipImmediateExit\"], outputs: [\"show\", \"hide\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: HeatCellSeriesComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-heat-map-cell-series]',\n                    template: `\n    <svg:g\n      ngx-charts-heat-map-cell\n      *ngFor=\"let c of cells; trackBy: trackBy\"\n      [x]=\"c.x\"\n      [y]=\"c.y\"\n      [width]=\"c.width\"\n      [height]=\"c.height\"\n      [fill]=\"c.fill\"\n      [data]=\"c.data\"\n      (select)=\"onClick(c.cell)\"\n      (activate)=\"activate.emit(c.cell)\"\n      (deactivate)=\"deactivate.emit(c.cell)\"\n      [gradient]=\"gradient\"\n      [animations]=\"animations\"\n      ngx-tooltip\n      [tooltipDisabled]=\"tooltipDisabled\"\n      [tooltipPlacement]=\"placementTypes.Top\"\n      [tooltipType]=\"styleTypes.tooltip\"\n      [tooltipTitle]=\"tooltipTemplate ? undefined : tooltipText(c)\"\n      [tooltipTemplate]=\"tooltipTemplate\"\n      [tooltipContext]=\"{ series: c.series, name: c.label, value: c.data }\"\n    ></svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], propDecorators: { data: [{\n                type: Input\n            }], colors: [{\n                type: Input\n            }], xScale: [{\n                type: Input\n            }], yScale: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], tooltipText: [{\n                type: Input\n            }], tooltipTemplate: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }] } });\n\nclass HeatMapComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.legendTitle = 'Legend';\n        this.legendPosition = LegendPosition.Right;\n        this.innerPadding = 8;\n        this.trimXAxisTicks = true;\n        this.trimYAxisTicks = true;\n        this.rotateXAxisTicks = true;\n        this.maxXAxisTickLength = 16;\n        this.maxYAxisTickLength = 16;\n        this.tooltipDisabled = false;\n        this.activeEntries = [];\n        this.wrapTicks = false;\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.margin = [10, 20, 10, 20];\n        this.xAxisHeight = 0;\n        this.yAxisWidth = 0;\n        this.scaleType = ScaleType.Linear;\n    }\n    update() {\n        super.update();\n        this.formatDates();\n        this.xDomain = this.getXDomain();\n        this.yDomain = this.getYDomain();\n        this.valueDomain = this.getValueDomain();\n        this.scaleType = getScaleType(this.valueDomain, false);\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showXAxis: this.xAxis,\n            showYAxis: this.yAxis,\n            xAxisHeight: this.xAxisHeight,\n            yAxisWidth: this.yAxisWidth,\n            showXLabel: this.showXAxisLabel,\n            showYLabel: this.showYAxisLabel,\n            showLegend: this.legend,\n            legendType: this.scaleType,\n            legendPosition: this.legendPosition\n        });\n        if (this.scaleType === ScaleType.Linear) {\n            let min = this.min;\n            let max = this.max;\n            if (!this.min) {\n                min = Math.min(0, ...this.valueDomain);\n            }\n            if (!this.max) {\n                max = Math.max(...this.valueDomain);\n            }\n            this.valueDomain = [min, max];\n        }\n        this.xScale = this.getXScale();\n        this.yScale = this.getYScale();\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n        this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n        this.rects = this.getRects();\n    }\n    getXDomain() {\n        const domain = [];\n        for (const group of this.results) {\n            if (!domain.includes(group.name)) {\n                domain.push(group.name);\n            }\n        }\n        return domain;\n    }\n    getYDomain() {\n        const domain = [];\n        for (const group of this.results) {\n            for (const d of group.series) {\n                if (!domain.includes(d.name)) {\n                    domain.push(d.name);\n                }\n            }\n        }\n        return domain;\n    }\n    getValueDomain() {\n        const domain = [];\n        for (const group of this.results) {\n            for (const d of group.series) {\n                if (!domain.includes(d.value)) {\n                    domain.push(d.value);\n                }\n            }\n        }\n        return domain;\n    }\n    /**\n     * Converts the input to gap paddingInner in fraction\n     * Supports the following inputs:\n     *    Numbers: 8\n     *    Strings: \"8\", \"8px\", \"8%\"\n     *    Arrays: [8,2], \"8,2\", \"[8,2]\"\n     *    Mixed: [8,\"2%\"], [\"8px\",\"2%\"], \"8,2%\", \"[8,2%]\"\n     *\n     * @memberOf HeatMapComponent\n     */\n    getDimension(value, index = 0, N, L) {\n        if (typeof value === 'string') {\n            value = value\n                .replace('[', '')\n                .replace(']', '')\n                .replace('px', '')\n                // tslint:disable-next-line: quotemark\n                .replace(\"'\", '');\n            if (value.includes(',')) {\n                value = value.split(',');\n            }\n        }\n        if (Array.isArray(value) && typeof index === 'number') {\n            return this.getDimension(value[index], null, N, L);\n        }\n        if (typeof value === 'string' && value.includes('%')) {\n            return +value.replace('%', '') / 100;\n        }\n        return N / (L / +value + 1);\n    }\n    getXScale() {\n        const f = this.getDimension(this.innerPadding, 0, this.xDomain.length, this.dims.width);\n        return scaleBand().rangeRound([0, this.dims.width]).domain(this.xDomain).paddingInner(f);\n    }\n    getYScale() {\n        const f = this.getDimension(this.innerPadding, 1, this.yDomain.length, this.dims.height);\n        return scaleBand().rangeRound([this.dims.height, 0]).domain(this.yDomain).paddingInner(f);\n    }\n    getRects() {\n        const rects = [];\n        this.xDomain.map(xVal => {\n            this.yDomain.map(yVal => {\n                rects.push({\n                    x: this.xScale(xVal),\n                    y: this.yScale(yVal),\n                    rx: 3,\n                    width: this.xScale.bandwidth(),\n                    height: this.yScale.bandwidth(),\n                    fill: 'rgba(200,200,200,0.03)'\n                });\n            });\n        });\n        return rects;\n    }\n    onClick(data) {\n        this.select.emit(data);\n    }\n    setColors() {\n        this.colors = new ColorHelper(this.scheme, this.scaleType, this.valueDomain);\n    }\n    getLegendOptions() {\n        return {\n            scaleType: this.scaleType,\n            domain: this.valueDomain,\n            colors: this.scaleType === ScaleType.Ordinal ? this.colors : this.colors.scale,\n            title: this.scaleType === ScaleType.Ordinal ? this.legendTitle : undefined,\n            position: this.legendPosition\n        };\n    }\n    updateYAxisWidth({ width }) {\n        this.yAxisWidth = width;\n        this.update();\n    }\n    updateXAxisHeight({ height }) {\n        this.xAxisHeight = height;\n        this.update();\n    }\n    onActivate(event, group, fromLegend = false) {\n        const item = Object.assign({}, event);\n        if (group) {\n            item.series = group.name;\n        }\n        const items = this.results\n            .map(g => g.series)\n            .flat()\n            .filter(i => {\n            if (fromLegend) {\n                return i.label === item.name;\n            }\n            else {\n                return i.name === item.name && i.series === item.series;\n            }\n        });\n        this.activeEntries = [...items];\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    }\n    onDeactivate(event, group, fromLegend = false) {\n        const item = Object.assign({}, event);\n        if (group) {\n            item.series = group.name;\n        }\n        this.activeEntries = this.activeEntries.filter(i => {\n            if (fromLegend) {\n                return i.label !== item.name;\n            }\n            else {\n                return !(i.name === item.name && i.series === item.series);\n            }\n        });\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    }\n}\nHeatMapComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: HeatMapComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nHeatMapComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: HeatMapComponent, selector: \"ngx-charts-heat-map\", inputs: { legend: \"legend\", legendTitle: \"legendTitle\", legendPosition: \"legendPosition\", xAxis: \"xAxis\", yAxis: \"yAxis\", showXAxisLabel: \"showXAxisLabel\", showYAxisLabel: \"showYAxisLabel\", xAxisLabel: \"xAxisLabel\", yAxisLabel: \"yAxisLabel\", gradient: \"gradient\", innerPadding: \"innerPadding\", trimXAxisTicks: \"trimXAxisTicks\", trimYAxisTicks: \"trimYAxisTicks\", rotateXAxisTicks: \"rotateXAxisTicks\", maxXAxisTickLength: \"maxXAxisTickLength\", maxYAxisTickLength: \"maxYAxisTickLength\", xAxisTickFormatting: \"xAxisTickFormatting\", yAxisTickFormatting: \"yAxisTickFormatting\", xAxisTicks: \"xAxisTicks\", yAxisTicks: \"yAxisTicks\", tooltipDisabled: \"tooltipDisabled\", tooltipText: \"tooltipText\", min: \"min\", max: \"max\", activeEntries: \"activeEntries\", wrapTicks: \"wrapTicks\" }, outputs: { activate: \"activate\", deactivate: \"deactivate\" }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [animations]=\"animations\"\n      [legendOptions]=\"legendOptions\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"heat-map chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:rect\n          *ngFor=\"let rect of rects\"\n          [attr.x]=\"rect.x\"\n          [attr.y]=\"rect.y\"\n          [attr.rx]=\"rect.rx\"\n          [attr.width]=\"rect.width\"\n          [attr.height]=\"rect.height\"\n          [attr.fill]=\"rect.fill\"\n        />\n        <svg:g\n          ngx-charts-heat-map-cell-series\n          [xScale]=\"xScale\"\n          [yScale]=\"yScale\"\n          [colors]=\"colors\"\n          [data]=\"results\"\n          [gradient]=\"gradient\"\n          [animations]=\"animations\"\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [tooltipText]=\"tooltipText\"\n          (select)=\"onClick($event)\"\n          (activate)=\"onActivate($event, undefined)\"\n          (deactivate)=\"onDeactivate($event, undefined)\"\n        />\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: XAxisComponent, selector: \"g[ngx-charts-x-axis]\", inputs: [\"xScale\", \"dims\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"showGridLines\", \"showLabel\", \"labelText\", \"ticks\", \"xAxisTickCount\", \"xOrient\", \"xAxisOffset\", \"wrapTicks\"], outputs: [\"dimensionsChanged\"] }, { type: YAxisComponent, selector: \"g[ngx-charts-y-axis]\", inputs: [\"yScale\", \"dims\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"showGridLines\", \"showLabel\", \"labelText\", \"yAxisTickCount\", \"yOrient\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"yAxisOffset\", \"wrapTicks\"], outputs: [\"dimensionsChanged\"] }, { type: HeatCellSeriesComponent, selector: \"g[ngx-charts-heat-map-cell-series]\", inputs: [\"data\", \"colors\", \"xScale\", \"yScale\", \"gradient\", \"tooltipDisabled\", \"tooltipText\", \"tooltipTemplate\", \"animations\"], outputs: [\"select\", \"activate\", \"deactivate\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: HeatMapComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-heat-map', template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [animations]=\"animations\"\n      [legendOptions]=\"legendOptions\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"heat-map chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:rect\n          *ngFor=\"let rect of rects\"\n          [attr.x]=\"rect.x\"\n          [attr.y]=\"rect.y\"\n          [attr.rx]=\"rect.rx\"\n          [attr.width]=\"rect.width\"\n          [attr.height]=\"rect.height\"\n          [attr.fill]=\"rect.fill\"\n        />\n        <svg:g\n          ngx-charts-heat-map-cell-series\n          [xScale]=\"xScale\"\n          [yScale]=\"yScale\"\n          [colors]=\"colors\"\n          [data]=\"results\"\n          [gradient]=\"gradient\"\n          [animations]=\"animations\"\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [tooltipText]=\"tooltipText\"\n          (select)=\"onClick($event)\"\n          (activate)=\"onActivate($event, undefined)\"\n          (deactivate)=\"onDeactivate($event, undefined)\"\n        />\n      </svg:g>\n    </ngx-charts-chart>\n  `, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"] }]\n        }], propDecorators: { legend: [{\n                type: Input\n            }], legendTitle: [{\n                type: Input\n            }], legendPosition: [{\n                type: Input\n            }], xAxis: [{\n                type: Input\n            }], yAxis: [{\n                type: Input\n            }], showXAxisLabel: [{\n                type: Input\n            }], showYAxisLabel: [{\n                type: Input\n            }], xAxisLabel: [{\n                type: Input\n            }], yAxisLabel: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], innerPadding: [{\n                type: Input\n            }], trimXAxisTicks: [{\n                type: Input\n            }], trimYAxisTicks: [{\n                type: Input\n            }], rotateXAxisTicks: [{\n                type: Input\n            }], maxXAxisTickLength: [{\n                type: Input\n            }], maxYAxisTickLength: [{\n                type: Input\n            }], xAxisTickFormatting: [{\n                type: Input\n            }], yAxisTickFormatting: [{\n                type: Input\n            }], xAxisTicks: [{\n                type: Input\n            }], yAxisTicks: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], tooltipText: [{\n                type: Input\n            }], min: [{\n                type: Input\n            }], max: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], wrapTicks: [{\n                type: Input\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }] } });\n\nclass HeatMapModule {\n}\nHeatMapModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: HeatMapModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nHeatMapModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: HeatMapModule, declarations: [HeatMapCellComponent, HeatCellSeriesComponent, HeatMapComponent], imports: [ChartCommonModule], exports: [HeatMapCellComponent, HeatCellSeriesComponent, HeatMapComponent] });\nHeatMapModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: HeatMapModule, imports: [[ChartCommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: HeatMapModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [ChartCommonModule],\n                    declarations: [HeatMapCellComponent, HeatCellSeriesComponent, HeatMapComponent],\n                    exports: [HeatMapCellComponent, HeatCellSeriesComponent, HeatMapComponent]\n                }]\n        }] });\n\nclass LineComponent {\n    constructor(element, platformId) {\n        this.element = element;\n        this.platformId = platformId;\n        this.fill = 'none';\n        this.animations = true;\n        // @Output() select = new EventEmitter();\n        this.initialized = false;\n        this.isSSR = false;\n    }\n    ngOnInit() {\n        if (isPlatformServer(this.platformId)) {\n            this.isSSR = true;\n        }\n    }\n    ngOnChanges(changes) {\n        if (!this.initialized) {\n            this.initialized = true;\n            this.initialPath = this.path;\n        }\n        else {\n            this.updatePathEl();\n        }\n    }\n    updatePathEl() {\n        const node = select(this.element.nativeElement).select('.line');\n        if (this.animations) {\n            node.transition().duration(750).attr('d', this.path);\n        }\n        else {\n            node.attr('d', this.path);\n        }\n    }\n}\nLineComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: LineComponent, deps: [{ token: i0.ElementRef }, { token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Component });\nLineComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: LineComponent, selector: \"g[ngx-charts-line]\", inputs: { path: \"path\", stroke: \"stroke\", data: \"data\", fill: \"fill\", animations: \"animations\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:g *ngIf=\"!isSSR\">\n      <svg:path\n        [@animationState]=\"'active'\"\n        class=\"line\"\n        [attr.d]=\"initialPath\"\n        [attr.fill]=\"fill\"\n        [attr.stroke]=\"stroke\"\n        stroke-width=\"1.5px\"\n      />\n    </svg:g>\n    <svg:g *ngIf=\"isSSR\">\n      <svg:path class=\"line\" [attr.d]=\"initialPath\" [attr.fill]=\"fill\" [attr.stroke]=\"stroke\" stroke-width=\"1.5px\" />\n    </svg:g>\n  `, isInline: true, directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], animations: [\n        trigger('animationState', [\n            transition(':enter', [\n                style({\n                    strokeDasharray: 2000,\n                    strokeDashoffset: 2000\n                }),\n                animate(1000, style({\n                    strokeDashoffset: 0\n                }))\n            ])\n        ])\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: LineComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-line]',\n                    template: `\n    <svg:g *ngIf=\"!isSSR\">\n      <svg:path\n        [@animationState]=\"'active'\"\n        class=\"line\"\n        [attr.d]=\"initialPath\"\n        [attr.fill]=\"fill\"\n        [attr.stroke]=\"stroke\"\n        stroke-width=\"1.5px\"\n      />\n    </svg:g>\n    <svg:g *ngIf=\"isSSR\">\n      <svg:path class=\"line\" [attr.d]=\"initialPath\" [attr.fill]=\"fill\" [attr.stroke]=\"stroke\" stroke-width=\"1.5px\" />\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    animations: [\n                        trigger('animationState', [\n                            transition(':enter', [\n                                style({\n                                    strokeDasharray: 2000,\n                                    strokeDashoffset: 2000\n                                }),\n                                animate(1000, style({\n                                    strokeDashoffset: 0\n                                }))\n                            ])\n                        ])\n                    ]\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }]; }, propDecorators: { path: [{\n                type: Input\n            }], stroke: [{\n                type: Input\n            }], data: [{\n                type: Input\n            }], fill: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }] } });\n\nclass LineSeriesComponent {\n    constructor() {\n        this.animations = true;\n        this.barOrientation = BarOrientation;\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    update() {\n        this.updateGradients();\n        const data = this.sortData(this.data.series);\n        const lineGen = this.getLineGenerator();\n        this.path = lineGen(data) || '';\n        const areaGen = this.getAreaGenerator();\n        this.areaPath = areaGen(data) || '';\n        if (this.hasRange) {\n            const range = this.getRangeGenerator();\n            this.outerPath = range(data) || '';\n        }\n        if (this.hasGradient) {\n            this.stroke = this.gradientUrl;\n            const values = this.data.series.map(d => d.value);\n            const max = Math.max(...values);\n            const min = Math.min(...values);\n            if (max === min) {\n                this.stroke = this.colors.getColor(max);\n            }\n        }\n        else {\n            this.stroke = this.colors.getColor(this.data.name);\n        }\n    }\n    getLineGenerator() {\n        return line()\n            .x(d => {\n            const label = d.name;\n            let value;\n            if (this.scaleType === ScaleType.Time) {\n                value = this.xScale(label);\n            }\n            else if (this.scaleType === ScaleType.Linear) {\n                value = this.xScale(Number(label));\n            }\n            else {\n                value = this.xScale(label);\n            }\n            return value;\n        })\n            .y(d => this.yScale(d.value))\n            .curve(this.curve);\n    }\n    getRangeGenerator() {\n        return area()\n            .x(d => {\n            const label = d.name;\n            let value;\n            if (this.scaleType === ScaleType.Time) {\n                value = this.xScale(label);\n            }\n            else if (this.scaleType === ScaleType.Linear) {\n                value = this.xScale(Number(label));\n            }\n            else {\n                value = this.xScale(label);\n            }\n            return value;\n        })\n            .y0(d => this.yScale(typeof d.min === 'number' ? d.min : d.value))\n            .y1(d => this.yScale(typeof d.max === 'number' ? d.max : d.value))\n            .curve(this.curve);\n    }\n    getAreaGenerator() {\n        const xProperty = d => {\n            const label = d.name;\n            return this.xScale(label);\n        };\n        return area()\n            .x(xProperty)\n            .y0(() => this.yScale.range()[0])\n            .y1(d => this.yScale(d.value))\n            .curve(this.curve);\n    }\n    sortData(data) {\n        if (this.scaleType === ScaleType.Linear) {\n            data = sortLinear(data, 'name');\n        }\n        else if (this.scaleType === ScaleType.Time) {\n            data = sortByTime(data, 'name');\n        }\n        else {\n            data = sortByDomain(data, 'name', 'asc', this.xScale.domain());\n        }\n        return data;\n    }\n    updateGradients() {\n        if (this.colors.scaleType === ScaleType.Linear) {\n            this.hasGradient = true;\n            this.gradientId = 'grad' + id().toString();\n            this.gradientUrl = `url(#${this.gradientId})`;\n            const values = this.data.series.map(d => d.value);\n            const max = Math.max(...values);\n            const min = Math.min(...values);\n            this.gradientStops = this.colors.getLinearGradientStops(max, min);\n            this.areaGradientStops = this.colors.getLinearGradientStops(max);\n        }\n        else {\n            this.hasGradient = false;\n            this.gradientStops = undefined;\n            this.areaGradientStops = undefined;\n        }\n    }\n    isActive(entry) {\n        if (!this.activeEntries)\n            return false;\n        const item = this.activeEntries.find(d => {\n            return entry.name === d.name;\n        });\n        return item !== undefined;\n    }\n    isInactive(entry) {\n        if (!this.activeEntries || this.activeEntries.length === 0)\n            return false;\n        const item = this.activeEntries.find(d => {\n            return entry.name === d.name;\n        });\n        return item === undefined;\n    }\n}\nLineSeriesComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: LineSeriesComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nLineSeriesComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: LineSeriesComponent, selector: \"g[ngx-charts-line-series]\", inputs: { data: \"data\", xScale: \"xScale\", yScale: \"yScale\", colors: \"colors\", scaleType: \"scaleType\", curve: \"curve\", activeEntries: \"activeEntries\", rangeFillOpacity: \"rangeFillOpacity\", hasRange: \"hasRange\", animations: \"animations\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:g>\n      <defs>\n        <svg:g\n          ngx-charts-svg-linear-gradient\n          *ngIf=\"hasGradient\"\n          [orientation]=\"barOrientation.Vertical\"\n          [name]=\"gradientId\"\n          [stops]=\"gradientStops\"\n        />\n      </defs>\n      <svg:g\n        ngx-charts-area\n        class=\"line-highlight\"\n        [data]=\"data\"\n        [path]=\"areaPath\"\n        [fill]=\"hasGradient ? gradientUrl : colors.getColor(data.name)\"\n        [opacity]=\"0.25\"\n        [startOpacity]=\"0\"\n        [gradient]=\"true\"\n        [stops]=\"areaGradientStops\"\n        [class.active]=\"isActive(data)\"\n        [class.inactive]=\"isInactive(data)\"\n        [animations]=\"animations\"\n      />\n      <svg:g\n        ngx-charts-line\n        class=\"line-series\"\n        [data]=\"data\"\n        [path]=\"path\"\n        [stroke]=\"stroke\"\n        [animations]=\"animations\"\n        [class.active]=\"isActive(data)\"\n        [class.inactive]=\"isInactive(data)\"\n      />\n      <svg:g\n        ngx-charts-area\n        *ngIf=\"hasRange\"\n        class=\"line-series-range\"\n        [data]=\"data\"\n        [path]=\"outerPath\"\n        [fill]=\"hasGradient ? gradientUrl : colors.getColor(data.name)\"\n        [class.active]=\"isActive(data)\"\n        [class.inactive]=\"isInactive(data)\"\n        [opacity]=\"rangeFillOpacity\"\n        [animations]=\"animations\"\n      />\n    </svg:g>\n  `, isInline: true, components: [{ type: SvgLinearGradientComponent, selector: \"g[ngx-charts-svg-linear-gradient]\", inputs: [\"orientation\", \"name\", \"stops\"] }, { type: AreaComponent, selector: \"g[ngx-charts-area]\", inputs: [\"data\", \"path\", \"startingPath\", \"fill\", \"opacity\", \"startOpacity\", \"endOpacity\", \"gradient\", \"stops\", \"animations\"], outputs: [\"select\"] }, { type: LineComponent, selector: \"g[ngx-charts-line]\", inputs: [\"path\", \"stroke\", \"data\", \"fill\", \"animations\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: LineSeriesComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-line-series]',\n                    template: `\n    <svg:g>\n      <defs>\n        <svg:g\n          ngx-charts-svg-linear-gradient\n          *ngIf=\"hasGradient\"\n          [orientation]=\"barOrientation.Vertical\"\n          [name]=\"gradientId\"\n          [stops]=\"gradientStops\"\n        />\n      </defs>\n      <svg:g\n        ngx-charts-area\n        class=\"line-highlight\"\n        [data]=\"data\"\n        [path]=\"areaPath\"\n        [fill]=\"hasGradient ? gradientUrl : colors.getColor(data.name)\"\n        [opacity]=\"0.25\"\n        [startOpacity]=\"0\"\n        [gradient]=\"true\"\n        [stops]=\"areaGradientStops\"\n        [class.active]=\"isActive(data)\"\n        [class.inactive]=\"isInactive(data)\"\n        [animations]=\"animations\"\n      />\n      <svg:g\n        ngx-charts-line\n        class=\"line-series\"\n        [data]=\"data\"\n        [path]=\"path\"\n        [stroke]=\"stroke\"\n        [animations]=\"animations\"\n        [class.active]=\"isActive(data)\"\n        [class.inactive]=\"isInactive(data)\"\n      />\n      <svg:g\n        ngx-charts-area\n        *ngIf=\"hasRange\"\n        class=\"line-series-range\"\n        [data]=\"data\"\n        [path]=\"outerPath\"\n        [fill]=\"hasGradient ? gradientUrl : colors.getColor(data.name)\"\n        [class.active]=\"isActive(data)\"\n        [class.inactive]=\"isInactive(data)\"\n        [opacity]=\"rangeFillOpacity\"\n        [animations]=\"animations\"\n      />\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], propDecorators: { data: [{\n                type: Input\n            }], xScale: [{\n                type: Input\n            }], yScale: [{\n                type: Input\n            }], colors: [{\n                type: Input\n            }], scaleType: [{\n                type: Input\n            }], curve: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], rangeFillOpacity: [{\n                type: Input\n            }], hasRange: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }] } });\n\nclass LineChartComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.legendTitle = 'Legend';\n        this.legendPosition = LegendPosition.Right;\n        this.showGridLines = true;\n        this.curve = curveLinear;\n        this.activeEntries = [];\n        this.trimXAxisTicks = true;\n        this.trimYAxisTicks = true;\n        this.rotateXAxisTicks = true;\n        this.maxXAxisTickLength = 16;\n        this.maxYAxisTickLength = 16;\n        this.roundDomains = false;\n        this.tooltipDisabled = false;\n        this.showRefLines = false;\n        this.showRefLabels = true;\n        this.wrapTicks = false;\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.margin = [10, 20, 10, 20];\n        this.xAxisHeight = 0;\n        this.yAxisWidth = 0;\n        this.timelineHeight = 50;\n        this.timelinePadding = 10;\n        this.isSSR = false;\n    }\n    ngOnInit() {\n        if (isPlatformServer(this.platformId)) {\n            this.isSSR = true;\n        }\n    }\n    update() {\n        super.update();\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showXAxis: this.xAxis,\n            showYAxis: this.yAxis,\n            xAxisHeight: this.xAxisHeight,\n            yAxisWidth: this.yAxisWidth,\n            showXLabel: this.showXAxisLabel,\n            showYLabel: this.showYAxisLabel,\n            showLegend: this.legend,\n            legendType: this.schemeType,\n            legendPosition: this.legendPosition\n        });\n        if (this.timeline) {\n            this.dims.height -= this.timelineHeight + this.margin[2] + this.timelinePadding;\n        }\n        this.xDomain = this.getXDomain();\n        if (this.filteredDomain) {\n            this.xDomain = this.filteredDomain;\n        }\n        this.yDomain = this.getYDomain();\n        this.seriesDomain = this.getSeriesDomain();\n        this.xScale = this.getXScale(this.xDomain, this.dims.width);\n        this.yScale = this.getYScale(this.yDomain, this.dims.height);\n        this.updateTimeline();\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n        this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n        this.clipPathId = 'clip' + id().toString();\n        this.clipPath = `url(#${this.clipPathId})`;\n    }\n    updateTimeline() {\n        if (this.timeline) {\n            this.timelineWidth = this.dims.width;\n            this.timelineXDomain = this.getXDomain();\n            this.timelineXScale = this.getXScale(this.timelineXDomain, this.timelineWidth);\n            this.timelineYScale = this.getYScale(this.yDomain, this.timelineHeight);\n            this.timelineTransform = `translate(${this.dims.xOffset}, ${-this.margin[2]})`;\n        }\n    }\n    getXDomain() {\n        let values = getUniqueXDomainValues(this.results);\n        this.scaleType = getScaleType(values);\n        let domain = [];\n        if (this.scaleType === ScaleType.Linear) {\n            values = values.map(v => Number(v));\n        }\n        let min;\n        let max;\n        if (this.scaleType === ScaleType.Time || this.scaleType === ScaleType.Linear) {\n            min = this.xScaleMin ? this.xScaleMin : Math.min(...values);\n            max = this.xScaleMax ? this.xScaleMax : Math.max(...values);\n        }\n        if (this.scaleType === ScaleType.Time) {\n            domain = [new Date(min), new Date(max)];\n            this.xSet = [...values].sort((a, b) => {\n                const aDate = a.getTime();\n                const bDate = b.getTime();\n                if (aDate > bDate)\n                    return 1;\n                if (bDate > aDate)\n                    return -1;\n                return 0;\n            });\n        }\n        else if (this.scaleType === ScaleType.Linear) {\n            domain = [min, max];\n            // Use compare function to sort numbers numerically\n            this.xSet = [...values].sort((a, b) => a - b);\n        }\n        else {\n            domain = values;\n            this.xSet = values;\n        }\n        return domain;\n    }\n    getYDomain() {\n        const domain = [];\n        for (const results of this.results) {\n            for (const d of results.series) {\n                if (domain.indexOf(d.value) < 0) {\n                    domain.push(d.value);\n                }\n                if (d.min !== undefined) {\n                    this.hasRange = true;\n                    if (domain.indexOf(d.min) < 0) {\n                        domain.push(d.min);\n                    }\n                }\n                if (d.max !== undefined) {\n                    this.hasRange = true;\n                    if (domain.indexOf(d.max) < 0) {\n                        domain.push(d.max);\n                    }\n                }\n            }\n        }\n        const values = [...domain];\n        if (!this.autoScale) {\n            values.push(0);\n        }\n        const min = this.yScaleMin ? this.yScaleMin : Math.min(...values);\n        const max = this.yScaleMax ? this.yScaleMax : Math.max(...values);\n        return [min, max];\n    }\n    getSeriesDomain() {\n        return this.results.map(d => d.name);\n    }\n    getXScale(domain, width) {\n        let scale;\n        if (this.scaleType === ScaleType.Time) {\n            scale = scaleTime().range([0, width]).domain(domain);\n        }\n        else if (this.scaleType === ScaleType.Linear) {\n            scale = scaleLinear().range([0, width]).domain(domain);\n            if (this.roundDomains) {\n                scale = scale.nice();\n            }\n        }\n        else if (this.scaleType === ScaleType.Ordinal) {\n            scale = scalePoint().range([0, width]).padding(0.1).domain(domain);\n        }\n        return scale;\n    }\n    getYScale(domain, height) {\n        const scale = scaleLinear().range([height, 0]).domain(domain);\n        return this.roundDomains ? scale.nice() : scale;\n    }\n    updateDomain(domain) {\n        this.filteredDomain = domain;\n        this.xDomain = this.filteredDomain;\n        this.xScale = this.getXScale(this.xDomain, this.dims.width);\n    }\n    updateHoveredVertical(item) {\n        this.hoveredVertical = item.value;\n        this.deactivateAll();\n    }\n    hideCircles() {\n        this.hoveredVertical = null;\n        this.deactivateAll();\n    }\n    onClick(data) {\n        this.select.emit(data);\n    }\n    trackBy(index, item) {\n        return `${item.name}`;\n    }\n    setColors() {\n        let domain;\n        if (this.schemeType === ScaleType.Ordinal) {\n            domain = this.seriesDomain;\n        }\n        else {\n            domain = this.yDomain;\n        }\n        this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    }\n    getLegendOptions() {\n        const opts = {\n            scaleType: this.schemeType,\n            colors: undefined,\n            domain: [],\n            title: undefined,\n            position: this.legendPosition\n        };\n        if (opts.scaleType === ScaleType.Ordinal) {\n            opts.domain = this.seriesDomain;\n            opts.colors = this.colors;\n            opts.title = this.legendTitle;\n        }\n        else {\n            opts.domain = this.yDomain;\n            opts.colors = this.colors.scale;\n        }\n        return opts;\n    }\n    updateYAxisWidth({ width }) {\n        this.yAxisWidth = width;\n        this.update();\n    }\n    updateXAxisHeight({ height }) {\n        this.xAxisHeight = height;\n        this.update();\n    }\n    onActivate(item) {\n        this.deactivateAll();\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value;\n        });\n        if (idx > -1) {\n            return;\n        }\n        this.activeEntries = [item];\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    }\n    onDeactivate(item) {\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value;\n        });\n        this.activeEntries.splice(idx, 1);\n        this.activeEntries = [...this.activeEntries];\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    }\n    deactivateAll() {\n        this.activeEntries = [...this.activeEntries];\n        for (const entry of this.activeEntries) {\n            this.deactivate.emit({ value: entry, entries: [] });\n        }\n        this.activeEntries = [];\n    }\n}\nLineChartComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: LineChartComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nLineChartComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: LineChartComponent, selector: \"ngx-charts-line-chart\", inputs: { legend: \"legend\", legendTitle: \"legendTitle\", legendPosition: \"legendPosition\", xAxis: \"xAxis\", yAxis: \"yAxis\", showXAxisLabel: \"showXAxisLabel\", showYAxisLabel: \"showYAxisLabel\", xAxisLabel: \"xAxisLabel\", yAxisLabel: \"yAxisLabel\", autoScale: \"autoScale\", timeline: \"timeline\", gradient: \"gradient\", showGridLines: \"showGridLines\", curve: \"curve\", activeEntries: \"activeEntries\", schemeType: \"schemeType\", rangeFillOpacity: \"rangeFillOpacity\", trimXAxisTicks: \"trimXAxisTicks\", trimYAxisTicks: \"trimYAxisTicks\", rotateXAxisTicks: \"rotateXAxisTicks\", maxXAxisTickLength: \"maxXAxisTickLength\", maxYAxisTickLength: \"maxYAxisTickLength\", xAxisTickFormatting: \"xAxisTickFormatting\", yAxisTickFormatting: \"yAxisTickFormatting\", xAxisTicks: \"xAxisTicks\", yAxisTicks: \"yAxisTicks\", roundDomains: \"roundDomains\", tooltipDisabled: \"tooltipDisabled\", showRefLines: \"showRefLines\", referenceLines: \"referenceLines\", showRefLabels: \"showRefLabels\", xScaleMin: \"xScaleMin\", xScaleMax: \"xScaleMax\", yScaleMin: \"yScaleMin\", yScaleMax: \"yScaleMax\", wrapTicks: \"wrapTicks\" }, outputs: { activate: \"activate\", deactivate: \"deactivate\" }, host: { listeners: { \"mouseleave\": \"hideCircles()\" } }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }, { propertyName: \"seriesTooltipTemplate\", first: true, predicate: [\"seriesTooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:defs>\n        <svg:clipPath [attr.id]=\"clipPathId\">\n          <svg:rect\n            [attr.width]=\"dims.width + 10\"\n            [attr.height]=\"dims.height + 10\"\n            [attr.transform]=\"'translate(-5, -5)'\"\n          />\n        </svg:clipPath>\n      </svg:defs>\n      <svg:g [attr.transform]=\"transform\" class=\"line-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [referenceLines]=\"referenceLines\"\n          [showRefLines]=\"showRefLines\"\n          [showRefLabels]=\"showRefLabels\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g [attr.clip-path]=\"clipPath\">\n          <svg:g *ngIf=\"!isSSR\">\n            <svg:g *ngFor=\"let series of results; trackBy: trackBy\" [@animationState]=\"'active'\">\n              <svg:g\n                ngx-charts-line-series\n                [xScale]=\"xScale\"\n                [yScale]=\"yScale\"\n                [colors]=\"colors\"\n                [data]=\"series\"\n                [activeEntries]=\"activeEntries\"\n                [scaleType]=\"scaleType\"\n                [curve]=\"curve\"\n                [rangeFillOpacity]=\"rangeFillOpacity\"\n                [hasRange]=\"hasRange\"\n                [animations]=\"animations\"\n              />\n            </svg:g>\n          </svg:g>\n          <svg:g *ngIf=\"isSSR\">\n            <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n              <svg:g\n                ngx-charts-line-series\n                [xScale]=\"xScale\"\n                [yScale]=\"yScale\"\n                [colors]=\"colors\"\n                [data]=\"series\"\n                [activeEntries]=\"activeEntries\"\n                [scaleType]=\"scaleType\"\n                [curve]=\"curve\"\n                [rangeFillOpacity]=\"rangeFillOpacity\"\n                [hasRange]=\"hasRange\"\n                [animations]=\"animations\"\n              />\n            </svg:g>\n          </svg:g>\n\n          <svg:g *ngIf=\"!tooltipDisabled\" (mouseleave)=\"hideCircles()\">\n            <svg:g\n              ngx-charts-tooltip-area\n              [dims]=\"dims\"\n              [xSet]=\"xSet\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [results]=\"results\"\n              [colors]=\"colors\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"seriesTooltipTemplate\"\n              (hover)=\"updateHoveredVertical($event)\"\n            />\n\n            <svg:g *ngFor=\"let series of results\">\n              <svg:g\n                ngx-charts-circle-series\n                [xScale]=\"xScale\"\n                [yScale]=\"yScale\"\n                [colors]=\"colors\"\n                [data]=\"series\"\n                [scaleType]=\"scaleType\"\n                [visibleValue]=\"hoveredVertical\"\n                [activeEntries]=\"activeEntries\"\n                [tooltipDisabled]=\"tooltipDisabled\"\n                [tooltipTemplate]=\"tooltipTemplate\"\n                (select)=\"onClick($event)\"\n                (activate)=\"onActivate($event)\"\n                (deactivate)=\"onDeactivate($event)\"\n              />\n            </svg:g>\n          </svg:g>\n        </svg:g>\n      </svg:g>\n      <svg:g\n        ngx-charts-timeline\n        *ngIf=\"timeline && scaleType != 'ordinal'\"\n        [attr.transform]=\"timelineTransform\"\n        [results]=\"results\"\n        [view]=\"[timelineWidth, height]\"\n        [height]=\"timelineHeight\"\n        [scheme]=\"scheme\"\n        [customColors]=\"customColors\"\n        [scaleType]=\"scaleType\"\n        [legend]=\"legend\"\n        (onDomainChange)=\"updateDomain($event)\"\n      >\n        <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n          <svg:g\n            ngx-charts-line-series\n            [xScale]=\"timelineXScale\"\n            [yScale]=\"timelineYScale\"\n            [colors]=\"colors\"\n            [data]=\"series\"\n            [scaleType]=\"scaleType\"\n            [curve]=\"curve\"\n            [hasRange]=\"hasRange\"\n            [animations]=\"animations\"\n          />\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: XAxisComponent, selector: \"g[ngx-charts-x-axis]\", inputs: [\"xScale\", \"dims\", \"trimTicks\", \"rotateTicks\", \"maxTickLength\", \"tickFormatting\", \"showGridLines\", \"showLabel\", \"labelText\", \"ticks\", \"xAxisTickCount\", \"xOrient\", \"xAxisOffset\", \"wrapTicks\"], outputs: [\"dimensionsChanged\"] }, { type: YAxisComponent, selector: \"g[ngx-charts-y-axis]\", inputs: [\"yScale\", \"dims\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"showGridLines\", \"showLabel\", \"labelText\", \"yAxisTickCount\", \"yOrient\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"yAxisOffset\", \"wrapTicks\"], outputs: [\"dimensionsChanged\"] }, { type: LineSeriesComponent, selector: \"g[ngx-charts-line-series]\", inputs: [\"data\", \"xScale\", \"yScale\", \"colors\", \"scaleType\", \"curve\", \"activeEntries\", \"rangeFillOpacity\", \"hasRange\", \"animations\"] }, { type: TooltipArea, selector: \"g[ngx-charts-tooltip-area]\", inputs: [\"dims\", \"xSet\", \"xScale\", \"yScale\", \"results\", \"colors\", \"showPercentage\", \"tooltipDisabled\", \"tooltipTemplate\"], outputs: [\"hover\"] }, { type: CircleSeriesComponent, selector: \"g[ngx-charts-circle-series]\", inputs: [\"data\", \"type\", \"xScale\", \"yScale\", \"colors\", \"scaleType\", \"visibleValue\", \"activeEntries\", \"tooltipDisabled\", \"tooltipTemplate\"], outputs: [\"select\", \"activate\", \"deactivate\"] }, { type: Timeline, selector: \"g[ngx-charts-timeline]\", inputs: [\"view\", \"results\", \"scheme\", \"customColors\", \"legend\", \"autoScale\", \"scaleType\", \"height\"], outputs: [\"select\", \"onDomainChange\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], animations: [\n        trigger('animationState', [\n            transition(':leave', [\n                style({\n                    opacity: 1\n                }),\n                animate(500, style({\n                    opacity: 0\n                }))\n            ])\n        ])\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: LineChartComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-line-chart', template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:defs>\n        <svg:clipPath [attr.id]=\"clipPathId\">\n          <svg:rect\n            [attr.width]=\"dims.width + 10\"\n            [attr.height]=\"dims.height + 10\"\n            [attr.transform]=\"'translate(-5, -5)'\"\n          />\n        </svg:clipPath>\n      </svg:defs>\n      <svg:g [attr.transform]=\"transform\" class=\"line-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [referenceLines]=\"referenceLines\"\n          [showRefLines]=\"showRefLines\"\n          [showRefLabels]=\"showRefLabels\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g [attr.clip-path]=\"clipPath\">\n          <svg:g *ngIf=\"!isSSR\">\n            <svg:g *ngFor=\"let series of results; trackBy: trackBy\" [@animationState]=\"'active'\">\n              <svg:g\n                ngx-charts-line-series\n                [xScale]=\"xScale\"\n                [yScale]=\"yScale\"\n                [colors]=\"colors\"\n                [data]=\"series\"\n                [activeEntries]=\"activeEntries\"\n                [scaleType]=\"scaleType\"\n                [curve]=\"curve\"\n                [rangeFillOpacity]=\"rangeFillOpacity\"\n                [hasRange]=\"hasRange\"\n                [animations]=\"animations\"\n              />\n            </svg:g>\n          </svg:g>\n          <svg:g *ngIf=\"isSSR\">\n            <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n              <svg:g\n                ngx-charts-line-series\n                [xScale]=\"xScale\"\n                [yScale]=\"yScale\"\n                [colors]=\"colors\"\n                [data]=\"series\"\n                [activeEntries]=\"activeEntries\"\n                [scaleType]=\"scaleType\"\n                [curve]=\"curve\"\n                [rangeFillOpacity]=\"rangeFillOpacity\"\n                [hasRange]=\"hasRange\"\n                [animations]=\"animations\"\n              />\n            </svg:g>\n          </svg:g>\n\n          <svg:g *ngIf=\"!tooltipDisabled\" (mouseleave)=\"hideCircles()\">\n            <svg:g\n              ngx-charts-tooltip-area\n              [dims]=\"dims\"\n              [xSet]=\"xSet\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [results]=\"results\"\n              [colors]=\"colors\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"seriesTooltipTemplate\"\n              (hover)=\"updateHoveredVertical($event)\"\n            />\n\n            <svg:g *ngFor=\"let series of results\">\n              <svg:g\n                ngx-charts-circle-series\n                [xScale]=\"xScale\"\n                [yScale]=\"yScale\"\n                [colors]=\"colors\"\n                [data]=\"series\"\n                [scaleType]=\"scaleType\"\n                [visibleValue]=\"hoveredVertical\"\n                [activeEntries]=\"activeEntries\"\n                [tooltipDisabled]=\"tooltipDisabled\"\n                [tooltipTemplate]=\"tooltipTemplate\"\n                (select)=\"onClick($event)\"\n                (activate)=\"onActivate($event)\"\n                (deactivate)=\"onDeactivate($event)\"\n              />\n            </svg:g>\n          </svg:g>\n        </svg:g>\n      </svg:g>\n      <svg:g\n        ngx-charts-timeline\n        *ngIf=\"timeline && scaleType != 'ordinal'\"\n        [attr.transform]=\"timelineTransform\"\n        [results]=\"results\"\n        [view]=\"[timelineWidth, height]\"\n        [height]=\"timelineHeight\"\n        [scheme]=\"scheme\"\n        [customColors]=\"customColors\"\n        [scaleType]=\"scaleType\"\n        [legend]=\"legend\"\n        (onDomainChange)=\"updateDomain($event)\"\n      >\n        <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n          <svg:g\n            ngx-charts-line-series\n            [xScale]=\"timelineXScale\"\n            [yScale]=\"timelineYScale\"\n            [colors]=\"colors\"\n            [data]=\"series\"\n            [scaleType]=\"scaleType\"\n            [curve]=\"curve\"\n            [hasRange]=\"hasRange\"\n            [animations]=\"animations\"\n          />\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, animations: [\n                        trigger('animationState', [\n                            transition(':leave', [\n                                style({\n                                    opacity: 1\n                                }),\n                                animate(500, style({\n                                    opacity: 0\n                                }))\n                            ])\n                        ])\n                    ], styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"] }]\n        }], propDecorators: { legend: [{\n                type: Input\n            }], legendTitle: [{\n                type: Input\n            }], legendPosition: [{\n                type: Input\n            }], xAxis: [{\n                type: Input\n            }], yAxis: [{\n                type: Input\n            }], showXAxisLabel: [{\n                type: Input\n            }], showYAxisLabel: [{\n                type: Input\n            }], xAxisLabel: [{\n                type: Input\n            }], yAxisLabel: [{\n                type: Input\n            }], autoScale: [{\n                type: Input\n            }], timeline: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], showGridLines: [{\n                type: Input\n            }], curve: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], schemeType: [{\n                type: Input\n            }], rangeFillOpacity: [{\n                type: Input\n            }], trimXAxisTicks: [{\n                type: Input\n            }], trimYAxisTicks: [{\n                type: Input\n            }], rotateXAxisTicks: [{\n                type: Input\n            }], maxXAxisTickLength: [{\n                type: Input\n            }], maxYAxisTickLength: [{\n                type: Input\n            }], xAxisTickFormatting: [{\n                type: Input\n            }], yAxisTickFormatting: [{\n                type: Input\n            }], xAxisTicks: [{\n                type: Input\n            }], yAxisTicks: [{\n                type: Input\n            }], roundDomains: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], showRefLines: [{\n                type: Input\n            }], referenceLines: [{\n                type: Input\n            }], showRefLabels: [{\n                type: Input\n            }], xScaleMin: [{\n                type: Input\n            }], xScaleMax: [{\n                type: Input\n            }], yScaleMin: [{\n                type: Input\n            }], yScaleMax: [{\n                type: Input\n            }], wrapTicks: [{\n                type: Input\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }], seriesTooltipTemplate: [{\n                type: ContentChild,\n                args: ['seriesTooltipTemplate']\n            }], hideCircles: [{\n                type: HostListener,\n                args: ['mouseleave']\n            }] } });\n\nclass LineChartModule {\n}\nLineChartModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: LineChartModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nLineChartModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: LineChartModule, declarations: [LineComponent, LineChartComponent, LineSeriesComponent], imports: [ChartCommonModule], exports: [LineComponent, LineChartComponent, LineSeriesComponent] });\nLineChartModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: LineChartModule, imports: [[ChartCommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: LineChartModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [ChartCommonModule],\n                    declarations: [LineComponent, LineChartComponent, LineSeriesComponent],\n                    exports: [LineComponent, LineChartComponent, LineSeriesComponent]\n                }]\n        }] });\n\nclass PieLabelComponent {\n    constructor(platformId) {\n        this.platformId = platformId;\n        this.animations = true;\n        this.labelTrim = true;\n        this.labelTrimSize = 10;\n        this.trimLabel = trimLabel;\n    }\n    ngOnChanges(changes) {\n        this.setTransforms();\n        this.update();\n    }\n    setTransforms() {\n        if (isPlatformServer(this.platformId)) {\n            this.styleTransform = `translate3d(${this.textX}px,${this.textY}px, 0)`;\n            this.attrTransform = `translate(${this.textX},${this.textY})`;\n            this.textTransition = !this.animations ? null : 'transform 0.75s';\n        }\n        else {\n            const isIE = /(edge|msie|trident)/i.test(navigator.userAgent);\n            this.styleTransform = isIE ? null : `translate3d(${this.textX}px,${this.textY}px, 0)`;\n            this.attrTransform = !isIE ? null : `translate(${this.textX},${this.textY})`;\n            this.textTransition = isIE || !this.animations ? null : 'transform 0.75s';\n        }\n    }\n    update() {\n        let startRadius = this.radius;\n        if (this.explodeSlices) {\n            startRadius = (this.radius * this.value) / this.max;\n        }\n        const innerArc = arc().innerRadius(startRadius).outerRadius(startRadius);\n        // Calculate innerPos then scale outer position to match label position\n        const innerPos = innerArc.centroid(this.data);\n        let scale = this.data.pos[1] / innerPos[1];\n        if (this.data.pos[1] === 0 || innerPos[1] === 0) {\n            scale = 1;\n        }\n        const outerPos = [scale * innerPos[0], scale * innerPos[1]];\n        this.line = `M${innerPos}L${outerPos}L${this.data.pos}`;\n    }\n    get textX() {\n        return this.data.pos[0];\n    }\n    get textY() {\n        return this.data.pos[1];\n    }\n    textAnchor() {\n        return this.midAngle(this.data) < Math.PI ? TextAnchor.Start : TextAnchor.End;\n    }\n    midAngle(d) {\n        return d.startAngle + (d.endAngle - d.startAngle) / 2;\n    }\n}\nPieLabelComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PieLabelComponent, deps: [{ token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Component });\nPieLabelComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: PieLabelComponent, selector: \"g[ngx-charts-pie-label]\", inputs: { data: \"data\", radius: \"radius\", label: \"label\", color: \"color\", max: \"max\", value: \"value\", explodeSlices: \"explodeSlices\", animations: \"animations\", labelTrim: \"labelTrim\", labelTrimSize: \"labelTrimSize\" }, usesOnChanges: true, ngImport: i0, template: `\n    <title>{{ label }}</title>\n    <svg:g [attr.transform]=\"attrTransform\" [style.transform]=\"styleTransform\" [style.transition]=\"textTransition\">\n      <svg:text\n        class=\"pie-label\"\n        [class.animation]=\"animations\"\n        dy=\".35em\"\n        [style.textAnchor]=\"textAnchor()\"\n        [style.shapeRendering]=\"'crispEdges'\"\n      >\n        {{ labelTrim ? trimLabel(label, labelTrimSize) : label }}\n      </svg:text>\n    </svg:g>\n    <svg:path\n      [attr.d]=\"line\"\n      [attr.stroke]=\"color\"\n      fill=\"none\"\n      class=\"pie-label-line line\"\n      [class.animation]=\"animations\"\n    ></svg:path>\n  `, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PieLabelComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-pie-label]',\n                    template: `\n    <title>{{ label }}</title>\n    <svg:g [attr.transform]=\"attrTransform\" [style.transform]=\"styleTransform\" [style.transition]=\"textTransition\">\n      <svg:text\n        class=\"pie-label\"\n        [class.animation]=\"animations\"\n        dy=\".35em\"\n        [style.textAnchor]=\"textAnchor()\"\n        [style.shapeRendering]=\"'crispEdges'\"\n      >\n        {{ labelTrim ? trimLabel(label, labelTrimSize) : label }}\n      </svg:text>\n    </svg:g>\n    <svg:path\n      [attr.d]=\"line\"\n      [attr.stroke]=\"color\"\n      fill=\"none\"\n      class=\"pie-label-line line\"\n      [class.animation]=\"animations\"\n    ></svg:path>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }]; }, propDecorators: { data: [{\n                type: Input\n            }], radius: [{\n                type: Input\n            }], label: [{\n                type: Input\n            }], color: [{\n                type: Input\n            }], max: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }], explodeSlices: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], labelTrim: [{\n                type: Input\n            }], labelTrimSize: [{\n                type: Input\n            }] } });\n\nclass PolarSeriesComponent {\n    constructor() {\n        this.tooltipDisabled = false;\n        this.gradient = false;\n        this.animations = true;\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.circleRadius = 3;\n        this.barOrientation = BarOrientation;\n        this.placementTypes = PlacementTypes;\n        this.styleTypes = StyleTypes;\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    update() {\n        this.updateGradients();\n        const line = this.getLineGenerator();\n        const data = this.sortData(this.data.series);\n        const seriesName = this.data.name;\n        const linearScaleType = this.colors.scaleType === ScaleType.Linear;\n        const min = this.yScale.domain()[0];\n        this.seriesColor = this.colors.getColor(linearScaleType ? min : seriesName);\n        this.path = line(data) || '';\n        this.circles = data.map(d => {\n            const a = this.getAngle(d);\n            const r = this.getRadius(d);\n            const value = d.value;\n            const color = this.colors.getColor(linearScaleType ? Math.abs(value) : seriesName);\n            const cData = Object.assign({}, d, {\n                series: seriesName,\n                value,\n                name: d.name\n            });\n            return {\n                data: cData,\n                cx: r * Math.sin(a),\n                cy: -r * Math.cos(a),\n                value,\n                color,\n                label: d.name\n            };\n        });\n        this.active = this.isActive(this.data);\n        this.inactive = this.isInactive(this.data);\n        this.tooltipText = this.tooltipText || (c => this.defaultTooltipText(c));\n    }\n    getAngle(d) {\n        const label = d.name;\n        if (this.scaleType === ScaleType.Time) {\n            return this.xScale(label);\n        }\n        else if (this.scaleType === ScaleType.Linear) {\n            return this.xScale(Number(label));\n        }\n        return this.xScale(label);\n    }\n    getRadius(d) {\n        return this.yScale(d.value);\n    }\n    getLineGenerator() {\n        return lineRadial()\n            .angle(d => this.getAngle(d))\n            .radius(d => this.getRadius(d))\n            .curve(this.curve);\n    }\n    sortData(data) {\n        if (this.scaleType === ScaleType.Linear) {\n            return sortLinear(data, 'name');\n        }\n        else if (this.scaleType === ScaleType.Time) {\n            return sortByTime(data, 'name');\n        }\n        return sortByDomain(data, 'name', 'asc', this.xScale.domain());\n    }\n    isActive(entry) {\n        if (!this.activeEntries)\n            return false;\n        const item = this.activeEntries.find(d => {\n            return entry.name === d.name;\n        });\n        return item !== undefined;\n    }\n    isInactive(entry) {\n        if (!this.activeEntries || this.activeEntries.length === 0)\n            return false;\n        const item = this.activeEntries.find(d => {\n            return entry.name === d.name;\n        });\n        return item === undefined;\n    }\n    defaultTooltipText({ label, value }) {\n        return `\n      <span class=\"tooltip-label\">${escapeLabel(this.data.name)} • ${escapeLabel(label)}</span>\n      <span class=\"tooltip-val\">${value.toLocaleString()}</span>\n    `;\n    }\n    updateGradients() {\n        this.hasGradient = this.gradient || this.colors.scaleType === ScaleType.Linear;\n        if (!this.hasGradient) {\n            return;\n        }\n        this.gradientId = 'grad' + id().toString();\n        this.gradientUrl = `url(#${this.gradientId})`;\n        if (this.colors.scaleType === ScaleType.Linear) {\n            const values = this.data.series.map(d => d.value);\n            const max = Math.max(...values);\n            const min = Math.min(...values);\n            this.gradientStops = this.colors.getLinearGradientStops(max, min);\n        }\n        else {\n            this.gradientStops = undefined;\n        }\n    }\n}\nPolarSeriesComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PolarSeriesComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nPolarSeriesComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: PolarSeriesComponent, selector: \"g[ngx-charts-polar-series]\", inputs: { name: \"name\", data: \"data\", xScale: \"xScale\", yScale: \"yScale\", colors: \"colors\", scaleType: \"scaleType\", curve: \"curve\", activeEntries: \"activeEntries\", rangeFillOpacity: \"rangeFillOpacity\", tooltipDisabled: \"tooltipDisabled\", tooltipText: \"tooltipText\", gradient: \"gradient\", tooltipTemplate: \"tooltipTemplate\", animations: \"animations\" }, outputs: { select: \"select\", activate: \"activate\", deactivate: \"deactivate\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:g class=\"polar-charts-series\">\n      <defs>\n        <svg:g\n          ngx-charts-svg-radial-gradient\n          *ngIf=\"hasGradient\"\n          [color]=\"seriesColor\"\n          [name]=\"gradientId\"\n          [startOpacity]=\"0.25\"\n          [endOpacity]=\"1\"\n          [stops]=\"gradientStops\"\n        />\n      </defs>\n      <svg:g\n        ngx-charts-line\n        class=\"polar-series-path\"\n        [path]=\"path\"\n        [stroke]=\"hasGradient ? gradientUrl : seriesColor\"\n        [class.active]=\"active\"\n        [class.inactive]=\"inactive\"\n        [attr.fill-opacity]=\"rangeFillOpacity\"\n        [fill]=\"hasGradient ? gradientUrl : seriesColor\"\n        [animations]=\"animations\"\n      />\n      <svg:g\n        ngx-charts-circle\n        *ngFor=\"let circle of circles\"\n        class=\"circle\"\n        [cx]=\"circle.cx\"\n        [cy]=\"circle.cy\"\n        [r]=\"circleRadius\"\n        [fill]=\"circle.color\"\n        [style.opacity]=\"inactive ? 0.2 : 1\"\n        ngx-tooltip\n        [tooltipDisabled]=\"tooltipDisabled\"\n        [tooltipPlacement]=\"placementTypes.Top\"\n        [tooltipType]=\"styleTypes.tooltip\"\n        [tooltipTitle]=\"tooltipTemplate ? undefined : tooltipText(circle)\"\n        [tooltipTemplate]=\"tooltipTemplate\"\n        [tooltipContext]=\"circle.data\"\n        (select)=\"select.emit(circle.data)\"\n        (activate)=\"activate.emit({ name: circle.data.series })\"\n        (deactivate)=\"deactivate.emit({ name: circle.data.series })\"\n      ></svg:g>\n    </svg:g>\n  `, isInline: true, components: [{ type: SvgRadialGradientComponent, selector: \"g[ngx-charts-svg-radial-gradient]\", inputs: [\"color\", \"name\", \"startOpacity\", \"endOpacity\", \"cx\", \"cy\", \"stops\"] }, { type: LineComponent, selector: \"g[ngx-charts-line]\", inputs: [\"path\", \"stroke\", \"data\", \"fill\", \"animations\"] }, { type: CircleComponent, selector: \"g[ngx-charts-circle]\", inputs: [\"cx\", \"cy\", \"r\", \"fill\", \"stroke\", \"data\", \"classNames\", \"circleOpacity\", \"pointerEvents\"], outputs: [\"select\", \"activate\", \"deactivate\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: TooltipDirective, selector: \"[ngx-tooltip]\", inputs: [\"tooltipCssClass\", \"tooltipTitle\", \"tooltipAppendToBody\", \"tooltipSpacing\", \"tooltipDisabled\", \"tooltipShowCaret\", \"tooltipPlacement\", \"tooltipAlignment\", \"tooltipType\", \"tooltipCloseOnClickOutside\", \"tooltipCloseOnMouseLeave\", \"tooltipHideTimeout\", \"tooltipShowTimeout\", \"tooltipTemplate\", \"tooltipShowEvent\", \"tooltipContext\", \"tooltipImmediateExit\"], outputs: [\"show\", \"hide\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PolarSeriesComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-polar-series]',\n                    template: `\n    <svg:g class=\"polar-charts-series\">\n      <defs>\n        <svg:g\n          ngx-charts-svg-radial-gradient\n          *ngIf=\"hasGradient\"\n          [color]=\"seriesColor\"\n          [name]=\"gradientId\"\n          [startOpacity]=\"0.25\"\n          [endOpacity]=\"1\"\n          [stops]=\"gradientStops\"\n        />\n      </defs>\n      <svg:g\n        ngx-charts-line\n        class=\"polar-series-path\"\n        [path]=\"path\"\n        [stroke]=\"hasGradient ? gradientUrl : seriesColor\"\n        [class.active]=\"active\"\n        [class.inactive]=\"inactive\"\n        [attr.fill-opacity]=\"rangeFillOpacity\"\n        [fill]=\"hasGradient ? gradientUrl : seriesColor\"\n        [animations]=\"animations\"\n      />\n      <svg:g\n        ngx-charts-circle\n        *ngFor=\"let circle of circles\"\n        class=\"circle\"\n        [cx]=\"circle.cx\"\n        [cy]=\"circle.cy\"\n        [r]=\"circleRadius\"\n        [fill]=\"circle.color\"\n        [style.opacity]=\"inactive ? 0.2 : 1\"\n        ngx-tooltip\n        [tooltipDisabled]=\"tooltipDisabled\"\n        [tooltipPlacement]=\"placementTypes.Top\"\n        [tooltipType]=\"styleTypes.tooltip\"\n        [tooltipTitle]=\"tooltipTemplate ? undefined : tooltipText(circle)\"\n        [tooltipTemplate]=\"tooltipTemplate\"\n        [tooltipContext]=\"circle.data\"\n        (select)=\"select.emit(circle.data)\"\n        (activate)=\"activate.emit({ name: circle.data.series })\"\n        (deactivate)=\"deactivate.emit({ name: circle.data.series })\"\n      ></svg:g>\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], propDecorators: { name: [{\n                type: Input\n            }], data: [{\n                type: Input\n            }], xScale: [{\n                type: Input\n            }], yScale: [{\n                type: Input\n            }], colors: [{\n                type: Input\n            }], scaleType: [{\n                type: Input\n            }], curve: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], rangeFillOpacity: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], tooltipText: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], tooltipTemplate: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }] } });\n\nconst twoPI = 2 * Math.PI;\nclass PolarChartComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.legendTitle = 'Legend';\n        this.legendPosition = LegendPosition.Right;\n        this.showGridLines = true;\n        this.curve = curveCardinalClosed;\n        this.activeEntries = [];\n        this.rangeFillOpacity = 0.15;\n        this.trimYAxisTicks = true;\n        this.maxYAxisTickLength = 16;\n        this.roundDomains = false;\n        this.tooltipDisabled = false;\n        this.showSeriesOnHover = true;\n        this.gradient = false;\n        this.yAxisMinScale = 0;\n        this.labelTrim = true;\n        this.labelTrimSize = 10;\n        this.wrapTicks = false;\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        // series: any; // ???\n        this.margin = [10, 20, 10, 20];\n        this.xAxisHeight = 0;\n        this.yAxisWidth = 0;\n        this.orientation = Orientation;\n        this.isSSR = false;\n    }\n    ngOnInit() {\n        if (isPlatformServer(this.platformId)) {\n            this.isSSR = true;\n        }\n    }\n    update() {\n        super.update();\n        this.setDims();\n        this.setScales();\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n        this.setTicks();\n    }\n    setDims() {\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showXAxis: this.xAxis,\n            showYAxis: this.yAxis,\n            xAxisHeight: this.xAxisHeight,\n            yAxisWidth: this.yAxisWidth,\n            showXLabel: this.showXAxisLabel,\n            showYLabel: this.showYAxisLabel,\n            showLegend: this.legend,\n            legendType: this.schemeType,\n            legendPosition: this.legendPosition\n        });\n        const halfWidth = Math.floor(this.dims.width / 2);\n        const halfHeight = Math.floor(this.dims.height / 2);\n        const outerRadius = (this.outerRadius = Math.min(halfHeight / 1.5, halfWidth / 1.5));\n        const yOffset = Math.max(0, halfHeight - outerRadius);\n        this.yAxisDims = {\n            ...this.dims,\n            width: halfWidth\n        };\n        this.transform = `translate(${this.dims.xOffset}, ${this.margin[0]})`;\n        this.transformYAxis = `translate(0, ${yOffset})`;\n        this.labelOffset = this.dims.height + 40;\n        this.transformPlot = `translate(${halfWidth}, ${halfHeight})`;\n    }\n    setScales() {\n        const xValues = this.getXValues();\n        this.scaleType = getScaleType(xValues);\n        this.xDomain = this.filteredDomain || this.getXDomain(xValues);\n        this.yDomain = this.getYDomain();\n        this.seriesDomain = this.getSeriesDomain();\n        this.xScale = this.getXScale(this.xDomain, twoPI);\n        this.yScale = this.getYScale(this.yDomain, this.outerRadius);\n        this.yAxisScale = this.getYScale(this.yDomain.reverse(), this.outerRadius);\n    }\n    setTicks() {\n        let tickFormat;\n        if (this.xAxisTickFormatting) {\n            tickFormat = this.xAxisTickFormatting;\n        }\n        else if (this.xScale.tickFormat) {\n            tickFormat = this.xScale.tickFormat.apply(this.xScale, [5]);\n        }\n        else {\n            tickFormat = d => {\n                if (isDate(d)) {\n                    return d.toLocaleDateString();\n                }\n                return d.toLocaleString();\n            };\n        }\n        const outerRadius = this.outerRadius;\n        const s = 1.1;\n        this.thetaTicks = this.xDomain.map(d => {\n            const startAngle = this.xScale(d);\n            const dd = s * outerRadius * (startAngle > Math.PI ? -1 : 1);\n            const label = tickFormat(d);\n            const startPos = [outerRadius * Math.sin(startAngle), -outerRadius * Math.cos(startAngle)];\n            const pos = [dd, s * startPos[1]];\n            return {\n                innerRadius: 0,\n                outerRadius,\n                startAngle,\n                endAngle: startAngle,\n                value: outerRadius,\n                label,\n                startPos,\n                pos\n            };\n        });\n        const minDistance = 10;\n        /* from pie chart, abstract out -*/\n        for (let i = 0; i < this.thetaTicks.length - 1; i++) {\n            const a = this.thetaTicks[i];\n            for (let j = i + 1; j < this.thetaTicks.length; j++) {\n                const b = this.thetaTicks[j];\n                // if they're on the same side\n                if (b.pos[0] * a.pos[0] > 0) {\n                    // if they're overlapping\n                    const o = minDistance - Math.abs(b.pos[1] - a.pos[1]);\n                    if (o > 0) {\n                        // push the second up or down\n                        b.pos[1] += Math.sign(b.pos[0]) * o;\n                    }\n                }\n            }\n        }\n        this.radiusTicks = this.yAxisScale.ticks(Math.floor(this.dims.height / 50)).map(d => this.yScale(d));\n    }\n    getXValues() {\n        const values = [];\n        for (const results of this.results) {\n            for (const d of results.series) {\n                if (!values.includes(d.name)) {\n                    values.push(d.name);\n                }\n            }\n        }\n        return values;\n    }\n    getXDomain(values = this.getXValues()) {\n        if (this.scaleType === ScaleType.Time) {\n            const min = Math.min(...values);\n            const max = Math.max(...values);\n            return [min, max];\n        }\n        else if (this.scaleType === ScaleType.Linear) {\n            values = values.map(v => Number(v));\n            const min = Math.min(...values);\n            const max = Math.max(...values);\n            return [min, max];\n        }\n        return values;\n    }\n    getYValues() {\n        const domain = [];\n        for (const results of this.results) {\n            for (const d of results.series) {\n                if (domain.indexOf(d.value) < 0) {\n                    domain.push(d.value);\n                }\n                if (d.min !== undefined) {\n                    if (domain.indexOf(d.min) < 0) {\n                        domain.push(d.min);\n                    }\n                }\n                if (d.max !== undefined) {\n                    if (domain.indexOf(d.max) < 0) {\n                        domain.push(d.max);\n                    }\n                }\n            }\n        }\n        return domain;\n    }\n    getYDomain(domain = this.getYValues()) {\n        let min = Math.min(...domain);\n        const max = Math.max(this.yAxisMinScale, ...domain);\n        min = Math.max(0, min);\n        if (!this.autoScale) {\n            min = Math.min(0, min);\n        }\n        return [min, max];\n    }\n    getSeriesDomain() {\n        return this.results.map(d => d.name);\n    }\n    getXScale(domain, width) {\n        switch (this.scaleType) {\n            case ScaleType.Time:\n                return scaleTime().range([0, width]).domain(domain);\n            case ScaleType.Linear: {\n                const scale = scaleLinear().range([0, width]).domain(domain);\n                return this.roundDomains ? scale.nice() : scale;\n            }\n            default:\n                return scalePoint()\n                    .range([0, width - twoPI / domain.length])\n                    .padding(0)\n                    .domain(domain);\n        }\n    }\n    getYScale(domain, height) {\n        const scale = scaleLinear().range([0, height]).domain(domain);\n        return this.roundDomains ? scale.nice() : scale;\n    }\n    onClick(data, series) {\n        if (series) {\n            data.series = series.name;\n        }\n        this.select.emit(data);\n    }\n    setColors() {\n        const domain = this.schemeType === ScaleType.Ordinal ? this.seriesDomain : this.yDomain.reverse();\n        this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    }\n    getLegendOptions() {\n        if (this.schemeType === ScaleType.Ordinal) {\n            return {\n                scaleType: this.schemeType,\n                colors: this.colors,\n                domain: this.seriesDomain,\n                title: this.legendTitle,\n                position: this.legendPosition\n            };\n        }\n        return {\n            scaleType: this.schemeType,\n            colors: this.colors.scale,\n            domain: this.yDomain,\n            title: undefined,\n            position: this.legendPosition\n        };\n    }\n    updateYAxisWidth({ width }) {\n        this.yAxisWidth = width;\n        this.update();\n    }\n    updateXAxisHeight({ height }) {\n        this.xAxisHeight = height;\n        this.update();\n    }\n    onActivate(item) {\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value;\n        });\n        if (idx > -1) {\n            return;\n        }\n        this.activeEntries = this.showSeriesOnHover ? [item, ...this.activeEntries] : this.activeEntries;\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    }\n    onDeactivate(item) {\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value;\n        });\n        this.activeEntries.splice(idx, 1);\n        this.activeEntries = [...this.activeEntries];\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    }\n    deactivateAll() {\n        this.activeEntries = [...this.activeEntries];\n        for (const entry of this.activeEntries) {\n            this.deactivate.emit({ value: entry, entries: [] });\n        }\n        this.activeEntries = [];\n    }\n    trackBy(index, item) {\n        return `${item.name}`;\n    }\n}\nPolarChartComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PolarChartComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nPolarChartComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: PolarChartComponent, selector: \"ngx-charts-polar-chart\", inputs: { legend: \"legend\", legendTitle: \"legendTitle\", legendPosition: \"legendPosition\", xAxis: \"xAxis\", yAxis: \"yAxis\", showXAxisLabel: \"showXAxisLabel\", showYAxisLabel: \"showYAxisLabel\", xAxisLabel: \"xAxisLabel\", yAxisLabel: \"yAxisLabel\", autoScale: \"autoScale\", showGridLines: \"showGridLines\", curve: \"curve\", activeEntries: \"activeEntries\", schemeType: \"schemeType\", rangeFillOpacity: \"rangeFillOpacity\", trimYAxisTicks: \"trimYAxisTicks\", maxYAxisTickLength: \"maxYAxisTickLength\", xAxisTickFormatting: \"xAxisTickFormatting\", yAxisTickFormatting: \"yAxisTickFormatting\", roundDomains: \"roundDomains\", tooltipDisabled: \"tooltipDisabled\", showSeriesOnHover: \"showSeriesOnHover\", gradient: \"gradient\", yAxisMinScale: \"yAxisMinScale\", labelTrim: \"labelTrim\", labelTrimSize: \"labelTrimSize\", wrapTicks: \"wrapTicks\" }, outputs: { activate: \"activate\", deactivate: \"deactivate\" }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:g class=\"polar-chart chart\" [attr.transform]=\"transform\">\n        <svg:g [attr.transform]=\"transformPlot\">\n          <svg:circle class=\"polar-chart-background\" cx=\"0\" cy=\"0\" [attr.r]=\"this.outerRadius\" />\n          <svg:g *ngIf=\"showGridLines\">\n            <svg:circle\n              *ngFor=\"let r of radiusTicks\"\n              class=\"gridline-path radial-gridline-path\"\n              cx=\"0\"\n              cy=\"0\"\n              [attr.r]=\"r\"\n            />\n          </svg:g>\n          <svg:g *ngIf=\"xAxis\">\n            <svg:g\n              ngx-charts-pie-label\n              *ngFor=\"let tick of thetaTicks\"\n              [data]=\"tick\"\n              [radius]=\"outerRadius\"\n              [label]=\"tick.label\"\n              [max]=\"outerRadius\"\n              [value]=\"showGridLines ? 1 : outerRadius\"\n              [explodeSlices]=\"true\"\n              [animations]=\"animations\"\n              [labelTrim]=\"labelTrim\"\n              [labelTrimSize]=\"labelTrimSize\"\n            ></svg:g>\n          </svg:g>\n        </svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          [attr.transform]=\"transformYAxis\"\n          *ngIf=\"yAxis\"\n          [yScale]=\"yAxisScale\"\n          [dims]=\"yAxisDims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-axis-label\n          *ngIf=\"xAxis && showXAxisLabel\"\n          [label]=\"xAxisLabel\"\n          [offset]=\"labelOffset\"\n          [orient]=\"orientation.Bottom\"\n          [height]=\"dims.height\"\n          [width]=\"dims.width\"\n        ></svg:g>\n        <svg:g *ngIf=\"!isSSR\" [attr.transform]=\"transformPlot\">\n          <svg:g *ngFor=\"let series of results; trackBy: trackBy\" [@animationState]=\"'active'\">\n            <svg:g\n              ngx-charts-polar-series\n              [gradient]=\"gradient\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [activeEntries]=\"activeEntries\"\n              [scaleType]=\"scaleType\"\n              [curve]=\"curve\"\n              [rangeFillOpacity]=\"rangeFillOpacity\"\n              [animations]=\"animations\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              (select)=\"onClick($event)\"\n              (activate)=\"onActivate($event)\"\n              (deactivate)=\"onDeactivate($event)\"\n            />\n          </svg:g>\n        </svg:g>\n        <svg:g *ngIf=\"isSSR\" [attr.transform]=\"transformPlot\">\n          <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n            <svg:g\n              ngx-charts-polar-series\n              [gradient]=\"gradient\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [activeEntries]=\"activeEntries\"\n              [scaleType]=\"scaleType\"\n              [curve]=\"curve\"\n              [rangeFillOpacity]=\"rangeFillOpacity\"\n              [animations]=\"animations\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              (select)=\"onClick($event)\"\n              (activate)=\"onActivate($event)\"\n              (deactivate)=\"onDeactivate($event)\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \".pie-label{font-size:11px}.pie-label.animation{animation:.75s ease-in fadeIn}@keyframes fadeIn{0%{opacity:0}to{opacity:1}}.pie-label-line{stroke-dasharray:100%}.pie-label-line.animation{animation:3s linear drawOut;transition:d .75s}@keyframes drawOut{0%{stroke-dashoffset:100%}to{stroke-dashoffset:0}}\\n\", \".polar-chart .polar-chart-background{fill:none}.polar-chart .radial-gridline-path{stroke-dasharray:10 10;fill:none}.polar-chart .pie-label-line{stroke:#2f3646}.polar-charts-series .polar-series-area,.polar-series-path{pointer-events:none}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: PieLabelComponent, selector: \"g[ngx-charts-pie-label]\", inputs: [\"data\", \"radius\", \"label\", \"color\", \"max\", \"value\", \"explodeSlices\", \"animations\", \"labelTrim\", \"labelTrimSize\"] }, { type: YAxisComponent, selector: \"g[ngx-charts-y-axis]\", inputs: [\"yScale\", \"dims\", \"trimTicks\", \"maxTickLength\", \"tickFormatting\", \"ticks\", \"showGridLines\", \"showLabel\", \"labelText\", \"yAxisTickCount\", \"yOrient\", \"referenceLines\", \"showRefLines\", \"showRefLabels\", \"yAxisOffset\", \"wrapTicks\"], outputs: [\"dimensionsChanged\"] }, { type: AxisLabelComponent, selector: \"g[ngx-charts-axis-label]\", inputs: [\"orient\", \"label\", \"offset\", \"width\", \"height\"] }, { type: PolarSeriesComponent, selector: \"g[ngx-charts-polar-series]\", inputs: [\"name\", \"data\", \"xScale\", \"yScale\", \"colors\", \"scaleType\", \"curve\", \"activeEntries\", \"rangeFillOpacity\", \"tooltipDisabled\", \"tooltipText\", \"gradient\", \"tooltipTemplate\", \"animations\"], outputs: [\"select\", \"activate\", \"deactivate\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], animations: [\n        trigger('animationState', [\n            transition(':leave', [\n                style({\n                    opacity: 1\n                }),\n                animate(500, style({\n                    opacity: 0\n                }))\n            ])\n        ])\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PolarChartComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-polar-chart', template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:g class=\"polar-chart chart\" [attr.transform]=\"transform\">\n        <svg:g [attr.transform]=\"transformPlot\">\n          <svg:circle class=\"polar-chart-background\" cx=\"0\" cy=\"0\" [attr.r]=\"this.outerRadius\" />\n          <svg:g *ngIf=\"showGridLines\">\n            <svg:circle\n              *ngFor=\"let r of radiusTicks\"\n              class=\"gridline-path radial-gridline-path\"\n              cx=\"0\"\n              cy=\"0\"\n              [attr.r]=\"r\"\n            />\n          </svg:g>\n          <svg:g *ngIf=\"xAxis\">\n            <svg:g\n              ngx-charts-pie-label\n              *ngFor=\"let tick of thetaTicks\"\n              [data]=\"tick\"\n              [radius]=\"outerRadius\"\n              [label]=\"tick.label\"\n              [max]=\"outerRadius\"\n              [value]=\"showGridLines ? 1 : outerRadius\"\n              [explodeSlices]=\"true\"\n              [animations]=\"animations\"\n              [labelTrim]=\"labelTrim\"\n              [labelTrimSize]=\"labelTrimSize\"\n            ></svg:g>\n          </svg:g>\n        </svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          [attr.transform]=\"transformYAxis\"\n          *ngIf=\"yAxis\"\n          [yScale]=\"yAxisScale\"\n          [dims]=\"yAxisDims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [wrapTicks]=\"wrapTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-axis-label\n          *ngIf=\"xAxis && showXAxisLabel\"\n          [label]=\"xAxisLabel\"\n          [offset]=\"labelOffset\"\n          [orient]=\"orientation.Bottom\"\n          [height]=\"dims.height\"\n          [width]=\"dims.width\"\n        ></svg:g>\n        <svg:g *ngIf=\"!isSSR\" [attr.transform]=\"transformPlot\">\n          <svg:g *ngFor=\"let series of results; trackBy: trackBy\" [@animationState]=\"'active'\">\n            <svg:g\n              ngx-charts-polar-series\n              [gradient]=\"gradient\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [activeEntries]=\"activeEntries\"\n              [scaleType]=\"scaleType\"\n              [curve]=\"curve\"\n              [rangeFillOpacity]=\"rangeFillOpacity\"\n              [animations]=\"animations\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              (select)=\"onClick($event)\"\n              (activate)=\"onActivate($event)\"\n              (deactivate)=\"onDeactivate($event)\"\n            />\n          </svg:g>\n        </svg:g>\n        <svg:g *ngIf=\"isSSR\" [attr.transform]=\"transformPlot\">\n          <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n            <svg:g\n              ngx-charts-polar-series\n              [gradient]=\"gradient\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [activeEntries]=\"activeEntries\"\n              [scaleType]=\"scaleType\"\n              [curve]=\"curve\"\n              [rangeFillOpacity]=\"rangeFillOpacity\"\n              [animations]=\"animations\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              (select)=\"onClick($event)\"\n              (activate)=\"onActivate($event)\"\n              (deactivate)=\"onDeactivate($event)\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, animations: [\n                        trigger('animationState', [\n                            transition(':leave', [\n                                style({\n                                    opacity: 1\n                                }),\n                                animate(500, style({\n                                    opacity: 0\n                                }))\n                            ])\n                        ])\n                    ], styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \".pie-label{font-size:11px}.pie-label.animation{animation:.75s ease-in fadeIn}@keyframes fadeIn{0%{opacity:0}to{opacity:1}}.pie-label-line{stroke-dasharray:100%}.pie-label-line.animation{animation:3s linear drawOut;transition:d .75s}@keyframes drawOut{0%{stroke-dashoffset:100%}to{stroke-dashoffset:0}}\\n\", \".polar-chart .polar-chart-background{fill:none}.polar-chart .radial-gridline-path{stroke-dasharray:10 10;fill:none}.polar-chart .pie-label-line{stroke:#2f3646}.polar-charts-series .polar-series-area,.polar-series-path{pointer-events:none}\\n\"] }]\n        }], propDecorators: { legend: [{\n                type: Input\n            }], legendTitle: [{\n                type: Input\n            }], legendPosition: [{\n                type: Input\n            }], xAxis: [{\n                type: Input\n            }], yAxis: [{\n                type: Input\n            }], showXAxisLabel: [{\n                type: Input\n            }], showYAxisLabel: [{\n                type: Input\n            }], xAxisLabel: [{\n                type: Input\n            }], yAxisLabel: [{\n                type: Input\n            }], autoScale: [{\n                type: Input\n            }], showGridLines: [{\n                type: Input\n            }], curve: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], schemeType: [{\n                type: Input\n            }], rangeFillOpacity: [{\n                type: Input\n            }], trimYAxisTicks: [{\n                type: Input\n            }], maxYAxisTickLength: [{\n                type: Input\n            }], xAxisTickFormatting: [{\n                type: Input\n            }], yAxisTickFormatting: [{\n                type: Input\n            }], roundDomains: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], showSeriesOnHover: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], yAxisMinScale: [{\n                type: Input\n            }], labelTrim: [{\n                type: Input\n            }], labelTrimSize: [{\n                type: Input\n            }], wrapTicks: [{\n                type: Input\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }] } });\n\nclass PieArcComponent {\n    constructor(element) {\n        this.startAngle = 0;\n        this.endAngle = Math.PI * 2;\n        this.cornerRadius = 0;\n        this.explodeSlices = false;\n        this.gradient = false;\n        this.animate = true;\n        this.pointerEvents = true;\n        this.isActive = false;\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.dblclick = new EventEmitter();\n        this.barOrientation = BarOrientation;\n        this.initialized = false;\n        this.element = element.nativeElement;\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    getGradient() {\n        return this.gradient ? this.gradientFill : this.fill;\n    }\n    getPointerEvents() {\n        return this.pointerEvents ? 'auto' : 'none';\n    }\n    update() {\n        const calc = this.calculateArc();\n        this.startOpacity = 0.5;\n        this.radialGradientId = 'linearGrad' + id().toString();\n        this.gradientFill = `url(#${this.radialGradientId})`;\n        if (this.animate) {\n            if (this.initialized) {\n                this.updateAnimation();\n            }\n            else {\n                this.loadAnimation();\n                this.initialized = true;\n            }\n        }\n        else {\n            this.path = calc.startAngle(this.startAngle).endAngle(this.endAngle)();\n        }\n    }\n    calculateArc() {\n        let outerRadius = this.outerRadius;\n        if (this.explodeSlices && this.innerRadius === 0) {\n            outerRadius = (this.outerRadius * this.value) / this.max;\n        }\n        return arc().innerRadius(this.innerRadius).outerRadius(outerRadius).cornerRadius(this.cornerRadius);\n    }\n    loadAnimation() {\n        const node = select(this.element)\n            .selectAll('.arc')\n            .data([{ startAngle: this.startAngle, endAngle: this.endAngle }]);\n        const calc = this.calculateArc();\n        node\n            .transition()\n            .attrTween('d', function (d) {\n            this._current = this._current || d;\n            const copyOfD = Object.assign({}, d);\n            copyOfD.endAngle = copyOfD.startAngle;\n            const interpolater = interpolate(copyOfD, copyOfD);\n            this._current = interpolater(0);\n            return function (t) {\n                return calc(interpolater(t));\n            };\n        })\n            .transition()\n            .duration(750)\n            .attrTween('d', function (d) {\n            this._current = this._current || d;\n            const interpolater = interpolate(this._current, d);\n            this._current = interpolater(0);\n            return function (t) {\n                return calc(interpolater(t));\n            };\n        });\n    }\n    updateAnimation() {\n        const node = select(this.element)\n            .selectAll('.arc')\n            .data([{ startAngle: this.startAngle, endAngle: this.endAngle }]);\n        const calc = this.calculateArc();\n        node\n            .transition()\n            .duration(750)\n            .attrTween('d', function (d) {\n            this._current = this._current || d;\n            const interpolater = interpolate(this._current, d);\n            this._current = interpolater(0);\n            return function (t) {\n                return calc(interpolater(t));\n            };\n        });\n    }\n    onClick() {\n        clearTimeout(this._timeout);\n        this._timeout = setTimeout(() => this.select.emit(this.data), 200);\n    }\n    onDblClick(event) {\n        event.preventDefault();\n        event.stopPropagation();\n        clearTimeout(this._timeout);\n        this.dblclick.emit({\n            data: this.data,\n            nativeEvent: event\n        });\n    }\n}\nPieArcComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PieArcComponent, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\nPieArcComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: PieArcComponent, selector: \"g[ngx-charts-pie-arc]\", inputs: { fill: \"fill\", startAngle: \"startAngle\", endAngle: \"endAngle\", innerRadius: \"innerRadius\", outerRadius: \"outerRadius\", cornerRadius: \"cornerRadius\", value: \"value\", max: \"max\", data: \"data\", explodeSlices: \"explodeSlices\", gradient: \"gradient\", animate: \"animate\", pointerEvents: \"pointerEvents\", isActive: \"isActive\" }, outputs: { select: \"select\", activate: \"activate\", deactivate: \"deactivate\", dblclick: \"dblclick\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:g class=\"arc-group\">\n      <svg:defs *ngIf=\"gradient\">\n        <svg:g ngx-charts-svg-radial-gradient [color]=\"fill\" [name]=\"radialGradientId\" [startOpacity]=\"startOpacity\" />\n      </svg:defs>\n      <svg:path\n        [attr.d]=\"path\"\n        class=\"arc\"\n        [class.active]=\"isActive\"\n        [attr.fill]=\"getGradient()\"\n        (click)=\"onClick()\"\n        (dblclick)=\"onDblClick($event)\"\n        (mouseenter)=\"activate.emit(data)\"\n        (mouseleave)=\"deactivate.emit(data)\"\n        [style.pointer-events]=\"getPointerEvents()\"\n      />\n    </svg:g>\n  `, isInline: true, components: [{ type: SvgRadialGradientComponent, selector: \"g[ngx-charts-svg-radial-gradient]\", inputs: [\"color\", \"name\", \"startOpacity\", \"endOpacity\", \"cx\", \"cy\", \"stops\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PieArcComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-pie-arc]',\n                    template: `\n    <svg:g class=\"arc-group\">\n      <svg:defs *ngIf=\"gradient\">\n        <svg:g ngx-charts-svg-radial-gradient [color]=\"fill\" [name]=\"radialGradientId\" [startOpacity]=\"startOpacity\" />\n      </svg:defs>\n      <svg:path\n        [attr.d]=\"path\"\n        class=\"arc\"\n        [class.active]=\"isActive\"\n        [attr.fill]=\"getGradient()\"\n        (click)=\"onClick()\"\n        (dblclick)=\"onDblClick($event)\"\n        (mouseenter)=\"activate.emit(data)\"\n        (mouseleave)=\"deactivate.emit(data)\"\n        [style.pointer-events]=\"getPointerEvents()\"\n      />\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { fill: [{\n                type: Input\n            }], startAngle: [{\n                type: Input\n            }], endAngle: [{\n                type: Input\n            }], innerRadius: [{\n                type: Input\n            }], outerRadius: [{\n                type: Input\n            }], cornerRadius: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }], max: [{\n                type: Input\n            }], data: [{\n                type: Input\n            }], explodeSlices: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], animate: [{\n                type: Input\n            }], pointerEvents: [{\n                type: Input\n            }], isActive: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], dblclick: [{\n                type: Output\n            }] } });\n\nclass PieSeriesComponent {\n    constructor() {\n        this.series = [];\n        this.innerRadius = 60;\n        this.outerRadius = 80;\n        this.trimLabels = true;\n        this.maxLabelLength = 10;\n        this.tooltipDisabled = false;\n        this.animations = true;\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.dblclick = new EventEmitter();\n        this.placementTypes = PlacementTypes;\n        this.styleTypes = StyleTypes;\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    update() {\n        const pieGenerator = pie()\n            .value(d => d.value)\n            .sort(null);\n        const arcData = pieGenerator(this.series);\n        this.max = max(arcData, d => {\n            return d.value;\n        });\n        this.data = this.calculateLabelPositions(arcData);\n        this.tooltipText = this.tooltipText || this.defaultTooltipText;\n    }\n    midAngle(d) {\n        return d.startAngle + (d.endAngle - d.startAngle) / 2;\n    }\n    outerArc() {\n        const factor = 1.5;\n        return arc()\n            .innerRadius(this.outerRadius * factor)\n            .outerRadius(this.outerRadius * factor);\n    }\n    calculateLabelPositions(pieData) {\n        const factor = 1.5;\n        const minDistance = 10;\n        const labelPositions = pieData;\n        labelPositions.forEach(d => {\n            d.pos = this.outerArc().centroid(d);\n            d.pos[0] = factor * this.outerRadius * (this.midAngle(d) < Math.PI ? 1 : -1);\n        });\n        for (let i = 0; i < labelPositions.length - 1; i++) {\n            const a = labelPositions[i];\n            if (!this.labelVisible(a)) {\n                continue;\n            }\n            for (let j = i + 1; j < labelPositions.length; j++) {\n                const b = labelPositions[j];\n                if (!this.labelVisible(b)) {\n                    continue;\n                }\n                // if they're on the same side\n                if (b.pos[0] * a.pos[0] > 0) {\n                    // if they're overlapping\n                    const o = minDistance - Math.abs(b.pos[1] - a.pos[1]);\n                    if (o > 0) {\n                        // push the second up or down\n                        b.pos[1] += Math.sign(b.pos[0]) * o;\n                    }\n                }\n            }\n        }\n        return labelPositions;\n    }\n    labelVisible(myArc) {\n        return this.showLabels && myArc.endAngle - myArc.startAngle > Math.PI / 30;\n    }\n    getTooltipTitle(a) {\n        return this.tooltipTemplate ? undefined : this.tooltipText(a);\n    }\n    labelText(myArc) {\n        if (this.labelFormatting) {\n            return this.labelFormatting(myArc.data.name);\n        }\n        return this.label(myArc);\n    }\n    label(myArc) {\n        return formatLabel(myArc.data.name);\n    }\n    defaultTooltipText(myArc) {\n        const label = this.label(myArc);\n        const val = formatLabel(myArc.data.value);\n        return `\n      <span class=\"tooltip-label\">${escapeLabel(label)}</span>\n      <span class=\"tooltip-val\">${val}</span>\n    `;\n    }\n    color(myArc) {\n        return this.colors.getColor(this.label(myArc));\n    }\n    trackBy(index, item) {\n        return item.data.name;\n    }\n    onClick(data) {\n        this.select.emit(data);\n    }\n    isActive(entry) {\n        if (!this.activeEntries)\n            return false;\n        const item = this.activeEntries.find(d => {\n            return entry.name === d.name && entry.series === d.series;\n        });\n        return item !== undefined;\n    }\n}\nPieSeriesComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PieSeriesComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nPieSeriesComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: PieSeriesComponent, selector: \"g[ngx-charts-pie-series]\", inputs: { colors: \"colors\", series: \"series\", dims: \"dims\", innerRadius: \"innerRadius\", outerRadius: \"outerRadius\", explodeSlices: \"explodeSlices\", showLabels: \"showLabels\", gradient: \"gradient\", activeEntries: \"activeEntries\", labelFormatting: \"labelFormatting\", trimLabels: \"trimLabels\", maxLabelLength: \"maxLabelLength\", tooltipText: \"tooltipText\", tooltipDisabled: \"tooltipDisabled\", tooltipTemplate: \"tooltipTemplate\", animations: \"animations\" }, outputs: { select: \"select\", activate: \"activate\", deactivate: \"deactivate\", dblclick: \"dblclick\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:g *ngFor=\"let arc of data; trackBy: trackBy\">\n      <svg:g\n        ngx-charts-pie-label\n        *ngIf=\"labelVisible(arc)\"\n        [data]=\"arc\"\n        [radius]=\"outerRadius\"\n        [color]=\"color(arc)\"\n        [label]=\"labelText(arc)\"\n        [labelTrim]=\"trimLabels\"\n        [labelTrimSize]=\"maxLabelLength\"\n        [max]=\"max\"\n        [value]=\"arc.value\"\n        [explodeSlices]=\"explodeSlices\"\n        [animations]=\"animations\"\n      ></svg:g>\n      <svg:g\n        ngx-charts-pie-arc\n        [startAngle]=\"arc.startAngle\"\n        [endAngle]=\"arc.endAngle\"\n        [innerRadius]=\"innerRadius\"\n        [outerRadius]=\"outerRadius\"\n        [fill]=\"color(arc)\"\n        [value]=\"arc.data.value\"\n        [gradient]=\"gradient\"\n        [data]=\"arc.data\"\n        [max]=\"max\"\n        [explodeSlices]=\"explodeSlices\"\n        [isActive]=\"isActive(arc.data)\"\n        [animate]=\"animations\"\n        (select)=\"onClick($event)\"\n        (activate)=\"activate.emit($event)\"\n        (deactivate)=\"deactivate.emit($event)\"\n        (dblclick)=\"dblclick.emit($event)\"\n        ngx-tooltip\n        [tooltipDisabled]=\"tooltipDisabled\"\n        [tooltipPlacement]=\"placementTypes.Top\"\n        [tooltipType]=\"styleTypes.tooltip\"\n        [tooltipTitle]=\"getTooltipTitle(arc)\"\n        [tooltipTemplate]=\"tooltipTemplate\"\n        [tooltipContext]=\"arc.data\"\n      ></svg:g>\n    </svg:g>\n  `, isInline: true, components: [{ type: PieLabelComponent, selector: \"g[ngx-charts-pie-label]\", inputs: [\"data\", \"radius\", \"label\", \"color\", \"max\", \"value\", \"explodeSlices\", \"animations\", \"labelTrim\", \"labelTrimSize\"] }, { type: PieArcComponent, selector: \"g[ngx-charts-pie-arc]\", inputs: [\"fill\", \"startAngle\", \"endAngle\", \"innerRadius\", \"outerRadius\", \"cornerRadius\", \"value\", \"max\", \"data\", \"explodeSlices\", \"gradient\", \"animate\", \"pointerEvents\", \"isActive\"], outputs: [\"select\", \"activate\", \"deactivate\", \"dblclick\"] }], directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: TooltipDirective, selector: \"[ngx-tooltip]\", inputs: [\"tooltipCssClass\", \"tooltipTitle\", \"tooltipAppendToBody\", \"tooltipSpacing\", \"tooltipDisabled\", \"tooltipShowCaret\", \"tooltipPlacement\", \"tooltipAlignment\", \"tooltipType\", \"tooltipCloseOnClickOutside\", \"tooltipCloseOnMouseLeave\", \"tooltipHideTimeout\", \"tooltipShowTimeout\", \"tooltipTemplate\", \"tooltipShowEvent\", \"tooltipContext\", \"tooltipImmediateExit\"], outputs: [\"show\", \"hide\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PieSeriesComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-pie-series]',\n                    template: `\n    <svg:g *ngFor=\"let arc of data; trackBy: trackBy\">\n      <svg:g\n        ngx-charts-pie-label\n        *ngIf=\"labelVisible(arc)\"\n        [data]=\"arc\"\n        [radius]=\"outerRadius\"\n        [color]=\"color(arc)\"\n        [label]=\"labelText(arc)\"\n        [labelTrim]=\"trimLabels\"\n        [labelTrimSize]=\"maxLabelLength\"\n        [max]=\"max\"\n        [value]=\"arc.value\"\n        [explodeSlices]=\"explodeSlices\"\n        [animations]=\"animations\"\n      ></svg:g>\n      <svg:g\n        ngx-charts-pie-arc\n        [startAngle]=\"arc.startAngle\"\n        [endAngle]=\"arc.endAngle\"\n        [innerRadius]=\"innerRadius\"\n        [outerRadius]=\"outerRadius\"\n        [fill]=\"color(arc)\"\n        [value]=\"arc.data.value\"\n        [gradient]=\"gradient\"\n        [data]=\"arc.data\"\n        [max]=\"max\"\n        [explodeSlices]=\"explodeSlices\"\n        [isActive]=\"isActive(arc.data)\"\n        [animate]=\"animations\"\n        (select)=\"onClick($event)\"\n        (activate)=\"activate.emit($event)\"\n        (deactivate)=\"deactivate.emit($event)\"\n        (dblclick)=\"dblclick.emit($event)\"\n        ngx-tooltip\n        [tooltipDisabled]=\"tooltipDisabled\"\n        [tooltipPlacement]=\"placementTypes.Top\"\n        [tooltipType]=\"styleTypes.tooltip\"\n        [tooltipTitle]=\"getTooltipTitle(arc)\"\n        [tooltipTemplate]=\"tooltipTemplate\"\n        [tooltipContext]=\"arc.data\"\n      ></svg:g>\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], propDecorators: { colors: [{\n                type: Input\n            }], series: [{\n                type: Input\n            }], dims: [{\n                type: Input\n            }], innerRadius: [{\n                type: Input\n            }], outerRadius: [{\n                type: Input\n            }], explodeSlices: [{\n                type: Input\n            }], showLabels: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], labelFormatting: [{\n                type: Input\n            }], trimLabels: [{\n                type: Input\n            }], maxLabelLength: [{\n                type: Input\n            }], tooltipText: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], tooltipTemplate: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], dblclick: [{\n                type: Output\n            }] } });\n\nclass AdvancedPieChartComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.activeEntries = [];\n        this.tooltipDisabled = false;\n        this.label = 'Total';\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.margin = [20, 20, 20, 20];\n    }\n    update() {\n        super.update();\n        this.dims = calculateViewDimensions({\n            width: (this.width * 4) / 12.0,\n            height: this.height,\n            margins: this.margin\n        });\n        this.formatDates();\n        this.domain = this.getDomain();\n        this.setColors();\n        const xOffset = this.dims.width / 2;\n        const yOffset = this.margin[0] + this.dims.height / 2;\n        this.legendWidth = this.width - this.dims.width - this.margin[1];\n        this.outerRadius = Math.min(this.dims.width, this.dims.height) / 2.5;\n        this.innerRadius = this.outerRadius * 0.75;\n        this.transform = `translate(${xOffset} , ${yOffset})`;\n    }\n    getDomain() {\n        return this.results.map(d => d.label);\n    }\n    onClick(data) {\n        this.select.emit(data);\n    }\n    setColors() {\n        this.colors = new ColorHelper(this.scheme, ScaleType.Ordinal, this.domain, this.customColors);\n    }\n    onActivate(item, fromLegend = false) {\n        item = this.results.find(d => {\n            if (fromLegend) {\n                return d.label === item.name;\n            }\n            else {\n                return d.name === item.name;\n            }\n        });\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value && d.series === item.series;\n        });\n        if (idx > -1) {\n            return;\n        }\n        this.activeEntries = [item, ...this.activeEntries];\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    }\n    onDeactivate(item, fromLegend = false) {\n        item = this.results.find(d => {\n            if (fromLegend) {\n                return d.label === item.name;\n            }\n            else {\n                return d.name === item.name;\n            }\n        });\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value && d.series === item.series;\n        });\n        this.activeEntries.splice(idx, 1);\n        this.activeEntries = [...this.activeEntries];\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    }\n}\nAdvancedPieChartComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AdvancedPieChartComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nAdvancedPieChartComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: AdvancedPieChartComponent, selector: \"ngx-charts-advanced-pie-chart\", inputs: { gradient: \"gradient\", activeEntries: \"activeEntries\", tooltipDisabled: \"tooltipDisabled\", tooltipText: \"tooltipText\", label: \"label\", valueFormatting: \"valueFormatting\", nameFormatting: \"nameFormatting\", percentageFormatting: \"percentageFormatting\" }, outputs: { activate: \"activate\", deactivate: \"deactivate\" }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <div [style.width.px]=\"width\" [style.height.px]=\"height\">\n      <div class=\"advanced-pie chart\" [style.width.px]=\"dims.width\" [style.height.px]=\"dims.height\">\n        <ngx-charts-chart [view]=\"[width, height]\" [showLegend]=\"false\" [animations]=\"animations\">\n          <svg:g [attr.transform]=\"transform\" class=\"pie chart\">\n            <svg:g\n              ngx-charts-pie-series\n              [colors]=\"colors\"\n              [series]=\"results\"\n              [innerRadius]=\"innerRadius\"\n              [activeEntries]=\"activeEntries\"\n              [outerRadius]=\"outerRadius\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [tooltipText]=\"tooltipText\"\n              (select)=\"onClick($event)\"\n              (activate)=\"onActivate($event)\"\n              (deactivate)=\"onDeactivate($event)\"\n              [animations]=\"animations\"\n            ></svg:g>\n          </svg:g>\n        </ngx-charts-chart>\n      </div>\n      <div class=\"advanced-pie-legend-wrapper\" [style.width.px]=\"width - dims.width\" [style.height.px]=\"height\">\n        <ngx-charts-advanced-legend\n          [data]=\"results\"\n          [colors]=\"colors\"\n          [width]=\"width - dims.width - margin[1]\"\n          [label]=\"label\"\n          [animations]=\"animations\"\n          [valueFormatting]=\"valueFormatting\"\n          [labelFormatting]=\"nameFormatting\"\n          [percentageFormatting]=\"percentageFormatting\"\n          (select)=\"onClick($event)\"\n          (activate)=\"onActivate($event, true)\"\n          (deactivate)=\"onDeactivate($event, true)\"\n        >\n        </ngx-charts-advanced-legend>\n      </div>\n    </div>\n  `, isInline: true, styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \".advanced-pie{display:inline-block;float:left}.advanced-pie-legend-wrapper{display:inline-block}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: PieSeriesComponent, selector: \"g[ngx-charts-pie-series]\", inputs: [\"colors\", \"series\", \"dims\", \"innerRadius\", \"outerRadius\", \"explodeSlices\", \"showLabels\", \"gradient\", \"activeEntries\", \"labelFormatting\", \"trimLabels\", \"maxLabelLength\", \"tooltipText\", \"tooltipDisabled\", \"tooltipTemplate\", \"animations\"], outputs: [\"select\", \"activate\", \"deactivate\", \"dblclick\"] }, { type: AdvancedLegendComponent, selector: \"ngx-charts-advanced-legend\", inputs: [\"width\", \"data\", \"colors\", \"label\", \"animations\", \"valueFormatting\", \"labelFormatting\", \"percentageFormatting\"], outputs: [\"select\", \"activate\", \"deactivate\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AdvancedPieChartComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-advanced-pie-chart', template: `\n    <div [style.width.px]=\"width\" [style.height.px]=\"height\">\n      <div class=\"advanced-pie chart\" [style.width.px]=\"dims.width\" [style.height.px]=\"dims.height\">\n        <ngx-charts-chart [view]=\"[width, height]\" [showLegend]=\"false\" [animations]=\"animations\">\n          <svg:g [attr.transform]=\"transform\" class=\"pie chart\">\n            <svg:g\n              ngx-charts-pie-series\n              [colors]=\"colors\"\n              [series]=\"results\"\n              [innerRadius]=\"innerRadius\"\n              [activeEntries]=\"activeEntries\"\n              [outerRadius]=\"outerRadius\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [tooltipText]=\"tooltipText\"\n              (select)=\"onClick($event)\"\n              (activate)=\"onActivate($event)\"\n              (deactivate)=\"onDeactivate($event)\"\n              [animations]=\"animations\"\n            ></svg:g>\n          </svg:g>\n        </ngx-charts-chart>\n      </div>\n      <div class=\"advanced-pie-legend-wrapper\" [style.width.px]=\"width - dims.width\" [style.height.px]=\"height\">\n        <ngx-charts-advanced-legend\n          [data]=\"results\"\n          [colors]=\"colors\"\n          [width]=\"width - dims.width - margin[1]\"\n          [label]=\"label\"\n          [animations]=\"animations\"\n          [valueFormatting]=\"valueFormatting\"\n          [labelFormatting]=\"nameFormatting\"\n          [percentageFormatting]=\"percentageFormatting\"\n          (select)=\"onClick($event)\"\n          (activate)=\"onActivate($event, true)\"\n          (deactivate)=\"onDeactivate($event, true)\"\n        >\n        </ngx-charts-advanced-legend>\n      </div>\n    </div>\n  `, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \".advanced-pie{display:inline-block;float:left}.advanced-pie-legend-wrapper{display:inline-block}\\n\"] }]\n        }], propDecorators: { gradient: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], tooltipText: [{\n                type: Input\n            }], label: [{\n                type: Input\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }], valueFormatting: [{\n                type: Input\n            }], nameFormatting: [{\n                type: Input\n            }], percentageFormatting: [{\n                type: Input\n            }] } });\n\nclass PieChartComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.labels = false;\n        this.legend = false;\n        this.legendTitle = 'Legend';\n        this.legendPosition = LegendPosition.Right;\n        this.explodeSlices = false;\n        this.doughnut = false;\n        this.arcWidth = 0.25;\n        this.activeEntries = [];\n        this.tooltipDisabled = false;\n        this.trimLabels = true;\n        this.maxLabelLength = 10;\n        this.dblclick = new EventEmitter();\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n    }\n    update() {\n        super.update();\n        if (this.labels && this.hasNoOptionalMarginsSet()) {\n            this.margins = [30, 80, 30, 80];\n        }\n        else if (!this.labels && this.hasNoOptionalMarginsSet()) {\n            // default value for margins\n            this.margins = [20, 20, 20, 20];\n        }\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margins,\n            showLegend: this.legend,\n            legendPosition: this.legendPosition\n        });\n        this.formatDates();\n        const xOffset = this.margins[3] + this.dims.width / 2;\n        const yOffset = this.margins[0] + this.dims.height / 2;\n        this.translation = `translate(${xOffset}, ${yOffset})`;\n        this.outerRadius = Math.min(this.dims.width, this.dims.height);\n        if (this.labels) {\n            // make room for labels\n            this.outerRadius /= 3;\n        }\n        else {\n            this.outerRadius /= 2;\n        }\n        this.innerRadius = 0;\n        if (this.doughnut) {\n            this.innerRadius = this.outerRadius * (1 - this.arcWidth);\n        }\n        this.domain = this.getDomain();\n        // sort data according to domain\n        this.data = this.results.sort((a, b) => {\n            return this.domain.indexOf(a.name) - this.domain.indexOf(b.name);\n        });\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n    }\n    getDomain() {\n        return this.results.map(d => d.label);\n    }\n    onClick(data) {\n        this.select.emit(data);\n    }\n    setColors() {\n        this.colors = new ColorHelper(this.scheme, ScaleType.Ordinal, this.domain, this.customColors);\n    }\n    getLegendOptions() {\n        return {\n            scaleType: ScaleType.Ordinal,\n            domain: this.domain,\n            colors: this.colors,\n            title: this.legendTitle,\n            position: this.legendPosition\n        };\n    }\n    onActivate(item, fromLegend = false) {\n        item = this.results.find(d => {\n            if (fromLegend) {\n                return d.label === item.name;\n            }\n            else {\n                return d.name === item.name;\n            }\n        });\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value && d.series === item.series;\n        });\n        if (idx > -1) {\n            return;\n        }\n        this.activeEntries = [item, ...this.activeEntries];\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    }\n    onDeactivate(item, fromLegend = false) {\n        item = this.results.find(d => {\n            if (fromLegend) {\n                return d.label === item.name;\n            }\n            else {\n                return d.name === item.name;\n            }\n        });\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value && d.series === item.series;\n        });\n        this.activeEntries.splice(idx, 1);\n        this.activeEntries = [...this.activeEntries];\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    }\n    hasNoOptionalMarginsSet() {\n        return !this.margins || this.margins.length <= 0;\n    }\n}\nPieChartComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PieChartComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nPieChartComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: PieChartComponent, selector: \"ngx-charts-pie-chart\", inputs: { labels: \"labels\", legend: \"legend\", legendTitle: \"legendTitle\", legendPosition: \"legendPosition\", explodeSlices: \"explodeSlices\", doughnut: \"doughnut\", arcWidth: \"arcWidth\", gradient: \"gradient\", activeEntries: \"activeEntries\", tooltipDisabled: \"tooltipDisabled\", labelFormatting: \"labelFormatting\", trimLabels: \"trimLabels\", maxLabelLength: \"maxLabelLength\", tooltipText: \"tooltipText\", margins: \"margins\" }, outputs: { dblclick: \"dblclick\", select: \"select\", activate: \"activate\", deactivate: \"deactivate\" }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"translation\" class=\"pie-chart chart\">\n        <svg:g\n          ngx-charts-pie-series\n          [colors]=\"colors\"\n          [series]=\"data\"\n          [showLabels]=\"labels\"\n          [labelFormatting]=\"labelFormatting\"\n          [trimLabels]=\"trimLabels\"\n          [maxLabelLength]=\"maxLabelLength\"\n          [activeEntries]=\"activeEntries\"\n          [innerRadius]=\"innerRadius\"\n          [outerRadius]=\"outerRadius\"\n          [explodeSlices]=\"explodeSlices\"\n          [gradient]=\"gradient\"\n          [animations]=\"animations\"\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [tooltipText]=\"tooltipText\"\n          (dblclick)=\"dblclick.emit($event)\"\n          (select)=\"onClick($event)\"\n          (activate)=\"onActivate($event)\"\n          (deactivate)=\"onDeactivate($event)\"\n        />\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \".pie-label{font-size:11px}.pie-label.animation{animation:.75s ease-in fadeIn}@keyframes fadeIn{0%{opacity:0}to{opacity:1}}.pie-label-line{stroke-dasharray:100%}.pie-label-line.animation{animation:3s linear drawOut;transition:d .75s}@keyframes drawOut{0%{stroke-dashoffset:100%}to{stroke-dashoffset:0}}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: PieSeriesComponent, selector: \"g[ngx-charts-pie-series]\", inputs: [\"colors\", \"series\", \"dims\", \"innerRadius\", \"outerRadius\", \"explodeSlices\", \"showLabels\", \"gradient\", \"activeEntries\", \"labelFormatting\", \"trimLabels\", \"maxLabelLength\", \"tooltipText\", \"tooltipDisabled\", \"tooltipTemplate\", \"animations\"], outputs: [\"select\", \"activate\", \"deactivate\", \"dblclick\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PieChartComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-pie-chart', template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"translation\" class=\"pie-chart chart\">\n        <svg:g\n          ngx-charts-pie-series\n          [colors]=\"colors\"\n          [series]=\"data\"\n          [showLabels]=\"labels\"\n          [labelFormatting]=\"labelFormatting\"\n          [trimLabels]=\"trimLabels\"\n          [maxLabelLength]=\"maxLabelLength\"\n          [activeEntries]=\"activeEntries\"\n          [innerRadius]=\"innerRadius\"\n          [outerRadius]=\"outerRadius\"\n          [explodeSlices]=\"explodeSlices\"\n          [gradient]=\"gradient\"\n          [animations]=\"animations\"\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [tooltipText]=\"tooltipText\"\n          (dblclick)=\"dblclick.emit($event)\"\n          (select)=\"onClick($event)\"\n          (activate)=\"onActivate($event)\"\n          (deactivate)=\"onDeactivate($event)\"\n        />\n      </svg:g>\n    </ngx-charts-chart>\n  `, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \".pie-label{font-size:11px}.pie-label.animation{animation:.75s ease-in fadeIn}@keyframes fadeIn{0%{opacity:0}to{opacity:1}}.pie-label-line{stroke-dasharray:100%}.pie-label-line.animation{animation:3s linear drawOut;transition:d .75s}@keyframes drawOut{0%{stroke-dashoffset:100%}to{stroke-dashoffset:0}}\\n\"] }]\n        }], propDecorators: { labels: [{\n                type: Input\n            }], legend: [{\n                type: Input\n            }], legendTitle: [{\n                type: Input\n            }], legendPosition: [{\n                type: Input\n            }], explodeSlices: [{\n                type: Input\n            }], doughnut: [{\n                type: Input\n            }], arcWidth: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], labelFormatting: [{\n                type: Input\n            }], trimLabels: [{\n                type: Input\n            }], maxLabelLength: [{\n                type: Input\n            }], tooltipText: [{\n                type: Input\n            }], dblclick: [{\n                type: Output\n            }], margins: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }] } });\n\nfunction gridSize(dims, len, minWidth) {\n    let rows = 1;\n    let cols = len;\n    const width = dims.width;\n    if (width > minWidth) {\n        while (width / cols < minWidth) {\n            rows += 1;\n            cols = Math.ceil(len / rows);\n        }\n    }\n    return [cols, rows];\n}\nfunction gridLayout(dims, data, minWidth, designatedTotal) {\n    const xScale = scaleBand();\n    const yScale = scaleBand();\n    const width = dims.width;\n    const height = dims.height;\n    const [columns, rows] = gridSize(dims, data.length, minWidth);\n    const xDomain = [];\n    const yDomain = [];\n    for (let i = 0; i < rows; i++) {\n        yDomain.push(i);\n    }\n    for (let i = 0; i < columns; i++) {\n        xDomain.push(i);\n    }\n    xScale.domain(xDomain);\n    yScale.domain(yDomain);\n    xScale.rangeRound([0, width], 0.1);\n    yScale.rangeRound([0, height], 0.1);\n    const res = [];\n    const total = designatedTotal ? designatedTotal : getTotal(data);\n    const cardWidth = xScale.bandwidth();\n    const cardHeight = yScale.bandwidth();\n    for (let i = 0; i < data.length; i++) {\n        res[i] = {};\n        res[i].data = {\n            name: data[i] ? data[i].name : '',\n            value: data[i] ? data[i].value : undefined,\n            extra: data[i] ? data[i].extra : undefined,\n            label: data[i] ? data[i].label : ''\n        };\n        res[i].x = xScale(i % columns);\n        res[i].y = yScale(Math.floor(i / columns));\n        res[i].width = cardWidth;\n        res[i].height = cardHeight;\n        res[i].data.percent = total > 0 ? res[i].data.value / total : 0;\n        res[i].data.total = total;\n    }\n    return res;\n}\nfunction getTotal(results) {\n    return results.map(d => (d ? d.value : 0)).reduce((sum, val) => sum + val, 0);\n}\n\nclass PieGridSeriesComponent {\n    constructor(element) {\n        this.innerRadius = 70;\n        this.outerRadius = 80;\n        this.animations = true;\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.element = element.nativeElement;\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    update() {\n        this.layout = pie()\n            .value(d => d.data.value)\n            .sort(null);\n        this.arcs = this.getArcs();\n    }\n    getArcs() {\n        return this.layout(this.data).map((arc, index) => {\n            const label = arc.data.data.name;\n            const other = arc.data.data.other;\n            if (index === 0) {\n                arc.startAngle = 0;\n            }\n            const color = this.colors(label);\n            return {\n                data: arc.data.data,\n                class: 'arc ' + 'arc' + index,\n                fill: color,\n                startAngle: other ? 0 : arc.startAngle,\n                endAngle: arc.endAngle,\n                animate: this.animations && !other,\n                pointerEvents: !other\n            };\n        });\n    }\n    onClick(data) {\n        this.select.emit(this.data[0].data);\n    }\n    trackBy(index, item) {\n        return item.data.name;\n    }\n    label(arc) {\n        return arc.data.name;\n    }\n    color(arc) {\n        return this.colors(this.label(arc));\n    }\n}\nPieGridSeriesComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PieGridSeriesComponent, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\nPieGridSeriesComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: PieGridSeriesComponent, selector: \"g[ngx-charts-pie-grid-series]\", inputs: { colors: \"colors\", data: \"data\", innerRadius: \"innerRadius\", outerRadius: \"outerRadius\", animations: \"animations\" }, outputs: { select: \"select\", activate: \"activate\", deactivate: \"deactivate\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:g class=\"pie-grid-arcs\">\n      <svg:g\n        ngx-charts-pie-arc\n        *ngFor=\"let arc of arcs; trackBy: trackBy\"\n        [attr.class]=\"arc.class\"\n        [startAngle]=\"arc.startAngle\"\n        [endAngle]=\"arc.endAngle\"\n        [innerRadius]=\"innerRadius\"\n        [outerRadius]=\"outerRadius\"\n        [fill]=\"color(arc)\"\n        [value]=\"arc.data.value\"\n        [data]=\"arc.data\"\n        [gradient]=\"false\"\n        [pointerEvents]=\"arc.pointerEvents\"\n        [animate]=\"arc.animate\"\n        (select)=\"onClick($event)\"\n        (activate)=\"activate.emit($event)\"\n        (deactivate)=\"deactivate.emit($event)\"\n      ></svg:g>\n    </svg:g>\n  `, isInline: true, components: [{ type: PieArcComponent, selector: \"g[ngx-charts-pie-arc]\", inputs: [\"fill\", \"startAngle\", \"endAngle\", \"innerRadius\", \"outerRadius\", \"cornerRadius\", \"value\", \"max\", \"data\", \"explodeSlices\", \"gradient\", \"animate\", \"pointerEvents\", \"isActive\"], outputs: [\"select\", \"activate\", \"deactivate\", \"dblclick\"] }], directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PieGridSeriesComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-pie-grid-series]',\n                    template: `\n    <svg:g class=\"pie-grid-arcs\">\n      <svg:g\n        ngx-charts-pie-arc\n        *ngFor=\"let arc of arcs; trackBy: trackBy\"\n        [attr.class]=\"arc.class\"\n        [startAngle]=\"arc.startAngle\"\n        [endAngle]=\"arc.endAngle\"\n        [innerRadius]=\"innerRadius\"\n        [outerRadius]=\"outerRadius\"\n        [fill]=\"color(arc)\"\n        [value]=\"arc.data.value\"\n        [data]=\"arc.data\"\n        [gradient]=\"false\"\n        [pointerEvents]=\"arc.pointerEvents\"\n        [animate]=\"arc.animate\"\n        (select)=\"onClick($event)\"\n        (activate)=\"activate.emit($event)\"\n        (deactivate)=\"deactivate.emit($event)\"\n      ></svg:g>\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { colors: [{\n                type: Input\n            }], data: [{\n                type: Input\n            }], innerRadius: [{\n                type: Input\n            }], outerRadius: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }] } });\n\nclass PieGridComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.tooltipDisabled = false;\n        this.label = 'Total';\n        this.minWidth = 150;\n        this.activeEntries = [];\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.margin = [20, 20, 20, 20];\n        this.placementTypes = PlacementTypes;\n        this.styleTypes = StyleTypes;\n    }\n    update() {\n        super.update();\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin\n        });\n        this.formatDates();\n        this.domain = this.getDomain();\n        this.data = gridLayout(this.dims, this.results, this.minWidth, this.designatedTotal);\n        this.transform = `translate(${this.margin[3]} , ${this.margin[0]})`;\n        this.series = this.getSeries();\n        this.setColors();\n        this.tooltipText = this.tooltipText || this.defaultTooltipText;\n    }\n    defaultTooltipText({ data }) {\n        const label = trimLabel(formatLabel(data.name));\n        const val = data.value.toLocaleString();\n        return `\n      <span class=\"tooltip-label\">${label}</span>\n      <span class=\"tooltip-val\">${val}</span>\n    `;\n    }\n    getDomain() {\n        return this.results.map(d => d.label);\n    }\n    getSeries() {\n        const total = this.designatedTotal ? this.designatedTotal : this.getTotal();\n        return this.data.map(d => {\n            const baselineLabelHeight = 20;\n            const padding = 10;\n            const name = d.data.name;\n            const label = formatLabel(name);\n            const value = d.data.value;\n            const radius = min([d.width - padding, d.height - baselineLabelHeight]) / 2 - 5;\n            const innerRadius = radius * 0.9;\n            let count = 0;\n            const colors = () => {\n                count += 1;\n                if (count === 1) {\n                    return 'rgba(100,100,100,0.3)';\n                }\n                else {\n                    return this.colorScale.getColor(label);\n                }\n            };\n            const xPos = d.x + (d.width - padding) / 2;\n            const yPos = d.y + (d.height - baselineLabelHeight) / 2;\n            return {\n                transform: `translate(${xPos}, ${yPos})`,\n                colors,\n                innerRadius,\n                outerRadius: radius,\n                name,\n                label: trimLabel(label),\n                total: value,\n                value,\n                percent: format('.1%')(d.data.percent),\n                data: [\n                    d,\n                    {\n                        data: {\n                            other: true,\n                            value: total - value,\n                            name: d.data.name\n                        }\n                    }\n                ]\n            };\n        });\n    }\n    getTotal() {\n        return this.results.map(d => d.value).reduce((sum, d) => sum + d, 0);\n    }\n    onClick(data) {\n        this.select.emit(data);\n    }\n    setColors() {\n        this.colorScale = new ColorHelper(this.scheme, ScaleType.Ordinal, this.domain, this.customColors);\n    }\n    onActivate(item, fromLegend = false) {\n        item = this.results.find(d => {\n            if (fromLegend) {\n                return d.label === item.name;\n            }\n            else {\n                return d.name === item.name;\n            }\n        });\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value && d.series === item.series;\n        });\n        if (idx > -1) {\n            return;\n        }\n        this.activeEntries = [item, ...this.activeEntries];\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    }\n    onDeactivate(item, fromLegend = false) {\n        item = this.results.find(d => {\n            if (fromLegend) {\n                return d.label === item.name;\n            }\n            else {\n                return d.name === item.name;\n            }\n        });\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value && d.series === item.series;\n        });\n        this.activeEntries.splice(idx, 1);\n        this.activeEntries = [...this.activeEntries];\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    }\n}\nPieGridComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PieGridComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nPieGridComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: PieGridComponent, selector: \"ngx-charts-pie-grid\", inputs: { designatedTotal: \"designatedTotal\", tooltipDisabled: \"tooltipDisabled\", tooltipText: \"tooltipText\", label: \"label\", minWidth: \"minWidth\", activeEntries: \"activeEntries\" }, outputs: { activate: \"activate\", deactivate: \"deactivate\" }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart [view]=\"[width, height]\" [showLegend]=\"false\" [animations]=\"animations\">\n      <svg:g [attr.transform]=\"transform\" class=\"pie-grid chart\">\n        <svg:g *ngFor=\"let series of series\" class=\"pie-grid-item\" [attr.transform]=\"series.transform\">\n          <svg:g\n            ngx-charts-pie-grid-series\n            [colors]=\"series.colors\"\n            [data]=\"series.data\"\n            [innerRadius]=\"series.innerRadius\"\n            [outerRadius]=\"series.outerRadius\"\n            [animations]=\"animations\"\n            (select)=\"onClick($event)\"\n            ngx-tooltip\n            [tooltipDisabled]=\"tooltipDisabled\"\n            [tooltipPlacement]=\"placementTypes.Top\"\n            [tooltipType]=\"styleTypes.tooltip\"\n            [tooltipTitle]=\"tooltipTemplate ? undefined : tooltipText({ data: series })\"\n            [tooltipTemplate]=\"tooltipTemplate\"\n            [tooltipContext]=\"series.data[0].data\"\n            (activate)=\"onActivate($event)\"\n            (deactivate)=\"onDeactivate($event)\"\n          />\n          <svg:text\n            *ngIf=\"animations\"\n            class=\"label percent-label\"\n            dy=\"-0.5em\"\n            x=\"0\"\n            y=\"5\"\n            ngx-charts-count-up\n            [countTo]=\"series.percent\"\n            [countSuffix]=\"'%'\"\n            text-anchor=\"middle\"\n          ></svg:text>\n          <svg:text *ngIf=\"!animations\" class=\"label percent-label\" dy=\"-0.5em\" x=\"0\" y=\"5\" text-anchor=\"middle\">\n            {{ series.percent.toLocaleString() }}\n          </svg:text>\n          <svg:text class=\"label\" dy=\"0.5em\" x=\"0\" y=\"5\" text-anchor=\"middle\">\n            {{ series.label }}\n          </svg:text>\n          <svg:text\n            *ngIf=\"animations\"\n            class=\"label\"\n            dy=\"1.23em\"\n            x=\"0\"\n            [attr.y]=\"series.outerRadius\"\n            text-anchor=\"middle\"\n            ngx-charts-count-up\n            [countTo]=\"series.total\"\n            [countPrefix]=\"label + ': '\"\n          ></svg:text>\n          <svg:text\n            *ngIf=\"!animations\"\n            class=\"label\"\n            dy=\"1.23em\"\n            x=\"0\"\n            [attr.y]=\"series.outerRadius\"\n            text-anchor=\"middle\"\n          >\n            {{ label }}: {{ series.total.toLocaleString() }}\n          </svg:text>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \".pie-grid .arc1{opacity:.4}.pie-grid .percent-label{font-size:16px;font-weight:400}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: PieGridSeriesComponent, selector: \"g[ngx-charts-pie-grid-series]\", inputs: [\"colors\", \"data\", \"innerRadius\", \"outerRadius\", \"animations\"], outputs: [\"select\", \"activate\", \"deactivate\"] }, { type: CountUpDirective, selector: \"[ngx-charts-count-up]\", inputs: [\"countDuration\", \"countPrefix\", \"countSuffix\", \"valueFormatting\", \"countDecimals\", \"countTo\", \"countFrom\"], outputs: [\"countChange\", \"countFinish\"] }], directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: TooltipDirective, selector: \"[ngx-tooltip]\", inputs: [\"tooltipCssClass\", \"tooltipTitle\", \"tooltipAppendToBody\", \"tooltipSpacing\", \"tooltipDisabled\", \"tooltipShowCaret\", \"tooltipPlacement\", \"tooltipAlignment\", \"tooltipType\", \"tooltipCloseOnClickOutside\", \"tooltipCloseOnMouseLeave\", \"tooltipHideTimeout\", \"tooltipShowTimeout\", \"tooltipTemplate\", \"tooltipShowEvent\", \"tooltipContext\", \"tooltipImmediateExit\"], outputs: [\"show\", \"hide\"] }, { type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PieGridComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-pie-grid', template: `\n    <ngx-charts-chart [view]=\"[width, height]\" [showLegend]=\"false\" [animations]=\"animations\">\n      <svg:g [attr.transform]=\"transform\" class=\"pie-grid chart\">\n        <svg:g *ngFor=\"let series of series\" class=\"pie-grid-item\" [attr.transform]=\"series.transform\">\n          <svg:g\n            ngx-charts-pie-grid-series\n            [colors]=\"series.colors\"\n            [data]=\"series.data\"\n            [innerRadius]=\"series.innerRadius\"\n            [outerRadius]=\"series.outerRadius\"\n            [animations]=\"animations\"\n            (select)=\"onClick($event)\"\n            ngx-tooltip\n            [tooltipDisabled]=\"tooltipDisabled\"\n            [tooltipPlacement]=\"placementTypes.Top\"\n            [tooltipType]=\"styleTypes.tooltip\"\n            [tooltipTitle]=\"tooltipTemplate ? undefined : tooltipText({ data: series })\"\n            [tooltipTemplate]=\"tooltipTemplate\"\n            [tooltipContext]=\"series.data[0].data\"\n            (activate)=\"onActivate($event)\"\n            (deactivate)=\"onDeactivate($event)\"\n          />\n          <svg:text\n            *ngIf=\"animations\"\n            class=\"label percent-label\"\n            dy=\"-0.5em\"\n            x=\"0\"\n            y=\"5\"\n            ngx-charts-count-up\n            [countTo]=\"series.percent\"\n            [countSuffix]=\"'%'\"\n            text-anchor=\"middle\"\n          ></svg:text>\n          <svg:text *ngIf=\"!animations\" class=\"label percent-label\" dy=\"-0.5em\" x=\"0\" y=\"5\" text-anchor=\"middle\">\n            {{ series.percent.toLocaleString() }}\n          </svg:text>\n          <svg:text class=\"label\" dy=\"0.5em\" x=\"0\" y=\"5\" text-anchor=\"middle\">\n            {{ series.label }}\n          </svg:text>\n          <svg:text\n            *ngIf=\"animations\"\n            class=\"label\"\n            dy=\"1.23em\"\n            x=\"0\"\n            [attr.y]=\"series.outerRadius\"\n            text-anchor=\"middle\"\n            ngx-charts-count-up\n            [countTo]=\"series.total\"\n            [countPrefix]=\"label + ': '\"\n          ></svg:text>\n          <svg:text\n            *ngIf=\"!animations\"\n            class=\"label\"\n            dy=\"1.23em\"\n            x=\"0\"\n            [attr.y]=\"series.outerRadius\"\n            text-anchor=\"middle\"\n          >\n            {{ label }}: {{ series.total.toLocaleString() }}\n          </svg:text>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \".pie-grid .arc1{opacity:.4}.pie-grid .percent-label{font-size:16px;font-weight:400}\\n\"] }]\n        }], propDecorators: { designatedTotal: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], tooltipText: [{\n                type: Input\n            }], label: [{\n                type: Input\n            }], minWidth: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }] } });\n\nclass PieChartModule {\n}\nPieChartModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PieChartModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nPieChartModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PieChartModule, declarations: [AdvancedPieChartComponent,\n        PieLabelComponent,\n        PieArcComponent,\n        PieChartComponent,\n        PieGridComponent,\n        PieGridSeriesComponent,\n        PieSeriesComponent], imports: [ChartCommonModule], exports: [AdvancedPieChartComponent,\n        PieLabelComponent,\n        PieArcComponent,\n        PieChartComponent,\n        PieGridComponent,\n        PieGridSeriesComponent,\n        PieSeriesComponent] });\nPieChartModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PieChartModule, imports: [[ChartCommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PieChartModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [ChartCommonModule],\n                    declarations: [\n                        AdvancedPieChartComponent,\n                        PieLabelComponent,\n                        PieArcComponent,\n                        PieChartComponent,\n                        PieGridComponent,\n                        PieGridSeriesComponent,\n                        PieSeriesComponent\n                    ],\n                    exports: [\n                        AdvancedPieChartComponent,\n                        PieLabelComponent,\n                        PieArcComponent,\n                        PieChartComponent,\n                        PieGridComponent,\n                        PieGridSeriesComponent,\n                        PieSeriesComponent\n                    ]\n                }]\n        }] });\n\nclass PolarChartModule {\n}\nPolarChartModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PolarChartModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nPolarChartModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PolarChartModule, declarations: [PolarChartComponent, PolarSeriesComponent], imports: [ChartCommonModule, PieChartModule, LineChartModule], exports: [PolarChartComponent, PolarSeriesComponent] });\nPolarChartModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PolarChartModule, imports: [[ChartCommonModule, PieChartModule, LineChartModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PolarChartModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [ChartCommonModule, PieChartModule, LineChartModule],\n                    declarations: [PolarChartComponent, PolarSeriesComponent],\n                    exports: [PolarChartComponent, PolarSeriesComponent]\n                }]\n        }] });\n\nfunction calculateTextWidth(fontFamilyKey, text, defaultWidth = 8) {\n    return text.split('').reduce((acc, curr) => {\n        const width = fontFamilyKey[curr] || defaultWidth;\n        return acc + width;\n    }, 0);\n}\n\nconst VERDANA_FONT_WIDTHS_16_PX = {\n    '0': 10,\n    '1': 10,\n    '2': 10,\n    '3': 10,\n    '4': 10,\n    '5': 10,\n    '6': 10,\n    '7': 10,\n    '8': 10,\n    '9': 10,\n    A: 11,\n    B: 11,\n    C: 11,\n    D: 12,\n    E: 10,\n    F: 9,\n    G: 12,\n    H: 12,\n    I: 7,\n    J: 7,\n    K: 11,\n    L: 9,\n    M: 13,\n    N: 12,\n    O: 13,\n    P: 10,\n    Q: 13,\n    R: 11,\n    S: 11,\n    T: 10,\n    U: 12,\n    V: 11,\n    W: 16,\n    X: 11,\n    Y: 10,\n    Z: 11,\n    a: 10,\n    b: 10,\n    c: 8,\n    d: 10,\n    e: 10,\n    f: 6,\n    g: 10,\n    h: 10,\n    i: 4,\n    j: 6,\n    k: 9,\n    l: 4,\n    m: 16,\n    n: 10,\n    o: 10,\n    p: 10,\n    q: 10,\n    r: 7,\n    s: 8,\n    t: 6,\n    u: 10,\n    v: 9,\n    w: 13,\n    x: 9,\n    y: 9,\n    z: 8,\n    '!': 6,\n    '@': 16,\n    '#': 13,\n    $: 10,\n    '%': 17,\n    '^': 13,\n    '&': 12,\n    '*': 10,\n    '(': 7,\n    ')': 7,\n    _: 10,\n    '-': 7,\n    '+': 13,\n    '=': 13,\n    ',': 6,\n    '.': 6,\n    '/': 7,\n    \"'\": 4,\n    ':': 7,\n    '|': 7,\n    '?': 9,\n    ';': 7,\n    '<': 13,\n    '>': 13\n};\n\nclass CardComponent {\n    constructor(element, cd, zone, platformId) {\n        this.cd = cd;\n        this.zone = zone;\n        this.platformId = platformId;\n        this.animations = true;\n        this.select = new EventEmitter();\n        this.value = '';\n        this.textFontSize = 12;\n        this.textTransform = '';\n        this.initialized = false;\n        this.bandHeight = 10;\n        this.textPadding = [10, 20, 5, 20];\n        this.labelFontSize = 15;\n        this.element = element.nativeElement;\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    ngOnInit() {\n        if (isPlatformServer(this.platformId)) {\n            this.scaleTextSSR();\n        }\n    }\n    ngOnDestroy() {\n        if (isPlatformBrowser(this.platformId)) {\n            cancelAnimationFrame(this.animationReq);\n        }\n    }\n    update() {\n        this.zone.run(() => {\n            const hasValue = this.data && typeof this.data.value !== 'undefined';\n            const valueFormatting = this.valueFormatting || (card => card.value.toLocaleString());\n            const labelFormatting = this.labelFormatting || (card => escapeLabel(trimLabel(card.label, 55)));\n            this.transform = `translate(${this.x} , ${this.y})`;\n            this.textWidth = Math.max(0, this.width) - this.textPadding[1] - this.textPadding[3];\n            this.cardWidth = Math.max(0, this.width);\n            this.cardHeight = Math.max(0, this.height);\n            this.label = this.label ? this.label : this.data.name;\n            const cardData = {\n                label: this.label,\n                data: this.data,\n                value: this.data.value\n            };\n            this.formattedLabel = labelFormatting(cardData);\n            this.transformBand = `translate(0 , ${this.cardHeight - this.bandHeight})`;\n            const value = hasValue ? valueFormatting(cardData) : '';\n            this.value = this.paddedValue(value);\n            this.setPadding();\n            this.bandPath = roundedRect(0, 0, this.cardWidth, this.bandHeight, 3, [false, false, true, true]);\n            setTimeout(() => {\n                if (isPlatformBrowser(this.platformId)) {\n                    this.scaleText();\n                }\n                this.value = value;\n                if (hasValue && !this.initialized) {\n                    setTimeout(() => this.startCount(), 20);\n                }\n            }, 8);\n        });\n    }\n    paddedValue(value) {\n        if (this.medianSize && this.medianSize > value.length) {\n            value += '\\u2007'.repeat(this.medianSize - value.length);\n        }\n        return value;\n    }\n    startCount() {\n        if (!this.initialized && this.animations) {\n            cancelAnimationFrame(this.animationReq);\n            const val = this.data.value;\n            const decs = decimalChecker(val);\n            const valueFormatting = this.valueFormatting || (card => card.value.toLocaleString());\n            const callback = ({ value, finished }) => {\n                this.zone.run(() => {\n                    value = finished ? val : value;\n                    this.value = valueFormatting({ label: this.label, data: this.data, value });\n                    if (!finished) {\n                        this.value = this.paddedValue(this.value);\n                    }\n                    this.cd.markForCheck();\n                });\n            };\n            this.animationReq = count(0, val, decs, 1, callback);\n            this.initialized = true;\n        }\n    }\n    scaleText() {\n        this.zone.run(() => {\n            const { width, height } = this.textEl.nativeElement.getBoundingClientRect();\n            if (width === 0 || height === 0) {\n                return;\n            }\n            const textPadding = (this.textPadding[1] = this.textPadding[3] = this.cardWidth / 8);\n            const availableWidth = this.cardWidth - 2 * textPadding;\n            const availableHeight = this.cardHeight / 3;\n            const resizeScale = Math.min(availableWidth / width, availableHeight / height);\n            this.textFontSize = Math.floor(this.textFontSize * resizeScale);\n            this.labelFontSize = Math.min(this.textFontSize, 15);\n            this.setPadding();\n            this.cd.markForCheck();\n        });\n    }\n    scaleTextSSR() {\n        const width = calculateTextWidth(VERDANA_FONT_WIDTHS_16_PX, this.value, 10);\n        const height = 18;\n        const textPadding = (this.textPadding[1] = this.textPadding[3] = this.cardWidth / 8);\n        const availableWidth = this.cardWidth - 2 * textPadding;\n        const availableHeight = this.cardHeight / 3;\n        const resizeScale = Math.min(availableWidth / width, availableHeight / height);\n        this.textFontSize = Math.floor(this.textFontSize * resizeScale);\n        this.labelFontSize = Math.min(this.textFontSize, 15);\n        this.setPadding();\n    }\n    setPadding() {\n        this.textPadding[1] = this.textPadding[3] = this.cardWidth / 8;\n        const padding = this.cardHeight / 2;\n        this.textPadding[0] = padding - this.textFontSize - this.labelFontSize / 2;\n        this.textPadding[2] = padding - this.labelFontSize;\n    }\n    onClick() {\n        this.select.emit(this.data);\n    }\n}\nCardComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CardComponent, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: i0.NgZone }, { token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Component });\nCardComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: CardComponent, selector: \"g[ngx-charts-card]\", inputs: { color: \"color\", bandColor: \"bandColor\", textColor: \"textColor\", x: \"x\", y: \"y\", width: \"width\", height: \"height\", label: \"label\", data: \"data\", medianSize: \"medianSize\", valueFormatting: \"valueFormatting\", labelFormatting: \"labelFormatting\", animations: \"animations\" }, outputs: { select: \"select\" }, viewQueries: [{ propertyName: \"textEl\", first: true, predicate: [\"textEl\"], descendants: true }], usesOnChanges: true, ngImport: i0, template: `\n    <svg:g [attr.transform]=\"transform\" class=\"cell\" (click)=\"onClick()\">\n      <svg:rect class=\"card\" [style.fill]=\"color\" [attr.width]=\"cardWidth\" [attr.height]=\"cardHeight\" rx=\"3\" ry=\"3\" />\n      <svg:path\n        *ngIf=\"bandColor && bandColor !== color\"\n        class=\"card-band\"\n        [attr.fill]=\"bandColor\"\n        [attr.transform]=\"transformBand\"\n        stroke=\"none\"\n        [attr.d]=\"bandPath\"\n      />\n      <title>{{ label }}</title>\n      <svg:foreignObject\n        class=\"trimmed-label\"\n        x=\"5\"\n        [attr.x]=\"textPadding[3]\"\n        [attr.y]=\"cardHeight - textPadding[2]\"\n        [attr.width]=\"textWidth\"\n        [attr.height]=\"labelFontSize + textPadding[2]\"\n        alignment-baseline=\"hanging\"\n      >\n        <xhtml:p\n          [style.color]=\"textColor\"\n          [style.fontSize.px]=\"labelFontSize\"\n          [style.lineHeight.px]=\"labelFontSize\"\n          [innerHTML]=\"formattedLabel\"\n        >\n        </xhtml:p>\n      </svg:foreignObject>\n      <svg:text\n        #textEl\n        class=\"value-text\"\n        [attr.x]=\"textPadding[3]\"\n        [attr.y]=\"textPadding[0]\"\n        [style.fill]=\"textColor\"\n        text-anchor=\"start\"\n        alignment-baseline=\"hanging\"\n        [style.font-size.pt]=\"textFontSize\"\n      >\n        {{ value }}\n      </svg:text>\n    </svg:g>\n  `, isInline: true, directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CardComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-card]',\n                    template: `\n    <svg:g [attr.transform]=\"transform\" class=\"cell\" (click)=\"onClick()\">\n      <svg:rect class=\"card\" [style.fill]=\"color\" [attr.width]=\"cardWidth\" [attr.height]=\"cardHeight\" rx=\"3\" ry=\"3\" />\n      <svg:path\n        *ngIf=\"bandColor && bandColor !== color\"\n        class=\"card-band\"\n        [attr.fill]=\"bandColor\"\n        [attr.transform]=\"transformBand\"\n        stroke=\"none\"\n        [attr.d]=\"bandPath\"\n      />\n      <title>{{ label }}</title>\n      <svg:foreignObject\n        class=\"trimmed-label\"\n        x=\"5\"\n        [attr.x]=\"textPadding[3]\"\n        [attr.y]=\"cardHeight - textPadding[2]\"\n        [attr.width]=\"textWidth\"\n        [attr.height]=\"labelFontSize + textPadding[2]\"\n        alignment-baseline=\"hanging\"\n      >\n        <xhtml:p\n          [style.color]=\"textColor\"\n          [style.fontSize.px]=\"labelFontSize\"\n          [style.lineHeight.px]=\"labelFontSize\"\n          [innerHTML]=\"formattedLabel\"\n        >\n        </xhtml:p>\n      </svg:foreignObject>\n      <svg:text\n        #textEl\n        class=\"value-text\"\n        [attr.x]=\"textPadding[3]\"\n        [attr.y]=\"textPadding[0]\"\n        [style.fill]=\"textColor\"\n        text-anchor=\"start\"\n        alignment-baseline=\"hanging\"\n        [style.font-size.pt]=\"textFontSize\"\n      >\n        {{ value }}\n      </svg:text>\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }]; }, propDecorators: { color: [{\n                type: Input\n            }], bandColor: [{\n                type: Input\n            }], textColor: [{\n                type: Input\n            }], x: [{\n                type: Input\n            }], y: [{\n                type: Input\n            }], width: [{\n                type: Input\n            }], height: [{\n                type: Input\n            }], label: [{\n                type: Input\n            }], data: [{\n                type: Input\n            }], medianSize: [{\n                type: Input\n            }], valueFormatting: [{\n                type: Input\n            }], labelFormatting: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], textEl: [{\n                type: ViewChild,\n                args: ['textEl', { static: false }]\n            }] } });\n\n/**\n * Converts a hex to RGB\n *\n * @export\n */\nfunction hexToRgb(value) {\n    // deprecated, use d3.color()\n    return d3_color.rgb(value);\n}\n/**\n * Accepts a color (string) and returns a inverted hex color (string)\n * http://stackoverflow.com/questions/9600295/automatically-change-text-color-to-assure-readability\n *\n * @export\n */\nfunction invertColor(value) {\n    const color = d3_color.rgb(value);\n    const { r, g, b, opacity } = color;\n    if (opacity === 0) {\n        return color.toString();\n    }\n    const yiq = (r * 299 + g * 587 + b * 114) / 1000;\n    const depth = yiq >= 128 ? -0.8 : 0.8;\n    return shadeRGBColor(color, depth);\n}\n/**\n * Given a rgb, it will darken/lighten\n * http://stackoverflow.com/questions/5560248/programmatically-lighten-or-darken-a-hex-color-or-rgb-and-blend-colors\n *\n * @export\n * @param \\{ r, g, b }\n */\nfunction shadeRGBColor({ r, g, b }, percent) {\n    const t = percent < 0 ? 0 : 255;\n    const p = percent < 0 ? percent * -1 : percent;\n    r = Math.round((t - r) * p) + r;\n    g = Math.round((t - g) * p) + g;\n    b = Math.round((t - b) * p) + b;\n    return `rgb(${r}, ${g}, ${b})`;\n}\n\nclass CardSeriesComponent {\n    constructor() {\n        this.innerPadding = 15;\n        this.emptyColor = 'rgba(0, 0, 0, 0)';\n        this.animations = true;\n        this.select = new EventEmitter();\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    update() {\n        if (this.data.length > 2) {\n            const valueFormatting = this.valueFormatting || (card => card.value.toLocaleString());\n            const sortedLengths = this.data\n                .map(d => {\n                const hasValue = d && d.data && typeof d.data.value !== 'undefined' && d.data.value !== null;\n                return hasValue\n                    ? valueFormatting({\n                        data: d.data,\n                        label: d ? d.data.name : '',\n                        value: d && d.data ? d.data.value : ''\n                    }).length\n                    : 0;\n            })\n                .sort((a, b) => b - a);\n            const idx = Math.ceil(this.data.length / 2);\n            this.medianSize = sortedLengths[idx];\n        }\n        const cards = this.getCards();\n        this.cards = cards.filter(d => d.data.value !== null);\n        this.emptySlots = cards.filter(d => d.data.value === null);\n    }\n    getCards() {\n        const yPadding = typeof this.innerPadding === 'number' ? this.innerPadding : this.innerPadding[0] + this.innerPadding[2];\n        const xPadding = typeof this.innerPadding === 'number' ? this.innerPadding : this.innerPadding[1] + this.innerPadding[3];\n        return this.data.map((d, index) => {\n            let label = d.data.name;\n            if (label && label.constructor.name === 'Date') {\n                label = label.toLocaleDateString();\n            }\n            else {\n                label = label ? label.toLocaleString() : label;\n            }\n            const value = d.data.value;\n            const valueColor = label ? this.colors.getColor(label) : this.emptyColor;\n            const color = this.cardColor || valueColor || '#000';\n            return {\n                x: d.x,\n                y: d.y,\n                width: d.width - xPadding,\n                height: d.height - yPadding,\n                color,\n                bandColor: this.bandColor || valueColor,\n                textColor: this.textColor || invertColor(color),\n                label,\n                data: d.data,\n                tooltipText: `${label}: ${value}`\n            };\n        });\n    }\n    trackBy(index, card) {\n        return card.label;\n    }\n    onClick(data) {\n        this.select.emit(data);\n    }\n}\nCardSeriesComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CardSeriesComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nCardSeriesComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: CardSeriesComponent, selector: \"g[ngx-charts-card-series]\", inputs: { data: \"data\", dims: \"dims\", colors: \"colors\", innerPadding: \"innerPadding\", cardColor: \"cardColor\", bandColor: \"bandColor\", emptyColor: \"emptyColor\", textColor: \"textColor\", valueFormatting: \"valueFormatting\", labelFormatting: \"labelFormatting\", animations: \"animations\" }, outputs: { select: \"select\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:rect\n      *ngFor=\"let c of emptySlots; trackBy: trackBy\"\n      class=\"card-empty\"\n      [attr.x]=\"c.x\"\n      [attr.y]=\"c.y\"\n      [style.fill]=\"emptyColor\"\n      [attr.width]=\"c.width\"\n      [attr.height]=\"c.height\"\n      rx=\"3\"\n      ry=\"3\"\n    />\n    <svg:g\n      ngx-charts-card\n      *ngFor=\"let c of cards; trackBy: trackBy\"\n      [x]=\"c.x\"\n      [y]=\"c.y\"\n      [width]=\"c.width\"\n      [height]=\"c.height\"\n      [color]=\"c.color\"\n      [bandColor]=\"c.bandColor\"\n      [textColor]=\"c.textColor\"\n      [data]=\"c.data\"\n      [label]=\"c.label\"\n      [medianSize]=\"medianSize\"\n      [valueFormatting]=\"valueFormatting\"\n      [labelFormatting]=\"labelFormatting\"\n      [animations]=\"animations\"\n      (select)=\"onClick($event)\"\n    />\n  `, isInline: true, components: [{ type: CardComponent, selector: \"g[ngx-charts-card]\", inputs: [\"color\", \"bandColor\", \"textColor\", \"x\", \"y\", \"width\", \"height\", \"label\", \"data\", \"medianSize\", \"valueFormatting\", \"labelFormatting\", \"animations\"], outputs: [\"select\"] }], directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CardSeriesComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-card-series]',\n                    template: `\n    <svg:rect\n      *ngFor=\"let c of emptySlots; trackBy: trackBy\"\n      class=\"card-empty\"\n      [attr.x]=\"c.x\"\n      [attr.y]=\"c.y\"\n      [style.fill]=\"emptyColor\"\n      [attr.width]=\"c.width\"\n      [attr.height]=\"c.height\"\n      rx=\"3\"\n      ry=\"3\"\n    />\n    <svg:g\n      ngx-charts-card\n      *ngFor=\"let c of cards; trackBy: trackBy\"\n      [x]=\"c.x\"\n      [y]=\"c.y\"\n      [width]=\"c.width\"\n      [height]=\"c.height\"\n      [color]=\"c.color\"\n      [bandColor]=\"c.bandColor\"\n      [textColor]=\"c.textColor\"\n      [data]=\"c.data\"\n      [label]=\"c.label\"\n      [medianSize]=\"medianSize\"\n      [valueFormatting]=\"valueFormatting\"\n      [labelFormatting]=\"labelFormatting\"\n      [animations]=\"animations\"\n      (select)=\"onClick($event)\"\n    />\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], propDecorators: { data: [{\n                type: Input\n            }], dims: [{\n                type: Input\n            }], colors: [{\n                type: Input\n            }], innerPadding: [{\n                type: Input\n            }], cardColor: [{\n                type: Input\n            }], bandColor: [{\n                type: Input\n            }], emptyColor: [{\n                type: Input\n            }], textColor: [{\n                type: Input\n            }], valueFormatting: [{\n                type: Input\n            }], labelFormatting: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }] } });\n\nclass NumberCardComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.emptyColor = 'rgba(0, 0, 0, 0)';\n        this.innerPadding = 15;\n        this.margin = [10, 10, 10, 10];\n    }\n    get clickable() {\n        return !!this.select.observers.length;\n    }\n    update() {\n        super.update();\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin\n        });\n        this.formatDates();\n        this.domain = this.getDomain();\n        this.setColors();\n        this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n        const size = gridSize(this.dims, this.results.length, 150);\n        const N = size[0] * size[1];\n        const data = this.results.slice();\n        while (data.length < N) {\n            data.push({ value: null });\n        }\n        this.data = gridLayout(this.dims, data, 150, this.designatedTotal);\n    }\n    getDomain() {\n        return this.results.map(d => d.label);\n    }\n    onClick(data) {\n        this.select.emit(data);\n    }\n    setColors() {\n        this.colors = new ColorHelper(this.scheme, ScaleType.Ordinal, this.domain, this.customColors);\n    }\n}\nNumberCardComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: NumberCardComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nNumberCardComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: NumberCardComponent, selector: \"ngx-charts-number-card\", inputs: { cardColor: \"cardColor\", bandColor: \"bandColor\", emptyColor: \"emptyColor\", innerPadding: \"innerPadding\", textColor: \"textColor\", valueFormatting: \"valueFormatting\", labelFormatting: \"labelFormatting\", designatedTotal: \"designatedTotal\" }, usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart [view]=\"[width, height]\" [showLegend]=\"false\" [animations]=\"animations\">\n      <svg:g [attr.transform]=\"transform\" class=\"number-card chart\" [class.clickable]=\"clickable\">\n        <svg:g\n          ngx-charts-card-series\n          [colors]=\"colors\"\n          [cardColor]=\"cardColor\"\n          [bandColor]=\"bandColor\"\n          [textColor]=\"textColor\"\n          [emptyColor]=\"emptyColor\"\n          [data]=\"data\"\n          [dims]=\"dims\"\n          [innerPadding]=\"innerPadding\"\n          [valueFormatting]=\"valueFormatting\"\n          [labelFormatting]=\"labelFormatting\"\n          [animations]=\"animations\"\n          (select)=\"onClick($event)\"\n        />\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \"ngx-charts-number-card .cell .trimmed-label{font-size:12px;pointer-events:none;overflow:hidden;text-align:left;line-height:1em}ngx-charts-number-card .cell .trimmed-label p{overflow:hidden;white-space:nowrap;text-overflow:ellipsis;width:100%;padding:0;margin:0}ngx-charts-number-card .cell .value-text{pointer-events:none}ngx-charts-number-card .number-card.clickable .cell .card,ngx-charts-number-card .number-card.clickable .cell .card-band{cursor:pointer}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: CardSeriesComponent, selector: \"g[ngx-charts-card-series]\", inputs: [\"data\", \"dims\", \"colors\", \"innerPadding\", \"cardColor\", \"bandColor\", \"emptyColor\", \"textColor\", \"valueFormatting\", \"labelFormatting\", \"animations\"], outputs: [\"select\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: NumberCardComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-number-card', template: `\n    <ngx-charts-chart [view]=\"[width, height]\" [showLegend]=\"false\" [animations]=\"animations\">\n      <svg:g [attr.transform]=\"transform\" class=\"number-card chart\" [class.clickable]=\"clickable\">\n        <svg:g\n          ngx-charts-card-series\n          [colors]=\"colors\"\n          [cardColor]=\"cardColor\"\n          [bandColor]=\"bandColor\"\n          [textColor]=\"textColor\"\n          [emptyColor]=\"emptyColor\"\n          [data]=\"data\"\n          [dims]=\"dims\"\n          [innerPadding]=\"innerPadding\"\n          [valueFormatting]=\"valueFormatting\"\n          [labelFormatting]=\"labelFormatting\"\n          [animations]=\"animations\"\n          (select)=\"onClick($event)\"\n        />\n      </svg:g>\n    </ngx-charts-chart>\n  `, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \"ngx-charts-number-card .cell .trimmed-label{font-size:12px;pointer-events:none;overflow:hidden;text-align:left;line-height:1em}ngx-charts-number-card .cell .trimmed-label p{overflow:hidden;white-space:nowrap;text-overflow:ellipsis;width:100%;padding:0;margin:0}ngx-charts-number-card .cell .value-text{pointer-events:none}ngx-charts-number-card .number-card.clickable .cell .card,ngx-charts-number-card .number-card.clickable .cell .card-band{cursor:pointer}\\n\"] }]\n        }], propDecorators: { cardColor: [{\n                type: Input\n            }], bandColor: [{\n                type: Input\n            }], emptyColor: [{\n                type: Input\n            }], innerPadding: [{\n                type: Input\n            }], textColor: [{\n                type: Input\n            }], valueFormatting: [{\n                type: Input\n            }], labelFormatting: [{\n                type: Input\n            }], designatedTotal: [{\n                type: Input\n            }] } });\n\nclass NumberCardModule {\n}\nNumberCardModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: NumberCardModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nNumberCardModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: NumberCardModule, declarations: [CardComponent, CardSeriesComponent, NumberCardComponent], imports: [ChartCommonModule], exports: [CardComponent, CardSeriesComponent, NumberCardComponent] });\nNumberCardModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: NumberCardModule, imports: [[ChartCommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: NumberCardModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [ChartCommonModule],\n                    declarations: [CardComponent, CardSeriesComponent, NumberCardComponent],\n                    exports: [CardComponent, CardSeriesComponent, NumberCardComponent]\n                }]\n        }] });\n\nclass TreeMapCellComponent {\n    constructor(element) {\n        this.gradient = false;\n        this.animations = true;\n        this.select = new EventEmitter();\n        this.initialized = false;\n        this.orientation = BarOrientation;\n        this.element = element.nativeElement;\n    }\n    ngOnChanges() {\n        this.update();\n        this.valueFormatting = this.valueFormatting || (value => value.toLocaleString());\n        const labelFormatting = this.labelFormatting || (cell => escapeLabel(trimLabel(cell.label, 55)));\n        const cellData = {\n            data: this.data,\n            label: this.label,\n            value: this.value\n        };\n        this.formattedValue = this.valueFormatting(cellData.value);\n        this.formattedLabel = labelFormatting(cellData);\n        this.gradientId = 'grad' + id().toString();\n        this.gradientUrl = `url(#${this.gradientId})`;\n        this.gradientStops = this.getGradientStops();\n    }\n    update() {\n        if (this.initialized) {\n            this.animateToCurrentForm();\n        }\n        else {\n            if (this.animations) {\n                this.loadAnimation();\n            }\n            this.initialized = true;\n        }\n    }\n    loadAnimation() {\n        const node = select(this.element).select('.cell');\n        node.attr('opacity', 0).attr('x', this.x).attr('y', this.y);\n        this.animateToCurrentForm();\n    }\n    getTextColor() {\n        return invertColor(this.fill);\n    }\n    animateToCurrentForm() {\n        const node = select(this.element).select('.cell');\n        if (this.animations) {\n            node\n                .transition()\n                .duration(750)\n                .attr('opacity', 1)\n                .attr('x', this.x)\n                .attr('y', this.y)\n                .attr('width', this.width)\n                .attr('height', this.height);\n        }\n        else {\n            node.attr('opacity', 1).attr('x', this.x).attr('y', this.y).attr('width', this.width).attr('height', this.height);\n        }\n    }\n    onClick() {\n        this.select.emit(this.data);\n    }\n    getGradientStops() {\n        return [\n            {\n                offset: 0,\n                color: this.fill,\n                opacity: 0.3\n            },\n            {\n                offset: 100,\n                color: this.fill,\n                opacity: 1\n            }\n        ];\n    }\n}\nTreeMapCellComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TreeMapCellComponent, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\nTreeMapCellComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: TreeMapCellComponent, selector: \"g[ngx-charts-tree-map-cell]\", inputs: { data: \"data\", fill: \"fill\", x: \"x\", y: \"y\", width: \"width\", height: \"height\", label: \"label\", value: \"value\", valueFormatting: \"valueFormatting\", labelFormatting: \"labelFormatting\", gradient: \"gradient\", animations: \"animations\" }, outputs: { select: \"select\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:g>\n      <defs *ngIf=\"gradient\">\n        <svg:g\n          ngx-charts-svg-linear-gradient\n          [orientation]=\"orientation.Vertical\"\n          [name]=\"gradientId\"\n          [stops]=\"gradientStops\"\n        />\n      </defs>\n      <svg:rect\n        [attr.fill]=\"gradient ? gradientUrl : fill\"\n        [attr.width]=\"width\"\n        [attr.height]=\"height\"\n        [attr.x]=\"x\"\n        [attr.y]=\"y\"\n        class=\"cell\"\n        (click)=\"onClick()\"\n      />\n      <svg:foreignObject\n        *ngIf=\"width >= 70 && height >= 35\"\n        [attr.x]=\"x\"\n        [attr.y]=\"y\"\n        [attr.width]=\"width\"\n        [attr.height]=\"height\"\n        class=\"treemap-label\"\n        [style.pointer-events]=\"'none'\"\n      >\n        <xhtml:p [style.color]=\"getTextColor()\" [style.height]=\"height + 'px'\" [style.width]=\"width + 'px'\">\n          <xhtml:span class=\"treemap-label\" [innerHTML]=\"formattedLabel\"> </xhtml:span>\n          <xhtml:br />\n          <xhtml:span\n            *ngIf=\"animations\"\n            class=\"treemap-val\"\n            ngx-charts-count-up\n            [countTo]=\"value\"\n            [valueFormatting]=\"valueFormatting\"\n          >\n          </xhtml:span>\n          <xhtml:span *ngIf=\"!animations\" class=\"treemap-val\">\n            {{ formattedValue }}\n          </xhtml:span>\n        </xhtml:p>\n      </svg:foreignObject>\n    </svg:g>\n  `, isInline: true, components: [{ type: SvgLinearGradientComponent, selector: \"g[ngx-charts-svg-linear-gradient]\", inputs: [\"orientation\", \"name\", \"stops\"] }, { type: CountUpDirective, selector: \"[ngx-charts-count-up]\", inputs: [\"countDuration\", \"countPrefix\", \"countSuffix\", \"valueFormatting\", \"countDecimals\", \"countTo\", \"countFrom\"], outputs: [\"countChange\", \"countFinish\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TreeMapCellComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-tree-map-cell]',\n                    template: `\n    <svg:g>\n      <defs *ngIf=\"gradient\">\n        <svg:g\n          ngx-charts-svg-linear-gradient\n          [orientation]=\"orientation.Vertical\"\n          [name]=\"gradientId\"\n          [stops]=\"gradientStops\"\n        />\n      </defs>\n      <svg:rect\n        [attr.fill]=\"gradient ? gradientUrl : fill\"\n        [attr.width]=\"width\"\n        [attr.height]=\"height\"\n        [attr.x]=\"x\"\n        [attr.y]=\"y\"\n        class=\"cell\"\n        (click)=\"onClick()\"\n      />\n      <svg:foreignObject\n        *ngIf=\"width >= 70 && height >= 35\"\n        [attr.x]=\"x\"\n        [attr.y]=\"y\"\n        [attr.width]=\"width\"\n        [attr.height]=\"height\"\n        class=\"treemap-label\"\n        [style.pointer-events]=\"'none'\"\n      >\n        <xhtml:p [style.color]=\"getTextColor()\" [style.height]=\"height + 'px'\" [style.width]=\"width + 'px'\">\n          <xhtml:span class=\"treemap-label\" [innerHTML]=\"formattedLabel\"> </xhtml:span>\n          <xhtml:br />\n          <xhtml:span\n            *ngIf=\"animations\"\n            class=\"treemap-val\"\n            ngx-charts-count-up\n            [countTo]=\"value\"\n            [valueFormatting]=\"valueFormatting\"\n          >\n          </xhtml:span>\n          <xhtml:span *ngIf=\"!animations\" class=\"treemap-val\">\n            {{ formattedValue }}\n          </xhtml:span>\n        </xhtml:p>\n      </svg:foreignObject>\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { data: [{\n                type: Input\n            }], fill: [{\n                type: Input\n            }], x: [{\n                type: Input\n            }], y: [{\n                type: Input\n            }], width: [{\n                type: Input\n            }], height: [{\n                type: Input\n            }], label: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }], valueFormatting: [{\n                type: Input\n            }], labelFormatting: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }] } });\n\nclass TreeMapCellSeriesComponent {\n    constructor() {\n        this.gradient = false;\n        this.tooltipDisabled = false;\n        this.animations = true;\n        this.select = new EventEmitter();\n        this.styleTypes = StyleTypes;\n        this.placementTypes = PlacementTypes;\n    }\n    ngOnChanges(changes) {\n        this.cells = this.getCells();\n    }\n    getCells() {\n        return this.data.children\n            .filter(d => {\n            return d.depth === 1;\n        })\n            .map((d, index) => {\n            const label = d.id;\n            return {\n                data: d.data,\n                x: d.x0,\n                y: d.y0,\n                width: d.x1 - d.x0,\n                height: d.y1 - d.y0,\n                fill: this.colors.getColor(label),\n                label,\n                value: d.value\n            };\n        });\n    }\n    getTooltipText({ label, value }) {\n        return `\n      <span class=\"tooltip-label\">${escapeLabel(label)}</span>\n      <span class=\"tooltip-val\">${value.toLocaleString()}</span>\n    `;\n    }\n    onClick(data) {\n        this.select.emit(data);\n    }\n    trackBy(index, item) {\n        return item.label;\n    }\n}\nTreeMapCellSeriesComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TreeMapCellSeriesComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nTreeMapCellSeriesComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: TreeMapCellSeriesComponent, selector: \"g[ngx-charts-tree-map-cell-series]\", inputs: { data: \"data\", dims: \"dims\", colors: \"colors\", valueFormatting: \"valueFormatting\", labelFormatting: \"labelFormatting\", gradient: \"gradient\", tooltipDisabled: \"tooltipDisabled\", tooltipTemplate: \"tooltipTemplate\", animations: \"animations\" }, outputs: { select: \"select\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:g\n      ngx-charts-tree-map-cell\n      *ngFor=\"let c of cells; trackBy: trackBy\"\n      [data]=\"c.data\"\n      [x]=\"c.x\"\n      [y]=\"c.y\"\n      [width]=\"c.width\"\n      [height]=\"c.height\"\n      [fill]=\"c.fill\"\n      [label]=\"c.label\"\n      [value]=\"c.value\"\n      [valueFormatting]=\"valueFormatting\"\n      [labelFormatting]=\"labelFormatting\"\n      [gradient]=\"gradient\"\n      [animations]=\"animations\"\n      (select)=\"onClick($event)\"\n      ngx-tooltip\n      [tooltipDisabled]=\"tooltipDisabled\"\n      [tooltipPlacement]=\"placementTypes.Top\"\n      [tooltipType]=\"styleTypes.tooltip\"\n      [tooltipTitle]=\"tooltipTemplate ? undefined : getTooltipText(c)\"\n      [tooltipTemplate]=\"tooltipTemplate\"\n      [tooltipContext]=\"c.data\"\n    ></svg:g>\n  `, isInline: true, components: [{ type: TreeMapCellComponent, selector: \"g[ngx-charts-tree-map-cell]\", inputs: [\"data\", \"fill\", \"x\", \"y\", \"width\", \"height\", \"label\", \"value\", \"valueFormatting\", \"labelFormatting\", \"gradient\", \"animations\"], outputs: [\"select\"] }], directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: TooltipDirective, selector: \"[ngx-tooltip]\", inputs: [\"tooltipCssClass\", \"tooltipTitle\", \"tooltipAppendToBody\", \"tooltipSpacing\", \"tooltipDisabled\", \"tooltipShowCaret\", \"tooltipPlacement\", \"tooltipAlignment\", \"tooltipType\", \"tooltipCloseOnClickOutside\", \"tooltipCloseOnMouseLeave\", \"tooltipHideTimeout\", \"tooltipShowTimeout\", \"tooltipTemplate\", \"tooltipShowEvent\", \"tooltipContext\", \"tooltipImmediateExit\"], outputs: [\"show\", \"hide\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TreeMapCellSeriesComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-tree-map-cell-series]',\n                    template: `\n    <svg:g\n      ngx-charts-tree-map-cell\n      *ngFor=\"let c of cells; trackBy: trackBy\"\n      [data]=\"c.data\"\n      [x]=\"c.x\"\n      [y]=\"c.y\"\n      [width]=\"c.width\"\n      [height]=\"c.height\"\n      [fill]=\"c.fill\"\n      [label]=\"c.label\"\n      [value]=\"c.value\"\n      [valueFormatting]=\"valueFormatting\"\n      [labelFormatting]=\"labelFormatting\"\n      [gradient]=\"gradient\"\n      [animations]=\"animations\"\n      (select)=\"onClick($event)\"\n      ngx-tooltip\n      [tooltipDisabled]=\"tooltipDisabled\"\n      [tooltipPlacement]=\"placementTypes.Top\"\n      [tooltipType]=\"styleTypes.tooltip\"\n      [tooltipTitle]=\"tooltipTemplate ? undefined : getTooltipText(c)\"\n      [tooltipTemplate]=\"tooltipTemplate\"\n      [tooltipContext]=\"c.data\"\n    ></svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], propDecorators: { data: [{\n                type: Input\n            }], dims: [{\n                type: Input\n            }], colors: [{\n                type: Input\n            }], valueFormatting: [{\n                type: Input\n            }], labelFormatting: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], tooltipTemplate: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }] } });\n\nclass TreeMapComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.tooltipDisabled = false;\n        this.gradient = false;\n        this.select = new EventEmitter();\n        this.margin = [10, 10, 10, 10];\n    }\n    update() {\n        super.update();\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin\n        });\n        this.domain = this.getDomain();\n        this.treemap = treemap().size([this.dims.width, this.dims.height]);\n        const rootNode = {\n            name: 'root',\n            value: 0,\n            isRoot: true\n        };\n        const root = stratify()\n            .id(d => {\n            let label = d.name;\n            if (label.constructor.name === 'Date') {\n                label = label.toLocaleDateString();\n            }\n            else {\n                label = label.toLocaleString();\n            }\n            return label;\n        })\n            .parentId(d => (d.isRoot ? null : 'root'))([rootNode, ...this.results])\n            .sum(d => d.value);\n        this.data = this.treemap(root);\n        this.setColors();\n        this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n    }\n    getDomain() {\n        return this.results.map(d => d.name);\n    }\n    onClick(data) {\n        this.select.emit(data);\n    }\n    setColors() {\n        this.colors = new ColorHelper(this.scheme, ScaleType.Ordinal, this.domain, this.customColors);\n    }\n}\nTreeMapComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TreeMapComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nTreeMapComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: TreeMapComponent, selector: \"ngx-charts-tree-map\", inputs: { results: \"results\", tooltipDisabled: \"tooltipDisabled\", valueFormatting: \"valueFormatting\", labelFormatting: \"labelFormatting\", gradient: \"gradient\" }, outputs: { select: \"select\" }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart [view]=\"[width, height]\" [showLegend]=\"false\" [animations]=\"animations\">\n      <svg:g [attr.transform]=\"transform\" class=\"tree-map chart\">\n        <svg:g\n          ngx-charts-tree-map-cell-series\n          [colors]=\"colors\"\n          [data]=\"data\"\n          [dims]=\"dims\"\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [valueFormatting]=\"valueFormatting\"\n          [labelFormatting]=\"labelFormatting\"\n          [gradient]=\"gradient\"\n          [animations]=\"animations\"\n          (select)=\"onClick($event)\"\n        />\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".tree-map .treemap-val{font-size:1.3em;padding-top:5px;display:inline-block}.tree-map .treemap-label p{display:table-cell;text-align:center;line-height:1.2em;vertical-align:middle}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: TreeMapCellSeriesComponent, selector: \"g[ngx-charts-tree-map-cell-series]\", inputs: [\"data\", \"dims\", \"colors\", \"valueFormatting\", \"labelFormatting\", \"gradient\", \"tooltipDisabled\", \"tooltipTemplate\", \"animations\"], outputs: [\"select\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TreeMapComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-tree-map', template: `\n    <ngx-charts-chart [view]=\"[width, height]\" [showLegend]=\"false\" [animations]=\"animations\">\n      <svg:g [attr.transform]=\"transform\" class=\"tree-map chart\">\n        <svg:g\n          ngx-charts-tree-map-cell-series\n          [colors]=\"colors\"\n          [data]=\"data\"\n          [dims]=\"dims\"\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [valueFormatting]=\"valueFormatting\"\n          [labelFormatting]=\"labelFormatting\"\n          [gradient]=\"gradient\"\n          [animations]=\"animations\"\n          (select)=\"onClick($event)\"\n        />\n      </svg:g>\n    </ngx-charts-chart>\n  `, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".tree-map .treemap-val{font-size:1.3em;padding-top:5px;display:inline-block}.tree-map .treemap-label p{display:table-cell;text-align:center;line-height:1.2em;vertical-align:middle}\\n\"] }]\n        }], propDecorators: { results: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], valueFormatting: [{\n                type: Input\n            }], labelFormatting: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }] } });\n\nclass TreeMapModule {\n}\nTreeMapModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TreeMapModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nTreeMapModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TreeMapModule, declarations: [TreeMapCellComponent, TreeMapCellSeriesComponent, TreeMapComponent], imports: [ChartCommonModule], exports: [TreeMapCellComponent, TreeMapCellSeriesComponent, TreeMapComponent] });\nTreeMapModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TreeMapModule, imports: [[ChartCommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TreeMapModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [ChartCommonModule],\n                    declarations: [TreeMapCellComponent, TreeMapCellSeriesComponent, TreeMapComponent],\n                    exports: [TreeMapCellComponent, TreeMapCellSeriesComponent, TreeMapComponent]\n                }]\n        }] });\n\nvar ElementType;\n(function (ElementType) {\n    ElementType[\"Value\"] = \"value\";\n    ElementType[\"Units\"] = \"units\";\n})(ElementType || (ElementType = {}));\nclass LinearGaugeComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.min = 0;\n        this.max = 100;\n        this.value = 0;\n        this.margin = [10, 20, 10, 20];\n        this.valueResizeScale = 1;\n        this.unitsResizeScale = 1;\n        this.valueTextTransform = '';\n        this.valueTranslate = '';\n        this.unitsTextTransform = '';\n        this.unitsTranslate = '';\n        this.barOrientation = BarOrientation;\n    }\n    ngAfterViewInit() {\n        super.ngAfterViewInit();\n        setTimeout(() => {\n            this.scaleText(ElementType.Value);\n            this.scaleText(ElementType.Units);\n        });\n    }\n    update() {\n        super.update();\n        this.hasPreviousValue = this.previousValue !== undefined;\n        this.max = Math.max(this.max, this.value);\n        this.min = Math.min(this.min, this.value);\n        if (this.hasPreviousValue) {\n            this.max = Math.max(this.max, this.previousValue);\n            this.min = Math.min(this.min, this.previousValue);\n        }\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin\n        });\n        this.valueDomain = this.getValueDomain();\n        this.valueScale = this.getValueScale();\n        this.displayValue = this.getDisplayValue();\n        this.setColors();\n        const xOffset = this.margin[3] + this.dims.width / 2;\n        const yOffset = this.margin[0] + this.dims.height / 2;\n        this.transform = `translate(${xOffset}, ${yOffset})`;\n        this.transformLine = `translate(${this.margin[3] + this.valueScale(this.previousValue)}, ${yOffset})`;\n        this.valueTranslate = `translate(0, -15)`;\n        this.unitsTranslate = `translate(0, 15)`;\n        if (isPlatformServer(this.platformId)) {\n            this.scaleTextSSR('value');\n            this.scaleTextSSR('units');\n        }\n        else {\n            setTimeout(() => this.scaleText(ElementType.Value), 50);\n            setTimeout(() => this.scaleText(ElementType.Units), 50);\n        }\n    }\n    getValueDomain() {\n        return [this.min, this.max];\n    }\n    getValueScale() {\n        return scaleLinear().range([0, this.dims.width]).domain(this.valueDomain);\n    }\n    getDisplayValue() {\n        if (this.valueFormatting) {\n            return this.valueFormatting(this.value);\n        }\n        return this.value.toLocaleString();\n    }\n    scaleText(element, repeat = true) {\n        let el;\n        let resizeScale;\n        if (element === ElementType.Value) {\n            el = this.valueTextEl;\n            resizeScale = this.valueResizeScale;\n        }\n        else {\n            el = this.unitsTextEl;\n            resizeScale = this.unitsResizeScale;\n        }\n        const { width, height } = el.nativeElement.getBoundingClientRect();\n        if (width === 0 || height === 0)\n            return;\n        const oldScale = resizeScale;\n        const availableWidth = this.dims.width;\n        const availableHeight = Math.max(this.dims.height / 2 - 15, 0);\n        const resizeScaleWidth = Math.floor((availableWidth / (width / resizeScale)) * 100) / 100;\n        const resizeScaleHeight = Math.floor((availableHeight / (height / resizeScale)) * 100) / 100;\n        resizeScale = Math.min(resizeScaleHeight, resizeScaleWidth);\n        if (resizeScale !== oldScale) {\n            if (element === ElementType.Value) {\n                this.valueResizeScale = resizeScale;\n                this.valueTextTransform = `scale(${resizeScale}, ${resizeScale})`;\n            }\n            else {\n                this.unitsResizeScale = resizeScale;\n                this.unitsTextTransform = `scale(${resizeScale}, ${resizeScale})`;\n            }\n            this.cd.markForCheck();\n            if (repeat && isPlatformBrowser(this.platformId)) {\n                setTimeout(() => {\n                    this.scaleText(element, false);\n                }, 50);\n            }\n        }\n    }\n    scaleTextSSR(element) {\n        let resizeScale = 1;\n        const value = element === 'value' ? this.displayValue : this.units;\n        const width = calculateTextWidth(VERDANA_FONT_WIDTHS_16_PX, value, 10);\n        const height = 25;\n        const availableWidth = this.dims.width;\n        const availableHeight = Math.max(this.dims.height / 2 - 15, 0);\n        const resizeScaleWidth = Math.floor((availableWidth / (width / resizeScale)) * 100) / 100;\n        const resizeScaleHeight = Math.floor((availableHeight / (height / resizeScale)) * 100) / 100;\n        resizeScale = Math.min(resizeScaleHeight, resizeScaleWidth);\n        if (element === 'value') {\n            this.valueResizeScale = resizeScale;\n            this.valueTextTransform = `scale(${resizeScale}, ${resizeScale})`;\n        }\n        else {\n            this.unitsResizeScale = resizeScale;\n            this.unitsTextTransform = `scale(${resizeScale}, ${resizeScale})`;\n        }\n        this.cd.markForCheck();\n    }\n    onClick() {\n        this.select.emit({\n            name: 'Value',\n            value: this.value\n        });\n    }\n    setColors() {\n        this.colors = new ColorHelper(this.scheme, ScaleType.Ordinal, [this.value], this.customColors);\n    }\n}\nLinearGaugeComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: LinearGaugeComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nLinearGaugeComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: LinearGaugeComponent, selector: \"ngx-charts-linear-gauge\", inputs: { min: \"min\", max: \"max\", value: \"value\", units: \"units\", previousValue: \"previousValue\", valueFormatting: \"valueFormatting\" }, viewQueries: [{ propertyName: \"valueTextEl\", first: true, predicate: [\"valueTextEl\"], descendants: true }, { propertyName: \"unitsTextEl\", first: true, predicate: [\"unitsTextEl\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart [view]=\"[width, height]\" [showLegend]=\"false\" [animations]=\"animations\" (click)=\"onClick()\">\n      <svg:g class=\"linear-gauge chart\">\n        <svg:g\n          ngx-charts-bar\n          class=\"background-bar\"\n          [width]=\"dims.width\"\n          [height]=\"3\"\n          [x]=\"margin[3]\"\n          [y]=\"dims.height / 2 + margin[0] - 2\"\n          [data]=\"{}\"\n          [orientation]=\"barOrientation.Horizontal\"\n          [roundEdges]=\"true\"\n          [animations]=\"animations\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-bar\n          [width]=\"valueScale(value)\"\n          [height]=\"3\"\n          [x]=\"margin[3]\"\n          [y]=\"dims.height / 2 + margin[0] - 2\"\n          [fill]=\"colors.getColor(units)\"\n          [data]=\"{}\"\n          [orientation]=\"barOrientation.Horizontal\"\n          [roundEdges]=\"true\"\n          [animations]=\"animations\"\n        ></svg:g>\n\n        <svg:line\n          *ngIf=\"hasPreviousValue\"\n          [attr.transform]=\"transformLine\"\n          x1=\"0\"\n          y1=\"5\"\n          x2=\"0\"\n          y2=\"15\"\n          [attr.stroke]=\"colors.getColor(units)\"\n        />\n\n        <svg:line\n          *ngIf=\"hasPreviousValue\"\n          [attr.transform]=\"transformLine\"\n          x1=\"0\"\n          y1=\"-5\"\n          x2=\"0\"\n          y2=\"-15\"\n          [attr.stroke]=\"colors.getColor(units)\"\n        />\n\n        <svg:g [attr.transform]=\"transform\">\n          <svg:g [attr.transform]=\"valueTranslate\">\n            <svg:text\n              #valueTextEl\n              class=\"value\"\n              [style.textAnchor]=\"'middle'\"\n              [attr.transform]=\"valueTextTransform\"\n              alignment-baseline=\"after-edge\"\n            >\n              {{ displayValue }}\n            </svg:text>\n          </svg:g>\n\n          <svg:g [attr.transform]=\"unitsTranslate\">\n            <svg:text\n              #unitsTextEl\n              class=\"units\"\n              [style.textAnchor]=\"'middle'\"\n              [attr.transform]=\"unitsTextTransform\"\n              alignment-baseline=\"before-edge\"\n            >\n              {{ units }}\n            </svg:text>\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \".linear-gauge{cursor:pointer}.linear-gauge .background-bar path{fill:#0000000d}.linear-gauge .units{fill:#666}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: BarComponent, selector: \"g[ngx-charts-bar]\", inputs: [\"fill\", \"data\", \"width\", \"height\", \"x\", \"y\", \"orientation\", \"roundEdges\", \"gradient\", \"offset\", \"isActive\", \"stops\", \"animations\", \"ariaLabel\", \"noBarWhenZero\"], outputs: [\"select\", \"activate\", \"deactivate\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: LinearGaugeComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-linear-gauge', template: `\n    <ngx-charts-chart [view]=\"[width, height]\" [showLegend]=\"false\" [animations]=\"animations\" (click)=\"onClick()\">\n      <svg:g class=\"linear-gauge chart\">\n        <svg:g\n          ngx-charts-bar\n          class=\"background-bar\"\n          [width]=\"dims.width\"\n          [height]=\"3\"\n          [x]=\"margin[3]\"\n          [y]=\"dims.height / 2 + margin[0] - 2\"\n          [data]=\"{}\"\n          [orientation]=\"barOrientation.Horizontal\"\n          [roundEdges]=\"true\"\n          [animations]=\"animations\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-bar\n          [width]=\"valueScale(value)\"\n          [height]=\"3\"\n          [x]=\"margin[3]\"\n          [y]=\"dims.height / 2 + margin[0] - 2\"\n          [fill]=\"colors.getColor(units)\"\n          [data]=\"{}\"\n          [orientation]=\"barOrientation.Horizontal\"\n          [roundEdges]=\"true\"\n          [animations]=\"animations\"\n        ></svg:g>\n\n        <svg:line\n          *ngIf=\"hasPreviousValue\"\n          [attr.transform]=\"transformLine\"\n          x1=\"0\"\n          y1=\"5\"\n          x2=\"0\"\n          y2=\"15\"\n          [attr.stroke]=\"colors.getColor(units)\"\n        />\n\n        <svg:line\n          *ngIf=\"hasPreviousValue\"\n          [attr.transform]=\"transformLine\"\n          x1=\"0\"\n          y1=\"-5\"\n          x2=\"0\"\n          y2=\"-15\"\n          [attr.stroke]=\"colors.getColor(units)\"\n        />\n\n        <svg:g [attr.transform]=\"transform\">\n          <svg:g [attr.transform]=\"valueTranslate\">\n            <svg:text\n              #valueTextEl\n              class=\"value\"\n              [style.textAnchor]=\"'middle'\"\n              [attr.transform]=\"valueTextTransform\"\n              alignment-baseline=\"after-edge\"\n            >\n              {{ displayValue }}\n            </svg:text>\n          </svg:g>\n\n          <svg:g [attr.transform]=\"unitsTranslate\">\n            <svg:text\n              #unitsTextEl\n              class=\"units\"\n              [style.textAnchor]=\"'middle'\"\n              [attr.transform]=\"unitsTextTransform\"\n              alignment-baseline=\"before-edge\"\n            >\n              {{ units }}\n            </svg:text>\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \".linear-gauge{cursor:pointer}.linear-gauge .background-bar path{fill:#0000000d}.linear-gauge .units{fill:#666}\\n\"] }]\n        }], propDecorators: { min: [{\n                type: Input\n            }], max: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }], units: [{\n                type: Input\n            }], previousValue: [{\n                type: Input\n            }], valueFormatting: [{\n                type: Input\n            }], valueTextEl: [{\n                type: ViewChild,\n                args: ['valueTextEl']\n            }], unitsTextEl: [{\n                type: ViewChild,\n                args: ['unitsTextEl']\n            }] } });\n\nclass GaugeArcComponent {\n    constructor() {\n        this.isActive = false;\n        this.tooltipDisabled = false;\n        this.animations = true;\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.placementTypes = PlacementTypes;\n        this.styleTypes = StyleTypes;\n    }\n    tooltipText(arc) {\n        const label = formatLabel(arc.data.name);\n        let val;\n        if (this.valueFormatting) {\n            val = this.valueFormatting(arc.data.value);\n        }\n        else {\n            val = formatLabel(arc.data.value);\n        }\n        return `\n      <span class=\"tooltip-label\">${escapeLabel(label)}</span>\n      <span class=\"tooltip-val\">${val}</span>\n    `;\n    }\n}\nGaugeArcComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: GaugeArcComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nGaugeArcComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: GaugeArcComponent, selector: \"g[ngx-charts-gauge-arc]\", inputs: { backgroundArc: \"backgroundArc\", valueArc: \"valueArc\", cornerRadius: \"cornerRadius\", colors: \"colors\", isActive: \"isActive\", tooltipDisabled: \"tooltipDisabled\", valueFormatting: \"valueFormatting\", tooltipTemplate: \"tooltipTemplate\", animations: \"animations\" }, outputs: { select: \"select\", activate: \"activate\", deactivate: \"deactivate\" }, ngImport: i0, template: `\n    <svg:g\n      ngx-charts-pie-arc\n      class=\"background-arc\"\n      [startAngle]=\"0\"\n      [endAngle]=\"backgroundArc.endAngle\"\n      [innerRadius]=\"backgroundArc.innerRadius\"\n      [outerRadius]=\"backgroundArc.outerRadius\"\n      [cornerRadius]=\"cornerRadius\"\n      [data]=\"backgroundArc.data\"\n      [animate]=\"false\"\n      [pointerEvents]=\"false\"\n    ></svg:g>\n    <svg:g\n      ngx-charts-pie-arc\n      [startAngle]=\"0\"\n      [endAngle]=\"valueArc.endAngle\"\n      [innerRadius]=\"valueArc.innerRadius\"\n      [outerRadius]=\"valueArc.outerRadius\"\n      [cornerRadius]=\"cornerRadius\"\n      [fill]=\"colors.getColor(valueArc.data.name)\"\n      [data]=\"valueArc.data\"\n      [animate]=\"animations\"\n      [isActive]=\"isActive\"\n      (select)=\"select.emit($event)\"\n      (activate)=\"activate.emit($event)\"\n      (deactivate)=\"deactivate.emit($event)\"\n      ngx-tooltip\n      [tooltipDisabled]=\"tooltipDisabled\"\n      [tooltipPlacement]=\"placementTypes.Top\"\n      [tooltipType]=\"styleTypes.tooltip\"\n      [tooltipTitle]=\"tooltipTemplate ? undefined : tooltipText(valueArc)\"\n      [tooltipTemplate]=\"tooltipTemplate\"\n      [tooltipContext]=\"valueArc.data\"\n    ></svg:g>\n  `, isInline: true, components: [{ type: PieArcComponent, selector: \"g[ngx-charts-pie-arc]\", inputs: [\"fill\", \"startAngle\", \"endAngle\", \"innerRadius\", \"outerRadius\", \"cornerRadius\", \"value\", \"max\", \"data\", \"explodeSlices\", \"gradient\", \"animate\", \"pointerEvents\", \"isActive\"], outputs: [\"select\", \"activate\", \"deactivate\", \"dblclick\"] }], directives: [{ type: TooltipDirective, selector: \"[ngx-tooltip]\", inputs: [\"tooltipCssClass\", \"tooltipTitle\", \"tooltipAppendToBody\", \"tooltipSpacing\", \"tooltipDisabled\", \"tooltipShowCaret\", \"tooltipPlacement\", \"tooltipAlignment\", \"tooltipType\", \"tooltipCloseOnClickOutside\", \"tooltipCloseOnMouseLeave\", \"tooltipHideTimeout\", \"tooltipShowTimeout\", \"tooltipTemplate\", \"tooltipShowEvent\", \"tooltipContext\", \"tooltipImmediateExit\"], outputs: [\"show\", \"hide\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: GaugeArcComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-gauge-arc]',\n                    template: `\n    <svg:g\n      ngx-charts-pie-arc\n      class=\"background-arc\"\n      [startAngle]=\"0\"\n      [endAngle]=\"backgroundArc.endAngle\"\n      [innerRadius]=\"backgroundArc.innerRadius\"\n      [outerRadius]=\"backgroundArc.outerRadius\"\n      [cornerRadius]=\"cornerRadius\"\n      [data]=\"backgroundArc.data\"\n      [animate]=\"false\"\n      [pointerEvents]=\"false\"\n    ></svg:g>\n    <svg:g\n      ngx-charts-pie-arc\n      [startAngle]=\"0\"\n      [endAngle]=\"valueArc.endAngle\"\n      [innerRadius]=\"valueArc.innerRadius\"\n      [outerRadius]=\"valueArc.outerRadius\"\n      [cornerRadius]=\"cornerRadius\"\n      [fill]=\"colors.getColor(valueArc.data.name)\"\n      [data]=\"valueArc.data\"\n      [animate]=\"animations\"\n      [isActive]=\"isActive\"\n      (select)=\"select.emit($event)\"\n      (activate)=\"activate.emit($event)\"\n      (deactivate)=\"deactivate.emit($event)\"\n      ngx-tooltip\n      [tooltipDisabled]=\"tooltipDisabled\"\n      [tooltipPlacement]=\"placementTypes.Top\"\n      [tooltipType]=\"styleTypes.tooltip\"\n      [tooltipTitle]=\"tooltipTemplate ? undefined : tooltipText(valueArc)\"\n      [tooltipTemplate]=\"tooltipTemplate\"\n      [tooltipContext]=\"valueArc.data\"\n    ></svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], propDecorators: { backgroundArc: [{\n                type: Input\n            }], valueArc: [{\n                type: Input\n            }], cornerRadius: [{\n                type: Input\n            }], colors: [{\n                type: Input\n            }], isActive: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], valueFormatting: [{\n                type: Input\n            }], tooltipTemplate: [{\n                type: Input\n            }], animations: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }] } });\n\nclass GaugeAxisComponent {\n    constructor() {\n        this.rotate = '';\n    }\n    ngOnChanges(changes) {\n        this.update();\n    }\n    update() {\n        this.rotationAngle = -90 + this.startAngle;\n        this.rotate = `rotate(${this.rotationAngle})`;\n        this.ticks = this.getTicks();\n    }\n    getTicks() {\n        const bigTickSegment = this.angleSpan / this.bigSegments;\n        const smallTickSegment = bigTickSegment / this.smallSegments;\n        const tickLength = 20;\n        const ticks = {\n            big: [],\n            small: []\n        };\n        const startDistance = this.radius + 10;\n        const textDist = startDistance + tickLength + 10;\n        for (let i = 0; i <= this.bigSegments; i++) {\n            const angleDeg = i * bigTickSegment;\n            const angle = (angleDeg * Math.PI) / 180;\n            const textAnchor = this.getTextAnchor(angleDeg);\n            let skip = false;\n            if (i === 0 && this.angleSpan === 360) {\n                skip = true;\n            }\n            if (!skip) {\n                let text = Number.parseFloat(this.valueScale.invert(angleDeg).toString()).toLocaleString();\n                if (this.tickFormatting) {\n                    text = this.tickFormatting(text);\n                }\n                ticks.big.push({\n                    line: this.getTickPath(startDistance, tickLength, angle),\n                    textAnchor,\n                    text,\n                    textTransform: `\n            translate(${textDist * Math.cos(angle)}, ${textDist * Math.sin(angle)}) rotate(${-this.rotationAngle})\n          `\n                });\n            }\n            if (i === this.bigSegments) {\n                continue;\n            }\n            for (let j = 1; j <= this.smallSegments; j++) {\n                const smallAngleDeg = angleDeg + j * smallTickSegment;\n                const smallAngle = (smallAngleDeg * Math.PI) / 180;\n                ticks.small.push({\n                    line: this.getTickPath(startDistance, tickLength / 2, smallAngle)\n                });\n            }\n        }\n        return ticks;\n    }\n    getTextAnchor(angle) {\n        // [0, 45] = 'middle';\n        // [46, 135] = 'start';\n        // [136, 225] = 'middle';\n        // [226, 315] = 'end';\n        angle = (this.startAngle + angle) % 360;\n        let textAnchor = TextAnchor.Middle;\n        if (angle > 45 && angle <= 135) {\n            textAnchor = TextAnchor.Start;\n        }\n        else if (angle > 225 && angle <= 315) {\n            textAnchor = TextAnchor.End;\n        }\n        return textAnchor;\n    }\n    getTickPath(startDistance, tickLength, angle) {\n        const y1 = startDistance * Math.sin(angle);\n        const y2 = (startDistance + tickLength) * Math.sin(angle);\n        const x1 = startDistance * Math.cos(angle);\n        const x2 = (startDistance + tickLength) * Math.cos(angle);\n        const points = [\n            { x: x1, y: y1 },\n            { x: x2, y: y2 }\n        ];\n        const lineGenerator = line()\n            .x(d => d.x)\n            .y(d => d.y);\n        return lineGenerator(points);\n    }\n}\nGaugeAxisComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: GaugeAxisComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nGaugeAxisComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: GaugeAxisComponent, selector: \"g[ngx-charts-gauge-axis]\", inputs: { bigSegments: \"bigSegments\", smallSegments: \"smallSegments\", min: \"min\", max: \"max\", angleSpan: \"angleSpan\", startAngle: \"startAngle\", radius: \"radius\", valueScale: \"valueScale\", tickFormatting: \"tickFormatting\" }, usesOnChanges: true, ngImport: i0, template: `\n    <svg:g [attr.transform]=\"rotate\">\n      <svg:g *ngFor=\"let tick of ticks.big\" class=\"gauge-tick gauge-tick-large\">\n        <svg:path [attr.d]=\"tick.line\" />\n      </svg:g>\n      <svg:g *ngFor=\"let tick of ticks.big\" class=\"gauge-tick gauge-tick-large\">\n        <svg:text\n          [style.textAnchor]=\"tick.textAnchor\"\n          [attr.transform]=\"tick.textTransform\"\n          alignment-baseline=\"central\"\n        >\n          {{ tick.text }}\n        </svg:text>\n      </svg:g>\n      <svg:g *ngFor=\"let tick of ticks.small\" class=\"gauge-tick gauge-tick-small\">\n        <svg:path [attr.d]=\"tick.line\" />\n      </svg:g>\n    </svg:g>\n  `, isInline: true, directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: GaugeAxisComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'g[ngx-charts-gauge-axis]',\n                    template: `\n    <svg:g [attr.transform]=\"rotate\">\n      <svg:g *ngFor=\"let tick of ticks.big\" class=\"gauge-tick gauge-tick-large\">\n        <svg:path [attr.d]=\"tick.line\" />\n      </svg:g>\n      <svg:g *ngFor=\"let tick of ticks.big\" class=\"gauge-tick gauge-tick-large\">\n        <svg:text\n          [style.textAnchor]=\"tick.textAnchor\"\n          [attr.transform]=\"tick.textTransform\"\n          alignment-baseline=\"central\"\n        >\n          {{ tick.text }}\n        </svg:text>\n      </svg:g>\n      <svg:g *ngFor=\"let tick of ticks.small\" class=\"gauge-tick gauge-tick-small\">\n        <svg:path [attr.d]=\"tick.line\" />\n      </svg:g>\n    </svg:g>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], propDecorators: { bigSegments: [{\n                type: Input\n            }], smallSegments: [{\n                type: Input\n            }], min: [{\n                type: Input\n            }], max: [{\n                type: Input\n            }], angleSpan: [{\n                type: Input\n            }], startAngle: [{\n                type: Input\n            }], radius: [{\n                type: Input\n            }], valueScale: [{\n                type: Input\n            }], tickFormatting: [{\n                type: Input\n            }] } });\n\nclass GaugeComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.legend = false;\n        this.legendTitle = 'Legend';\n        this.legendPosition = LegendPosition.Right;\n        this.min = 0;\n        this.max = 100;\n        this.bigSegments = 10;\n        this.smallSegments = 5;\n        this.showAxis = true;\n        this.startAngle = -120;\n        this.angleSpan = 240;\n        this.activeEntries = [];\n        this.tooltipDisabled = false;\n        this.showText = true;\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.resizeScale = 1;\n        this.rotation = '';\n        this.textTransform = 'scale(1, 1)';\n        this.cornerRadius = 10;\n    }\n    ngAfterViewInit() {\n        super.ngAfterViewInit();\n        setTimeout(() => this.scaleText());\n    }\n    update() {\n        super.update();\n        if (!this.showAxis) {\n            if (!this.margin) {\n                this.margin = [10, 20, 10, 20];\n            }\n        }\n        else {\n            if (!this.margin) {\n                this.margin = [60, 100, 60, 100];\n            }\n        }\n        // make the starting angle positive\n        if (this.startAngle < 0) {\n            this.startAngle = (this.startAngle % 360) + 360;\n        }\n        this.angleSpan = Math.min(this.angleSpan, 360);\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showLegend: this.legend,\n            legendPosition: this.legendPosition\n        });\n        this.domain = this.getDomain();\n        this.valueDomain = this.getValueDomain();\n        this.valueScale = this.getValueScale();\n        this.displayValue = this.getDisplayValue();\n        this.outerRadius = Math.min(this.dims.width, this.dims.height) / 2;\n        this.arcs = this.getArcs();\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n        const xOffset = this.margin[3] + this.dims.width / 2;\n        const yOffset = this.margin[0] + this.dims.height / 2;\n        this.transform = `translate(${xOffset}, ${yOffset})`;\n        this.rotation = `rotate(${this.startAngle})`;\n        setTimeout(() => this.scaleText(), 50);\n    }\n    getArcs() {\n        const arcs = [];\n        const availableRadius = this.outerRadius * 0.7;\n        const radiusPerArc = Math.min(availableRadius / this.results.length, 10);\n        const arcWidth = radiusPerArc * 0.7;\n        this.textRadius = this.outerRadius - this.results.length * radiusPerArc;\n        this.cornerRadius = Math.floor(arcWidth / 2);\n        let i = 0;\n        for (const d of this.results) {\n            const outerRadius = this.outerRadius - i * radiusPerArc;\n            const innerRadius = outerRadius - arcWidth;\n            const backgroundArc = {\n                endAngle: (this.angleSpan * Math.PI) / 180,\n                innerRadius,\n                outerRadius,\n                data: {\n                    value: this.max,\n                    name: d.name\n                }\n            };\n            const valueArc = {\n                endAngle: (Math.min(this.valueScale(d.value), this.angleSpan) * Math.PI) / 180,\n                innerRadius,\n                outerRadius,\n                data: {\n                    value: d.value,\n                    name: d.name\n                }\n            };\n            const arc = {\n                backgroundArc,\n                valueArc\n            };\n            arcs.push(arc);\n            i++;\n        }\n        return arcs;\n    }\n    getDomain() {\n        return this.results.map(d => d.name);\n    }\n    getValueDomain() {\n        const values = this.results.map(d => d.value);\n        const dataMin = Math.min(...values);\n        const dataMax = Math.max(...values);\n        if (this.min !== undefined) {\n            this.min = Math.min(this.min, dataMin);\n        }\n        else {\n            this.min = dataMin;\n        }\n        if (this.max !== undefined) {\n            this.max = Math.max(this.max, dataMax);\n        }\n        else {\n            this.max = dataMax;\n        }\n        return [this.min, this.max];\n    }\n    getValueScale() {\n        return scaleLinear().range([0, this.angleSpan]).nice().domain(this.valueDomain);\n    }\n    getDisplayValue() {\n        const value = this.results.map(d => d.value).reduce((a, b) => a + b, 0);\n        if (this.textValue && 0 !== this.textValue.length) {\n            return this.textValue.toLocaleString();\n        }\n        if (this.valueFormatting) {\n            return this.valueFormatting(value);\n        }\n        return value.toLocaleString();\n    }\n    scaleText(repeat = true) {\n        if (!this.showText) {\n            return;\n        }\n        const { width } = this.textEl.nativeElement.getBoundingClientRect();\n        const oldScale = this.resizeScale;\n        if (width === 0) {\n            this.resizeScale = 1;\n        }\n        else {\n            const availableSpace = this.textRadius;\n            this.resizeScale = Math.floor((availableSpace / (width / this.resizeScale)) * 100) / 100;\n        }\n        if (this.resizeScale !== oldScale) {\n            this.textTransform = `scale(${this.resizeScale}, ${this.resizeScale})`;\n            this.cd.markForCheck();\n            if (repeat) {\n                setTimeout(() => this.scaleText(false), 50);\n            }\n        }\n    }\n    onClick(data) {\n        this.select.emit(data);\n    }\n    getLegendOptions() {\n        return {\n            scaleType: ScaleType.Ordinal,\n            colors: this.colors,\n            domain: this.domain,\n            title: this.legendTitle,\n            position: this.legendPosition\n        };\n    }\n    setColors() {\n        this.colors = new ColorHelper(this.scheme, ScaleType.Ordinal, this.domain, this.customColors);\n    }\n    onActivate(item) {\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value;\n        });\n        if (idx > -1) {\n            return;\n        }\n        this.activeEntries = [item, ...this.activeEntries];\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    }\n    onDeactivate(item) {\n        const idx = this.activeEntries.findIndex(d => {\n            return d.name === item.name && d.value === item.value;\n        });\n        this.activeEntries.splice(idx, 1);\n        this.activeEntries = [...this.activeEntries];\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    }\n    isActive(entry) {\n        if (!this.activeEntries)\n            return false;\n        const item = this.activeEntries.find(d => {\n            return entry.name === d.name && entry.series === d.series;\n        });\n        return item !== undefined;\n    }\n    trackBy(index, item) {\n        return item.valueArc.data.name;\n    }\n}\nGaugeComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: GaugeComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nGaugeComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: GaugeComponent, selector: \"ngx-charts-gauge\", inputs: { legend: \"legend\", legendTitle: \"legendTitle\", legendPosition: \"legendPosition\", min: \"min\", max: \"max\", textValue: \"textValue\", units: \"units\", bigSegments: \"bigSegments\", smallSegments: \"smallSegments\", results: \"results\", showAxis: \"showAxis\", startAngle: \"startAngle\", angleSpan: \"angleSpan\", activeEntries: \"activeEntries\", axisTickFormatting: \"axisTickFormatting\", tooltipDisabled: \"tooltipDisabled\", valueFormatting: \"valueFormatting\", showText: \"showText\", margin: \"margin\" }, outputs: { activate: \"activate\", deactivate: \"deactivate\" }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }], viewQueries: [{ propertyName: \"textEl\", first: true, predicate: [\"textEl\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"gauge chart\">\n        <svg:g *ngFor=\"let arc of arcs; trackBy: trackBy\" [attr.transform]=\"rotation\">\n          <svg:g\n            ngx-charts-gauge-arc\n            [backgroundArc]=\"arc.backgroundArc\"\n            [valueArc]=\"arc.valueArc\"\n            [cornerRadius]=\"cornerRadius\"\n            [colors]=\"colors\"\n            [isActive]=\"isActive(arc.valueArc.data)\"\n            [tooltipDisabled]=\"tooltipDisabled\"\n            [tooltipTemplate]=\"tooltipTemplate\"\n            [valueFormatting]=\"valueFormatting\"\n            [animations]=\"animations\"\n            (select)=\"onClick($event)\"\n            (activate)=\"onActivate($event)\"\n            (deactivate)=\"onDeactivate($event)\"\n          ></svg:g>\n        </svg:g>\n\n        <svg:g\n          ngx-charts-gauge-axis\n          *ngIf=\"showAxis\"\n          [bigSegments]=\"bigSegments\"\n          [smallSegments]=\"smallSegments\"\n          [min]=\"min\"\n          [max]=\"max\"\n          [radius]=\"outerRadius\"\n          [angleSpan]=\"angleSpan\"\n          [valueScale]=\"valueScale\"\n          [startAngle]=\"startAngle\"\n          [tickFormatting]=\"axisTickFormatting\"\n        ></svg:g>\n\n        <svg:text\n          #textEl\n          *ngIf=\"showText\"\n          [style.textAnchor]=\"'middle'\"\n          [attr.transform]=\"textTransform\"\n          alignment-baseline=\"central\"\n        >\n          <tspan x=\"0\" dy=\"0\">{{ displayValue }}</tspan>\n          <tspan x=\"0\" dy=\"1.2em\">{{ units }}</tspan>\n        </svg:text>\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \".gauge .background-arc path{fill:#0000000d}.gauge .gauge-tick path{stroke:#666}.gauge .gauge-tick text{font-size:12px;fill:#666;font-weight:700}.gauge .gauge-tick-large path{stroke-width:2px}.gauge .gauge-tick-small path{stroke-width:1px}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }, { type: GaugeArcComponent, selector: \"g[ngx-charts-gauge-arc]\", inputs: [\"backgroundArc\", \"valueArc\", \"cornerRadius\", \"colors\", \"isActive\", \"tooltipDisabled\", \"valueFormatting\", \"tooltipTemplate\", \"animations\"], outputs: [\"select\", \"activate\", \"deactivate\"] }, { type: GaugeAxisComponent, selector: \"g[ngx-charts-gauge-axis]\", inputs: [\"bigSegments\", \"smallSegments\", \"min\", \"max\", \"angleSpan\", \"startAngle\", \"radius\", \"valueScale\", \"tickFormatting\"] }], directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: GaugeComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-gauge', template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"gauge chart\">\n        <svg:g *ngFor=\"let arc of arcs; trackBy: trackBy\" [attr.transform]=\"rotation\">\n          <svg:g\n            ngx-charts-gauge-arc\n            [backgroundArc]=\"arc.backgroundArc\"\n            [valueArc]=\"arc.valueArc\"\n            [cornerRadius]=\"cornerRadius\"\n            [colors]=\"colors\"\n            [isActive]=\"isActive(arc.valueArc.data)\"\n            [tooltipDisabled]=\"tooltipDisabled\"\n            [tooltipTemplate]=\"tooltipTemplate\"\n            [valueFormatting]=\"valueFormatting\"\n            [animations]=\"animations\"\n            (select)=\"onClick($event)\"\n            (activate)=\"onActivate($event)\"\n            (deactivate)=\"onDeactivate($event)\"\n          ></svg:g>\n        </svg:g>\n\n        <svg:g\n          ngx-charts-gauge-axis\n          *ngIf=\"showAxis\"\n          [bigSegments]=\"bigSegments\"\n          [smallSegments]=\"smallSegments\"\n          [min]=\"min\"\n          [max]=\"max\"\n          [radius]=\"outerRadius\"\n          [angleSpan]=\"angleSpan\"\n          [valueScale]=\"valueScale\"\n          [startAngle]=\"startAngle\"\n          [tickFormatting]=\"axisTickFormatting\"\n        ></svg:g>\n\n        <svg:text\n          #textEl\n          *ngIf=\"showText\"\n          [style.textAnchor]=\"'middle'\"\n          [attr.transform]=\"textTransform\"\n          alignment-baseline=\"central\"\n        >\n          <tspan x=\"0\" dy=\"0\">{{ displayValue }}</tspan>\n          <tspan x=\"0\" dy=\"1.2em\">{{ units }}</tspan>\n        </svg:text>\n      </svg:g>\n    </ngx-charts-chart>\n  `, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\", \".gauge .background-arc path{fill:#0000000d}.gauge .gauge-tick path{stroke:#666}.gauge .gauge-tick text{font-size:12px;fill:#666;font-weight:700}.gauge .gauge-tick-large path{stroke-width:2px}.gauge .gauge-tick-small path{stroke-width:1px}\\n\"] }]\n        }], propDecorators: { legend: [{\n                type: Input\n            }], legendTitle: [{\n                type: Input\n            }], legendPosition: [{\n                type: Input\n            }], min: [{\n                type: Input\n            }], max: [{\n                type: Input\n            }], textValue: [{\n                type: Input\n            }], units: [{\n                type: Input\n            }], bigSegments: [{\n                type: Input\n            }], smallSegments: [{\n                type: Input\n            }], results: [{\n                type: Input\n            }], showAxis: [{\n                type: Input\n            }], startAngle: [{\n                type: Input\n            }], angleSpan: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], axisTickFormatting: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], valueFormatting: [{\n                type: Input\n            }], showText: [{\n                type: Input\n            }], margin: [{\n                type: Input\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }], textEl: [{\n                type: ViewChild,\n                args: ['textEl']\n            }] } });\n\nclass GaugeModule {\n}\nGaugeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: GaugeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nGaugeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: GaugeModule, declarations: [LinearGaugeComponent, GaugeComponent, GaugeArcComponent, GaugeAxisComponent], imports: [ChartCommonModule, PieChartModule, BarChartModule], exports: [LinearGaugeComponent, GaugeComponent, GaugeArcComponent, GaugeAxisComponent] });\nGaugeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: GaugeModule, imports: [[ChartCommonModule, PieChartModule, BarChartModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: GaugeModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [ChartCommonModule, PieChartModule, BarChartModule],\n                    declarations: [LinearGaugeComponent, GaugeComponent, GaugeArcComponent, GaugeAxisComponent],\n                    exports: [LinearGaugeComponent, GaugeComponent, GaugeArcComponent, GaugeAxisComponent]\n                }]\n        }] });\n\n// The export is needed here to generate a valid polyfills.metadata.json file\nfunction ngxChartsPolyfills() {\n    // IE11 fix\n    // Ref: https://github.com/swimlane/ngx-charts/issues/386\n    if (typeof SVGElement !== 'undefined' && typeof SVGElement.prototype.contains === 'undefined') {\n        SVGElement.prototype.contains = HTMLDivElement.prototype.contains;\n    }\n}\n\nclass SankeyComponent extends BaseChartComponent {\n    constructor() {\n        super(...arguments);\n        this.showLabels = true;\n        this.tooltipDisabled = false;\n        this.activeEntries = [];\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.margin = [10, 10, 10, 10];\n        this.scaleType = ScaleType.Ordinal;\n        this.styleTypes = StyleTypes;\n    }\n    update() {\n        super.update();\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            legendType: this.scaleType\n        });\n        const linkDefs = this.results;\n        const nodeDefs = Array.from(new Set(linkDefs.flatMap(l => [l.source, l.target])), (name) => ({\n            name,\n            value: linkDefs.filter(l => l.source === name).reduce((acc, l) => acc + l.value, 0)\n        }));\n        // Configure generator\n        const sankeyGenerator = sankey()\n            .nodeId(d => d.name)\n            .nodeAlign(sankeyLeft)\n            .nodeWidth(15)\n            .nodePadding(10)\n            .extent([\n            [1, 5],\n            [this.dims.width - 1, this.dims.height - 5]\n        ]);\n        // Generate links and nodes\n        const data = sankeyGenerator({\n            nodes: nodeDefs.map(d => Object.assign({}, d)),\n            links: linkDefs.map(d => Object.assign({}, d))\n        });\n        this.valueDomain = this.getValueDomain(data.nodes);\n        this.setColors();\n        this.nodeRects = data.nodes.map(node => {\n            const rect = {\n                x: node.x0,\n                y: node.y0,\n                height: node.y1 - node.y0,\n                width: node.x1 - node.x0,\n                fill: this.colors.getColor(node.name),\n                tooltip: this.getNodeTooltipText(node),\n                rx: 5,\n                data: {\n                    name: node.name,\n                    value: node.value\n                },\n                transform: '',\n                label: this.labelFormatting ? this.labelFormatting(node.name) : node.name,\n                labelAnchor: TextAnchor.Start\n            };\n            rect.labelAnchor = this.getTextAnchor(node);\n            rect.transform = `translate(${rect.x},${rect.y})`;\n            return rect;\n        });\n        this.linkPaths = data.links.map(link => {\n            const gradientId = 'mask' + id().toString();\n            const linkPath = {\n                path: sankeyLinkHorizontal()(link),\n                strokeWidth: Math.max(1, link.width),\n                tooltip: this.getLinkTooltipText(link.source, link.target, link.value),\n                id: gradientId,\n                gradientFill: `url(#${gradientId})`,\n                source: link.source,\n                target: link.target,\n                startColor: this.colors.getColor(link.source.name),\n                endColor: this.colors.getColor(link.target.name),\n                data: {\n                    source: link.source.name,\n                    target: link.target.name,\n                    value: link.value\n                }\n            };\n            return linkPath;\n        });\n        this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n    }\n    getNodeTooltipText(node) {\n        return `\n      <span class=\"tooltip-label\">${escapeLabel(node.name)}</span>\n      <span class=\"tooltip-val\">${node.value.toLocaleString()}</span>\n    `;\n    }\n    getLinkTooltipText(sourceNode, targetNode, value) {\n        return `\n      <span class=\"tooltip-label\">${escapeLabel(sourceNode.name)} • ${escapeLabel(targetNode.name)}</span>\n      <span class=\"tooltip-val\">${value.toLocaleString()} (${(value / sourceNode.value).toLocaleString(undefined, {\n            style: 'percent',\n            maximumFractionDigits: 2\n        })})</span>\n    `;\n    }\n    getTextAnchor(node) {\n        if (node.layer === 0) {\n            return TextAnchor.Start;\n        }\n        else {\n            return TextAnchor.End;\n        }\n    }\n    onClick(data) {\n        this.select.emit(data);\n    }\n    setColors() {\n        this.colors = new ColorHelper(this.scheme, this.scaleType, this.valueDomain);\n    }\n    getValueDomain(nodes) {\n        return nodes.map(n => n.name);\n    }\n}\nSankeyComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: SankeyComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nSankeyComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: SankeyComponent, selector: \"ngx-charts-sankey\", inputs: { showLabels: \"showLabels\", gradient: \"gradient\", tooltipDisabled: \"tooltipDisabled\", activeEntries: \"activeEntries\", labelFormatting: \"labelFormatting\" }, outputs: { activate: \"activate\", deactivate: \"deactivate\" }, queries: [{ propertyName: \"tooltipTemplate\", first: true, predicate: [\"tooltipTemplate\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ngx-charts-chart [view]=\"[width, height]\" [animations]=\"animations\">\n      <svg:g [attr.transform]=\"transform\" class=\"sankey chart\">\n        <svg:g\n          *ngFor=\"let link of linkPaths\"\n          class=\"link\"\n          ngx-tooltip\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipType]=\"styleTypes.tooltip\"\n          [tooltipPlacement]=\"'top'\"\n          [tooltipTitle]=\"tooltipTemplate ? undefined : link.tooltip\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [tooltipContext]=\"link.data\"\n        >\n          <svg:defs>\n            <svg:linearGradient\n              [attr.id]=\"link.id\"\n              gradientUnits=\"userSpaceOnUse\"\n              [attr.x1]=\"link.source.x1\"\n              [attr.x2]=\"link.target.x0\"\n            >\n              <svg:stop offset=\"0%\" [attr.stop-color]=\"link.startColor\"></svg:stop>\n              <svg:stop offset=\"100%\" [attr.stop-color]=\"link.endColor\"></svg:stop>\n            </svg:linearGradient>\n          </svg:defs>\n          <svg:path\n            [attr.d]=\"link.path\"\n            [attr.stroke]=\"link.gradientFill\"\n            [attr.stroke-width]=\"link.strokeWidth\"\n            stroke-opacity=\"0.5\"\n            fill=\"none\"\n            (click)=\"select.emit(link.data)\"\n            (mouseenter)=\"activate.emit(link.data)\"\n          ></svg:path>\n        </svg:g>\n\n        <svg:g *ngFor=\"let rect of nodeRects\" [attr.transform]=\"rect.transform\" class=\"node\">\n          <svg:rect\n            [attr.x]=\"0\"\n            [attr.y]=\"0\"\n            [attr.width]=\"rect.width\"\n            [attr.height]=\"rect.height\"\n            [attr.fill]=\"rect.fill\"\n            ngx-tooltip\n            [tooltipDisabled]=\"tooltipDisabled\"\n            [tooltipType]=\"styleTypes.tooltip\"\n            [tooltipPlacement]=\"'top'\"\n            [tooltipTitle]=\"tooltipTemplate ? undefined : rect.tooltip\"\n            [tooltipTemplate]=\"tooltipTemplate\"\n            [tooltipContext]=\"rect.data\"\n            (click)=\"select.emit(rect.data)\"\n            (mouseenter)=\"activate.emit(rect.data)\"\n          ></svg:rect>\n        </svg:g>\n\n        <svg:g *ngFor=\"let rect of nodeRects\" [attr.transform]=\"rect.transform\">\n          <svg:text\n            *ngIf=\"showLabels && rect.height > 15\"\n            class=\"label\"\n            [attr.x]=\"rect.width + 5\"\n            [attr.y]=\"rect.height / 2\"\n            [attr.text-anchor]=\"rect.labelAnchor\"\n            dy=\"0.35em\"\n            [attr.dx]=\"rect.labelAnchor === 'end' ? -25 : 0\"\n          >\n            {{ rect.label }}\n          </svg:text>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, isInline: true, styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"], components: [{ type: ChartComponent, selector: \"ngx-charts-chart\", inputs: [\"view\", \"showLegend\", \"legendOptions\", \"legendType\", \"activeEntries\", \"animations\"], outputs: [\"legendLabelClick\", \"legendLabelActivate\", \"legendLabelDeactivate\"] }], directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: TooltipDirective, selector: \"[ngx-tooltip]\", inputs: [\"tooltipCssClass\", \"tooltipTitle\", \"tooltipAppendToBody\", \"tooltipSpacing\", \"tooltipDisabled\", \"tooltipShowCaret\", \"tooltipPlacement\", \"tooltipAlignment\", \"tooltipType\", \"tooltipCloseOnClickOutside\", \"tooltipCloseOnMouseLeave\", \"tooltipHideTimeout\", \"tooltipShowTimeout\", \"tooltipTemplate\", \"tooltipShowEvent\", \"tooltipContext\", \"tooltipImmediateExit\"], outputs: [\"show\", \"hide\"] }, { type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: SankeyComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-charts-sankey', template: `\n    <ngx-charts-chart [view]=\"[width, height]\" [animations]=\"animations\">\n      <svg:g [attr.transform]=\"transform\" class=\"sankey chart\">\n        <svg:g\n          *ngFor=\"let link of linkPaths\"\n          class=\"link\"\n          ngx-tooltip\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipType]=\"styleTypes.tooltip\"\n          [tooltipPlacement]=\"'top'\"\n          [tooltipTitle]=\"tooltipTemplate ? undefined : link.tooltip\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [tooltipContext]=\"link.data\"\n        >\n          <svg:defs>\n            <svg:linearGradient\n              [attr.id]=\"link.id\"\n              gradientUnits=\"userSpaceOnUse\"\n              [attr.x1]=\"link.source.x1\"\n              [attr.x2]=\"link.target.x0\"\n            >\n              <svg:stop offset=\"0%\" [attr.stop-color]=\"link.startColor\"></svg:stop>\n              <svg:stop offset=\"100%\" [attr.stop-color]=\"link.endColor\"></svg:stop>\n            </svg:linearGradient>\n          </svg:defs>\n          <svg:path\n            [attr.d]=\"link.path\"\n            [attr.stroke]=\"link.gradientFill\"\n            [attr.stroke-width]=\"link.strokeWidth\"\n            stroke-opacity=\"0.5\"\n            fill=\"none\"\n            (click)=\"select.emit(link.data)\"\n            (mouseenter)=\"activate.emit(link.data)\"\n          ></svg:path>\n        </svg:g>\n\n        <svg:g *ngFor=\"let rect of nodeRects\" [attr.transform]=\"rect.transform\" class=\"node\">\n          <svg:rect\n            [attr.x]=\"0\"\n            [attr.y]=\"0\"\n            [attr.width]=\"rect.width\"\n            [attr.height]=\"rect.height\"\n            [attr.fill]=\"rect.fill\"\n            ngx-tooltip\n            [tooltipDisabled]=\"tooltipDisabled\"\n            [tooltipType]=\"styleTypes.tooltip\"\n            [tooltipPlacement]=\"'top'\"\n            [tooltipTitle]=\"tooltipTemplate ? undefined : rect.tooltip\"\n            [tooltipTemplate]=\"tooltipTemplate\"\n            [tooltipContext]=\"rect.data\"\n            (click)=\"select.emit(rect.data)\"\n            (mouseenter)=\"activate.emit(rect.data)\"\n          ></svg:rect>\n        </svg:g>\n\n        <svg:g *ngFor=\"let rect of nodeRects\" [attr.transform]=\"rect.transform\">\n          <svg:text\n            *ngIf=\"showLabels && rect.height > 15\"\n            class=\"label\"\n            [attr.x]=\"rect.width + 5\"\n            [attr.y]=\"rect.height / 2\"\n            [attr.text-anchor]=\"rect.labelAnchor\"\n            dy=\"0.35em\"\n            [attr.dx]=\"rect.labelAnchor === 'end' ? -25 : 0\"\n          >\n            {{ rect.label }}\n          </svg:text>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, styles: [\".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\\n\"] }]\n        }], propDecorators: { showLabels: [{\n                type: Input\n            }], gradient: [{\n                type: Input\n            }], tooltipDisabled: [{\n                type: Input\n            }], activeEntries: [{\n                type: Input\n            }], labelFormatting: [{\n                type: Input\n            }], activate: [{\n                type: Output\n            }], deactivate: [{\n                type: Output\n            }], tooltipTemplate: [{\n                type: ContentChild,\n                args: ['tooltipTemplate']\n            }] } });\n\nclass SankeyModule {\n}\nSankeyModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: SankeyModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nSankeyModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: SankeyModule, declarations: [SankeyComponent], imports: [ChartCommonModule], exports: [SankeyComponent] });\nSankeyModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: SankeyModule, imports: [[ChartCommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: SankeyModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [ChartCommonModule],\n                    declarations: [SankeyComponent],\n                    exports: [SankeyComponent]\n                }]\n        }] });\n\nclass NgxChartsModule {\n    constructor() {\n        ngxChartsPolyfills();\n    }\n}\nNgxChartsModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: NgxChartsModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nNgxChartsModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: NgxChartsModule, exports: [ChartCommonModule,\n        AreaChartModule,\n        BarChartModule,\n        BoxChartModule,\n        BubbleChartModule,\n        HeatMapModule,\n        SankeyModule,\n        LineChartModule,\n        PolarChartModule,\n        NumberCardModule,\n        PieChartModule,\n        TreeMapModule,\n        GaugeModule] });\nNgxChartsModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: NgxChartsModule, imports: [ChartCommonModule,\n        AreaChartModule,\n        BarChartModule,\n        BoxChartModule,\n        BubbleChartModule,\n        HeatMapModule,\n        SankeyModule,\n        LineChartModule,\n        PolarChartModule,\n        NumberCardModule,\n        PieChartModule,\n        TreeMapModule,\n        GaugeModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: NgxChartsModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    exports: [\n                        ChartCommonModule,\n                        AreaChartModule,\n                        BarChartModule,\n                        BoxChartModule,\n                        BubbleChartModule,\n                        HeatMapModule,\n                        SankeyModule,\n                        LineChartModule,\n                        PolarChartModule,\n                        NumberCardModule,\n                        PieChartModule,\n                        TreeMapModule,\n                        GaugeModule\n                    ]\n                }]\n        }], ctorParameters: function () { return []; } });\n\nfunction tickFormat(fieldType, groupByType) {\n    return function (label) {\n        if (label === 'No Value' || label === 'Other') {\n            return label;\n        }\n        if (fieldType === 'date' && groupByType === 'groupBy') {\n            const formatter = timeFormat('MM/DD/YYYY');\n            return formatter(label);\n        }\n        return label.toString();\n    };\n}\n\n/* eslint-disable @typescript-eslint/no-empty-interface */\n\n/*\n * Public API Surface of ngx-charts\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AdvancedLegendComponent, AdvancedPieChartComponent, AreaChartComponent, AreaChartModule, AreaChartNormalizedComponent, AreaChartStackedComponent, AreaComponent, AreaSeriesComponent, AxesModule, AxisLabelComponent, BarChartModule, BarChartType, BarComponent, BarHorizontal2DComponent, BarHorizontalComponent, BarHorizontalNormalizedComponent, BarHorizontalStackedComponent, BarLabelComponent, BarOrientation, BarVertical2DComponent, BarVerticalComponent, BarVerticalNormalizedComponent, BarVerticalStackedComponent, BaseChartComponent, BoxChartComponent, BoxChartModule, BoxComponent, BoxSeriesComponent, BubbleChartComponent, BubbleChartModule, BubbleSeriesComponent, CardComponent, CardSeriesComponent, ChartCommonModule, ChartComponent, CircleComponent, CircleSeriesComponent, ColorHelper, CountUpDirective, D0Types, GaugeArcComponent, GaugeAxisComponent, GaugeComponent, GaugeModule, GridPanelComponent, GridPanelSeriesComponent, HeatCellSeriesComponent, HeatMapCellComponent, HeatMapComponent, HeatMapModule, LegendComponent, LegendEntryComponent, LegendPosition, LegendType, LineChartComponent, LineChartModule, LineComponent, LineSeriesComponent, LinearGaugeComponent, NgxChartsModule, NumberCardComponent, NumberCardModule, Orientation, PieArcComponent, PieChartComponent, PieChartModule, PieGridComponent, PieGridSeriesComponent, PieLabelComponent, PieSeriesComponent, PlacementTypes, PolarChartComponent, PolarChartModule, PolarSeriesComponent, SankeyComponent, SankeyModule, ScaleLegendComponent, ScaleType, SeriesHorizontal, SeriesType, SeriesVerticalComponent, ShowTypes, StyleTypes, SvgLinearGradientComponent, SvgRadialGradientComponent, TextAnchor, Timeline, TooltipArea, TooltipContentComponent, TooltipDirective, TooltipModule, TooltipService, TreeMapCellComponent, TreeMapCellSeriesComponent, TreeMapComponent, TreeMapModule, VisibilityObserver, XAxisComponent, XAxisTicksComponent, YAxisComponent, YAxisTicksComponent, calculateViewDimensions, colorSets, count, decimalChecker, escapeLabel, formatLabel, getDomain, getScale, getScaleType, getTickLines, getUniqueXDomainValues, getXDomainArray, gridLayout, gridSize, hexToRgb, id, invertColor, reduceTicks, shadeRGBColor, sortByDomain, sortByTime, sortLinear, throttle, throttleable, tickFormat, trimLabel };\n"],"mappings":"AAAA,OAAO,KAAKA,EAAE,MAAM,eAAe;AACnC,SAASC,WAAW,EAAEC,SAAS,EAAEC,iBAAiB,EAAEC,MAAM,EAAEC,KAAK,EAAEC,SAAS,EAAEC,WAAW,EAAEC,YAAY,EAAEC,UAAU,EAAEC,uBAAuB,EAAEC,YAAY,EAAEC,MAAM,EAAEC,SAAS,EAAEC,QAAQ,EAAEC,YAAY,QAAQ,eAAe;AAC5N,OAAO,KAAKC,EAAE,MAAM,iBAAiB;AACrC,SAASC,iBAAiB,EAAEC,gBAAgB,EAAEC,YAAY,QAAQ,iBAAiB;AACnF,SAASC,UAAU,QAAQ,OAAO;AAClC,SAASC,eAAe,EAAEC,eAAe,QAAQ,qBAAqB;AACtE,SAASC,SAAS,QAAQ,MAAM;AAChC,SAASC,YAAY,QAAQ,gBAAgB;AAC7C,SAASC,OAAO,EAAEC,UAAU,EAAEC,KAAK,EAAEC,OAAO,QAAQ,qBAAqB;AACzE,SAASC,MAAM,QAAQ,cAAc;AACrC,SAASC,MAAM,QAAQ,UAAU;AACjC,SAASC,SAAS,EAAEC,WAAW,EAAEC,UAAU,EAAEC,YAAY,EAAEC,aAAa,EAAEC,SAAS,QAAQ,UAAU;AACrG,SAASC,IAAI,EAAEC,WAAW,EAAEC,IAAI,EAAEC,GAAG,EAAEC,UAAU,EAAEC,mBAAmB,EAAEC,GAAG,QAAQ,UAAU;AAC7F,SAASC,KAAK,EAAEC,GAAG,EAAEC,GAAG,EAAEC,QAAQ,QAAQ,UAAU;AACpD,SAASC,WAAW,QAAQ,gBAAgB;AAC5C,SAASC,YAAY,QAAQ,SAAS;AACtC,OAAOC,IAAI,MAAM,MAAM;AACvB,SAASC,MAAM,QAAQ,WAAW;AAClC,OAAO,KAAKC,QAAQ,MAAM,UAAU;AACpC,SAASC,OAAO,EAAEC,QAAQ,QAAQ,cAAc;AAChD,SAASC,MAAM,EAAEC,UAAU,EAAEC,oBAAoB,QAAQ,WAAW;AACpE,SAASC,UAAU,QAAQ,gBAAgB;;AAE3C;AACA;AACA;AACA;AAHA,MAAAC,GAAA;AAAA,MAAAC,GAAA,GAAAC,EAAA;EAAAC,KAAA,EAAAD;AAAA;AAAA,SAAAE,sDAAAC,EAAA,EAAAC,GAAA;AAAA,SAAAC,wCAAAF,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAyU0GhE,EAAE,CAAAmE,cAAA,UAKhF,CAAC;IAL6EnE,EAAE,CAAAoE,UAAA,IAAAL,qDAAA,wBAMT,CAAC;IANM/D,EAAE,CAAAqE,YAAA,CAO9F,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAAM,MAAA,GAP2FtE,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAwE,SAAA,CAMzD,CAAC;IANsDxE,EAAE,CAAAyE,UAAA,qBAAAH,MAAA,CAAAI,QAMzD,CAAC,4BANsD1E,EAAE,CAAA2E,eAAA,IAAAf,GAAA,EAAAU,MAAA,CAAAM,OAAA,CAMV,CAAC;EAAA;AAAA;AAAA,SAAAC,wCAAAb,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IANOhE,EAAE,CAAA8E,SAAA,aAQrD,CAAC;EAAA;EAAA,IAAAd,EAAA;IAAA,MAAAM,MAAA,GARkDtE,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,cAAAH,MAAA,CAAAS,KAAA,EAAF/E,EAAE,CAAAgF,cAQ9D,CAAC;EAAA;AAAA;AAAA,SAAAC,kCAAAjB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAR2DhE,EAAE,CAAAmE,cAAA,eA8fhD,CAAC,aACtB,CAAC;IA/fkEnE,EAAE,CAAAkF,MAAA,EA+f1D,CAAC;IA/fuDlF,EAAE,CAAAqE,YAAA,CA+fnD,CAAC,CAC5C,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAAM,MAAA,GAhgB2FtE,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAwE,SAAA,EA+f1D,CAAC;IA/fuDxE,EAAE,CAAAmF,iBAAA,CAAAb,MAAA,CAAAS,KA+f1D,CAAC;EAAA;AAAA;AAAA,SAAAK,8BAAApB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAAqB,GAAA,GA/fuDrF,EAAE,CAAAsF,gBAAA;IAAFtF,EAAE,CAAAmE,cAAA,WAmgBpB,CAAC,gCAS7E,CAAC;IA5gB6FnE,EAAE,CAAAuF,UAAA,oBAAAC,wEAAAC,MAAA;MAAFzF,EAAE,CAAA0F,aAAA,CAAAL,GAAA;MAAA,MAAAf,MAAA,GAAFtE,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CAygBpFrB,MAAA,CAAAsB,UAAA,CAAAC,IAAA,CAAAJ,MAAsB,CAAC;IAAA,EAAC,sBAAAK,0EAAAL,MAAA;MAzgB0DzF,EAAE,CAAA0F,aAAA,CAAAL,GAAA;MAAA,MAAAf,MAAA,GAAFtE,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CA0gBlFrB,MAAA,CAAAyB,QAAA,CAAAN,MAAe,CAAC;IAAA,EAAC,wBAAAO,4EAAAP,MAAA;MA1gB+DzF,EAAE,CAAA0F,aAAA,CAAAL,GAAA;MAAA,MAAAf,MAAA,GAAFtE,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CA2gBhFrB,MAAA,CAAA2B,UAAA,CAAAR,MAAiB,CAAC;IAAA,EAAC;IA3gB2DzF,EAAE,CAAAqE,YAAA,CA6gBvE,CAAC,CACxB,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAAkC,QAAA,GAAAjC,GAAA,CAAAkC,SAAA;IAAA,MAAA7B,MAAA,GA9gB2FtE,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAwE,SAAA,CAqgB1E,CAAC;IArgBuExE,EAAE,CAAAyE,UAAA,UAAAyB,QAAA,CAAAE,KAqgB1E,CAAC,mBAAAF,QAAA,CAAAG,cACiB,CAAC,UAAAH,QAAA,CAAAI,KACnB,CAAC,aAAAhC,MAAA,CAAAiC,QAAA,CAAAL,QAAA,CACM,CAAC;EAAA;AAAA;AAAA,MAAAM,GAAA;AAAA,SAAAC,kDAAAzC,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAxgBgEhE,EAAE,CAAA8E,SAAA,gCAsnB7E,CAAC;EAAA;EAAA,IAAAd,EAAA;IAAA,MAAAM,MAAA,GAtnB0EtE,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,eAAAH,MAAA,CAAAoC,aAAA,IAAApC,MAAA,CAAAoC,aAAA,CAAAC,QAAA,KAAArC,MAAA,CAAAsC,cAAA,CAAAC,KAgnBtB,CAAC,eAAAvC,MAAA,CAAAoC,aAAA,CAAAI,MAC7C,CAAC,WAAAxC,MAAA,CAAAoC,aAAA,CAAAK,MACL,CAAC,WAAAzC,MAAA,CAAA0C,IAAA,GACd,CAAC,UAAA1C,MAAA,CAAA2C,WACE,CAAC;EAAA;AAAA;AAAA,SAAAC,4CAAAlD,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAAqB,GAAA,GApnB6ErF,EAAE,CAAAsF,gBAAA;IAAFtF,EAAE,CAAAmE,cAAA,0BAooBtG,CAAC;IApoBmGnE,EAAE,CAAAuF,UAAA,wBAAA4B,oFAAA1B,MAAA;MAAFzF,EAAE,CAAA0F,aAAA,CAAAL,GAAA;MAAA,MAAAf,MAAA,GAAFtE,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CAioBtFrB,MAAA,CAAA8C,gBAAA,CAAAvB,IAAA,CAAAJ,MAA4B,CAAC;IAAA,EAAC,2BAAA4B,uFAAA5B,MAAA;MAjoBsDzF,EAAE,CAAA0F,aAAA,CAAAL,GAAA;MAAA,MAAAf,MAAA,GAAFtE,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CAkoBnFrB,MAAA,CAAAgD,mBAAA,CAAAzB,IAAA,CAAAJ,MAA+B,CAAC;IAAA,EAAC,6BAAA8B,yFAAA9B,MAAA;MAloBgDzF,EAAE,CAAA0F,aAAA,CAAAL,GAAA;MAAA,MAAAf,MAAA,GAAFtE,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CAmoBjFrB,MAAA,CAAAkD,qBAAA,CAAA3B,IAAA,CAAAJ,MAAiC,CAAC;IAAA,EAAC;IAnoB4CzF,EAAE,CAAAqE,YAAA,CAqoBnF,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAAM,MAAA,GAroBgFtE,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,eAAAH,MAAA,CAAAoC,aAAA,IAAApC,MAAA,CAAAoC,aAAA,CAAAC,QAAA,KAAArC,MAAA,CAAAsC,cAAA,CAAAC,KA0nBtB,CAAC,SAAAvC,MAAA,CAAAoC,aAAA,CAAAI,MACnD,CAAC,UAAAxC,MAAA,CAAAoC,aAAA,CAAA3B,KACD,CAAC,WAAAT,MAAA,CAAAoC,aAAA,CAAAK,MACC,CAAC,WAAAzC,MAAA,CAAA0C,IAAA,GACd,CAAC,UAAA1C,MAAA,CAAA2C,WACE,CAAC,kBAAA3C,MAAA,CAAAmD,aACS,CAAC;EAAA;AAAA;AAAA,MAAAC,GAAA;AAAA,MAAAC,GAAA;AAAA,MAAAC,GAAA;AAAA,SAAAC,8EAAA7D,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAhoBmEhE,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAA+H,kBAAA,EA+vCU,CAAC;EAAA;AAAA;AAAA,SAAAC,8GAAAhE,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IA/vCbhE,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,eAowCV,CAAC;IApwCOnE,EAAE,CAAAkF,MAAA,EAswC/F,CAAC;IAtwC4FlF,EAAE,CAAAqE,YAAA,CAswCnF,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAAiE,WAAA,GAAAhE,GAAA,CAAAkC,SAAA;IAAA,MAAA+B,IAAA,GAAAjE,GAAA,CAAAkE,KAAA;IAtwCgFnI,EAAE,CAAAoI,WAAA,MAAAF,IAAA;IAAFlI,EAAE,CAAAwE,SAAA,CAswC/F,CAAC;IAtwC4FxE,EAAE,CAAAqI,kBAAA,MAAAJ,WAAA,KAswC/F,CAAC;EAAA;AAAA;AAAA,SAAAK,iGAAAtE,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAtwC4FhE,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAuI,uBAAA,EAmwC7C,CAAC;IAnwC0CvI,EAAE,CAAAoE,UAAA,IAAA4D,6GAAA,kBAowCV,CAAC;IApwCOhI,EAAE,CAAAwI,qBAAA;EAAA;EAAA,IAAAxE,EAAA;IAAA,MAAAyE,YAAA,GAAAxE,GAAA,CAAAyE,IAAA;IAAF1I,EAAE,CAAAwE,SAAA,CAowCjD,CAAC;IApwC8CxE,EAAE,CAAAyE,UAAA,YAAAgE,YAowCjD,CAAC;EAAA;AAAA;AAAA,SAAAE,6EAAA3E,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IApwC8ChE,EAAE,CAAAoE,UAAA,IAAAkE,gGAAA,yBAmwC7C,CAAC;EAAA;EAAA,IAAAtE,EAAA;IAAA,MAAA4E,OAAA,GAnwC0C5I,EAAE,CAAAuE,aAAA,IAAA4B,SAAA;IAAA,MAAA0C,MAAA,GAAF7I,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,SAAAoE,MAAA,CAAAC,UAAA,CAAAF,OAAA,CAmwC3D,CAAC;EAAA;AAAA;AAAA,SAAAG,6EAAA/E,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAnwCwDhE,EAAE,CAAAkF,MAAA,EA4wCnG,CAAC;EAAA;EAAA,IAAAlB,EAAA;IAAA,MAAAgF,gBAAA,GA5wCgGhJ,EAAE,CAAAuE,aAAA,GAAAmE,IAAA;IAAA,MAAAG,MAAA,GAAF7I,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAqI,kBAAA,MAAAQ,MAAA,CAAAI,QAAA,CAAAD,gBAAA,MA4wCnG,CAAC;EAAA;AAAA;AAAA,SAAAE,0DAAAlF,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IA5wCgGhE,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAuI,uBAAA,EAuvC7C,CAAC;IAvvC0CvI,EAAE,CAAAmE,cAAA,WAwvC5F,CAAC;IAxvCyFnE,EAAE,CAAAkF,MAAA,EAwvCzE,CAAC;IAxvCsElF,EAAE,CAAAqE,YAAA,CAwvCjE,CAAC;IAxvC8DrE,EAAE,CAAAmE,cAAA,aA8vClG,CAAC;IA9vC+FnE,EAAE,CAAAoE,UAAA,IAAAyD,6EAAA,yBA+vCL,CAAC;IA/vCE7H,EAAE,CAAAqE,YAAA,CAgwCxF,CAAC;IAhwCqFrE,EAAE,CAAAoE,UAAA,IAAAuE,4EAAA,gCAAF3I,EAAE,CAAAmJ,sBAkwCnE,CAAC,IAAAJ,4EAAA,gCAlwCgE/I,EAAE,CAAAmJ,sBA0wClE,CAAC;IA1wC+DnJ,EAAE,CAAAwI,qBAAA;EAAA;EAAA,IAAAxE,EAAA;IAAA,MAAAgF,gBAAA,GAAA/E,GAAA,CAAAyE,IAAA;IAAA,MAAAU,oBAAA,GAAFpJ,EAAE,CAAAqJ,WAAA;IAAA,MAAAC,qBAAA,GAAFtJ,EAAE,CAAAqJ,WAAA;IAAA,MAAAR,MAAA,GAAF7I,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAwE,SAAA,EAwvCzE,CAAC;IAxvCsExE,EAAE,CAAAmF,iBAAA,CAAA6D,gBAwvCzE,CAAC;IAxvCsEhJ,EAAE,CAAAwE,SAAA,CA4vClE,CAAC;IA5vC+DxE,EAAE,CAAAoI,WAAA,gBAAAS,MAAA,CAAAU,UAAA,eAAAV,MAAA,CAAAW,aAAA;IAAFxJ,EAAE,CAAAwE,SAAA,CA+vCtD,CAAC;IA/vCmDxE,EAAE,CAAAyE,UAAA,SAAAoE,MAAA,CAAAY,oBA+vCtD,CAAC,aAAAL,oBAAuB,CAAC,aAAAE,qBAAsB,CAAC;EAAA;AAAA;AAAA,SAAAI,sCAAA1F,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IA/vCIhE,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,UAsvCjB,CAAC;IAtvCcnE,EAAE,CAAAoE,UAAA,IAAA8E,yDAAA,yBAuvC7C,CAAC;IAvvC0ClJ,EAAE,CAAAqE,YAAA,CA8wC/F,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAA4E,OAAA,GAAA3E,GAAA,CAAAkC,SAAA;IAAA,MAAA0C,MAAA,GA9wC4F7I,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAoI,WAAA,cAAAS,MAAA,CAAAc,aAAA,CAAAf,OAAA;IAAF5I,EAAE,CAAAwE,SAAA,CAuvC/D,CAAC;IAvvC4DxE,EAAE,CAAAyE,UAAA,SAAAoE,MAAA,CAAAe,UAAA,CAAAhB,OAAA,CAuvC/D,CAAC;EAAA;AAAA;AAAA,SAAAiB,+CAAA7F,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAvvC4DhE,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,OAkxCnC,CAAC;IAlxCgCnE,EAAE,CAAA8E,SAAA,cAmxCT,CAAC;IAnxCM9E,EAAE,CAAAqE,YAAA,CAoxC/F,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAA6E,MAAA,GApxC4F7I,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAoI,WAAA,cAAAS,MAAA,CAAAiB,iBAAA;IAAF9J,EAAE,CAAAwE,SAAA,CAmxCnB,CAAC;IAnxCgBxE,EAAE,CAAAoI,WAAA,QAAAS,MAAA,CAAAkB,cAAA;EAAA;AAAA;AAAA,SAAAC,sCAAAhG,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAFhE,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,OAixChC,CAAC;IAjxC6BnE,EAAE,CAAAoE,UAAA,IAAAyF,8CAAA,cAkxCnC,CAAC;IAlxCgC7J,EAAE,CAAAqE,YAAA,CAqxCjG,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAAiG,OAAA,GAAAhG,GAAA,CAAAkC,SAAA;IAAA,MAAA0C,MAAA,GArxC8F7I,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAoI,WAAA,cAAAS,MAAA,CAAAc,aAAA,CAAAM,OAAA;IAAFjK,EAAE,CAAAwE,SAAA,CAkxC5E,CAAC;IAlxCyExE,EAAE,CAAAyE,UAAA,SAAAoE,MAAA,CAAAqB,aAkxC5E,CAAC;EAAA;AAAA;AAAA,MAAAC,GAAA;AAAA,SAAAC,iCAAApG,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAAqG,GAAA,GAlxCyErK,EAAE,CAAAsF,gBAAA;IAAFtF,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,UA45CrG,CAAC;IA55CkGnE,EAAE,CAAAuF,UAAA,+BAAA+E,gEAAA7E,MAAA;MAAFzF,EAAE,CAAA0F,aAAA,CAAA2E,GAAA;MAAA,MAAAE,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CA25C/E4E,MAAA,CAAAC,eAAA,CAAA/E,MAAsB,CAAC;IAAA,EAAC;IA35CqDzF,EAAE,CAAAqE,YAAA,CA45CrG,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAAuG,MAAA,GA55CkGvK,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,cAAA8F,MAAA,CAAAE,SA84C9E,CAAC,gBAAAF,MAAA,CAAAG,WACG,CAAC,kBAAAH,MAAA,CAAAI,aACG,CAAC,mBAAAJ,MAAA,CAAAK,cACC,CAAC,kBAAAL,MAAA,CAAAM,aACH,CAAC,eAAAN,MAAA,CAAAO,UACP,CAAC,UAAAP,MAAA,CAAAQ,MACV,CAAC,WAAAR,MAAA,CAAAS,OACC,CAAC,kBAAAT,MAAA,CAAAL,aACY,CAAC,mBAAAK,MAAA,CAAAU,IAAA,CAAAC,MACF,CAAC,UAAAX,MAAA,CAAAU,IAAA,CAAAE,KACX,CAAC,eAAAZ,MAAA,CAAAa,KACD,CAAC,cAAAb,MAAA,CAAAc,SACE,CAAC;EAAA;AAAA;AAAA,SAAAC,iCAAAtH,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IA15C2EhE,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAA8E,SAAA,UAq6C9F,CAAC;EAAA;EAAA,IAAAd,EAAA;IAAA,MAAAuG,MAAA,GAr6C2FvK,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,UAAA8F,MAAA,CAAAgB,SAg6ClF,CAAC,WAAAhB,MAAA,CAAAiB,WACE,CAAC,WAAAjB,MAAA,CAAAkB,WAAA,CAAAC,MACM,CAAC,WAAAnB,MAAA,CAAAU,IAAA,CAAAC,MACR,CAAC,UAAAX,MAAA,CAAAU,IAAA,CAAAE,KACH,CAAC;EAAA;AAAA;AAAA,MAAAQ,GAAA;AAAA,SAAAC,8EAAA5H,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAp6C8EhE,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAA+H,kBAAA,EA+tDD,CAAC;EAAA;AAAA;AAAA,SAAA8D,kIAAA7H,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IA/tDFhE,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,eAquDO,CAAC;IAruDVnE,EAAE,CAAAkF,MAAA,EAuuD7F,CAAC;IAvuD0FlF,EAAE,CAAAqE,YAAA,CAuuDjF,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAAiE,WAAA,GAAAhE,GAAA,CAAAkC,SAAA;IAAA,MAAA+B,IAAA,GAAAjE,GAAA,CAAAkE,KAAA;IAAA,MAAA2D,MAAA,GAvuD8E9L,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAoI,WAAA,MAAAF,IAAA,QAAA4D,MAAA,CAAAC,WAAA;IAAF/L,EAAE,CAAAwE,SAAA,CAuuD7F,CAAC;IAvuD0FxE,EAAE,CAAAqI,kBAAA,MAAAJ,WAAA,KAuuD7F,CAAC;EAAA;AAAA;AAAA,SAAA+D,qHAAAhI,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAvuD0FhE,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAuI,uBAAA,EAouD3B,CAAC;IApuDwBvI,EAAE,CAAAoE,UAAA,IAAAyH,iIAAA,mBAquDO,CAAC;IAruDV7L,EAAE,CAAAwI,qBAAA;EAAA;EAAA,IAAAxE,EAAA;IAAA,MAAAiI,YAAA,GAAFjM,EAAE,CAAAuE,aAAA,GAAAmE,IAAA;IAAF1I,EAAE,CAAAwE,SAAA,CAquD/C,CAAC;IAruD4CxE,EAAE,CAAAyE,UAAA,YAAAwH,YAquD/C,CAAC;EAAA;AAAA;AAAA,SAAAC,iGAAAlI,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAruD4ChE,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAuI,uBAAA,EAmuD7C,CAAC;IAnuD0CvI,EAAE,CAAAoE,UAAA,IAAA4H,oHAAA,0BAouD3B,CAAC;IApuDwBhM,EAAE,CAAAwI,qBAAA;EAAA;EAAA,IAAAxE,EAAA;IAAA,MAAAiI,YAAA,GAAAhI,GAAA,CAAAyE,IAAA;IAAF1I,EAAE,CAAAuE,aAAA;IAAA,MAAA4H,qBAAA,GAAFnM,EAAE,CAAAqJ,WAAA;IAAFrJ,EAAE,CAAAwE,SAAA,CAouDpD,CAAC;IApuDiDxE,EAAE,CAAAyE,UAAA,SAAAwH,YAAA,CAAAG,MAAA,IAouDpD,CAAC,aAAAD,qBAAsB,CAAC;EAAA;AAAA;AAAA,SAAAE,6EAAArI,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IApuD0BhE,EAAE,CAAAoE,UAAA,IAAA8H,gGAAA,yBAmuD7C,CAAC;EAAA;EAAA,IAAAlI,EAAA;IAAA,MAAAsI,OAAA,GAnuD0CtM,EAAE,CAAAuE,aAAA,IAAA4B,SAAA;IAAA,MAAA2F,MAAA,GAAF9L,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,SAAAqH,MAAA,CAAAhD,UAAA,CAAAwD,OAAA,CAmuD3D,CAAC;EAAA;AAAA;AAAA,SAAAC,6EAAAvI,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAnuDwDhE,EAAE,CAAAkF,MAAA,EA8uDnG,CAAC;EAAA;EAAA,IAAAlB,EAAA;IAAA,MAAAwI,gBAAA,GA9uDgGxM,EAAE,CAAAuE,aAAA,GAAAmE,IAAA;IAAA,MAAAoD,MAAA,GAAF9L,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAqI,kBAAA,MAAAyD,MAAA,CAAA7C,QAAA,CAAAuD,gBAAA,MA8uDnG,CAAC;EAAA;AAAA;AAAA,SAAAC,0DAAAzI,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IA9uDgGhE,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAuI,uBAAA,EAqtD7C,CAAC;IArtD0CvI,EAAE,CAAAmE,cAAA,WAstD5F,CAAC;IAttDyFnE,EAAE,CAAAkF,MAAA,EAstDzE,CAAC;IAttDsElF,EAAE,CAAAqE,YAAA,CAstDjE,CAAC;IAttD8DrE,EAAE,CAAAmE,cAAA,aA8tDlG,CAAC;IA9tD+FnE,EAAE,CAAAoE,UAAA,IAAAwH,6EAAA,yBA+tDhB,CAAC;IA/tDa5L,EAAE,CAAAqE,YAAA,CAguDxF,CAAC;IAhuDqFrE,EAAE,CAAAoE,UAAA,IAAAiI,4EAAA,gCAAFrM,EAAE,CAAAmJ,sBAkuDnE,CAAC,IAAAoD,4EAAA,gCAluDgEvM,EAAE,CAAAmJ,sBA4uDlE,CAAC;IA5uD+DnJ,EAAE,CAAAwI,qBAAA;EAAA;EAAA,IAAAxE,EAAA;IAAA,MAAAwI,gBAAA,GAAAvI,GAAA,CAAAyE,IAAA;IAAA,MAAAgE,oBAAA,GAAF1M,EAAE,CAAAqJ,WAAA;IAAA,MAAA8C,qBAAA,GAAFnM,EAAE,CAAAqJ,WAAA;IAAA,MAAAyC,MAAA,GAAF9L,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAwE,SAAA,EAstDzE,CAAC;IAttDsExE,EAAE,CAAAmF,iBAAA,CAAAqH,gBAstDzE,CAAC;IAttDsExM,EAAE,CAAAwE,SAAA,CA6tDvE,CAAC;IA7tDoExE,EAAE,CAAA2M,WAAA,oBA6tDvE,CAAC;IA7tDoE3M,EAAE,CAAAoI,WAAA,OAAA0D,MAAA,CAAAc,EAAA,OAAAd,MAAA,CAAAe,EAAA,OAAAf,MAAA,CAAAgB,EAAA,iBAAAhB,MAAA,CAAAvC,UAAA;IAAFvJ,EAAE,CAAAwE,SAAA,CA+tDjE,CAAC;IA/tD8DxE,EAAE,CAAAyE,UAAA,SAAAqH,MAAA,CAAAT,SA+tDjE,CAAC,aAAAqB,oBAAuB,CAAC,aAAAP,qBAAsB,CAAC;EAAA;AAAA;AAAA,SAAAY,sCAAA/I,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IA/tDehE,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,UAotDrB,CAAC;IAptDkBnE,EAAE,CAAAoE,UAAA,IAAAqI,yDAAA,0BAqtD7C,CAAC;IArtD0CzM,EAAE,CAAAqE,YAAA,CAgvD/F,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAAsI,OAAA,GAAArI,GAAA,CAAAkC,SAAA;IAAA,MAAA2F,MAAA,GAhvD4F9L,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAoI,WAAA,cAAA0D,MAAA,CAAAkB,SAAA,CAAAV,OAAA;IAAFtM,EAAE,CAAAwE,SAAA,CAqtD/D,CAAC;IArtD4DxE,EAAE,CAAAyE,UAAA,SAAAqH,MAAA,CAAAlC,UAAA,CAAA0C,OAAA,CAqtD/D,CAAC;EAAA;AAAA;AAAA,SAAAW,yCAAAjJ,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IArtD4DhE,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAA8E,SAAA,cAwvDvG,CAAC;EAAA;EAAA,IAAAd,EAAA;IAAA,MAAA8H,MAAA,GAxvDoG9L,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAoI,WAAA,MAAA0D,MAAA,CAAAoB,iBAAA,eAAApB,MAAA,CAAAhC,iBAAA;EAAA;AAAA;AAAA,SAAAqD,2DAAAnJ,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAFhE,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAA8E,SAAA,cAgwDnG,CAAC;EAAA;EAAA,IAAAd,EAAA;IAAA,MAAA8H,MAAA,GAhwDgG9L,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAoI,WAAA,OAAA0D,MAAA,CAAAsB,aAAA;EAAA;AAAA;AAAA,SAAAC,2DAAArJ,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAFhE,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAA8E,SAAA,cAswDnG,CAAC;EAAA;EAAA,IAAAd,EAAA;IAAA,MAAA8H,MAAA,GAtwDgG9L,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAoI,WAAA,QAAA0D,MAAA,CAAAsB,aAAA;EAAA;AAAA;AAAA,SAAAE,+CAAAtJ,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAFhE,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,OA0vDnC,CAAC;IA1vDgCnE,EAAE,CAAAoE,UAAA,IAAA+I,0DAAA,kBAgwDnG,CAAC,IAAAE,0DAAA,kBAMD,CAAC;IAtwDgGrN,EAAE,CAAAqE,YAAA,CAuwD/F,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAA8H,MAAA,GAvwD4F9L,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAoI,WAAA,cAAA0D,MAAA,CAAAhC,iBAAA;IAAF9J,EAAE,CAAAwE,SAAA,CA4vDjE,CAAC;IA5vD8DxE,EAAE,CAAAyE,UAAA,SAAAqH,MAAA,CAAAyB,MAAA,KAAAzB,MAAA,CAAA0B,WAAA,CAAAC,IA4vDjE,CAAC;IA5vD8DzN,EAAE,CAAAwE,SAAA,CAkwDhE,CAAC;IAlwD6DxE,EAAE,CAAAyE,UAAA,SAAAqH,MAAA,CAAAyB,MAAA,KAAAzB,MAAA,CAAA0B,WAAA,CAAAE,KAkwDhE,CAAC;EAAA;AAAA;AAAA,SAAAC,sCAAA3J,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAlwD6DhE,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,OAyvDpC,CAAC;IAzvDiCnE,EAAE,CAAAoE,UAAA,IAAAkJ,8CAAA,cA0vDnC,CAAC;IA1vDgCtN,EAAE,CAAAqE,YAAA,CAwwDjG,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAAiG,OAAA,GAAAhG,GAAA,CAAAkC,SAAA;IAAA,MAAA2F,MAAA,GAxwD8F9L,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAoI,WAAA,cAAA0D,MAAA,CAAAkB,SAAA,CAAA/C,OAAA;IAAFjK,EAAE,CAAAwE,SAAA,CA0vD5E,CAAC;IA1vDyExE,EAAE,CAAAyE,UAAA,SAAAqH,MAAA,CAAA5B,aA0vD5E,CAAC;EAAA;AAAA;AAAA,SAAA0D,wDAAA5J,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IA1vDyEhE,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,OAkxDxE,CAAC,WACrB,CAAC;IAnxDyFnE,EAAE,CAAAkF,MAAA,EAmxDnD,CAAC;IAnxDgDlF,EAAE,CAAAqE,YAAA,CAmxD3C,CAAC;IAnxDwCrE,EAAE,CAAAmE,cAAA,cA0xDlG,CAAC;IA1xD+FnE,EAAE,CAAAkF,MAAA,EA4xDnG,CAAC;IA5xDgGlF,EAAE,CAAAqE,YAAA,CA4xDxF,CAAC,CACN,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAA6J,WAAA,GA7xD0F7N,EAAE,CAAAuE,aAAA,IAAA4B,SAAA;IAAA,MAAA2F,MAAA,GAAF9L,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAwE,SAAA,EAmxDnD,CAAC;IAnxDgDxE,EAAE,CAAAmF,iBAAA,CAAA2G,MAAA,CAAA7C,QAAA,CAAA6C,MAAA,CAAAlC,UAAA,CAAAiE,WAAA,CAAAC,KAAA,EAmxDnD,CAAC;IAnxDgD9N,EAAE,CAAAwE,SAAA,CAsxDnF,CAAC;IAtxDgFxE,EAAE,CAAAoI,WAAA,OAAA0D,MAAA,CAAAc,EAAA,gBAAAd,MAAA,CAAAsB,aAAA,iBAAAtB,MAAA,CAAAvC,UAAA;IAAFvJ,EAAE,CAAAwE,SAAA,CA4xDnG,CAAC;IA5xDgGxE,EAAE,CAAAqI,kBAAA,MAAAwF,WAAA,CAAAE,IAAA,KA4xDnG,CAAC;EAAA;AAAA;AAAA,SAAAC,+CAAAhK,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IA5xDgGhE,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,OA2wD/B,CAAC;IA3wD4BnE,EAAE,CAAA8E,SAAA,cAixDnG,CAAC;IAjxDgG9E,EAAE,CAAAoE,UAAA,IAAAwJ,uDAAA,cAkxDxE,CAAC;IAlxDqE5N,EAAE,CAAAqE,YAAA,CA8xD/F,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAA6J,WAAA,GA9xD4F7N,EAAE,CAAAuE,aAAA,GAAA4B,SAAA;IAAA,MAAA2F,MAAA,GAAF9L,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAoI,WAAA,cAAA0D,MAAA,CAAAkB,SAAA,CAAAa,WAAA,CAAAC,KAAA;IAAF9N,EAAE,CAAAwE,SAAA,CA+wD1E,CAAC;IA/wDuExE,EAAE,CAAAoI,WAAA,OAAA0D,MAAA,CAAAsB,aAAA,eAAAtB,MAAA,CAAAhC,iBAAA;IAAF9J,EAAE,CAAAwE,SAAA,CAkxD1E,CAAC;IAlxDuExE,EAAE,CAAAyE,UAAA,SAAAqH,MAAA,CAAAmC,aAkxD1E,CAAC;EAAA;AAAA;AAAA,SAAAC,sCAAAlK,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAlxDuEhE,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,OA0wD3D,CAAC;IA1wDwDnE,EAAE,CAAAoE,UAAA,IAAA4J,8CAAA,cA2wD/B,CAAC;IA3wD4BhO,EAAE,CAAAqE,YAAA,CA+xDjG,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAA8H,MAAA,GA/xD8F9L,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAwE,SAAA,CA2wD7E,CAAC;IA3wD0ExE,EAAE,CAAAyE,UAAA,SAAAqH,MAAA,CAAAqC,YA2wD7E,CAAC;EAAA;AAAA;AAAA,MAAAC,GAAA;AAAA,SAAAC,iCAAArK,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAAqG,GAAA,GA3wD0ErK,EAAE,CAAAsF,gBAAA;IAAFtF,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,UAk+DrG,CAAC;IAl+DkGnE,EAAE,CAAAuF,UAAA,+BAAA+I,gEAAA7I,MAAA;MAAFzF,EAAE,CAAA0F,aAAA,CAAA2E,GAAA;MAAA,MAAAE,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CAi+D/E4E,MAAA,CAAAgE,cAAA,CAAA9I,MAAqB,CAAC;IAAA,EAAC;IAj+DsDzF,EAAE,CAAAqE,YAAA,CAk+DrG,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAAuG,MAAA,GAl+DkGvK,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,cAAA8F,MAAA,CAAAE,SAk9D9E,CAAC,kBAAAF,MAAA,CAAAI,aACO,CAAC,mBAAAJ,MAAA,CAAAK,cACC,CAAC,kBAAAL,MAAA,CAAAM,aACH,CAAC,eAAAN,MAAA,CAAAa,KACZ,CAAC,eAAAb,MAAA,CAAAO,UACI,CAAC,UAAAP,MAAA,CAAAiE,MACV,CAAC,WAAAjE,MAAA,CAAAkE,OACC,CAAC,kBAAAlE,MAAA,CAAAL,aACY,CAAC,kBAAAK,MAAA,CAAAU,IAAA,CAAAE,KACJ,CAAC,mBAAAZ,MAAA,CAAAmE,cACI,CAAC,iBAAAnE,MAAA,CAAA4D,YACL,CAAC,kBAAA5D,MAAA,CAAA0D,aACC,CAAC,WAAA1D,MAAA,CAAAU,IAAA,CAAAC,MACV,CAAC,cAAAX,MAAA,CAAAc,SACA,CAAC;EAAA;AAAA;AAAA,SAAAsD,iCAAA3K,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAh+D2EhE,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAA8E,SAAA,UA4+D9F,CAAC;EAAA;EAAA,IAAAd,EAAA;IAAA,MAAAuG,MAAA,GA5+D2FvK,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,UAAA8F,MAAA,CAAAgB,SAu+DlF,CAAC,WAAAhB,MAAA,CAAAiB,WACE,CAAC,WAAAjB,MAAA,CAAAkE,OACL,CAAC,WAAAlE,MAAA,CAAAU,IAAA,CAAAC,MACG,CAAC,UAAAX,MAAA,CAAAU,IAAA,CAAAE,KACH,CAAC;EAAA;AAAA;AAAA,MAAAyD,GAAA;AAAA,SAAAC,gDAAA7K,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IA3+D8EhE,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAA8E,SAAA,UA02ErG,CAAC;EAAA;EAAA,IAAAd,EAAA;IAAA,MAAA8K,OAAA,GAAA7K,GAAA,CAAAkC,SAAA;IA12EkGnG,EAAE,CAAA2M,WAAA,eAAAmC,OAAA,CAAAxI,KAw2EtE,CAAC,iBAAAwI,OAAA,CAAAC,OACG,CAAC;IAz2E+D/O,EAAE,CAAAoI,WAAA,WAAA0G,OAAA,CAAAE,MAAA;EAAA;AAAA;AAAA,MAAAC,IAAA;AAAA,MAAAC,IAAA;AAAA,MAAAC,IAAA,GAAAtL,EAAA;EAAAkK,IAAA,EAAAlK;AAAA;AAAA,SAAAuL,oDAAApL,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAFhE,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAA8E,SAAA,aAkpFrG,CAAC;EAAA;EAAA,IAAAd,EAAA;IAAA,MAAAuG,MAAA,GAlpFkGvK,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,4BA2oFzE,CAAC;IA3oFsEzE,EAAE,CAAAoI,WAAA,MAAAmC,MAAA,CAAA8E,MAAA,CAAAC,EAAA,GAAA/E,MAAA,CAAA8E,MAAA,CAAAE,MAAA,OAAAhF,MAAA,CAAA8E,MAAA,CAAAG,EAAA,WAAAjF,MAAA,CAAA8E,MAAA,CAAAE,MAAA,gBAAAhF,MAAA,CAAA8E,MAAA,CAAAnE,MAAA,UAAAX,MAAA,CAAAkF,YAAA;EAAA;AAAA;AAAA,SAAAC,oDAAA1L,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAFhE,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAA8E,SAAA,aA2pFrG,CAAC;EAAA;EAAA,IAAAd,EAAA;IAAA,MAAAuG,MAAA,GA3pFkGvK,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAoI,WAAA,MAAAmC,MAAA,CAAA8E,MAAA,CAAAC,EAAA,GAAA/E,MAAA,CAAA8E,MAAA,CAAAE,MAAA,OAAAhF,MAAA,CAAA8E,MAAA,CAAAG,EAAA,WAAAjF,MAAA,CAAA8E,MAAA,CAAAE,MAAA,gBAAAhF,MAAA,CAAA8E,MAAA,CAAAnE,MAAA,UAAAX,MAAA,CAAAkF,YAAA;EAAA;AAAA;AAAA,SAAAE,wCAAA3L,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAAqG,GAAA,GAAFrK,EAAE,CAAAsF,gBAAA;IAAFtF,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,OAgoFnF,CAAC,UACf,CAAC;IAjoF8FnE,EAAE,CAAA8E,SAAA,UAuoFnG,CAAC;IAvoFgG9E,EAAE,CAAAqE,YAAA,CAwoFhG,CAAC;IAxoF6FrE,EAAE,CAAAoE,UAAA,IAAAgL,mDAAA,iBAkpFrG,CAAC,IAAAM,mDAAA,iBASD,CAAC;IA3pFkG1P,EAAE,CAAAmE,cAAA,UAirFrG,CAAC;IAjrFkGnE,EAAE,CAAAuF,UAAA,oBAAAqK,4DAAA;MAAF5P,EAAE,CAAA0F,aAAA,CAAA2E,GAAA;MAAA,MAAAE,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CAuqF1F4E,MAAA,CAAAsF,OAAA,CAAAtF,MAAA,CAAA8E,MAAA,CAAAS,IAAmB,CAAC;IAAA,EAAC,sBAAAC,8DAAA;MAvqFmE/P,EAAE,CAAA0F,aAAA,CAAA2E,GAAA;MAAA,MAAAE,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CAwqFxF4E,MAAA,CAAAyF,cAAA,CAAe,CAAC;IAAA,EAAC,wBAAAC,gEAAA;MAxqFqEjQ,EAAE,CAAA0F,aAAA,CAAA2E,GAAA;MAAA,MAAAE,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CAyqFtF4E,MAAA,CAAA2F,gBAAA,CAAiB,CAAC;IAAA,EAAC;IAzqFiElQ,EAAE,CAAAqE,YAAA,CAirFrG,CAAC,CACG,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAAuG,MAAA,GAlrF8FvK,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAwE,SAAA,EAooF5D,CAAC;IApoFyDxE,EAAE,CAAAyE,UAAA,gBAAA8F,MAAA,CAAA4F,cAAA,CAAAC,QAooF5D,CAAC,SAAA7F,MAAA,CAAA8F,UACrB,CAAC,UAAA9F,MAAA,CAAA8E,MAAA,CAAAiB,aACU,CAAC;IAtoFkEtQ,EAAE,CAAAwE,SAAA,CA0oFnD,CAAC;IA1oFgDxE,EAAE,CAAAyE,UAAA,UAAA8F,MAAA,CAAAgG,KAAA,IAAAhG,MAAA,CAAAiG,UAAA,IAAAjG,MAAA,CAAAkG,IAAA,eA0oFnD,CAAC;IA1oFgDzQ,EAAE,CAAAwE,SAAA,CAopFpD,CAAC;IAppFiDxE,EAAE,CAAAyE,UAAA,SAAA8F,MAAA,CAAAgG,KAAA,IAAAhG,MAAA,CAAAiG,UAAA,IAAAjG,MAAA,CAAAkG,IAAA,eAopFpD,CAAC;IAppFiDzQ,EAAE,CAAAwE,SAAA,CAmqF/C,CAAC;IAnqF4CxE,EAAE,CAAA0Q,WAAA,WAAAnG,MAAA,CAAAhE,QAAA,CAAFvG,EAAE,CAAA2E,eAAA,KAAAwK,IAAA,EAAA5E,MAAA,CAAA8E,MAAA,CAAAsB,UAAA,EAmqF/C,CAAC;IAnqF4C3Q,EAAE,CAAAyE,UAAA,OAAA8F,MAAA,CAAA8E,MAAA,CAAAC,EA+pFrF,CAAC,OAAA/E,MAAA,CAAA8E,MAAA,CAAAG,EACD,CAAC,MAAAjF,MAAA,CAAA8E,MAAA,CAAAE,MACE,CAAC,SAAAhF,MAAA,CAAA8E,MAAA,CAAA/I,KACC,CAAC,kBAAAiE,MAAA,CAAA8E,MAAA,CAAAvB,KAAA,uBAE+B,CAAC,SAAAvD,MAAA,CAAA8E,MAAA,CAAAvB,KACjC,CAAC,eAAAvD,MAAA,CAAA8E,MAAA,CAAAuB,UACU,CAAC,oBAAArG,MAAA,CAAAsG,eAKE,CAAC,qBAAAtG,MAAA,CAAAuG,cAAA,CAAAC,GACG,CAAC,gBAAAxG,MAAA,CAAAyG,UAAA,CAAAC,OACN,CAAC,iBAAA1G,MAAA,CAAA2G,eAAA,GAAAC,SAAA,GAAA5G,MAAA,CAAA6G,cAAA,CAAA7G,MAAA,CAAA8E,MAAA,CACkC,CAAC,oBAAA9E,MAAA,CAAA2G,eACnC,CAAC,mBAAA3G,MAAA,CAAA8E,MAAA,CAAAS,IACN,CAAC;EAAA;AAAA;AAAA,MAAAuB,IAAA;AAAA,MAAAC,IAAA;AAAA,SAAAC,2CAAAvN,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAhrFoEhE,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAA8E,SAAA,UA63FhG,CAAC;EAAA;EAAA,IAAAd,EAAA;IAAA,MAAAwN,YAAA,GAAAvN,GAAA,CAAAkC,SAAA;IA73F6FnG,EAAE,CAAA0Q,WAAA,mBA03F9E,CAAC,QAAAc,YAAA,CAAAC,KAAA,UACa,CAAC,SAAAD,YAAA,CAAAC,KAAA,WACC,CAAC;IA53F2DzR,EAAE,CAAAyE,UAAA,WAAA+M,YAAA,CAAAtG,MAs3F5E,CAAC,UAAAsG,YAAA,CAAArG,KACH,CAAC,MAAAqG,YAAA,CAAAE,CACT,CAAC,MAAAF,YAAA,CAAAG,CACD,CAAC;EAAA;AAAA;AAAA,MAAAC,IAAA;AAAA,SAAAC,gDAAA7N,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAz3FmFhE,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAA8E,SAAA,UAo8FrG,CAAC;EAAA;EAAA,IAAAd,EAAA;IAAA,MAAA8K,OAAA,GAAA7K,GAAA,CAAAkC,SAAA;IAp8FkGnG,EAAE,CAAA2M,WAAA,eAAAmC,OAAA,CAAAxI,KAk8FtE,CAAC,iBAAAwI,OAAA,CAAAC,OACG,CAAC;IAn8F+D/O,EAAE,CAAAoI,WAAA,WAAA0G,OAAA,CAAAE,MAAA;EAAA;AAAA;AAAA,MAAA8C,IAAA;AAAA,SAAAC,mCAAA/N,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAFhE,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,UAwiG9E,CAAC;IAxiG2EnE,EAAE,CAAA8E,SAAA,UA8iGrG,CAAC;IA9iGkG9E,EAAE,CAAAqE,YAAA,CA+iG9F,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAAM,MAAA,GA/iG2FtE,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAwE,SAAA,CA2iG9D,CAAC;IA3iG2DxE,EAAE,CAAAyE,UAAA,gBAAAH,MAAA,CAAA6L,cAAA,CAAAC,QA2iG9D,CAAC,SAAA9L,MAAA,CAAA+L,UACrB,CAAC,UAAA/L,MAAA,CAAAgM,aACG,CAAC;EAAA;AAAA;AAAA,MAAA0B,IAAA;AAAA,MAAAC,IAAA;AAAA,MAAAC,IAAA;AAAA,SAAAC,8CAAAnO,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IA7iG2EhE,EAAE,CAAAmE,cAAA,YAy6GjC,CAAC;IAz6G8BnE,EAAE,CAAA8E,SAAA,aA06GA,CAAC;IA16GH9E,EAAE,CAAAkF,MAAA,EA46GnG,CAAC;IA56GgGlF,EAAE,CAAAqE,YAAA,CA46GvF,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAAoO,cAAA,GAAAnO,GAAA,CAAAkC,SAAA;IAAA,MAAA2F,MAAA,GA56GoF9L,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAwE,SAAA,CA06Gd,CAAC;IA16GWxE,EAAE,CAAA2M,WAAA,qBAAAyF,cAAA,CAAA9L,KA06Gd,CAAC;IA16GWtG,EAAE,CAAAwE,SAAA,CA46GnG,CAAC;IA56GgGxE,EAAE,CAAAqI,kBAAA,MAAAyD,MAAA,CAAAuG,cAAA,CAAAD,cAAA,MA46GnG,CAAC;EAAA;AAAA;AAAA,SAAAE,wCAAAtO,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IA56GgGhE,EAAE,CAAAmE,cAAA,YAw6G3D,CAAC;IAx6GwDnE,EAAE,CAAAoE,UAAA,IAAA+N,6CAAA,gBAy6GjC,CAAC;IAz6G8BnS,EAAE,CAAAqE,YAAA,CA66GzF,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAAuO,QAAA,GAAAtO,GAAA,CAAAH,KAAA;IA76GsF9D,EAAE,CAAAwE,SAAA,CAy6GxD,CAAC;IAz6GqDxE,EAAE,CAAAyE,UAAA,YAAA8N,QAy6GxD,CAAC;EAAA;AAAA;AAAA,MAAAC,IAAA;AAAA,SAAAC,uCAAAzO,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAz6GqDhE,EAAE,CAAA8E,SAAA,YAgxHhG,CAAC;EAAA;EAAA,IAAAd,EAAA;IAAA,MAAAM,MAAA,GAhxH6FtE,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,YAAAH,MAAA,CAAAoO,YA8wH7E,CAAC,oBAAApO,MAAA,CAAAqO,eACU,CAAC;EAAA;AAAA;AAAA,SAAAC,uCAAA5O,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IA/wH+DhE,EAAE,CAAAmE,cAAA,YAixH1D,CAAC;IAjxHuDnE,EAAE,CAAAkF,MAAA,EAmxHvG,CAAC;IAnxHoGlF,EAAE,CAAAqE,YAAA,CAmxHjG,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAAM,MAAA,GAnxH8FtE,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAwE,SAAA,CAmxHvG,CAAC;IAnxHoGxE,EAAE,CAAAqI,kBAAA,MAAA/D,MAAA,CAAAqO,eAAA,GAAArO,MAAA,CAAAqO,eAAA,CAAArO,MAAA,CAAAoO,YAAA,IAAApO,MAAA,CAAAuO,sBAAA,CAAAvO,MAAA,CAAAoO,YAAA,MAmxHvG,CAAC;EAAA;AAAA;AAAA,SAAAI,6CAAA9O,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAnxHoGhE,EAAE,CAAA8E,SAAA,aAwyH1F,CAAC;EAAA;EAAA,IAAAd,EAAA;IAAA,MAAA+O,aAAA,GAxyHuF/S,EAAE,CAAAuE,aAAA,GAAA4B,SAAA;IAAA,MAAA7B,MAAA,GAAFtE,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,YAAAsO,aAAA,CAAAC,MAsyHlE,CAAC,oBAAA1O,MAAA,CAAAqO,eACK,CAAC;EAAA;AAAA;AAAA,SAAAM,6CAAAjP,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAvyHyDhE,EAAE,CAAAmE,cAAA,aAyyHrD,CAAC;IAzyHkDnE,EAAE,CAAAkF,MAAA,EA2yHjG,CAAC;IA3yH8FlF,EAAE,CAAAqE,YAAA,CA2yH3F,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAA+O,aAAA,GA3yHwF/S,EAAE,CAAAuE,aAAA,GAAA4B,SAAA;IAAA,MAAA7B,MAAA,GAAFtE,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAwE,SAAA,CA2yHjG,CAAC;IA3yH8FxE,EAAE,CAAAqI,kBAAA,MAAA/D,MAAA,CAAAqO,eAAA,GAAArO,MAAA,CAAAqO,eAAA,CAAAI,aAAA,CAAAjF,KAAA,IAAAxJ,MAAA,CAAAuO,sBAAA,CAAAE,aAAA,CAAAjF,KAAA,MA2yHjG,CAAC;EAAA;AAAA;AAAA,SAAAoF,6CAAAlP,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IA3yH8FhE,EAAE,CAAA8E,SAAA,aAmzH1F,CAAC;EAAA;EAAA,IAAAd,EAAA;IAAA,MAAA+O,aAAA,GAnzHuF/S,EAAE,CAAAuE,aAAA,GAAA4B,SAAA;IAAFnG,EAAE,CAAAyE,UAAA,YAAAsO,aAAA,CAAAI,UAizH9D,CAAC,mBACf,CAAC;EAAA;AAAA;AAAA,SAAAC,6CAAApP,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAlzHyEhE,EAAE,CAAAmE,cAAA,aAozHnD,CAAC;IApzHgDnE,EAAE,CAAAkF,MAAA,EAozHN,CAAC;IApzHGlF,EAAE,CAAAqE,YAAA,CAozHA,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAA+O,aAAA,GApzHH/S,EAAE,CAAAuE,aAAA,GAAA4B,SAAA;IAAFnG,EAAE,CAAAwE,SAAA,CAozHN,CAAC;IApzHGxE,EAAE,CAAAqI,kBAAA,KAAA0K,aAAA,CAAAI,UAAA,CAAAE,cAAA,OAozHN,CAAC;EAAA;AAAA;AAAA,SAAAC,uCAAAtP,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAAqB,GAAA,GApzHGrF,EAAE,CAAAsF,gBAAA;IAAFtF,EAAE,CAAAmE,cAAA,YAgyHlG,CAAC;IAhyH+FnE,EAAE,CAAAuF,UAAA,wBAAAgO,iEAAA;MAAA,MAAAR,aAAA,GAAF/S,EAAE,CAAA0F,aAAA,CAAAL,GAAA,EAAAc,SAAA;MAAA,MAAA7B,MAAA,GAAFtE,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CA6xHlFrB,MAAA,CAAAyB,QAAA,CAAAF,IAAA,CAAAkN,aAAA,CAAAjD,IAA6B,CAAC;IAAA,EAAC,wBAAA0D,iEAAA;MAAA,MAAAT,aAAA,GA7xHiD/S,EAAE,CAAA0F,aAAA,CAAAL,GAAA,EAAAc,SAAA;MAAA,MAAA7B,MAAA,GAAFtE,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CA8xHlFrB,MAAA,CAAA2B,UAAA,CAAAJ,IAAA,CAAAkN,aAAA,CAAAjD,IAA+B,CAAC;IAAA,EAAC,mBAAA2D,4DAAA;MAAA,MAAAV,aAAA,GA9xH+C/S,EAAE,CAAA0F,aAAA,CAAAL,GAAA,EAAAc,SAAA;MAAA,MAAA7B,MAAA,GAAFtE,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CA+xHvFrB,MAAA,CAAAzC,MAAA,CAAAgE,IAAA,CAAAkN,aAAA,CAAAjD,IAA2B,CAAC;IAAA,EAAC;IA/xHwD9P,EAAE,CAAA8E,SAAA,aAiyHtB,CAAC;IAjyHmB9E,EAAE,CAAAoE,UAAA,IAAA0O,4CAAA,iBAwyHhG,CAAC,IAAAG,4CAAA,iBAC0C,CAAC;IAzyHkDjT,EAAE,CAAAmE,cAAA,aA4yHzE,CAAC;IA5yHsEnE,EAAE,CAAAkF,MAAA,EA4yH5C,CAAC;IA5yHyClF,EAAE,CAAAqE,YAAA,CA4yHtC,CAAC;IA5yHmCrE,EAAE,CAAAoE,UAAA,IAAA8O,4CAAA,iBAmzHhG,CAAC,IAAAE,4CAAA,iBAC4C,CAAC;IApzHgDpT,EAAE,CAAAqE,YAAA,CAqzH7F,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAA+O,aAAA,GAAA9O,GAAA,CAAAkC,SAAA;IAAA,MAAA7B,MAAA,GArzH0FtE,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAwE,SAAA,CAiyH7B,CAAC;IAjyH0BxE,EAAE,CAAA2M,WAAA,sBAAAoG,aAAA,CAAAzM,KAiyH7B,CAAC;IAjyH0BtG,EAAE,CAAAwE,SAAA,CAmyH9E,CAAC;IAnyH2ExE,EAAE,CAAAyE,UAAA,SAAAH,MAAA,CAAAoP,UAmyH9E,CAAC;IAnyH2E1T,EAAE,CAAAwE,SAAA,CAyyH1E,CAAC;IAzyHuExE,EAAE,CAAAyE,UAAA,UAAAH,MAAA,CAAAoP,UAyyH1E,CAAC;IAzyHuE1T,EAAE,CAAAwE,SAAA,EA4yH5C,CAAC;IA5yHyCxE,EAAE,CAAAmF,iBAAA,CAAA4N,aAAA,CAAAY,YA4yH5C,CAAC;IA5yHyC3T,EAAE,CAAAwE,SAAA,CA8yH9E,CAAC;IA9yH2ExE,EAAE,CAAAyE,UAAA,SAAAH,MAAA,CAAAoP,UA8yH9E,CAAC;IA9yH2E1T,EAAE,CAAAwE,SAAA,CAozH1E,CAAC;IApzHuExE,EAAE,CAAAyE,UAAA,UAAAH,MAAA,CAAAoP,UAozH1E,CAAC;EAAA;AAAA;AAAA,MAAAE,IAAA;AAAA,MAAAC,IAAA;AAAA,MAAAC,IAAA;AAAA,MAAAC,IAAA,GAAAA,CAAAlQ,EAAA,EAAAmQ,EAAA,MAAAnQ,EAAA,EAAAmQ,EAAA;AAAA,SAAAC,qCAAAjQ,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAAqG,GAAA,GApzHuErK,EAAE,CAAAsF,gBAAA;IAAFtF,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,UAo7JpG,CAAC;IAp7JiGnE,EAAE,CAAAuF,UAAA,+BAAA2O,oEAAAzO,MAAA;MAAFzF,EAAE,CAAA0F,aAAA,CAAA2E,GAAA;MAAA,MAAAE,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CAm7J7E4E,MAAA,CAAA4J,iBAAA,CAAA1O,MAAwB,CAAC;IAAA,EAAC;IAn7JiDzF,EAAE,CAAAqE,YAAA,CAo7J5F,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAAuG,MAAA,GAp7JyFvK,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,WAAA8F,MAAA,CAAAQ,MAw6JlF,CAAC,SAAAR,MAAA,CAAAU,IACL,CAAC,kBAAAV,MAAA,CAAAL,aACiB,CAAC,cAAAK,MAAA,CAAA6J,cACJ,CAAC,cAAA7J,MAAA,CAAA8J,UACL,CAAC,cAAA9J,MAAA,CAAA+J,cACG,CAAC,gBAAA/J,MAAA,CAAAgK,gBACG,CAAC,kBAAAhK,MAAA,CAAAiK,kBACG,CAAC,mBAAAjK,MAAA,CAAAkK,mBACC,CAAC,UAAAlK,MAAA,CAAAmK,UACnB,CAAC,cAAAnK,MAAA,CAAAc,SACE,CAAC;EAAA;AAAA;AAAA,SAAAsJ,qCAAA3Q,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAA4Q,GAAA,GAl7JyE5U,EAAE,CAAAsF,gBAAA;IAAFtF,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,UAm8JpG,CAAC;IAn8JiGnE,EAAE,CAAAuF,UAAA,+BAAAsP,oEAAApP,MAAA;MAAFzF,EAAE,CAAA0F,aAAA,CAAAkP,GAAA;MAAA,MAAArK,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CAk8J7E4E,MAAA,CAAAuK,gBAAA,CAAArP,MAAuB,CAAC;IAAA,EAAC;IAl8JkDzF,EAAE,CAAAqE,YAAA,CAm8J5F,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAAuG,MAAA,GAn8JyFvK,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,WAAA8F,MAAA,CAAAiE,MAw7JlF,CAAC,SAAAjE,MAAA,CAAAU,IACL,CAAC,kBAAAV,MAAA,CAAAL,aACiB,CAAC,cAAAK,MAAA,CAAAwK,cACJ,CAAC,cAAAxK,MAAA,CAAAyK,UACL,CAAC,cAAAzK,MAAA,CAAA0K,cACG,CAAC,kBAAA1K,MAAA,CAAA2K,kBACO,CAAC,mBAAA3K,MAAA,CAAA4K,mBACC,CAAC,UAAA5K,MAAA,CAAA6K,UACnB,CAAC,cAAA7K,MAAA,CAAAc,SACE,CAAC;EAAA;AAAA;AAAA,SAAAgK,qCAAArR,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAj8JyEhE,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,OAq8J3C,CAAC;IAr8JwCnE,EAAE,CAAA8E,SAAA,UAk9J/F,CAAC;IAl9J4F9E,EAAE,CAAAqE,YAAA,CAm9J3F,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAAsR,SAAA,GAAArR,GAAA,CAAAkC,SAAA;IAAA,MAAAoE,MAAA,GAn9JwFvK,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAwE,SAAA,CAw8J9E,CAAC;IAx8J2ExE,EAAE,CAAAyE,UAAA,WAAA8F,MAAA,CAAAQ,MAw8J9E,CAAC,WAAAR,MAAA,CAAAiE,MACD,CAAC,cAAAjE,MAAA,CAAAgL,SACK,CAAC,WAAAhL,MAAA,CAAAxD,MACP,CAAC,SAAAuO,SACH,CAAC,kBAAA/K,MAAA,CAAA9C,aACe,CAAC,cAAA8C,MAAA,CAAAiL,SACT,CAAC,aAAAjL,MAAA,CAAAkL,QACH,CAAC,UAAAlL,MAAA,CAAAmL,KACP,CAAC,eAAAnL,MAAA,CAAAmJ,UACS,CAAC;EAAA;AAAA;AAAA,SAAAiC,8CAAA3R,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAA4R,GAAA,GAj9JmE5V,EAAE,CAAAsF,gBAAA;IAAFtF,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,OAm+J3D,CAAC,WAenC,CAAC;IAl/J0FnE,EAAE,CAAAuF,UAAA,oBAAAsQ,kEAAApQ,MAAA;MAAA,MAAAqQ,SAAA,GAAF9V,EAAE,CAAA0F,aAAA,CAAAkQ,GAAA,EAAAzP,SAAA;MAAA,MAAAoE,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CA++JlF4E,MAAA,CAAAsF,OAAA,CAAApK,MAAA,EAAAqQ,SAAsB,CAAC;IAAA,EAAC,sBAAAC,oEAAAtQ,MAAA;MA/+JwDzF,EAAE,CAAA0F,aAAA,CAAAkQ,GAAA;MAAA,MAAArL,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CAg/JhF4E,MAAA,CAAAyL,UAAA,CAAAvQ,MAAiB,CAAC;IAAA,EAAC,wBAAAwQ,sEAAAxQ,MAAA;MAh/J2DzF,EAAE,CAAA0F,aAAA,CAAAkQ,GAAA;MAAA,MAAArL,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CAi/J9E4E,MAAA,CAAA2L,YAAA,CAAAzQ,MAAmB,CAAC;IAAA,EAAC;IAj/JuDzF,EAAE,CAAAqE,YAAA,CAk/J7F,CAAC,CACG,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAA8R,SAAA,GAAA7R,GAAA,CAAAkC,SAAA;IAAA,MAAAoE,MAAA,GAn/JsFvK,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAwE,SAAA,CAs+J5E,CAAC;IAt+JyExE,EAAE,CAAAyE,UAAA,WAAA8F,MAAA,CAAAQ,MAs+J5E,CAAC,WAAAR,MAAA,CAAAiE,MACD,CAAC,WAAAjE,MAAA,CAAAxD,MACD,CAAC,kBAAAwD,MAAA,CAAA9C,aACa,CAAC,SAAAqO,SACjB,CAAC,cAAAvL,MAAA,CAAAiL,SACO,CAAC,iBAAAjL,MAAA,CAAA4L,eACQ,CAAC,oBAAA5L,MAAA,CAAAsG,eACE,CAAC,oBAAAtG,MAAA,CAAA2G,eACD,CAAC;EAAA;AAAA;AAAA,SAAAkF,qCAAApS,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAAqS,GAAA,GA9+JuDrW,EAAE,CAAAsF,gBAAA;IAAFtF,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,WAq9JtC,CAAC;IAr9JmCnE,EAAE,CAAAuF,UAAA,wBAAA+Q,6DAAA;MAAFtW,EAAE,CAAA0F,aAAA,CAAA2Q,GAAA;MAAA,MAAA9L,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CAq9JpD4E,MAAA,CAAAgM,WAAA,CAAY,CAAC;IAAA,EAAC;IAr9JoCvW,EAAE,CAAAmE,cAAA,WAi+J/F,CAAC;IAj+J4FnE,EAAE,CAAAuF,UAAA,mBAAAiR,wDAAA/Q,MAAA;MAAFzF,EAAE,CAAA0F,aAAA,CAAA2Q,GAAA;MAAA,MAAA9L,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CAg+JrF4E,MAAA,CAAAkM,qBAAA,CAAAhR,MAA4B,CAAC;IAAA,EAAC;IAh+JqDzF,EAAE,CAAAqE,YAAA,CAi+J/F,CAAC;IAj+J4FrE,EAAE,CAAAoE,UAAA,IAAAuR,6CAAA,eAm+J3D,CAAC;IAn+JwD3V,EAAE,CAAAqE,YAAA,CAo/J3F,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAAuG,MAAA,GAp/JwFvK,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAwE,SAAA,CAw9JlF,CAAC;IAx9J+ExE,EAAE,CAAAyE,UAAA,SAAA8F,MAAA,CAAAU,IAw9JlF,CAAC,SAAAV,MAAA,CAAAmM,IACD,CAAC,WAAAnM,MAAA,CAAAQ,MACG,CAAC,WAAAR,MAAA,CAAAiE,MACD,CAAC,YAAAjE,MAAA,CAAAoM,OACC,CAAC,WAAApM,MAAA,CAAAxD,MACH,CAAC,oBAAAwD,MAAA,CAAAsG,eACiB,CAAC,oBAAAtG,MAAA,CAAAqM,qBACK,CAAC;IA/9JmD5W,EAAE,CAAAwE,SAAA,CAm+J7D,CAAC;IAn+J0DxE,EAAE,CAAAyE,UAAA,YAAA8F,MAAA,CAAAoM,OAm+J7D,CAAC;EAAA;AAAA;AAAA,SAAAE,+CAAA7S,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAn+J0DhE,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,OAogK7C,CAAC;IApgK0CnE,EAAE,CAAA8E,SAAA,WAghKjG,CAAC;IAhhK8F9E,EAAE,CAAAqE,YAAA,CAihK7F,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAA8S,SAAA,GAAA7S,GAAA,CAAAkC,SAAA;IAAA,MAAAoE,MAAA,GAjhK0FvK,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAwE,SAAA,CAugKxE,CAAC;IAvgKqExE,EAAE,CAAAyE,UAAA,WAAA8F,MAAA,CAAAwM,cAugKxE,CAAC,WAAAxM,MAAA,CAAAyM,cACD,CAAC,cAAAzM,MAAA,CAAAgL,SACH,CAAC,WAAAhL,MAAA,CAAAxD,MACP,CAAC,SAAA+P,SACH,CAAC,cAAAvM,MAAA,CAAAiL,SACO,CAAC,aAAAjL,MAAA,CAAAkL,QACH,CAAC,UAAAlL,MAAA,CAAAmL,KACP,CAAC,eAAAnL,MAAA,CAAAmJ,UACS,CAAC;EAAA;AAAA;AAAA,SAAAuD,sCAAAjT,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAAkT,GAAA,GA/gKqElX,EAAE,CAAAsF,gBAAA;IAAFtF,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,WAmgKtG,CAAC;IAngKmGnE,EAAE,CAAAuF,UAAA,4BAAA4R,kEAAA1R,MAAA;MAAFzF,EAAE,CAAA0F,aAAA,CAAAwR,GAAA;MAAA,MAAA3M,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CAkgKlF4E,MAAA,CAAA6M,YAAA,CAAA3R,MAAmB,CAAC;IAAA,EAAC;IAlgK2DzF,EAAE,CAAAoE,UAAA,IAAAyS,8CAAA,cAogK7C,CAAC;IApgK0C7W,EAAE,CAAAqE,YAAA,CAkhK/F,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAAuG,MAAA,GAlhK4FvK,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,YAAA8F,MAAA,CAAAoM,OA2/JlF,CAAC,SA3/J+E3W,EAAE,CAAAqX,eAAA,KAAAtD,IAAA,EAAAxJ,MAAA,CAAA+M,aAAA,EAAA/M,MAAA,CAAAW,MAAA,CA4/JrE,CAAC,WAAAX,MAAA,CAAAgN,cACR,CAAC,WAAAhN,MAAA,CAAAiN,MACT,CAAC,iBAAAjN,MAAA,CAAAkN,YACW,CAAC,WAAAlN,MAAA,CAAAmN,MACb,CAAC,cAAAnN,MAAA,CAAAiL,SACK,CAAC;IAjgK2ExV,EAAE,CAAAoI,WAAA,cAAAmC,MAAA,CAAAoN,iBAAA;IAAF3X,EAAE,CAAAwE,SAAA,CAogK/D,CAAC;IApgK4DxE,EAAE,CAAAyE,UAAA,YAAA8F,MAAA,CAAAoM,OAogK/D,CAAC,iBAAApM,MAAA,CAAAqN,OAAe,CAAC;EAAA;AAAA;AAAA,SAAAC,+CAAA7T,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAAqG,GAAA,GApgK4CrK,EAAE,CAAAsF,gBAAA;IAAFtF,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,UAuhLpG,CAAC;IAvhLiGnE,EAAE,CAAAuF,UAAA,+BAAAuS,8EAAArS,MAAA;MAAFzF,EAAE,CAAA0F,aAAA,CAAA2E,GAAA;MAAA,MAAAE,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CAshL7E4E,MAAA,CAAA4J,iBAAA,CAAA1O,MAAwB,CAAC;IAAA,EAAC;IAthLiDzF,EAAE,CAAAqE,YAAA,CAuhL5F,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAAuG,MAAA,GAvhLyFvK,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,WAAA8F,MAAA,CAAAQ,MA2gLlF,CAAC,SAAAR,MAAA,CAAAU,IACL,CAAC,kBAAAV,MAAA,CAAAL,aACiB,CAAC,cAAAK,MAAA,CAAA6J,cACJ,CAAC,cAAA7J,MAAA,CAAA8J,UACL,CAAC,cAAA9J,MAAA,CAAA+J,cACG,CAAC,gBAAA/J,MAAA,CAAAgK,gBACG,CAAC,kBAAAhK,MAAA,CAAAiK,kBACG,CAAC,mBAAAjK,MAAA,CAAAkK,mBACC,CAAC,UAAAlK,MAAA,CAAAmK,UACnB,CAAC,cAAAnK,MAAA,CAAAc,SACE,CAAC;EAAA;AAAA;AAAA,SAAA0M,+CAAA/T,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAA4Q,GAAA,GArhLyE5U,EAAE,CAAAsF,gBAAA;IAAFtF,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,UAsiLpG,CAAC;IAtiLiGnE,EAAE,CAAAuF,UAAA,+BAAAyS,8EAAAvS,MAAA;MAAFzF,EAAE,CAAA0F,aAAA,CAAAkP,GAAA;MAAA,MAAArK,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CAqiL7E4E,MAAA,CAAAuK,gBAAA,CAAArP,MAAuB,CAAC;IAAA,EAAC;IAriLkDzF,EAAE,CAAAqE,YAAA,CAsiL5F,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAAuG,MAAA,GAtiLyFvK,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,WAAA8F,MAAA,CAAAiE,MA2hLlF,CAAC,SAAAjE,MAAA,CAAAU,IACL,CAAC,kBAAAV,MAAA,CAAAL,aACiB,CAAC,cAAAK,MAAA,CAAAwK,cACJ,CAAC,cAAAxK,MAAA,CAAAyK,UACL,CAAC,cAAAzK,MAAA,CAAA0K,cACG,CAAC,kBAAA1K,MAAA,CAAA2K,kBACO,CAAC,mBAAA3K,MAAA,CAAA4K,mBACC,CAAC,UAAA5K,MAAA,CAAA6K,UACnB,CAAC,cAAA7K,MAAA,CAAAc,SACE,CAAC;EAAA;AAAA;AAAA,SAAA4M,+CAAAjU,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IApiLyEhE,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,OAwiL3C,CAAC;IAxiLwCnE,EAAE,CAAA8E,SAAA,UAqjL/F,CAAC;IArjL4F9E,EAAE,CAAAqE,YAAA,CAsjL3F,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAAsR,SAAA,GAAArR,GAAA,CAAAkC,SAAA;IAAA,MAAAoE,MAAA,GAtjLwFvK,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAwE,SAAA,CA2iL9E,CAAC;IA3iL2ExE,EAAE,CAAAyE,UAAA,WAAA8F,MAAA,CAAAQ,MA2iL9E,CAAC,WAAAR,MAAA,CAAAiE,MACD,CAAC,WAAAjE,MAAA,CAAAxD,MACD,CAAC,SAAAuO,SACH,CAAC,cAAA/K,MAAA,CAAAiL,SACO,CAAC,kBAAAjL,MAAA,CAAA9C,aACO,CAAC,aAAA8C,MAAA,CAAAkL,QACX,CAAC,mBACH,CAAC,UAAAlL,MAAA,CAAAmL,KACL,CAAC,eAAAnL,MAAA,CAAAmJ,UACS,CAAC;EAAA;AAAA;AAAA,SAAAwE,wDAAAlU,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAA4R,GAAA,GApjLmE5V,EAAE,CAAAsF,gBAAA;IAAFtF,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,OAukL3D,CAAC,WAgBnC,CAAC;IAvlL0FnE,EAAE,CAAAuF,UAAA,oBAAA4S,4EAAA1S,MAAA;MAAA,MAAAqQ,SAAA,GAAF9V,EAAE,CAAA0F,aAAA,CAAAkQ,GAAA,EAAAzP,SAAA;MAAA,MAAAoE,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CAolLlF4E,MAAA,CAAAsF,OAAA,CAAApK,MAAA,EAAAqQ,SAAsB,CAAC;IAAA,EAAC,sBAAAsC,8EAAA3S,MAAA;MAplLwDzF,EAAE,CAAA0F,aAAA,CAAAkQ,GAAA;MAAA,MAAArL,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CAqlLhF4E,MAAA,CAAAyL,UAAA,CAAAvQ,MAAiB,CAAC;IAAA,EAAC,wBAAA4S,gFAAA5S,MAAA;MArlL2DzF,EAAE,CAAA0F,aAAA,CAAAkQ,GAAA;MAAA,MAAArL,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CAslL9E4E,MAAA,CAAA2L,YAAA,CAAAzQ,MAAmB,CAAC;IAAA,EAAC;IAtlLuDzF,EAAE,CAAAqE,YAAA,CAulL7F,CAAC,CACG,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAA8R,SAAA,GAAA7R,GAAA,CAAAkC,SAAA;IAAA,MAAAoE,MAAA,GAxlLsFvK,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAwE,SAAA,CA0kLlE,CAAC;IA1kL+DxE,EAAE,CAAAyE,UAAA,SAAA8F,MAAA,CAAA+N,UAAA,CAAAC,OA0kLlE,CAAC,WAAAhO,MAAA,CAAAQ,MACX,CAAC,WAAAR,MAAA,CAAAiE,MACD,CAAC,WAAAjE,MAAA,CAAAxD,MACD,CAAC,kBAAAwD,MAAA,CAAA9C,aACa,CAAC,SAAAqO,SACjB,CAAC,cAAAvL,MAAA,CAAAiL,SACO,CAAC,iBAAAjL,MAAA,CAAA4L,eACQ,CAAC,oBAAA5L,MAAA,CAAAsG,eACE,CAAC,oBAAAtG,MAAA,CAAA2G,eACD,CAAC;EAAA;AAAA;AAAA,SAAAsH,+CAAAxU,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAAqS,GAAA,GAnlLuDrW,EAAE,CAAAsF,gBAAA;IAAFtF,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,WAwjLtC,CAAC;IAxjLmCnE,EAAE,CAAAuF,UAAA,wBAAAkT,uEAAA;MAAFzY,EAAE,CAAA0F,aAAA,CAAA2Q,GAAA;MAAA,MAAA9L,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CAwjLpD4E,MAAA,CAAAgM,WAAA,CAAY,CAAC;IAAA,EAAC;IAxjLoCvW,EAAE,CAAAmE,cAAA,WAqkL/F,CAAC;IArkL4FnE,EAAE,CAAAuF,UAAA,mBAAAmT,kEAAAjT,MAAA;MAAFzF,EAAE,CAAA0F,aAAA,CAAA2Q,GAAA;MAAA,MAAA9L,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CAokLrF4E,MAAA,CAAAkM,qBAAA,CAAAhR,MAA4B,CAAC;IAAA,EAAC;IApkLqDzF,EAAE,CAAAqE,YAAA,CAqkL/F,CAAC;IArkL4FrE,EAAE,CAAAoE,UAAA,IAAA8T,uDAAA,gBAukL3D,CAAC;IAvkLwDlY,EAAE,CAAAqE,YAAA,CAylL3F,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAAuG,MAAA,GAzlLwFvK,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAwE,SAAA,CA2jLlF,CAAC;IA3jL+ExE,EAAE,CAAAyE,UAAA,SAAA8F,MAAA,CAAAU,IA2jLlF,CAAC,SAAAV,MAAA,CAAAmM,IACD,CAAC,WAAAnM,MAAA,CAAAQ,MACG,CAAC,WAAAR,MAAA,CAAAiE,MACD,CAAC,YAAAjE,MAAA,CAAAoM,OACC,CAAC,WAAApM,MAAA,CAAAxD,MACH,CAAC,uBACK,CAAC,oBAAAwD,MAAA,CAAAsG,eACW,CAAC,oBAAAtG,MAAA,CAAAqM,qBACK,CAAC;IAnkLmD5W,EAAE,CAAAwE,SAAA,CAukL7D,CAAC;IAvkL0DxE,EAAE,CAAAyE,UAAA,YAAA8F,MAAA,CAAAoM,OAukL7D,CAAC;EAAA;AAAA;AAAA,SAAAgC,yDAAA3U,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAvkL0DhE,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,OAymL7C,CAAC;IAzmL0CnE,EAAE,CAAA8E,SAAA,WAqnLjG,CAAC;IArnL8F9E,EAAE,CAAAqE,YAAA,CAsnL7F,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAA8S,SAAA,GAAA7S,GAAA,CAAAkC,SAAA;IAAA,MAAAoE,MAAA,GAtnL0FvK,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAwE,SAAA,CA4mLxE,CAAC;IA5mLqExE,EAAE,CAAAyE,UAAA,WAAA8F,MAAA,CAAAwM,cA4mLxE,CAAC,WAAAxM,MAAA,CAAAyM,cACD,CAAC,WAAAzM,MAAA,CAAAxD,MACT,CAAC,SAAA+P,SACH,CAAC,cAAAvM,MAAA,CAAAiL,SACO,CAAC,aAAAjL,MAAA,CAAAkL,QACH,CAAC,mBACH,CAAC,UAAAlL,MAAA,CAAAmL,KACL,CAAC,eAAAnL,MAAA,CAAAmJ,UACS,CAAC;EAAA;AAAA;AAAA,SAAAkF,gDAAA5U,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAAkT,GAAA,GApnLqElX,EAAE,CAAAsF,gBAAA;IAAFtF,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,WAwmLtG,CAAC;IAxmLmGnE,EAAE,CAAAuF,UAAA,4BAAAsT,4EAAApT,MAAA;MAAFzF,EAAE,CAAA0F,aAAA,CAAAwR,GAAA;MAAA,MAAA3M,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CAumLlF4E,MAAA,CAAA6M,YAAA,CAAA3R,MAAmB,CAAC;IAAA,EAAC;IAvmL2DzF,EAAE,CAAAoE,UAAA,IAAAuU,wDAAA,cAymL7C,CAAC;IAzmL0C3Y,EAAE,CAAAqE,YAAA,CAunL/F,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAAuG,MAAA,GAvnL4FvK,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,YAAA8F,MAAA,CAAAoM,OAgmLlF,CAAC,SAhmL+E3W,EAAE,CAAAqX,eAAA,KAAAtD,IAAA,EAAAxJ,MAAA,CAAA+M,aAAA,EAAA/M,MAAA,CAAAW,MAAA,CAimLrE,CAAC,WAAAX,MAAA,CAAAgN,cACR,CAAC,WAAAhN,MAAA,CAAAiN,MACT,CAAC,iBAAAjN,MAAA,CAAAkN,YACW,CAAC,WAAAlN,MAAA,CAAAmN,MACb,CAAC,cAAAnN,MAAA,CAAAiL,SACK,CAAC;IAtmL2ExV,EAAE,CAAAoI,WAAA,cAAAmC,MAAA,CAAAoN,iBAAA;IAAF3X,EAAE,CAAAwE,SAAA,CAymL/D,CAAC;IAzmL4DxE,EAAE,CAAAyE,UAAA,YAAA8F,MAAA,CAAAoM,OAymL/D,CAAC,iBAAApM,MAAA,CAAAqN,OAAe,CAAC;EAAA;AAAA;AAAA,MAAAkB,IAAA;AAAA,SAAAC,4CAAA/U,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAAqG,GAAA,GAzmL4CrK,EAAE,CAAAsF,gBAAA;IAAFtF,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,UAynMpG,CAAC;IAznMiGnE,EAAE,CAAAuF,UAAA,+BAAAyT,2EAAAvT,MAAA;MAAFzF,EAAE,CAAA0F,aAAA,CAAA2E,GAAA;MAAA,MAAAE,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CAwnM7E4E,MAAA,CAAA4J,iBAAA,CAAA1O,MAAwB,CAAC;IAAA,EAAC;IAxnMiDzF,EAAE,CAAAqE,YAAA,CAynM5F,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAAuG,MAAA,GAznMyFvK,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,WAAA8F,MAAA,CAAAQ,MA6mMlF,CAAC,SAAAR,MAAA,CAAAU,IACL,CAAC,kBAAAV,MAAA,CAAAL,aACiB,CAAC,cAAAK,MAAA,CAAA6J,cACJ,CAAC,cAAA7J,MAAA,CAAA8J,UACL,CAAC,cAAA9J,MAAA,CAAA+J,cACG,CAAC,gBAAA/J,MAAA,CAAAgK,gBACG,CAAC,kBAAAhK,MAAA,CAAAiK,kBACG,CAAC,mBAAAjK,MAAA,CAAAkK,mBACC,CAAC,UAAAlK,MAAA,CAAAmK,UACnB,CAAC,cAAAnK,MAAA,CAAAc,SACE,CAAC;EAAA;AAAA;AAAA,SAAA4N,4CAAAjV,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAA4Q,GAAA,GAvnMyE5U,EAAE,CAAAsF,gBAAA;IAAFtF,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,UAwoMpG,CAAC;IAxoMiGnE,EAAE,CAAAuF,UAAA,+BAAA2T,2EAAAzT,MAAA;MAAFzF,EAAE,CAAA0F,aAAA,CAAAkP,GAAA;MAAA,MAAArK,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CAuoM7E4E,MAAA,CAAAuK,gBAAA,CAAArP,MAAuB,CAAC;IAAA,EAAC;IAvoMkDzF,EAAE,CAAAqE,YAAA,CAwoM5F,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAAuG,MAAA,GAxoMyFvK,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,WAAA8F,MAAA,CAAAiE,MA6nMlF,CAAC,SAAAjE,MAAA,CAAAU,IACL,CAAC,kBAAAV,MAAA,CAAAL,aACiB,CAAC,cAAAK,MAAA,CAAAwK,cACJ,CAAC,cAAAxK,MAAA,CAAAyK,UACL,CAAC,cAAAzK,MAAA,CAAA0K,cACG,CAAC,kBAAA1K,MAAA,CAAA2K,kBACO,CAAC,mBAAA3K,MAAA,CAAA4K,mBACC,CAAC,UAAA5K,MAAA,CAAA6K,UACnB,CAAC,cAAA7K,MAAA,CAAAc,SACE,CAAC;EAAA;AAAA;AAAA,SAAA8N,4CAAAnV,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAtoMyEhE,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,OA0oM3C,CAAC;IA1oMwCnE,EAAE,CAAA8E,SAAA,UAupM/F,CAAC;IAvpM4F9E,EAAE,CAAAqE,YAAA,CAwpM3F,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAAsR,SAAA,GAAArR,GAAA,CAAAkC,SAAA;IAAA,MAAAoE,MAAA,GAxpMwFvK,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAwE,SAAA,CA6oM9E,CAAC;IA7oM2ExE,EAAE,CAAAyE,UAAA,WAAA8F,MAAA,CAAAQ,MA6oM9E,CAAC,WAAAR,MAAA,CAAAiE,MACD,CAAC,WAAAjE,MAAA,CAAAxD,MACD,CAAC,SAAAuO,SACH,CAAC,cAAA/K,MAAA,CAAAiL,SACO,CAAC,aAAAjL,MAAA,CAAAkL,QACH,CAAC,kBAAAlL,MAAA,CAAA9C,aACS,CAAC,gBAChB,CAAC,UAAA8C,MAAA,CAAAmL,KACF,CAAC,eAAAnL,MAAA,CAAAmJ,UACS,CAAC;EAAA;AAAA;AAAA,SAAA0F,qDAAApV,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAA4R,GAAA,GAtpMmE5V,EAAE,CAAAsF,gBAAA;IAAFtF,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,OAwqMzC,CAAC,WAgBrD,CAAC;IAxrM0FnE,EAAE,CAAAuF,UAAA,oBAAA8T,yEAAA5T,MAAA;MAAA,MAAAqQ,SAAA,GAAF9V,EAAE,CAAA0F,aAAA,CAAAkQ,GAAA,EAAAzP,SAAA;MAAA,MAAAoE,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CAqrMlF4E,MAAA,CAAAsF,OAAA,CAAApK,MAAA,EAAAqQ,SAAsB,CAAC;IAAA,EAAC,sBAAAwD,2EAAA7T,MAAA;MArrMwDzF,EAAE,CAAA0F,aAAA,CAAAkQ,GAAA;MAAA,MAAArL,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CAsrMhF4E,MAAA,CAAAyL,UAAA,CAAAvQ,MAAiB,CAAC;IAAA,EAAC,wBAAA8T,6EAAA9T,MAAA;MAtrM2DzF,EAAE,CAAA0F,aAAA,CAAAkQ,GAAA;MAAA,MAAArL,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CAurM9E4E,MAAA,CAAA2L,YAAA,CAAAzQ,MAAmB,CAAC;IAAA,EAAC;IAvrMuDzF,EAAE,CAAAqE,YAAA,CAwrM7F,CAAC,CACG,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAA8R,SAAA,GAAA7R,GAAA,CAAAkC,SAAA;IAAA,MAAAoE,MAAA,GAzrMsFvK,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAwE,SAAA,CA2qMlE,CAAC;IA3qM+DxE,EAAE,CAAAyE,UAAA,SAAA8F,MAAA,CAAA+N,UAAA,CAAAC,OA2qMlE,CAAC,WAAAhO,MAAA,CAAAQ,MACX,CAAC,WAAAR,MAAA,CAAAiE,MACD,CAAC,WAAAjE,MAAA,CAAAxD,MACD,CAAC,kBAAAwD,MAAA,CAAA9C,aACa,CAAC,SAAAqO,SACjB,CAAC,cAAAvL,MAAA,CAAAiL,SACO,CAAC,iBAAAjL,MAAA,CAAA4L,eACQ,CAAC,oBAAA5L,MAAA,CAAAsG,eACE,CAAC,oBAAAtG,MAAA,CAAA2G,eACD,CAAC;EAAA;AAAA;AAAA,SAAAsI,4CAAAxV,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAAqS,GAAA,GAprMuDrW,EAAE,CAAAsF,gBAAA;IAAFtF,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,WA0pMtC,CAAC;IA1pMmCnE,EAAE,CAAAuF,UAAA,wBAAAkU,oEAAA;MAAFzZ,EAAE,CAAA0F,aAAA,CAAA2Q,GAAA;MAAA,MAAA9L,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CA0pMpD4E,MAAA,CAAAgM,WAAA,CAAY,CAAC;IAAA,EAAC;IA1pMoCvW,EAAE,CAAAmE,cAAA,WAsqM/F,CAAC;IAtqM4FnE,EAAE,CAAAuF,UAAA,mBAAAmU,+DAAAjU,MAAA;MAAFzF,EAAE,CAAA0F,aAAA,CAAA2Q,GAAA;MAAA,MAAA9L,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CAqqMrF4E,MAAA,CAAAkM,qBAAA,CAAAhR,MAA4B,CAAC;IAAA,EAAC;IArqMqDzF,EAAE,CAAAqE,YAAA,CAsqM/F,CAAC;IAtqM4FrE,EAAE,CAAAoE,UAAA,IAAAgV,oDAAA,eAwqMzC,CAAC;IAxqMsCpZ,EAAE,CAAAqE,YAAA,CA0rM3F,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAAuG,MAAA,GA1rMwFvK,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAwE,SAAA,CA6pMlF,CAAC;IA7pM+ExE,EAAE,CAAAyE,UAAA,SAAA8F,MAAA,CAAAU,IA6pMlF,CAAC,SAAAV,MAAA,CAAAmM,IACD,CAAC,WAAAnM,MAAA,CAAAQ,MACG,CAAC,WAAAR,MAAA,CAAAiE,MACD,CAAC,YAAAjE,MAAA,CAAAoM,OACC,CAAC,WAAApM,MAAA,CAAAxD,MACH,CAAC,oBAAAwD,MAAA,CAAAsG,eACiB,CAAC,oBAAAtG,MAAA,CAAAqM,qBACK,CAAC;IApqMmD5W,EAAE,CAAAwE,SAAA,CAwqM3D,CAAC;IAxqMwDxE,EAAE,CAAAyE,UAAA,YAAA8F,MAAA,CAAAoM,OAwqM3D,CAAC,iBAAApM,MAAA,CAAAqN,OAAe,CAAC;EAAA;AAAA;AAAA,SAAA+B,sDAAA3V,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAxqMwChE,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,OA0sM7C,CAAC;IA1sM0CnE,EAAE,CAAA8E,SAAA,WAstMjG,CAAC;IAttM8F9E,EAAE,CAAAqE,YAAA,CAutM7F,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAA8S,SAAA,GAAA7S,GAAA,CAAAkC,SAAA;IAAA,MAAAoE,MAAA,GAvtM0FvK,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAwE,SAAA,CA6sMxE,CAAC;IA7sMqExE,EAAE,CAAAyE,UAAA,WAAA8F,MAAA,CAAAwM,cA6sMxE,CAAC,WAAAxM,MAAA,CAAAyM,cACD,CAAC,WAAAzM,MAAA,CAAAxD,MACT,CAAC,SAAA+P,SACH,CAAC,cAAAvM,MAAA,CAAAiL,SACO,CAAC,aAAAjL,MAAA,CAAAkL,QACH,CAAC,gBACN,CAAC,UAAAlL,MAAA,CAAAmL,KACF,CAAC,eAAAnL,MAAA,CAAAmJ,UACS,CAAC;EAAA;AAAA;AAAA,SAAAkG,6CAAA5V,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAAkT,GAAA,GArtMqElX,EAAE,CAAAsF,gBAAA;IAAFtF,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,WAysMtG,CAAC;IAzsMmGnE,EAAE,CAAAuF,UAAA,4BAAAsU,yEAAApU,MAAA;MAAFzF,EAAE,CAAA0F,aAAA,CAAAwR,GAAA;MAAA,MAAA3M,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CAwsMlF4E,MAAA,CAAA6M,YAAA,CAAA3R,MAAmB,CAAC;IAAA,EAAC;IAxsM2DzF,EAAE,CAAAoE,UAAA,IAAAuV,qDAAA,cA0sM7C,CAAC;IA1sM0C3Z,EAAE,CAAAqE,YAAA,CAwtM/F,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAAuG,MAAA,GAxtM4FvK,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,YAAA8F,MAAA,CAAAoM,OAisMlF,CAAC,SAjsM+E3W,EAAE,CAAAqX,eAAA,KAAAtD,IAAA,EAAAxJ,MAAA,CAAA+M,aAAA,EAAA/M,MAAA,CAAAW,MAAA,CAksMrE,CAAC,WAAAX,MAAA,CAAAgN,cACR,CAAC,WAAAhN,MAAA,CAAAiN,MACT,CAAC,iBAAAjN,MAAA,CAAAkN,YACW,CAAC,WAAAlN,MAAA,CAAAmN,MACb,CAAC,cAAAnN,MAAA,CAAAiL,SACK,CAAC;IAvsM2ExV,EAAE,CAAAoI,WAAA,cAAAmC,MAAA,CAAAoN,iBAAA;IAAF3X,EAAE,CAAAwE,SAAA,CA0sM/D,CAAC;IA1sM4DxE,EAAE,CAAAyE,UAAA,YAAA8F,MAAA,CAAAoM,OA0sM/D,CAAC,iBAAApM,MAAA,CAAAqN,OAAe,CAAC;EAAA;AAAA;AAAA,MAAAkC,IAAA;AAAA,SAAAC,kCAAA/V,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IA1sM4ChE,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,UA+lN3E,CAAC;IA/lNwEnE,EAAE,CAAA8E,SAAA,UAgmNS,CAAC;IAhmNZ9E,EAAE,CAAAqE,YAAA,CAimN9F,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAAM,MAAA,GAjmN2FtE,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAwE,SAAA,CAgmNtC,CAAC;IAhmNmCxE,EAAE,CAAAyE,UAAA,gBAAAH,MAAA,CAAAmH,WAgmNtC,CAAC,SAAAnH,MAAA,CAAA+L,UAAmB,CAAC,UAAA/L,MAAA,CAAAgM,aAAuB,CAAC;EAAA;AAAA;AAAA,MAAA0J,IAAA;AAAA,MAAAC,IAAA;AAAA,SAAAC,mCAAAlW,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAAqG,GAAA,GAhmNTrK,EAAE,CAAAsF,gBAAA;IAAFtF,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,UA++NxG,CAAC;IA/+NqGnE,EAAE,CAAAuF,UAAA,oBAAA4U,uDAAA1U,MAAA;MAAFzF,EAAE,CAAA0F,aAAA,CAAA2E,GAAA;MAAA,MAAAE,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CAg+N5F4E,MAAA,CAAA6P,KAAA,CAAA3U,MAAY,CAAC;IAAA,EAAC,sBAAA4U,yDAAA5U,MAAA;MAh+N4EzF,EAAE,CAAA0F,aAAA,CAAA2E,GAAA;MAAA,MAAAE,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CAq+N1F4E,MAAA,CAAAxE,QAAA,CAAAF,IAAA,CAAAJ,MAAoB,CAAC;IAAA,EAAC,wBAAA6U,2DAAA7U,MAAA;MAr+NkEzF,EAAE,CAAA0F,aAAA,CAAA2E,GAAA;MAAA,MAAAE,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CAs+NxF4E,MAAA,CAAAtE,UAAA,CAAAJ,IAAA,CAAAJ,MAAsB,CAAC;IAAA,EAAC;IAt+N8DzF,EAAE,CAAAqE,YAAA,CA++NhG,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAAuW,MAAA,GAAAtW,GAAA,CAAAkC,SAAA;IAAA,MAAAoE,MAAA,GA/+N6FvK,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,4BAs9N3E,CAAC,UAAA8V,MAAA,CAAApP,KACV,CAAC,WAAAoP,MAAA,CAAArP,MACC,CAAC,MAAAqP,MAAA,CAAA7I,CACX,CAAC,MAAA6I,MAAA,CAAA5I,CACD,CAAC,SAAA4I,MAAA,CAAAjU,KACM,CAAC,UAAAiU,MAAA,CAAAjK,aACQ,CAAC,SAAAiK,MAAA,CAAAzK,IACX,CAAC,gBAAAvF,MAAA,CAAA4F,cAAA,CAAAqK,UACuB,CAAC,eAAAD,MAAA,CAAAE,UACb,CAAC,aAAAlQ,MAAA,CAAAkL,QAET,CAAC,aAAAlL,MAAA,CAAAhE,QAAA,CAAAgU,MAAA,CAAAzK,IAAA,CACS,CAAC,cAAAyK,MAAA,CAAAG,SACL,CAAC,eAAAnQ,MAAA,CAAAmJ,UACH,CAAC,oBAAAnJ,MAAA,CAAAsG,eAIS,CAAC,qBAAAtG,MAAA,CAAAoQ,gBACC,CAAC,gBAAApQ,MAAA,CAAAqQ,WACX,CAAC,iBAAArQ,MAAA,CAAA2G,eAAA,GAAAC,SAAA,GAAAoJ,MAAA,CAAAM,WACkC,CAAC,oBAAAtQ,MAAA,CAAA2G,eAC5B,CAAC,mBAAAqJ,MAAA,CAAAzK,IACT,CAAC,kBAAAvF,MAAA,CAAAuQ,aACG,CAAC;EAAA;AAAA;AAAA,SAAAC,4CAAA/W,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAAgX,GAAA,GA9+NqEhb,EAAE,CAAAsF,gBAAA;IAAFtF,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,UA4/NrG,CAAC;IA5/NkGnE,EAAE,CAAAuF,UAAA,+BAAA0V,2EAAAxV,MAAA;MAAA,MAAAyV,IAAA,GAAFlb,EAAE,CAAA0F,aAAA,CAAAsV,GAAA,EAAA7S,KAAA;MAAA,MAAAoC,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CA2/N/E4E,MAAA,CAAA4Q,qBAAA,CAAAtV,IAAA,CAA2B;QAAAuV,IAAA,EAAA3V,MAAA;QAAA0C,KAAA,EAAA+S;MAAyB,CAAC,CAAC;IAAA,EAAC;IA3/NsBlb,EAAE,CAAAqE,YAAA,CA4/NrG,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAAqX,IAAA,GAAApX,GAAA,CAAAkC,SAAA;IAAA,MAAAoE,MAAA,GA5/NkGvK,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,SAAA4W,IAAA,CAAA3J,CAo/NzF,CAAC,SAAA2J,IAAA,CAAA1J,CACD,CAAC,aAAA0J,IAAA,CAAAlQ,KACO,CAAC,cAAAkQ,IAAA,CAAAnQ,MACC,CAAC,UAAAmQ,IAAA,CAAAC,KACN,CAAC,oBAAA/Q,MAAA,CAAAgR,mBACqB,CAAC,gBAAAhR,MAAA,CAAA4F,cAAA,CAAAqK,UACC,CAAC;EAAA;AAAA;AAAA,SAAAgB,mCAAAxX,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IA1/NyDhE,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,OAg/N5E,CAAC;IAh/NyEnE,EAAE,CAAAoE,UAAA,IAAA2W,2CAAA,cA4/NrG,CAAC;IA5/NkG/a,EAAE,CAAAqE,YAAA,CA6/NjG,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAAuG,MAAA,GA7/N8FvK,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAwE,SAAA,CAm/NjE,CAAC;IAn/N8DxE,EAAE,CAAAyE,UAAA,YAAA8F,MAAA,CAAAkR,iBAm/NjE,CAAC,iBAAAlR,MAAA,CAAAmR,gBAAuC,CAAC;EAAA;AAAA;AAAA,SAAAC,yCAAA3X,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAAqG,GAAA,GAn/NsBrK,EAAE,CAAAsF,gBAAA;IAAFtF,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,UA0yOpG,CAAC;IA1yOiGnE,EAAE,CAAAuF,UAAA,+BAAAqW,wEAAAnW,MAAA;MAAFzF,EAAE,CAAA0F,aAAA,CAAA2E,GAAA;MAAA,MAAAE,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CAyyO7E4E,MAAA,CAAA4J,iBAAA,CAAA1O,MAAwB,CAAC;IAAA,EAAC;IAzyOiDzF,EAAE,CAAAqE,YAAA,CA0yO5F,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAAuG,MAAA,GA1yOyFvK,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,WAAA8F,MAAA,CAAAQ,MA8xOlF,CAAC,SAAAR,MAAA,CAAAU,IACL,CAAC,kBAAAV,MAAA,CAAAL,aACiB,CAAC,cAAAK,MAAA,CAAA6J,cACJ,CAAC,cAAA7J,MAAA,CAAA8J,UACL,CAAC,cAAA9J,MAAA,CAAA+J,cACG,CAAC,gBAAA/J,MAAA,CAAAgK,gBACG,CAAC,kBAAAhK,MAAA,CAAAiK,kBACG,CAAC,mBAAAjK,MAAA,CAAAkK,mBACC,CAAC,UAAAlK,MAAA,CAAAmK,UACnB,CAAC,cAAAnK,MAAA,CAAAc,SACE,CAAC;EAAA;AAAA;AAAA,SAAAwQ,yCAAA7X,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAA4Q,GAAA,GAxyOyE5U,EAAE,CAAAsF,gBAAA;IAAFtF,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,UAyzOpG,CAAC;IAzzOiGnE,EAAE,CAAAuF,UAAA,+BAAAuW,wEAAArW,MAAA;MAAFzF,EAAE,CAAA0F,aAAA,CAAAkP,GAAA;MAAA,MAAArK,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CAwzO7E4E,MAAA,CAAAuK,gBAAA,CAAArP,MAAuB,CAAC;IAAA,EAAC;IAxzOkDzF,EAAE,CAAAqE,YAAA,CAyzO5F,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAAuG,MAAA,GAzzOyFvK,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,WAAA8F,MAAA,CAAAiE,MA8yOlF,CAAC,SAAAjE,MAAA,CAAAU,IACL,CAAC,cAAAV,MAAA,CAAAwK,cACc,CAAC,cAAAxK,MAAA,CAAAyK,UACL,CAAC,cAAAzK,MAAA,CAAA0K,cACG,CAAC,kBAAA1K,MAAA,CAAA2K,kBACO,CAAC,mBAAA3K,MAAA,CAAA4K,mBACC,CAAC,UAAA5K,MAAA,CAAA6K,UACnB,CAAC,gBAAA7K,MAAA,CAAAwR,iBAAA,CAAAC,QACqB,CAAC,cAAAzR,MAAA,CAAAc,SACpB,CAAC;EAAA;AAAA;AAAA,SAAA4Q,2CAAAjY,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAAqG,GAAA,GAvzOyErK,EAAE,CAAAsF,gBAAA;IAAFtF,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,UAutPpG,CAAC;IAvtPiGnE,EAAE,CAAAuF,UAAA,+BAAA2W,0EAAAzW,MAAA;MAAFzF,EAAE,CAAA0F,aAAA,CAAA2E,GAAA;MAAA,MAAAE,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CAstP7E4E,MAAA,CAAA4J,iBAAA,CAAA1O,MAAwB,CAAC;IAAA,EAAC;IAttPiDzF,EAAE,CAAAqE,YAAA,CAutP5F,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAAuG,MAAA,GAvtPyFvK,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,WAAA8F,MAAA,CAAA4R,UA2sP9E,CAAC,SAAA5R,MAAA,CAAAU,IACT,CAAC,kBAAAV,MAAA,CAAAL,aACiB,CAAC,cAAAK,MAAA,CAAA6J,cACJ,CAAC,cAAA7J,MAAA,CAAA8J,UACL,CAAC,cAAA9J,MAAA,CAAA+J,cACG,CAAC,gBAAA/J,MAAA,CAAAgK,gBACG,CAAC,kBAAAhK,MAAA,CAAAiK,kBACG,CAAC,mBAAAjK,MAAA,CAAAkK,mBACC,CAAC,UAAAlK,MAAA,CAAAmK,UACnB,CAAC,cAAAnK,MAAA,CAAAc,SACE,CAAC;EAAA;AAAA;AAAA,SAAA+Q,2CAAApY,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAA4Q,GAAA,GArtPyE5U,EAAE,CAAAsF,gBAAA;IAAFtF,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,UAsuPpG,CAAC;IAtuPiGnE,EAAE,CAAAuF,UAAA,+BAAA8W,0EAAA5W,MAAA;MAAFzF,EAAE,CAAA0F,aAAA,CAAAkP,GAAA;MAAA,MAAArK,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CAquP7E4E,MAAA,CAAAuK,gBAAA,CAAArP,MAAuB,CAAC;IAAA,EAAC;IAruPkDzF,EAAE,CAAAqE,YAAA,CAsuP5F,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAAuG,MAAA,GAtuPyFvK,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,WAAA8F,MAAA,CAAA+R,UA2tP9E,CAAC,SAAA/R,MAAA,CAAAU,IACT,CAAC,cAAAV,MAAA,CAAAwK,cACc,CAAC,cAAAxK,MAAA,CAAAyK,UACL,CAAC,cAAAzK,MAAA,CAAA0K,cACG,CAAC,kBAAA1K,MAAA,CAAA2K,kBACO,CAAC,mBAAA3K,MAAA,CAAA4K,mBACC,CAAC,UAAA5K,MAAA,CAAA6K,UACnB,CAAC,gBAAA7K,MAAA,CAAAwR,iBAAA,CAAAC,QACqB,CAAC,cAAAzR,MAAA,CAAAc,SACpB,CAAC;EAAA;AAAA;AAAA,SAAAkR,oDAAAvY,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAAgX,GAAA,GApuPyEhb,EAAE,CAAAsF,gBAAA;IAAFtF,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,OA6uPlG,CAAC,UAsBE,CAAC;IAnwP4FnE,EAAE,CAAAuF,UAAA,oBAAAiX,wEAAA/W,MAAA;MAAA,MAAAgX,QAAA,GAAFzc,EAAE,CAAA0F,aAAA,CAAAsV,GAAA,EAAA7U,SAAA;MAAA,MAAAoE,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CA+vPpF4E,MAAA,CAAAsF,OAAA,CAAApK,MAAA,EAAAgX,QAAqB,CAAC;IAAA,EAAC,sBAAAC,0EAAAjX,MAAA;MAAA,MAAAgX,QAAA,GA/vP2Dzc,EAAE,CAAA0F,aAAA,CAAAsV,GAAA,EAAA7U,SAAA;MAAA,MAAAoE,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CAgwPlF4E,MAAA,CAAAyL,UAAA,CAAAvQ,MAAA,EAAAgX,QAAwB,CAAC;IAAA,EAAC,wBAAAE,4EAAAlX,MAAA;MAAA,MAAAgX,QAAA,GAhwPsDzc,EAAE,CAAA0F,aAAA,CAAAsV,GAAA,EAAA7U,SAAA;MAAA,MAAAoE,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CAiwPhF4E,MAAA,CAAA2L,YAAA,CAAAzQ,MAAA,EAAAgX,QAA0B,CAAC;IAAA,EAAC,mCAAAG,uFAAAnX,MAAA;MAAA,MAAAoX,QAAA,GAjwPkD7c,EAAE,CAAA0F,aAAA,CAAAsV,GAAA,EAAA7S,KAAA;MAAA,MAAAoC,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CAkwPrE4E,MAAA,CAAAuS,0BAAA,CAAArX,MAAA,EAAAoX,QAAwC,CAAC;IAAA,EAAC;IAlwPyB7c,EAAE,CAAAqE,YAAA,CAmwP/F,CAAC,CACG,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAAyY,QAAA,GAAAxY,GAAA,CAAAkC,SAAA;IAAA,MAAAoE,MAAA,GApwPwFvK,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,4BA2uPrE,CAAC;IA3uPkEzE,EAAE,CAAAoI,WAAA,cAAAmC,MAAA,CAAAwS,cAAA,CAAAN,QAAA;IAAFzc,EAAE,CAAAwE,SAAA,CAgvP1E,CAAC;IAhvPuExE,EAAE,CAAAyE,UAAA,WAAA8F,MAAA,CAAA4R,UAgvP1E,CAAC,kBAAA5R,MAAA,CAAA9C,aACS,CAAC,WAAA8C,MAAA,CAAAyS,UACX,CAAC,WAAAzS,MAAA,CAAAxD,MACL,CAAC,WAAA0V,QAAA,CAAAQ,MACK,CAAC,SAAA1S,MAAA,CAAAU,IACX,CAAC,aAAAV,MAAA,CAAAkL,QACO,CAAC,oBAAAlL,MAAA,CAAAsG,eACa,CAAC,oBAAAtG,MAAA,CAAA2G,eACD,CAAC,eAAAuL,QAAA,CAAA1O,IACX,CAAC,eAAAxD,MAAA,CAAAkQ,UACD,CAAC,eAAAlQ,MAAA,CAAAmJ,UACD,CAAC,kBAAAnJ,MAAA,CAAA2S,aACK,CAAC,wBAAA3S,MAAA,CAAAgR,mBACW,CAAC,kBAAAhR,MAAA,CAAAuQ,aACb,CAAC;EAAA;AAAA;AAAA,SAAAqC,2CAAAnZ,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IA9vP6DhE,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,OAwuP/E,CAAC;IAxuP4EnE,EAAE,CAAAoE,UAAA,IAAAmY,mDAAA,eA6uPlG,CAAC;IA7uP+Fvc,EAAE,CAAAqE,YAAA,CAqwP7F,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAAuG,MAAA,GArwP0FvK,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAwE,SAAA,CA0uPnE,CAAC;IA1uPgExE,EAAE,CAAAyE,UAAA,YAAA8F,MAAA,CAAAoM,OA0uPnE,CAAC,iBAAApM,MAAA,CAAAqN,OAAkC,CAAC;EAAA;AAAA;AAAA,SAAAwF,oDAAApZ,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAAqZ,GAAA,GA1uP6Brd,EAAE,CAAAsF,gBAAA;IAAFtF,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,OA0wPlG,CAAC,UAsBE,CAAC;IAhyP4FnE,EAAE,CAAAuF,UAAA,oBAAA+X,wEAAA7X,MAAA;MAAA,MAAA8X,QAAA,GAAFvd,EAAE,CAAA0F,aAAA,CAAA2X,GAAA,EAAAlX,SAAA;MAAA,MAAAoE,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CA4xPpF4E,MAAA,CAAAsF,OAAA,CAAApK,MAAA,EAAA8X,QAAqB,CAAC;IAAA,EAAC,sBAAAC,0EAAA/X,MAAA;MAAA,MAAA8X,QAAA,GA5xP2Dvd,EAAE,CAAA0F,aAAA,CAAA2X,GAAA,EAAAlX,SAAA;MAAA,MAAAoE,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CA6xPlF4E,MAAA,CAAAyL,UAAA,CAAAvQ,MAAA,EAAA8X,QAAwB,CAAC;IAAA,EAAC,wBAAAE,4EAAAhY,MAAA;MAAA,MAAA8X,QAAA,GA7xPsDvd,EAAE,CAAA0F,aAAA,CAAA2X,GAAA,EAAAlX,SAAA;MAAA,MAAAoE,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CA8xPhF4E,MAAA,CAAA2L,YAAA,CAAAzQ,MAAA,EAAA8X,QAA0B,CAAC;IAAA,EAAC,mCAAAG,uFAAAjY,MAAA;MAAA,MAAAkY,QAAA,GA9xPkD3d,EAAE,CAAA0F,aAAA,CAAA2X,GAAA,EAAAlV,KAAA;MAAA,MAAAoC,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CA+xPrE4E,MAAA,CAAAuS,0BAAA,CAAArX,MAAA,EAAAkY,QAAwC,CAAC;IAAA,EAAC;IA/xPyB3d,EAAE,CAAAqE,YAAA,CAgyP/F,CAAC,CACG,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAAuZ,QAAA,GAAAtZ,GAAA,CAAAkC,SAAA;IAAA,MAAAoE,MAAA,GAjyPwFvK,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAoI,WAAA,cAAAmC,MAAA,CAAAwS,cAAA,CAAAQ,QAAA;IAAFvd,EAAE,CAAAwE,SAAA,CA6wP1E,CAAC;IA7wPuExE,EAAE,CAAAyE,UAAA,WAAA8F,MAAA,CAAA4R,UA6wP1E,CAAC,kBAAA5R,MAAA,CAAA9C,aACS,CAAC,WAAA8C,MAAA,CAAAyS,UACX,CAAC,WAAAzS,MAAA,CAAAxD,MACL,CAAC,WAAAwW,QAAA,CAAAN,MACK,CAAC,SAAA1S,MAAA,CAAAU,IACX,CAAC,aAAAV,MAAA,CAAAkL,QACO,CAAC,oBAAAlL,MAAA,CAAAsG,eACa,CAAC,oBAAAtG,MAAA,CAAA2G,eACD,CAAC,eAAAqM,QAAA,CAAAxP,IACX,CAAC,eAAAxD,MAAA,CAAAkQ,UACD,CAAC,eAAAlQ,MAAA,CAAAmJ,UACD,CAAC,kBAAAnJ,MAAA,CAAA2S,aACK,CAAC,wBAAA3S,MAAA,CAAAgR,mBACW,CAAC,kBAAAhR,MAAA,CAAAuQ,aACb,CAAC;EAAA;AAAA;AAAA,SAAA8C,2CAAA5Z,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IA3xP6DhE,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,OAswPhF,CAAC;IAtwP6EnE,EAAE,CAAAoE,UAAA,IAAAgZ,mDAAA,eA0wPlG,CAAC;IA1wP+Fpd,EAAE,CAAAqE,YAAA,CAkyP7F,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAAuG,MAAA,GAlyP0FvK,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAwE,SAAA,CAwwPnE,CAAC;IAxwPgExE,EAAE,CAAAyE,UAAA,YAAA8F,MAAA,CAAAoM,OAwwPnE,CAAC,iBAAApM,MAAA,CAAAqN,OAAkC,CAAC;EAAA;AAAA;AAAA,SAAAiG,mDAAA7Z,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAAqG,GAAA,GAxwP6BrK,EAAE,CAAAsF,gBAAA;IAAFtF,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,UA4rQpG,CAAC;IA5rQiGnE,EAAE,CAAAuF,UAAA,+BAAAuY,kFAAArY,MAAA;MAAFzF,EAAE,CAAA0F,aAAA,CAAA2E,GAAA;MAAA,MAAAE,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CA2rQ7E4E,MAAA,CAAA4J,iBAAA,CAAA1O,MAAwB,CAAC;IAAA,EAAC;IA3rQiDzF,EAAE,CAAAqE,YAAA,CA4rQ5F,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAAuG,MAAA,GA5rQyFvK,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,WAAA8F,MAAA,CAAAQ,MAgrQlF,CAAC,SAAAR,MAAA,CAAAU,IACL,CAAC,kBAAAV,MAAA,CAAAL,aACiB,CAAC,cAAAK,MAAA,CAAA6J,cACJ,CAAC,cAAA7J,MAAA,CAAA8J,UACL,CAAC,cAAA9J,MAAA,CAAA+J,cACG,CAAC,gBAAA/J,MAAA,CAAAgK,gBACG,CAAC,kBAAAhK,MAAA,CAAAiK,kBACG,CAAC,mBAAAjK,MAAA,CAAAkK,mBACC,CAAC,UAAAlK,MAAA,CAAAmK,UACnB,CAAC,cAAAnK,MAAA,CAAAc,SACE,CAAC;EAAA;AAAA;AAAA,SAAA0S,mDAAA/Z,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAA4Q,GAAA,GA1rQyE5U,EAAE,CAAAsF,gBAAA;IAAFtF,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,UA0sQpG,CAAC;IA1sQiGnE,EAAE,CAAAuF,UAAA,+BAAAyY,kFAAAvY,MAAA;MAAFzF,EAAE,CAAA0F,aAAA,CAAAkP,GAAA;MAAA,MAAArK,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CAysQ7E4E,MAAA,CAAAuK,gBAAA,CAAArP,MAAuB,CAAC;IAAA,EAAC;IAzsQkDzF,EAAE,CAAAqE,YAAA,CA0sQ5F,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAAuG,MAAA,GA1sQyFvK,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,WAAA8F,MAAA,CAAAiE,MAgsQlF,CAAC,SAAAjE,MAAA,CAAAU,IACL,CAAC,cAAAV,MAAA,CAAAwK,cACc,CAAC,cAAAxK,MAAA,CAAAyK,UACL,CAAC,cAAAzK,MAAA,CAAA0K,cACG,CAAC,kBAAA1K,MAAA,CAAA2K,kBACO,CAAC,mBAAA3K,MAAA,CAAA4K,mBACC,CAAC,UAAA5K,MAAA,CAAA6K,UACnB,CAAC,cAAA7K,MAAA,CAAAc,SACE,CAAC;EAAA;AAAA;AAAA,SAAA4S,4DAAAja,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAAgX,GAAA,GAxsQyEhb,EAAE,CAAAsF,gBAAA;IAAFtF,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,OAgtQlG,CAAC,UAmBE,CAAC;IAnuQ4FnE,EAAE,CAAAuF,UAAA,oBAAA2Y,gFAAAzY,MAAA;MAAA,MAAAgX,QAAA,GAAFzc,EAAE,CAAA0F,aAAA,CAAAsV,GAAA,EAAA7U,SAAA;MAAA,MAAAoE,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CA+tQpF4E,MAAA,CAAAsF,OAAA,CAAApK,MAAA,EAAAgX,QAAqB,CAAC;IAAA,EAAC,sBAAA0B,kFAAA1Y,MAAA;MAAA,MAAAgX,QAAA,GA/tQ2Dzc,EAAE,CAAA0F,aAAA,CAAAsV,GAAA,EAAA7U,SAAA;MAAA,MAAAoE,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CAguQlF4E,MAAA,CAAAyL,UAAA,CAAAvQ,MAAA,EAAAgX,QAAwB,CAAC;IAAA,EAAC,wBAAA2B,oFAAA3Y,MAAA;MAAA,MAAAgX,QAAA,GAhuQsDzc,EAAE,CAAA0F,aAAA,CAAAsV,GAAA,EAAA7U,SAAA;MAAA,MAAAoE,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CAiuQhF4E,MAAA,CAAA2L,YAAA,CAAAzQ,MAAA,EAAAgX,QAA0B,CAAC;IAAA,EAAC;IAjuQkDzc,EAAE,CAAAqE,YAAA,CAmuQ/F,CAAC,CACG,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAAyY,QAAA,GAAAxY,GAAA,CAAAkC,SAAA;IAAA,MAAAoE,MAAA,GApuQwFvK,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,4BA8sQrE,CAAC;IA9sQkEzE,EAAE,CAAAoI,WAAA,cAAAmC,MAAA,CAAAwS,cAAA,CAAAN,QAAA;IAAFzc,EAAE,CAAAwE,SAAA,CAmtQ/D,CAAC;IAntQ4DxE,EAAE,CAAAyE,UAAA,SAAA8F,MAAA,CAAA8T,YAAA,CAAAC,UAmtQ/D,CAAC,WAAA/T,MAAA,CAAAQ,MAChB,CAAC,WAAAR,MAAA,CAAAiE,MACD,CAAC,kBAAAjE,MAAA,CAAA9C,aACa,CAAC,WAAA8C,MAAA,CAAAxD,MACf,CAAC,WAAA0V,QAAA,CAAAQ,MACK,CAAC,SAAA1S,MAAA,CAAAU,IACX,CAAC,aAAAV,MAAA,CAAAkL,QACO,CAAC,oBAAAlL,MAAA,CAAAsG,eACa,CAAC,oBAAAtG,MAAA,CAAA2G,eACD,CAAC,eAAAuL,QAAA,CAAA1O,IACX,CAAC,eAAAxD,MAAA,CAAAmJ,UACD,CAAC,kBAAAnJ,MAAA,CAAAuQ,aAIK,CAAC;EAAA;AAAA;AAAA,SAAAyD,mDAAAva,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAluQ6DhE,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,OA2sQ/E,CAAC;IA3sQ4EnE,EAAE,CAAAoE,UAAA,IAAA6Z,2DAAA,eAgtQlG,CAAC;IAhtQ+Fje,EAAE,CAAAqE,YAAA,CAquQ7F,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAAuG,MAAA,GAruQ0FvK,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAwE,SAAA,CA6sQnE,CAAC;IA7sQgExE,EAAE,CAAAyE,UAAA,YAAA8F,MAAA,CAAAoM,OA6sQnE,CAAC,iBAAApM,MAAA,CAAAqN,OAAe,CAAC;EAAA;AAAA;AAAA,SAAA4G,4DAAAxa,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAA4R,GAAA,GA7sQgD5V,EAAE,CAAAsF,gBAAA;IAAFtF,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,OAuuQH,CAAC,UAmB7F,CAAC;IA1vQ4FnE,EAAE,CAAAuF,UAAA,oBAAAkZ,gFAAAhZ,MAAA;MAAA,MAAAiZ,QAAA,GAAF1e,EAAE,CAAA0F,aAAA,CAAAkQ,GAAA,EAAAzP,SAAA;MAAA,MAAAoE,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CAsvQpF4E,MAAA,CAAAsF,OAAA,CAAApK,MAAA,EAAAiZ,QAAqB,CAAC;IAAA,EAAC,sBAAAC,kFAAAlZ,MAAA;MAAA,MAAAiZ,QAAA,GAtvQ2D1e,EAAE,CAAA0F,aAAA,CAAAkQ,GAAA,EAAAzP,SAAA;MAAA,MAAAoE,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CAuvQlF4E,MAAA,CAAAyL,UAAA,CAAAvQ,MAAA,EAAAiZ,QAAwB,CAAC;IAAA,EAAC,wBAAAE,oFAAAnZ,MAAA;MAAA,MAAAiZ,QAAA,GAvvQsD1e,EAAE,CAAA0F,aAAA,CAAAkQ,GAAA,EAAAzP,SAAA;MAAA,MAAAoE,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CAwvQhF4E,MAAA,CAAA2L,YAAA,CAAAzQ,MAAA,EAAAiZ,QAA0B,CAAC;IAAA,EAAC;IAxvQkD1e,EAAE,CAAAqE,YAAA,CA0vQ/F,CAAC,CACG,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAA0a,QAAA,GAAAza,GAAA,CAAAkC,SAAA;IAAA,MAAAoE,MAAA,GA3vQwFvK,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAoI,WAAA,cAAAmC,MAAA,CAAAwS,cAAA,CAAA2B,QAAA;IAAF1e,EAAE,CAAAwE,SAAA,CA0uQ/D,CAAC;IA1uQ4DxE,EAAE,CAAAyE,UAAA,SAAA8F,MAAA,CAAA8T,YAAA,CAAAC,UA0uQ/D,CAAC,WAAA/T,MAAA,CAAAQ,MAChB,CAAC,WAAAR,MAAA,CAAAiE,MACD,CAAC,kBAAAjE,MAAA,CAAA9C,aACa,CAAC,WAAA8C,MAAA,CAAAxD,MACf,CAAC,WAAA2X,QAAA,CAAAzB,MACK,CAAC,SAAA1S,MAAA,CAAAU,IACX,CAAC,aAAAV,MAAA,CAAAkL,QACO,CAAC,oBAAAlL,MAAA,CAAAsG,eACa,CAAC,oBAAAtG,MAAA,CAAA2G,eACD,CAAC,eAAAwN,QAAA,CAAA3Q,IACX,CAAC,eAAAxD,MAAA,CAAAmJ,UACD,CAAC,kBAAAnJ,MAAA,CAAAuQ,aAIK,CAAC;EAAA;AAAA;AAAA,SAAA+D,mDAAA7a,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAzvQ6DhE,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,OAsuQhF,CAAC;IAtuQ6EnE,EAAE,CAAAoE,UAAA,IAAAoa,2DAAA,eAuuQH,CAAC;IAvuQAxe,EAAE,CAAAqE,YAAA,CA4vQ7F,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAAuG,MAAA,GA5vQ0FvK,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAwE,SAAA,CAuuQ9D,CAAC;IAvuQ2DxE,EAAE,CAAAyE,UAAA,YAAA8F,MAAA,CAAAoM,OAuuQ9D,CAAC,iBAAApM,MAAA,CAAAqN,OAAe,CAAC;EAAA;AAAA;AAAA,SAAAkH,gDAAA9a,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAAqG,GAAA,GAvuQ2CrK,EAAE,CAAAsF,gBAAA;IAAFtF,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,UAoqRpG,CAAC;IApqRiGnE,EAAE,CAAAuF,UAAA,+BAAAwZ,+EAAAtZ,MAAA;MAAFzF,EAAE,CAAA0F,aAAA,CAAA2E,GAAA;MAAA,MAAAE,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CAmqR7E4E,MAAA,CAAA4J,iBAAA,CAAA1O,MAAwB,CAAC;IAAA,EAAC;IAnqRiDzF,EAAE,CAAAqE,YAAA,CAoqR5F,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAAuG,MAAA,GApqRyFvK,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,WAAA8F,MAAA,CAAAQ,MAwpRlF,CAAC,SAAAR,MAAA,CAAAU,IACL,CAAC,kBAAAV,MAAA,CAAAL,aACiB,CAAC,cAAAK,MAAA,CAAA6J,cACJ,CAAC,cAAA7J,MAAA,CAAA8J,UACL,CAAC,cAAA9J,MAAA,CAAA+J,cACG,CAAC,gBAAA/J,MAAA,CAAAgK,gBACG,CAAC,kBAAAhK,MAAA,CAAAiK,kBACG,CAAC,mBAAAjK,MAAA,CAAAkK,mBACC,CAAC,UAAAlK,MAAA,CAAAmK,UACnB,CAAC,cAAAnK,MAAA,CAAAc,SACE,CAAC;EAAA;AAAA;AAAA,SAAA2T,gDAAAhb,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAA4Q,GAAA,GAlqRyE5U,EAAE,CAAAsF,gBAAA;IAAFtF,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,UAmrRpG,CAAC;IAnrRiGnE,EAAE,CAAAuF,UAAA,+BAAA0Z,+EAAAxZ,MAAA;MAAFzF,EAAE,CAAA0F,aAAA,CAAAkP,GAAA;MAAA,MAAArK,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CAkrR7E4E,MAAA,CAAAuK,gBAAA,CAAArP,MAAuB,CAAC;IAAA,EAAC;IAlrRkDzF,EAAE,CAAAqE,YAAA,CAmrR5F,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAAuG,MAAA,GAnrRyFvK,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,WAAA8F,MAAA,CAAAiE,MAwqRlF,CAAC,SAAAjE,MAAA,CAAAU,IACL,CAAC,cAAAV,MAAA,CAAAwK,cACc,CAAC,cAAAxK,MAAA,CAAAyK,UACL,CAAC,cAAAzK,MAAA,CAAA0K,cACG,CAAC,kBAAA1K,MAAA,CAAA2K,kBACO,CAAC,mBAAA3K,MAAA,CAAA4K,mBACC,CAAC,UAAA5K,MAAA,CAAA6K,UACnB,CAAC,gBAAA7K,MAAA,CAAAwR,iBAAA,CAAAC,QACqB,CAAC,cAAAzR,MAAA,CAAAc,SACpB,CAAC;EAAA;AAAA;AAAA,SAAA6T,yDAAAlb,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAAgX,GAAA,GAjrRyEhb,EAAE,CAAAsF,gBAAA;IAAFtF,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,OAyrRlG,CAAC,UAsBE,CAAC;IA/sR4FnE,EAAE,CAAAuF,UAAA,oBAAA4Z,6EAAA1Z,MAAA;MAAA,MAAAgX,QAAA,GAAFzc,EAAE,CAAA0F,aAAA,CAAAsV,GAAA,EAAA7U,SAAA;MAAA,MAAAoE,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CA2sRpF4E,MAAA,CAAAsF,OAAA,CAAApK,MAAA,EAAAgX,QAAqB,CAAC;IAAA,EAAC,sBAAA2C,+EAAA3Z,MAAA;MAAA,MAAAgX,QAAA,GA3sR2Dzc,EAAE,CAAA0F,aAAA,CAAAsV,GAAA,EAAA7U,SAAA;MAAA,MAAAoE,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CA4sRlF4E,MAAA,CAAAyL,UAAA,CAAAvQ,MAAA,EAAAgX,QAAwB,CAAC;IAAA,EAAC,wBAAA4C,iFAAA5Z,MAAA;MAAA,MAAAgX,QAAA,GA5sRsDzc,EAAE,CAAA0F,aAAA,CAAAsV,GAAA,EAAA7U,SAAA;MAAA,MAAAoE,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CA6sRhF4E,MAAA,CAAA2L,YAAA,CAAAzQ,MAAA,EAAAgX,QAA0B,CAAC;IAAA,EAAC,mCAAA6C,4FAAA7Z,MAAA;MAAA,MAAAoX,QAAA,GA7sRkD7c,EAAE,CAAA0F,aAAA,CAAAsV,GAAA,EAAA7S,KAAA;MAAA,MAAAoC,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CA8sRrE4E,MAAA,CAAAuS,0BAAA,CAAArX,MAAA,EAAAoX,QAAwC,CAAC;IAAA,EAAC;IA9sRyB7c,EAAE,CAAAqE,YAAA,CA+sR/F,CAAC,CACG,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAAyY,QAAA,GAAAxY,GAAA,CAAAkC,SAAA;IAAA,MAAAoE,MAAA,GAhtRwFvK,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,4BAurRrE,CAAC;IAvrRkEzE,EAAE,CAAAoI,WAAA,cAAAmC,MAAA,CAAAwS,cAAA,CAAAN,QAAA;IAAFzc,EAAE,CAAAwE,SAAA,CA4rRlE,CAAC;IA5rR+DxE,EAAE,CAAAyE,UAAA,SAAA8F,MAAA,CAAA8T,YAAA,CAAA9F,OA4rRlE,CAAC,WAAAhO,MAAA,CAAAQ,MACb,CAAC,WAAAR,MAAA,CAAAiE,MACD,CAAC,WAAAjE,MAAA,CAAAxD,MACD,CAAC,WAAA0V,QAAA,CAAAQ,MACK,CAAC,kBAAA1S,MAAA,CAAA9C,aACO,CAAC,SAAA8C,MAAA,CAAAU,IACnB,CAAC,aAAAV,MAAA,CAAAkL,QACO,CAAC,oBAAAlL,MAAA,CAAAsG,eACa,CAAC,oBAAAtG,MAAA,CAAA2G,eACD,CAAC,eAAAuL,QAAA,CAAA1O,IACX,CAAC,eAAAxD,MAAA,CAAAmJ,UACD,CAAC,kBAAAnJ,MAAA,CAAA2S,aACK,CAAC,wBAAA3S,MAAA,CAAAgR,mBACW,CAAC,kBAAAhR,MAAA,CAAAuQ,aACb,CAAC;EAAA;AAAA;AAAA,SAAAyE,gDAAAvb,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IA1sR6DhE,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,OAorR/E,CAAC;IAprR4EnE,EAAE,CAAAoE,UAAA,IAAA8a,wDAAA,eAyrRlG,CAAC;IAzrR+Flf,EAAE,CAAAqE,YAAA,CAitR7F,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAAuG,MAAA,GAjtR0FvK,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAwE,SAAA,CAsrRnE,CAAC;IAtrRgExE,EAAE,CAAAyE,UAAA,YAAA8F,MAAA,CAAAoM,OAsrRnE,CAAC,iBAAApM,MAAA,CAAAqN,OAAkC,CAAC;EAAA;AAAA;AAAA,SAAA4H,yDAAAxb,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAAqZ,GAAA,GAtrR6Brd,EAAE,CAAAsF,gBAAA;IAAFtF,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,OAstRlG,CAAC,UAsBE,CAAC;IA5uR4FnE,EAAE,CAAAuF,UAAA,oBAAAka,6EAAAha,MAAA;MAAA,MAAA8X,QAAA,GAAFvd,EAAE,CAAA0F,aAAA,CAAA2X,GAAA,EAAAlX,SAAA;MAAA,MAAAoE,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CAwuRpF4E,MAAA,CAAAsF,OAAA,CAAApK,MAAA,EAAA8X,QAAqB,CAAC;IAAA,EAAC,sBAAAmC,+EAAAja,MAAA;MAAA,MAAA8X,QAAA,GAxuR2Dvd,EAAE,CAAA0F,aAAA,CAAA2X,GAAA,EAAAlX,SAAA;MAAA,MAAAoE,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CAyuRlF4E,MAAA,CAAAyL,UAAA,CAAAvQ,MAAA,EAAA8X,QAAwB,CAAC;IAAA,EAAC,wBAAAoC,iFAAAla,MAAA;MAAA,MAAA8X,QAAA,GAzuRsDvd,EAAE,CAAA0F,aAAA,CAAA2X,GAAA,EAAAlX,SAAA;MAAA,MAAAoE,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CA0uRhF4E,MAAA,CAAA2L,YAAA,CAAAzQ,MAAA,EAAA8X,QAA0B,CAAC;IAAA,EAAC,mCAAAqC,4FAAAna,MAAA;MAAA,MAAAkY,QAAA,GA1uRkD3d,EAAE,CAAA0F,aAAA,CAAA2X,GAAA,EAAAlV,KAAA;MAAA,MAAAoC,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CA2uRrE4E,MAAA,CAAAuS,0BAAA,CAAArX,MAAA,EAAAkY,QAAwC,CAAC;IAAA,EAAC;IA3uRyB3d,EAAE,CAAAqE,YAAA,CA4uR/F,CAAC,CACG,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAAuZ,QAAA,GAAAtZ,GAAA,CAAAkC,SAAA;IAAA,MAAAoE,MAAA,GA7uRwFvK,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAoI,WAAA,cAAAmC,MAAA,CAAAwS,cAAA,CAAAQ,QAAA;IAAFvd,EAAE,CAAAwE,SAAA,CAytRlE,CAAC;IAztR+DxE,EAAE,CAAAyE,UAAA,SAAA8F,MAAA,CAAA8T,YAAA,CAAA9F,OAytRlE,CAAC,WAAAhO,MAAA,CAAAQ,MACb,CAAC,WAAAR,MAAA,CAAAiE,MACD,CAAC,WAAAjE,MAAA,CAAAxD,MACD,CAAC,WAAAwW,QAAA,CAAAN,MACK,CAAC,kBAAA1S,MAAA,CAAA9C,aACO,CAAC,SAAA8C,MAAA,CAAAU,IACnB,CAAC,aAAAV,MAAA,CAAAkL,QACO,CAAC,oBAAAlL,MAAA,CAAAsG,eACa,CAAC,oBAAAtG,MAAA,CAAA2G,eACD,CAAC,eAAAqM,QAAA,CAAAxP,IACX,CAAC,eAAAxD,MAAA,CAAAmJ,UACD,CAAC,kBAAAnJ,MAAA,CAAA2S,aACK,CAAC,wBAAA3S,MAAA,CAAAgR,mBACW,CAAC,kBAAAhR,MAAA,CAAAuQ,aACb,CAAC;EAAA;AAAA;AAAA,SAAA+E,gDAAA7b,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAvuR6DhE,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,OAktRhF,CAAC;IAltR6EnE,EAAE,CAAAoE,UAAA,IAAAob,wDAAA,eAstRlG,CAAC;IAttR+Fxf,EAAE,CAAAqE,YAAA,CA8uR7F,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAAuG,MAAA,GA9uR0FvK,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAwE,SAAA,CAotRnE,CAAC;IAptRgExE,EAAE,CAAAyE,UAAA,YAAA8F,MAAA,CAAAoM,OAotRnE,CAAC,iBAAApM,MAAA,CAAAqN,OAAkC,CAAC;EAAA;AAAA;AAAA,MAAAkI,IAAA;AAAA,SAAAC,mDAAA/b,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAAqG,GAAA,GAptR6BrK,EAAE,CAAAsF,gBAAA;IAAFtF,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,UAipStG,CAAC;IAjpSmGnE,EAAE,CAAAuF,UAAA,oBAAAya,uEAAAva,MAAA;MAAFzF,EAAE,CAAA0F,aAAA,CAAA2E,GAAA;MAAA,MAAAE,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CAqoS1F4E,MAAA,CAAAsF,OAAA,CAAApK,MAAc,CAAC;IAAA,EAAC,sBAAAwa,yEAAAxa,MAAA;MAroSwEzF,EAAE,CAAA0F,aAAA,CAAA2E,GAAA;MAAA,MAAAE,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CAsoSxF4E,MAAA,CAAAxE,QAAA,CAAAF,IAAA,CAAAJ,MAAoB,CAAC;IAAA,EAAC,wBAAAya,2EAAAza,MAAA;MAtoSgEzF,EAAE,CAAA0F,aAAA,CAAA2E,GAAA;MAAA,MAAAE,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CAuoStF4E,MAAA,CAAAtE,UAAA,CAAAJ,IAAA,CAAAJ,MAAsB,CAAC;IAAA,EAAC;IAvoS4DzF,EAAE,CAAAqE,YAAA,CAipS9F,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAAuW,MAAA,GAAAtW,GAAA,CAAAkC,SAAA;IAAA,MAAAoE,MAAA,GAjpS2FvK,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,4BAunSzE,CAAC,gBAAA8F,MAAA,CAAAmJ,UACH,CAAC,UAAA6G,MAAA,CAAApP,KACR,CAAC,WAAAoP,MAAA,CAAArP,MACC,CAAC,MAAAqP,MAAA,CAAA7I,CACX,CAAC,MAAA6I,MAAA,CAAA5I,CACD,CAAC,SAAA4I,MAAA,CAAAjU,KACM,CAAC,UAAAiU,MAAA,CAAAjK,aACQ,CAAC,SAAAiK,MAAA,CAAAzK,IACX,CAAC,gBAAAvF,MAAA,CAAA4F,cAAA,CAAAC,QACqB,CAAC,eAAAmK,MAAA,CAAAE,UACX,CAAC,aAAAlQ,MAAA,CAAAkL,QACT,CAAC,cAAA8E,MAAA,CAAAG,SACK,CAAC,aAAAnQ,MAAA,CAAAhE,QAAA,CAAAgU,MAAA,CAAAzK,IAAA,CACG,CAAC,oBAAAvF,MAAA,CAAAsG,eAKG,CAAC,qBAAAtG,MAAA,CAAAoQ,gBACC,CAAC,gBAAApQ,MAAA,CAAAqQ,WACX,CAAC,iBAAArQ,MAAA,CAAA2G,eAAA,GAAAC,SAAA,GAAAoJ,MAAA,CAAAM,WACkC,CAAC,oBAAAtQ,MAAA,CAAA2G,eAC5B,CAAC,mBAAAqJ,MAAA,CAAAzK,IACT,CAAC,kBAAAvF,MAAA,CAAAuQ,aACG,CAAC,eAAAvQ,MAAA,CAAAmJ,UACP,CAAC;EAAA;AAAA;AAAA,SAAAyM,0CAAAnc,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAhpSyEhE,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,OAmnSnF,CAAC;IAnnSgFnE,EAAE,CAAAoE,UAAA,IAAA2b,kDAAA,eAipStG,CAAC;IAjpSmG/f,EAAE,CAAAqE,YAAA,CAkpSjG,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAAuG,MAAA,GAlpS8FvK,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAwE,SAAA,CAsnS5E,CAAC;IAtnSyExE,EAAE,CAAAyE,UAAA,YAAA8F,MAAA,CAAA6V,IAsnS5E,CAAC,iBAAA7V,MAAA,CAAAqN,OAAe,CAAC;EAAA;AAAA;AAAA,SAAAyI,mDAAArc,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAAgX,GAAA,GAtnSyDhb,EAAE,CAAAsF,gBAAA;IAAFtF,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,UA+qStG,CAAC;IA/qSmGnE,EAAE,CAAAuF,UAAA,oBAAA+a,uEAAA7a,MAAA;MAAFzF,EAAE,CAAA0F,aAAA,CAAAsV,GAAA;MAAA,MAAAzQ,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CAmqS1F4E,MAAA,CAAAsF,OAAA,CAAApK,MAAc,CAAC;IAAA,EAAC,sBAAA8a,yEAAA9a,MAAA;MAnqSwEzF,EAAE,CAAA0F,aAAA,CAAAsV,GAAA;MAAA,MAAAzQ,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CAoqSxF4E,MAAA,CAAAxE,QAAA,CAAAF,IAAA,CAAAJ,MAAoB,CAAC;IAAA,EAAC,wBAAA+a,2EAAA/a,MAAA;MApqSgEzF,EAAE,CAAA0F,aAAA,CAAAsV,GAAA;MAAA,MAAAzQ,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CAqqStF4E,MAAA,CAAAtE,UAAA,CAAAJ,IAAA,CAAAJ,MAAsB,CAAC;IAAA,EAAC;IArqS4DzF,EAAE,CAAAqE,YAAA,CA+qS9F,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAAyc,MAAA,GAAAxc,GAAA,CAAAkC,SAAA;IAAA,MAAAoE,MAAA,GA/qS2FvK,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,UAAAgc,MAAA,CAAAtV,KAupSlF,CAAC,WAAAsV,MAAA,CAAAvV,MACC,CAAC,MAAAuV,MAAA,CAAA/O,CACX,CAAC,MAAA+O,MAAA,CAAA9O,CACD,CAAC,SAAA8O,MAAA,CAAAna,KACM,CAAC,UAAAma,MAAA,CAAAnQ,aACQ,CAAC,SAAAmQ,MAAA,CAAA3Q,IACX,CAAC,gBAAAvF,MAAA,CAAA4F,cAAA,CAAAC,QACqB,CAAC,eAAAqQ,MAAA,CAAAhG,UACX,CAAC,aAAAlQ,MAAA,CAAAkL,QACT,CAAC,cAAAgL,MAAA,CAAA/F,SACK,CAAC,aAAAnQ,MAAA,CAAAhE,QAAA,CAAAka,MAAA,CAAA3Q,IAAA,CACG,CAAC,oBAAAvF,MAAA,CAAAsG,eAKG,CAAC,qBAAAtG,MAAA,CAAAoQ,gBACC,CAAC,gBAAApQ,MAAA,CAAAqQ,WACX,CAAC,iBAAArQ,MAAA,CAAA2G,eAAA,GAAAC,SAAA,GAAAsP,MAAA,CAAA5F,WACkC,CAAC,oBAAAtQ,MAAA,CAAA2G,eAC5B,CAAC,mBAAAuP,MAAA,CAAA3Q,IACT,CAAC,kBAAAvF,MAAA,CAAAuQ,aACG,CAAC,eAAAvQ,MAAA,CAAAmJ,UACP,CAAC;EAAA;AAAA;AAAA,SAAAgN,0CAAA1c,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IA9qSyEhE,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,OAmpSpF,CAAC;IAnpSiFnE,EAAE,CAAAoE,UAAA,IAAAic,kDAAA,eA+qStG,CAAC;IA/qSmGrgB,EAAE,CAAAqE,YAAA,CAgrSjG,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAAuG,MAAA,GAhrS8FvK,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAwE,SAAA,CAspS5E,CAAC;IAtpSyExE,EAAE,CAAAyE,UAAA,YAAA8F,MAAA,CAAA6V,IAspS5E,CAAC,iBAAA7V,MAAA,CAAAqN,OAAe,CAAC;EAAA;AAAA;AAAA,SAAA+I,mDAAA3c,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAA4R,GAAA,GAtpSyD5V,EAAE,CAAAsF,gBAAA;IAAFtF,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,UA6rSrG,CAAC;IA7rSkGnE,EAAE,CAAAuF,UAAA,+BAAAqb,kFAAAnb,MAAA;MAAA,MAAAob,IAAA,GAAF7gB,EAAE,CAAA0F,aAAA,CAAAkQ,GAAA,EAAAzN,KAAA;MAAA,MAAAoC,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CA4rS/E4E,MAAA,CAAAuW,sBAAA,CAAAjb,IAAA,CAA4B;QAAAuV,IAAA,EAAA3V,MAAA;QAAA0C,KAAA,EAAA0Y;MAAyB,CAAC,CAAC;IAAA,EAAC;IA5rSqB7gB,EAAE,CAAAqE,YAAA,CA6rSrG,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAA+c,IAAA,GAAA9c,GAAA,CAAAkC,SAAA;IAAA,MAAAoE,MAAA,GA7rSkGvK,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,SAAAsc,IAAA,CAAArP,CAqrSzF,CAAC,SAAAqP,IAAA,CAAApP,CACD,CAAC,aAAAoP,IAAA,CAAA5V,KACO,CAAC,cAAA4V,IAAA,CAAA7V,MACC,CAAC,UAAA6V,IAAA,CAAAzF,KACN,CAAC,oBAAA/Q,MAAA,CAAAgR,mBACqB,CAAC,gBAAAhR,MAAA,CAAA4F,cAAA,CAAAC,QACD,CAAC;EAAA;AAAA;AAAA,SAAA4Q,0CAAAhd,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IA3rS2DhE,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,OAirS5E,CAAC;IAjrSyEnE,EAAE,CAAAoE,UAAA,IAAAuc,kDAAA,cA6rSrG,CAAC;IA7rSkG3gB,EAAE,CAAAqE,YAAA,CA8rSjG,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAAuG,MAAA,GA9rS8FvK,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAwE,SAAA,CAorSjE,CAAC;IAprS8DxE,EAAE,CAAAyE,UAAA,YAAA8F,MAAA,CAAAkR,iBAorSjE,CAAC,iBAAAlR,MAAA,CAAAmR,gBAAuC,CAAC;EAAA;AAAA;AAAA,SAAAuF,uCAAAjd,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAAqG,GAAA,GAprSsBrK,EAAE,CAAAsF,gBAAA;IAAFtF,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,UAyhTpG,CAAC;IAzhTiGnE,EAAE,CAAAuF,UAAA,+BAAA2b,sEAAAzb,MAAA;MAAFzF,EAAE,CAAA0F,aAAA,CAAA2E,GAAA;MAAA,MAAAE,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CAwhT7E4E,MAAA,CAAA4J,iBAAA,CAAA1O,MAAwB,CAAC;IAAA,EAAC;IAxhTiDzF,EAAE,CAAAqE,YAAA,CAyhT5F,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAAuG,MAAA,GAzhTyFvK,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,WAAA8F,MAAA,CAAAQ,MA4gTlF,CAAC,SAAAR,MAAA,CAAAU,IACL,CAAC,kBAAAV,MAAA,CAAAL,aACiB,CAAC,cAAAK,MAAA,CAAA6J,cACJ,CAAC,cAAA7J,MAAA,CAAA8J,UACL,CAAC,cAAA9J,MAAA,CAAA+J,cACG,CAAC,gBAAA/J,MAAA,CAAAgK,gBACG,CAAC,kBAAAhK,MAAA,CAAAiK,kBACG,CAAC,mBAAAjK,MAAA,CAAAkK,mBACC,CAAC,UAAAlK,MAAA,CAAAmK,UACnB,CAAC,gBAAAnK,MAAA,CAAA4W,kBAAA,CAAAnF,QACsB,CAAC,cAAAzR,MAAA,CAAAc,SACrB,CAAC;EAAA;AAAA;AAAA,SAAA+V,uCAAApd,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAA4Q,GAAA,GAvhTyE5U,EAAE,CAAAsF,gBAAA;IAAFtF,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,UAwiTpG,CAAC;IAxiTiGnE,EAAE,CAAAuF,UAAA,+BAAA8b,sEAAA5b,MAAA;MAAFzF,EAAE,CAAA0F,aAAA,CAAAkP,GAAA;MAAA,MAAArK,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CAuiT7E4E,MAAA,CAAAuK,gBAAA,CAAArP,MAAuB,CAAC;IAAA,EAAC;IAviTkDzF,EAAE,CAAAqE,YAAA,CAwiT5F,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAAuG,MAAA,GAxiTyFvK,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,WAAA8F,MAAA,CAAAiE,MA6hTlF,CAAC,SAAAjE,MAAA,CAAAU,IACL,CAAC,kBAAAV,MAAA,CAAAL,aACiB,CAAC,cAAAK,MAAA,CAAAwK,cACJ,CAAC,cAAAxK,MAAA,CAAAyK,UACL,CAAC,cAAAzK,MAAA,CAAA0K,cACG,CAAC,kBAAA1K,MAAA,CAAA2K,kBACO,CAAC,mBAAA3K,MAAA,CAAA4K,mBACC,CAAC,UAAA5K,MAAA,CAAA6K,UACnB,CAAC,cAAA7K,MAAA,CAAAc,SACE,CAAC;EAAA;AAAA;AAAA,SAAAiW,yCAAAtd,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAAqG,GAAA,GAtiTyErK,EAAE,CAAAsF,gBAAA;IAAFtF,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,UA28TpG,CAAC;IA38TiGnE,EAAE,CAAAuF,UAAA,+BAAAgc,wEAAA9b,MAAA;MAAFzF,EAAE,CAAA0F,aAAA,CAAA2E,GAAA;MAAA,MAAAE,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CA08T7E4E,MAAA,CAAA4J,iBAAA,CAAA1O,MAAwB,CAAC;IAAA,EAAC;IA18TiDzF,EAAE,CAAAqE,YAAA,CA28T5F,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAAuG,MAAA,GA38TyFvK,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,WAAA8F,MAAA,CAAA+R,UA+7T9E,CAAC,SAAA/R,MAAA,CAAAU,IACT,CAAC,cAAAV,MAAA,CAAA6J,cACc,CAAC,cAAA7J,MAAA,CAAA8J,UACL,CAAC,cAAA9J,MAAA,CAAA+J,cACG,CAAC,gBAAA/J,MAAA,CAAAgK,gBACG,CAAC,kBAAAhK,MAAA,CAAAiK,kBACG,CAAC,mBAAAjK,MAAA,CAAAkK,mBACC,CAAC,UAAAlK,MAAA,CAAAmK,UACnB,CAAC,gBAAAnK,MAAA,CAAA4W,kBAAA,CAAAnF,QACsB,CAAC,cAAAzR,MAAA,CAAAc,SACrB,CAAC;EAAA;AAAA;AAAA,SAAAmW,yCAAAxd,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAA4Q,GAAA,GAz8TyE5U,EAAE,CAAAsF,gBAAA;IAAFtF,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,UA09TpG,CAAC;IA19TiGnE,EAAE,CAAAuF,UAAA,+BAAAkc,wEAAAhc,MAAA;MAAFzF,EAAE,CAAA0F,aAAA,CAAAkP,GAAA;MAAA,MAAArK,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CAy9T7E4E,MAAA,CAAAuK,gBAAA,CAAArP,MAAuB,CAAC;IAAA,EAAC;IAz9TkDzF,EAAE,CAAAqE,YAAA,CA09T5F,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAAuG,MAAA,GA19TyFvK,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,WAAA8F,MAAA,CAAA4R,UA+8T9E,CAAC,SAAA5R,MAAA,CAAAU,IACT,CAAC,kBAAAV,MAAA,CAAAL,aACiB,CAAC,cAAAK,MAAA,CAAAwK,cACJ,CAAC,cAAAxK,MAAA,CAAAyK,UACL,CAAC,cAAAzK,MAAA,CAAA0K,cACG,CAAC,kBAAA1K,MAAA,CAAA2K,kBACO,CAAC,mBAAA3K,MAAA,CAAA4K,mBACC,CAAC,UAAA5K,MAAA,CAAA6K,UACnB,CAAC,cAAA7K,MAAA,CAAAc,SACE,CAAC;EAAA;AAAA;AAAA,SAAAqW,kDAAA1d,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAAgX,GAAA,GAx9TyEhb,EAAE,CAAAsF,gBAAA;IAAFtF,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,UAo/TjG,CAAC;IAp/T8FnE,EAAE,CAAAuF,UAAA,oBAAAoc,sEAAAlc,MAAA;MAAA,MAAAgX,QAAA,GAAFzc,EAAE,CAAA0F,aAAA,CAAAsV,GAAA,EAAA7U,SAAA;MAAA,MAAAoE,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CAg/TtF4E,MAAA,CAAAsF,OAAA,CAAApK,MAAA,EAAAgX,QAAqB,CAAC;IAAA,EAAC,sBAAAmF,wEAAAnc,MAAA;MAAA,MAAAgX,QAAA,GAh/T6Dzc,EAAE,CAAA0F,aAAA,CAAAsV,GAAA,EAAA7U,SAAA;MAAA,MAAAoE,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CAi/TpF4E,MAAA,CAAAyL,UAAA,CAAAvQ,MAAA,EAAAgX,QAAwB,CAAC;IAAA,EAAC,wBAAAoF,0EAAApc,MAAA;MAAA,MAAAgX,QAAA,GAj/TwDzc,EAAE,CAAA0F,aAAA,CAAAsV,GAAA,EAAA7U,SAAA;MAAA,MAAAoE,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CAk/TlF4E,MAAA,CAAA2L,YAAA,CAAAzQ,MAAA,EAAAgX,QAA0B,CAAC;IAAA,EAAC,oCAAAqF,sFAAArc,MAAA;MAAA,MAAAoX,QAAA,GAl/ToD7c,EAAE,CAAA0F,aAAA,CAAAsV,GAAA,EAAA7S,KAAA;MAAA,MAAAoC,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CAm/TtE4E,MAAA,CAAAwX,2BAAA,CAAAtc,MAAA,EAAAoX,QAAyC,CAAC;IAAA,EAAC;IAn/TyB7c,EAAE,CAAAqE,YAAA,CAo/TjG,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAAyY,QAAA,GAAAxY,GAAA,CAAAkC,SAAA;IAAA,MAAAoE,MAAA,GAp/T8FvK,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,4BA+9TrE,CAAC,kBAAA8F,MAAA,CAAA9C,aAEE,CAAC,WAAA8C,MAAA,CAAAyS,UACX,CAAC,WAAAzS,MAAA,CAAA4R,UACD,CAAC,WAAA5R,MAAA,CAAAxD,MACL,CAAC,WAAA0V,QAAA,CAAAQ,MACK,CAAC,SAAA1S,MAAA,CAAAU,IACX,CAAC,aAAAV,MAAA,CAAAkL,QACO,CAAC,oBAAAlL,MAAA,CAAAsG,eACa,CAAC,oBAAAtG,MAAA,CAAA2G,eACD,CAAC,kBAAA3G,MAAA,CAAA2S,aACL,CAAC,wBAAA3S,MAAA,CAAAgR,mBACW,CAAC,eAAAkB,QAAA,CAAA1O,IACnB,CAAC,eAAAxD,MAAA,CAAAkQ,UACD,CAAC,eAAAlQ,MAAA,CAAAmJ,UACD,CAAC,kBAAAnJ,MAAA,CAAAuQ,aACK,CAAC;IA/+T+D9a,EAAE,CAAAoI,WAAA,cAAAmC,MAAA,CAAAwS,cAAA,CAAAN,QAAA;EAAA;AAAA;AAAA,SAAAuF,yCAAAhe,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAFhE,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,OA29T/E,CAAC;IA39T4EnE,EAAE,CAAAoE,UAAA,IAAAsd,iDAAA,eAo/TjG,CAAC;IAp/T8F1hB,EAAE,CAAAqE,YAAA,CAq/T7F,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAAuG,MAAA,GAr/T0FvK,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAwE,SAAA,CA89TnE,CAAC;IA99TgExE,EAAE,CAAAyE,UAAA,YAAA8F,MAAA,CAAAoM,OA89TnE,CAAC,iBAAApM,MAAA,CAAAqN,OAAkC,CAAC;EAAA;AAAA;AAAA,SAAAqK,kDAAAje,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAAqZ,GAAA,GA99T6Brd,EAAE,CAAAsF,gBAAA;IAAFtF,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,UA+gUnG,CAAC;IA/gUgGnE,EAAE,CAAAuF,UAAA,oBAAA2c,sEAAAzc,MAAA;MAAA,MAAA8X,QAAA,GAAFvd,EAAE,CAAA0F,aAAA,CAAA2X,GAAA,EAAAlX,SAAA;MAAA,MAAAoE,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CA2gUxF4E,MAAA,CAAAsF,OAAA,CAAApK,MAAA,EAAA8X,QAAqB,CAAC;IAAA,EAAC,sBAAA4E,wEAAA1c,MAAA;MAAA,MAAA8X,QAAA,GA3gU+Dvd,EAAE,CAAA0F,aAAA,CAAA2X,GAAA,EAAAlX,SAAA;MAAA,MAAAoE,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CA4gUtF4E,MAAA,CAAAyL,UAAA,CAAAvQ,MAAA,EAAA8X,QAAwB,CAAC;IAAA,EAAC,wBAAA6E,0EAAA3c,MAAA;MAAA,MAAA8X,QAAA,GA5gU0Dvd,EAAE,CAAA0F,aAAA,CAAA2X,GAAA,EAAAlX,SAAA;MAAA,MAAAoE,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CA6gUpF4E,MAAA,CAAA2L,YAAA,CAAAzQ,MAAA,EAAA8X,QAA0B,CAAC;IAAA,EAAC,oCAAA8E,sFAAA5c,MAAA;MAAA,MAAAkY,QAAA,GA7gUsD3d,EAAE,CAAA0F,aAAA,CAAA2X,GAAA,EAAAlV,KAAA;MAAA,MAAAoC,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CA8gUxE4E,MAAA,CAAAwX,2BAAA,CAAAtc,MAAA,EAAAkY,QAAyC,CAAC;IAAA,EAAC;IA9gU2B3d,EAAE,CAAAqE,YAAA,CA+gUnG,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAAuZ,QAAA,GAAAtZ,GAAA,CAAAkC,SAAA;IAAA,MAAAoE,MAAA,GA/gUgGvK,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,kBAAA8F,MAAA,CAAA9C,aA4/TpE,CAAC,WAAA8C,MAAA,CAAAyS,UACX,CAAC,WAAAzS,MAAA,CAAA4R,UACD,CAAC,WAAA5R,MAAA,CAAAxD,MACL,CAAC,WAAAwW,QAAA,CAAAN,MACK,CAAC,SAAA1S,MAAA,CAAAU,IACX,CAAC,aAAAV,MAAA,CAAAkL,QACO,CAAC,oBAAAlL,MAAA,CAAAsG,eACa,CAAC,oBAAAtG,MAAA,CAAA2G,eACD,CAAC,kBAAA3G,MAAA,CAAA2S,aACL,CAAC,wBAAA3S,MAAA,CAAAgR,mBACW,CAAC,eAAAgC,QAAA,CAAAxP,IACnB,CAAC,eAAAxD,MAAA,CAAAkQ,UACD,CAAC,eAAAlQ,MAAA,CAAAmJ,UACD,CAAC,kBAAAnJ,MAAA,CAAAuQ,aACK,CAAC;IA1gUiE9a,EAAE,CAAAoI,WAAA,cAAAmC,MAAA,CAAAwS,cAAA,CAAAQ,QAAA;EAAA;AAAA;AAAA,SAAA+E,yCAAAte,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAFhE,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,OAu/TlF,CAAC;IAv/T+EnE,EAAE,CAAAoE,UAAA,IAAA6d,iDAAA,eA+gUnG,CAAC;IA/gUgGjiB,EAAE,CAAAqE,YAAA,CAghU/F,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAAuG,MAAA,GAhhU4FvK,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAwE,SAAA,CA0/TrE,CAAC;IA1/TkExE,EAAE,CAAAyE,UAAA,YAAA8F,MAAA,CAAAoM,OA0/TrE,CAAC,iBAAApM,MAAA,CAAAqN,OAAkC,CAAC;EAAA;AAAA;AAAA,SAAA2K,iDAAAve,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAAqG,GAAA,GA1/T+BrK,EAAE,CAAAsF,gBAAA;IAAFtF,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,UAm6UpG,CAAC;IAn6UiGnE,EAAE,CAAAuF,UAAA,+BAAAid,gFAAA/c,MAAA;MAAFzF,EAAE,CAAA0F,aAAA,CAAA2E,GAAA;MAAA,MAAAE,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CAk6U7E4E,MAAA,CAAA4J,iBAAA,CAAA1O,MAAwB,CAAC;IAAA,EAAC;IAl6UiDzF,EAAE,CAAAqE,YAAA,CAm6U5F,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAAuG,MAAA,GAn6UyFvK,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,WAAA8F,MAAA,CAAAQ,MAw5UlF,CAAC,SAAAR,MAAA,CAAAU,IACL,CAAC,cAAAV,MAAA,CAAA6J,cACc,CAAC,cAAA7J,MAAA,CAAA8J,UACL,CAAC,cAAA9J,MAAA,CAAA+J,cACG,CAAC,gBAAA/J,MAAA,CAAAgK,gBACG,CAAC,kBAAAhK,MAAA,CAAAiK,kBACG,CAAC,mBAAAjK,MAAA,CAAAkK,mBACC,CAAC,UAAAlK,MAAA,CAAAmK,UACnB,CAAC,cAAAnK,MAAA,CAAAc,SACE,CAAC;EAAA;AAAA;AAAA,SAAAoX,iDAAAze,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAA4Q,GAAA,GAj6UyE5U,EAAE,CAAAsF,gBAAA;IAAFtF,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,UAk7UpG,CAAC;IAl7UiGnE,EAAE,CAAAuF,UAAA,+BAAAmd,gFAAAjd,MAAA;MAAFzF,EAAE,CAAA0F,aAAA,CAAAkP,GAAA;MAAA,MAAArK,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CAi7U7E4E,MAAA,CAAAuK,gBAAA,CAAArP,MAAuB,CAAC;IAAA,EAAC;IAj7UkDzF,EAAE,CAAAqE,YAAA,CAk7U5F,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAAuG,MAAA,GAl7UyFvK,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,WAAA8F,MAAA,CAAAiE,MAu6UlF,CAAC,SAAAjE,MAAA,CAAAU,IACL,CAAC,kBAAAV,MAAA,CAAAL,aACiB,CAAC,cAAAK,MAAA,CAAAwK,cACJ,CAAC,cAAAxK,MAAA,CAAAyK,UACL,CAAC,cAAAzK,MAAA,CAAA0K,cACG,CAAC,kBAAA1K,MAAA,CAAA2K,kBACO,CAAC,mBAAA3K,MAAA,CAAA4K,mBACC,CAAC,UAAA5K,MAAA,CAAA6K,UACnB,CAAC,cAAA7K,MAAA,CAAAc,SACE,CAAC;EAAA;AAAA;AAAA,SAAAsX,0DAAA3e,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAAgX,GAAA,GAh7UyEhb,EAAE,CAAAsF,gBAAA;IAAFtF,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,OAw7UlG,CAAC,UAmBE,CAAC;IA38U4FnE,EAAE,CAAAuF,UAAA,oBAAAqd,8EAAAnd,MAAA;MAAA,MAAAgX,QAAA,GAAFzc,EAAE,CAAA0F,aAAA,CAAAsV,GAAA,EAAA7U,SAAA;MAAA,MAAAoE,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CAw8UpF4E,MAAA,CAAAsF,OAAA,CAAApK,MAAA,EAAAgX,QAAqB,CAAC;IAAA,EAAC,sBAAAoG,gFAAApd,MAAA;MAAA,MAAAgX,QAAA,GAx8U2Dzc,EAAE,CAAA0F,aAAA,CAAAsV,GAAA,EAAA7U,SAAA;MAAA,MAAAoE,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CAy8UlF4E,MAAA,CAAAyL,UAAA,CAAAvQ,MAAA,EAAAgX,QAAwB,CAAC;IAAA,EAAC,wBAAAqG,kFAAArd,MAAA;MAAA,MAAAgX,QAAA,GAz8UsDzc,EAAE,CAAA0F,aAAA,CAAAsV,GAAA,EAAA7U,SAAA;MAAA,MAAAoE,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CA08UhF4E,MAAA,CAAA2L,YAAA,CAAAzQ,MAAA,EAAAgX,QAA0B,CAAC;IAAA,EAAC;IA18UkDzc,EAAE,CAAAqE,YAAA,CA28U/F,CAAC,CACG,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAAyY,QAAA,GAAAxY,GAAA,CAAAkC,SAAA;IAAA,MAAAoE,MAAA,GA58UwFvK,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,4BAs7UrE,CAAC;IAt7UkEzE,EAAE,CAAAoI,WAAA,cAAAmC,MAAA,CAAAwS,cAAA,CAAAN,QAAA;IAAFzc,EAAE,CAAAwE,SAAA,CA27U/D,CAAC;IA37U4DxE,EAAE,CAAAyE,UAAA,SAAA8F,MAAA,CAAA8T,YAAA,CAAAC,UA27U/D,CAAC,WAAA/T,MAAA,CAAAQ,MAChB,CAAC,WAAAR,MAAA,CAAAiE,MACD,CAAC,kBAAAjE,MAAA,CAAA9C,aACa,CAAC,WAAA8C,MAAA,CAAAxD,MACf,CAAC,WAAA0V,QAAA,CAAAQ,MACK,CAAC,SAAA1S,MAAA,CAAAU,IACX,CAAC,aAAAV,MAAA,CAAAkL,QACO,CAAC,oBAAAlL,MAAA,CAAAsG,eACa,CAAC,oBAAAtG,MAAA,CAAA2G,eACD,CAAC,eAAAuL,QAAA,CAAA1O,IACX,CAAC,eAAAxD,MAAA,CAAAmJ,UACD,CAAC,kBAAAnJ,MAAA,CAAAuQ,aACK,CAAC;EAAA;AAAA;AAAA,SAAAiI,iDAAA/e,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAv8U6DhE,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,OAm7U/E,CAAC;IAn7U4EnE,EAAE,CAAAoE,UAAA,IAAAue,yDAAA,eAw7UlG,CAAC;IAx7U+F3iB,EAAE,CAAAqE,YAAA,CA68U7F,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAAuG,MAAA,GA78U0FvK,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAwE,SAAA,CAq7UnE,CAAC;IAr7UgExE,EAAE,CAAAyE,UAAA,YAAA8F,MAAA,CAAAoM,OAq7UnE,CAAC,iBAAApM,MAAA,CAAAqN,OAAe,CAAC;EAAA;AAAA;AAAA,SAAAoL,0DAAAhf,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAA4R,GAAA,GAr7UgD5V,EAAE,CAAAsF,gBAAA;IAAFtF,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,OA+8UH,CAAC,UAmB7F,CAAC;IAl+U4FnE,EAAE,CAAAuF,UAAA,oBAAA0d,8EAAAxd,MAAA;MAAA,MAAAiZ,QAAA,GAAF1e,EAAE,CAAA0F,aAAA,CAAAkQ,GAAA,EAAAzP,SAAA;MAAA,MAAAoE,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CA+9UpF4E,MAAA,CAAAsF,OAAA,CAAApK,MAAA,EAAAiZ,QAAqB,CAAC;IAAA,EAAC,sBAAAwE,gFAAAzd,MAAA;MAAA,MAAAiZ,QAAA,GA/9U2D1e,EAAE,CAAA0F,aAAA,CAAAkQ,GAAA,EAAAzP,SAAA;MAAA,MAAAoE,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CAg+UlF4E,MAAA,CAAAyL,UAAA,CAAAvQ,MAAA,EAAAiZ,QAAwB,CAAC;IAAA,EAAC,wBAAAyE,kFAAA1d,MAAA;MAAA,MAAAiZ,QAAA,GAh+UsD1e,EAAE,CAAA0F,aAAA,CAAAkQ,GAAA,EAAAzP,SAAA;MAAA,MAAAoE,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CAi+UhF4E,MAAA,CAAA2L,YAAA,CAAAzQ,MAAA,EAAAiZ,QAA0B,CAAC;IAAA,EAAC;IAj+UkD1e,EAAE,CAAAqE,YAAA,CAk+U/F,CAAC,CACG,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAA0a,QAAA,GAAAza,GAAA,CAAAkC,SAAA;IAAA,MAAAoE,MAAA,GAn+UwFvK,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAoI,WAAA,cAAAmC,MAAA,CAAAwS,cAAA,CAAA2B,QAAA;IAAF1e,EAAE,CAAAwE,SAAA,CAk9U/D,CAAC;IAl9U4DxE,EAAE,CAAAyE,UAAA,SAAA8F,MAAA,CAAA8T,YAAA,CAAAC,UAk9U/D,CAAC,WAAA/T,MAAA,CAAAQ,MAChB,CAAC,WAAAR,MAAA,CAAAiE,MACD,CAAC,kBAAAjE,MAAA,CAAA9C,aACa,CAAC,WAAA8C,MAAA,CAAAxD,MACf,CAAC,WAAA2X,QAAA,CAAAzB,MACK,CAAC,SAAA1S,MAAA,CAAAU,IACX,CAAC,aAAAV,MAAA,CAAAkL,QACO,CAAC,oBAAAlL,MAAA,CAAAsG,eACa,CAAC,oBAAAtG,MAAA,CAAA2G,eACD,CAAC,eAAAwN,QAAA,CAAA3Q,IACX,CAAC,eAAAxD,MAAA,CAAAmJ,UACD,CAAC,kBAAAnJ,MAAA,CAAAuQ,aACK,CAAC;EAAA;AAAA;AAAA,SAAAsI,iDAAApf,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IA99U6DhE,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,OA88UhF,CAAC;IA98U6EnE,EAAE,CAAAoE,UAAA,IAAA4e,yDAAA,eA+8UH,CAAC;IA/8UAhjB,EAAE,CAAAqE,YAAA,CAo+U7F,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAAuG,MAAA,GAp+U0FvK,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAwE,SAAA,CA+8U9D,CAAC;IA/8U2DxE,EAAE,CAAAyE,UAAA,YAAA8F,MAAA,CAAAoM,OA+8U9D,CAAC,iBAAApM,MAAA,CAAAqN,OAAe,CAAC;EAAA;AAAA;AAAA,SAAAyL,8CAAArf,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAAqG,GAAA,GA/8U2CrK,EAAE,CAAAsF,gBAAA;IAAFtF,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,UA+4VpG,CAAC;IA/4ViGnE,EAAE,CAAAuF,UAAA,+BAAA+d,6EAAA7d,MAAA;MAAFzF,EAAE,CAAA0F,aAAA,CAAA2E,GAAA;MAAA,MAAAE,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CA84V7E4E,MAAA,CAAA4J,iBAAA,CAAA1O,MAAwB,CAAC;IAAA,EAAC;IA94ViDzF,EAAE,CAAAqE,YAAA,CA+4V5F,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAAuG,MAAA,GA/4VyFvK,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,WAAA8F,MAAA,CAAAQ,MAm4VlF,CAAC,SAAAR,MAAA,CAAAU,IACL,CAAC,cAAAV,MAAA,CAAA6J,cACc,CAAC,cAAA7J,MAAA,CAAA8J,UACL,CAAC,cAAA9J,MAAA,CAAA+J,cACG,CAAC,gBAAA/J,MAAA,CAAAgK,gBACG,CAAC,kBAAAhK,MAAA,CAAAiK,kBACG,CAAC,mBAAAjK,MAAA,CAAAkK,mBACC,CAAC,UAAAlK,MAAA,CAAAmK,UACnB,CAAC,gBAAAnK,MAAA,CAAA4W,kBAAA,CAAAnF,QACsB,CAAC,cAAAzR,MAAA,CAAAc,SACrB,CAAC;EAAA;AAAA;AAAA,SAAAkY,8CAAAvf,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAA4Q,GAAA,GA74VyE5U,EAAE,CAAAsF,gBAAA;IAAFtF,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,UA85VpG,CAAC;IA95ViGnE,EAAE,CAAAuF,UAAA,+BAAAie,6EAAA/d,MAAA;MAAFzF,EAAE,CAAA0F,aAAA,CAAAkP,GAAA;MAAA,MAAArK,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CA65V7E4E,MAAA,CAAAuK,gBAAA,CAAArP,MAAuB,CAAC;IAAA,EAAC;IA75VkDzF,EAAE,CAAAqE,YAAA,CA85V5F,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAAuG,MAAA,GA95VyFvK,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,WAAA8F,MAAA,CAAAiE,MAm5VlF,CAAC,SAAAjE,MAAA,CAAAU,IACL,CAAC,kBAAAV,MAAA,CAAAL,aACiB,CAAC,cAAAK,MAAA,CAAAwK,cACJ,CAAC,cAAAxK,MAAA,CAAAyK,UACL,CAAC,cAAAzK,MAAA,CAAA0K,cACG,CAAC,kBAAA1K,MAAA,CAAA2K,kBACO,CAAC,mBAAA3K,MAAA,CAAA4K,mBACC,CAAC,UAAA5K,MAAA,CAAA6K,UACnB,CAAC,cAAA7K,MAAA,CAAAc,SACE,CAAC;EAAA;AAAA;AAAA,SAAAoY,uDAAAzf,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAAgX,GAAA,GA55VyEhb,EAAE,CAAAsF,gBAAA;IAAFtF,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,OAo6VlG,CAAC,UAsBE,CAAC;IA17V4FnE,EAAE,CAAAuF,UAAA,oBAAAme,2EAAAje,MAAA;MAAA,MAAAgX,QAAA,GAAFzc,EAAE,CAAA0F,aAAA,CAAAsV,GAAA,EAAA7U,SAAA;MAAA,MAAAoE,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CAs7VpF4E,MAAA,CAAAsF,OAAA,CAAApK,MAAA,EAAAgX,QAAqB,CAAC;IAAA,EAAC,sBAAAkH,6EAAAle,MAAA;MAAA,MAAAgX,QAAA,GAt7V2Dzc,EAAE,CAAA0F,aAAA,CAAAsV,GAAA,EAAA7U,SAAA;MAAA,MAAAoE,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CAu7VlF4E,MAAA,CAAAyL,UAAA,CAAAvQ,MAAA,EAAAgX,QAAwB,CAAC;IAAA,EAAC,wBAAAmH,+EAAAne,MAAA;MAAA,MAAAgX,QAAA,GAv7VsDzc,EAAE,CAAA0F,aAAA,CAAAsV,GAAA,EAAA7U,SAAA;MAAA,MAAAoE,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CAw7VhF4E,MAAA,CAAA2L,YAAA,CAAAzQ,MAAA,EAAAgX,QAA0B,CAAC;IAAA,EAAC,oCAAAoH,2FAAApe,MAAA;MAAA,MAAAoX,QAAA,GAx7VkD7c,EAAE,CAAA0F,aAAA,CAAAsV,GAAA,EAAA7S,KAAA;MAAA,MAAAoC,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CAy7VpE4E,MAAA,CAAAwX,2BAAA,CAAAtc,MAAA,EAAAoX,QAAyC,CAAC;IAAA,EAAC;IAz7VuB7c,EAAE,CAAAqE,YAAA,CA07V/F,CAAC,CACG,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAAyY,QAAA,GAAAxY,GAAA,CAAAkC,SAAA;IAAA,MAAAoE,MAAA,GA37VwFvK,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,4BAk6VrE,CAAC;IAl6VkEzE,EAAE,CAAAoI,WAAA,cAAAmC,MAAA,CAAAwS,cAAA,CAAAN,QAAA;IAAFzc,EAAE,CAAAwE,SAAA,CAu6VlE,CAAC;IAv6V+DxE,EAAE,CAAAyE,UAAA,SAAA8F,MAAA,CAAA8T,YAAA,CAAA9F,OAu6VlE,CAAC,WAAAhO,MAAA,CAAAQ,MACb,CAAC,WAAAR,MAAA,CAAAiE,MACD,CAAC,kBAAAjE,MAAA,CAAA9C,aACa,CAAC,WAAA8C,MAAA,CAAAxD,MACf,CAAC,WAAA0V,QAAA,CAAAQ,MACK,CAAC,SAAA1S,MAAA,CAAAU,IACX,CAAC,aAAAV,MAAA,CAAAkL,QACO,CAAC,oBAAAlL,MAAA,CAAAsG,eACa,CAAC,oBAAAtG,MAAA,CAAA2G,eACD,CAAC,kBAAA3G,MAAA,CAAA2S,aACL,CAAC,wBAAA3S,MAAA,CAAAgR,mBACW,CAAC,eAAAkB,QAAA,CAAA1O,IACnB,CAAC,eAAAxD,MAAA,CAAAmJ,UACD,CAAC,kBAAAnJ,MAAA,CAAAuQ,aACK,CAAC;EAAA;AAAA;AAAA,SAAAgJ,8CAAA9f,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAr7V6DhE,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,OA+5V/E,CAAC;IA/5V4EnE,EAAE,CAAAoE,UAAA,IAAAqf,sDAAA,eAo6VlG,CAAC;IAp6V+FzjB,EAAE,CAAAqE,YAAA,CA47V7F,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAAuG,MAAA,GA57V0FvK,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAwE,SAAA,CAi6VnE,CAAC;IAj6VgExE,EAAE,CAAAyE,UAAA,YAAA8F,MAAA,CAAAoM,OAi6VnE,CAAC,iBAAApM,MAAA,CAAAqN,OAAkC,CAAC;EAAA;AAAA;AAAA,SAAAmM,uDAAA/f,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAAqZ,GAAA,GAj6V6Brd,EAAE,CAAAsF,gBAAA;IAAFtF,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,OAk8VpG,CAAC,UAsBE,CAAC;IAx9V8FnE,EAAE,CAAAuF,UAAA,oBAAAye,2EAAAve,MAAA;MAAA,MAAA8X,QAAA,GAAFvd,EAAE,CAAA0F,aAAA,CAAA2X,GAAA,EAAAlX,SAAA;MAAA,MAAAoE,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CAo9VtF4E,MAAA,CAAAsF,OAAA,CAAApK,MAAA,EAAA8X,QAAqB,CAAC;IAAA,EAAC,sBAAA0G,6EAAAxe,MAAA;MAAA,MAAA8X,QAAA,GAp9V6Dvd,EAAE,CAAA0F,aAAA,CAAA2X,GAAA,EAAAlX,SAAA;MAAA,MAAAoE,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CAq9VpF4E,MAAA,CAAAyL,UAAA,CAAAvQ,MAAA,EAAA8X,QAAwB,CAAC;IAAA,EAAC,wBAAA2G,+EAAAze,MAAA;MAAA,MAAA8X,QAAA,GAr9VwDvd,EAAE,CAAA0F,aAAA,CAAA2X,GAAA,EAAAlX,SAAA;MAAA,MAAAoE,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CAs9VlF4E,MAAA,CAAA2L,YAAA,CAAAzQ,MAAA,EAAA8X,QAA0B,CAAC;IAAA,EAAC,oCAAA4G,2FAAA1e,MAAA;MAAA,MAAAkY,QAAA,GAt9VoD3d,EAAE,CAAA0F,aAAA,CAAA2X,GAAA,EAAAlV,KAAA;MAAA,MAAAoC,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CAu9VtE4E,MAAA,CAAAwX,2BAAA,CAAAtc,MAAA,EAAAkY,QAAyC,CAAC;IAAA,EAAC;IAv9VyB3d,EAAE,CAAAqE,YAAA,CAw9VjG,CAAC,CACG,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAAuZ,QAAA,GAAAtZ,GAAA,CAAAkC,SAAA;IAAA,MAAAoE,MAAA,GAz9V0FvK,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAoI,WAAA,cAAAmC,MAAA,CAAAwS,cAAA,CAAAQ,QAAA;IAAFvd,EAAE,CAAAwE,SAAA,CAq8VpE,CAAC;IAr8ViExE,EAAE,CAAAyE,UAAA,SAAA8F,MAAA,CAAA8T,YAAA,CAAA9F,OAq8VpE,CAAC,WAAAhO,MAAA,CAAAQ,MACb,CAAC,WAAAR,MAAA,CAAAiE,MACD,CAAC,kBAAAjE,MAAA,CAAA9C,aACa,CAAC,WAAA8C,MAAA,CAAAxD,MACf,CAAC,WAAAwW,QAAA,CAAAN,MACK,CAAC,SAAA1S,MAAA,CAAAU,IACX,CAAC,aAAAV,MAAA,CAAAkL,QACO,CAAC,oBAAAlL,MAAA,CAAAsG,eACa,CAAC,oBAAAtG,MAAA,CAAA2G,eACD,CAAC,kBAAA3G,MAAA,CAAA2S,aACL,CAAC,wBAAA3S,MAAA,CAAAgR,mBACW,CAAC,eAAAgC,QAAA,CAAAxP,IACnB,CAAC,eAAAxD,MAAA,CAAAmJ,UACD,CAAC,kBAAAnJ,MAAA,CAAAuQ,aACK,CAAC;EAAA;AAAA;AAAA,SAAAsJ,8CAAApgB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAn9V+DhE,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,OA87VlF,CAAC;IA97V+EnE,EAAE,CAAAoE,UAAA,IAAA2f,sDAAA,eAk8VpG,CAAC;IAl8ViG/jB,EAAE,CAAAqE,YAAA,CA09V/F,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAAuG,MAAA,GA19V4FvK,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAwE,SAAA,CAg8VrE,CAAC;IAh8VkExE,EAAE,CAAAyE,UAAA,YAAA8F,MAAA,CAAAoM,OAg8VrE,CAAC,iBAAApM,MAAA,CAAAqN,OAAkC,CAAC;EAAA;AAAA;AAAA,MAAAyM,IAAA;AAAA,SAAAC,+BAAAtgB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAh8V+BhE,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAA8E,SAAA,UAu7WrG,CAAC;EAAA;EAAA,IAAAd,EAAA;IAAA,MAAAM,MAAA,GAv7WkGtE,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,gBAAAH,MAAA,CAAAigB,cAAA,CAAAnU,QAo7W9D,CAAC,SAAA9L,MAAA,CAAA+L,UACrB,CAAC,UAAA/L,MAAA,CAAAgM,aACG,CAAC;EAAA;AAAA;AAAA,SAAAkU,kCAAAxgB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAt7W2EhE,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAA8E,SAAA,aAy9WrG,CAAC;EAAA;EAAA,IAAAd,EAAA;IAAA,MAAAygB,OAAA,GAAAxgB,GAAA,CAAAkC,SAAA;IAAA,MAAAue,IAAA,GAAAzgB,GAAA,CAAAkE,KAAA;IAAA,MAAA7D,MAAA,GAz9WkGtE,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAA0Q,WAAA,WAAApM,MAAA,CAAAqgB,OAg9W7E,CAAC;IAh9W0E3kB,EAAE,CAAAoI,WAAA,OAAAqc,OAAA,CAAAG,EAAA,CAAAlT,CAAA,QAAA+S,OAAA,CAAAG,EAAA,CAAAjT,CAAA,QAAA8S,OAAA,CAAAI,EAAA,CAAAnT,CAAA,QAAA+S,OAAA,CAAAI,EAAA,CAAAlT,CAAA,YAAArN,MAAA,CAAAwgB,WAAA,kBAAAJ,IAAA,SAAApgB,MAAA,CAAAygB,eAAA,GAAAzgB,MAAA,CAAA0gB,kBAAA,UAAAN,IAAA,GAAAvT,SAAA,GAAA7M,MAAA,CAAA2gB,QAAA;EAAA;AAAA;AAAA,MAAAC,IAAA;AAAA,SAAAC,oCAAAnhB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAAqG,GAAA,GAAFrK,EAAE,CAAAsF,gBAAA;IAAFtF,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,OA4+X7C,CAAC,UAkBrD,CAAC;IA9/X8FnE,EAAE,CAAAuF,UAAA,sBAAA6f,0DAAA3f,MAAA;MAAFzF,EAAE,CAAA0F,aAAA,CAAA2E,GAAA;MAAA,MAAAE,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CA2/XpF4E,MAAA,CAAAyL,UAAA,CAAAvQ,MAAiB,CAAC;IAAA,EAAC,wBAAA4f,4DAAA5f,MAAA;MA3/X+DzF,EAAE,CAAA0F,aAAA,CAAA2E,GAAA;MAAA,MAAAE,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CA4/XlF4E,MAAA,CAAA2L,YAAA,CAAAzQ,MAAmB,CAAC;IAAA,EAAC,oBAAA6f,wDAAA7f,MAAA;MA5/X2DzF,EAAE,CAAA0F,aAAA,CAAA2E,GAAA;MAAA,MAAAE,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CA6/XtF4E,MAAA,CAAAsF,OAAA,CAAApK,MAAc,CAAC;IAAA,EAAC;IA7/XoEzF,EAAE,CAAAqE,YAAA,CA8/XjG,CAAC,CACG,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAAuhB,SAAA,GAAAthB,GAAA,CAAAkC,SAAA;IAAA,MAAAoE,MAAA,GA//X0FvK,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAwE,SAAA,CA++XhF,CAAC;IA/+X6ExE,EAAE,CAAAyE,UAAA,WAAA8F,MAAA,CAAAQ,MA++XhF,CAAC,WAAAR,MAAA,CAAAiE,MACD,CAAC,WAAAjE,MAAA,CAAAxD,MACD,CAAC,eAAAwD,MAAA,CAAAkQ,UACO,CAAC,gBAAAlQ,MAAA,CAAAua,WACC,CAAC,gBAAAva,MAAA,CAAAib,WACD,CAAC,oBAAAjb,MAAA,CAAAsG,eACO,CAAC,oBAAAtG,MAAA,CAAA2G,eACD,CAAC,WAAAqU,SACnB,CAAC,SAAAhb,MAAA,CAAAU,IACL,CAAC,eAAAV,MAAA,CAAAmJ,UACW,CAAC,aAAAnJ,MAAA,CAAAkL,QACL,CAAC;EAAA;AAAA;AAAA,MAAAgQ,IAAA;AAAA,SAAAC,iDAAA1hB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAAqG,GAAA,GA1/XyErK,EAAE,CAAAsF,gBAAA;IAAFtF,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,UAmzYnG,CAAC;IAnzYgGnE,EAAE,CAAAuF,UAAA,oBAAAogB,qEAAA;MAAF3lB,EAAE,CAAA0F,aAAA,CAAA2E,GAAA;MAAA,MAAAub,SAAA,GAAF5lB,EAAE,CAAAuE,aAAA,GAAA4B,SAAA;MAAA,MAAA2F,MAAA,GAAF9L,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CAyyYxFmG,MAAA,CAAA+D,OAAA,CAAA+V,SAAA,CAAA9V,IAAmB,CAAC;IAAA,EAAC,sBAAA+V,uEAAA;MAzyYiE7lB,EAAE,CAAA0F,aAAA,CAAA2E,GAAA;MAAA,MAAAub,SAAA,GAAF5lB,EAAE,CAAAuE,aAAA,GAAA4B,SAAA;MAAA,MAAA2F,MAAA,GAAF9L,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CA0yYtFmG,MAAA,CAAAkE,cAAA,CAAA4V,SAAqB,CAAC;IAAA,EAAC,wBAAAE,yEAAA;MA1yY6D9lB,EAAE,CAAA0F,aAAA,CAAA2E,GAAA;MAAA,MAAAub,SAAA,GAAF5lB,EAAE,CAAAuE,aAAA,GAAA4B,SAAA;MAAA,MAAA2F,MAAA,GAAF9L,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CA2yYpFmG,MAAA,CAAAoE,gBAAA,CAAA0V,SAAuB,CAAC;IAAA,EAAC;IA3yYyD5lB,EAAE,CAAAqE,YAAA,CAmzYnG,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAA4hB,SAAA,GAnzYgG5lB,EAAE,CAAAuE,aAAA,GAAA4B,SAAA;IAAA,MAAA2F,MAAA,GAAF9L,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAA2M,WAAA,YAAAiZ,SAAA,CAAA7W,OAoyYnE,CAAC;IApyYgE/O,EAAE,CAAA0Q,WAAA,WAAAkV,SAAA,CAAArf,QAqyYnE,CAAC;IAryYgEvG,EAAE,CAAAyE,UAAA,4BA8xYvE,CAAC,QAErB,CAAC,QACD,CAAC,MAAAmhB,SAAA,CAAArW,MACU,CAAC,SAAAqW,SAAA,CAAAtf,KACC,CAAC,uBAGC,CAAC,SAAAsf,SAAA,CAAA9X,KACH,CAAC,eAAA8X,SAAA,CAAAhV,UACU,CAAC,oBAAA9E,MAAA,CAAA+E,eAKE,CAAC,qBAAA/E,MAAA,CAAAgF,cAAA,CAAAC,GACG,CAAC,gBAAAjF,MAAA,CAAAkF,UAAA,CAAAC,OACN,CAAC,iBAAAnF,MAAA,CAAAoF,eAAA,GAAAC,SAAA,GAAArF,MAAA,CAAAsF,cAAA,CAAAwU,SAAA,CACkC,CAAC,oBAAA9Z,MAAA,CAAAoF,eACnC,CAAC,mBAAA0U,SAAA,CAAA9V,IACN,CAAC;EAAA;AAAA;AAAA,SAAAiW,iDAAA/hB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAAgX,GAAA,GAlzYkEhb,EAAE,CAAAsF,gBAAA;IAAFtF,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,UA20YnG,CAAC;IA30YgGnE,EAAE,CAAAuF,UAAA,oBAAAygB,qEAAA;MAAFhmB,EAAE,CAAA0F,aAAA,CAAAsV,GAAA;MAAA,MAAA4K,SAAA,GAAF5lB,EAAE,CAAAuE,aAAA,GAAA4B,SAAA;MAAA,MAAA2F,MAAA,GAAF9L,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CAi0YxFmG,MAAA,CAAA+D,OAAA,CAAA+V,SAAA,CAAA9V,IAAmB,CAAC;IAAA,EAAC,sBAAAmW,uEAAA;MAj0YiEjmB,EAAE,CAAA0F,aAAA,CAAAsV,GAAA;MAAA,MAAA4K,SAAA,GAAF5lB,EAAE,CAAAuE,aAAA,GAAA4B,SAAA;MAAA,MAAA2F,MAAA,GAAF9L,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CAk0YtFmG,MAAA,CAAAkE,cAAA,CAAA4V,SAAqB,CAAC;IAAA,EAAC,wBAAAM,yEAAA;MAl0Y6DlmB,EAAE,CAAA0F,aAAA,CAAAsV,GAAA;MAAA,MAAA4K,SAAA,GAAF5lB,EAAE,CAAAuE,aAAA,GAAA4B,SAAA;MAAA,MAAA2F,MAAA,GAAF9L,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CAm0YpFmG,MAAA,CAAAoE,gBAAA,CAAA0V,SAAuB,CAAC;IAAA,EAAC;IAn0YyD5lB,EAAE,CAAAqE,YAAA,CA20YnG,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAA4hB,SAAA,GA30YgG5lB,EAAE,CAAAuE,aAAA,GAAA4B,SAAA;IAAA,MAAA2F,MAAA,GAAF9L,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAA2M,WAAA,YAAAiZ,SAAA,CAAA7W,OA4zYnE,CAAC;IA5zYgE/O,EAAE,CAAA0Q,WAAA,WAAAkV,SAAA,CAAArf,QA6zYnE,CAAC;IA7zYgEvG,EAAE,CAAAyE,UAAA,QAwzY3F,CAAC,QACD,CAAC,MAAAmhB,SAAA,CAAArW,MACU,CAAC,SAAAqW,SAAA,CAAAtf,KACC,CAAC,uBAGC,CAAC,SAAAsf,SAAA,CAAA9X,KACH,CAAC,eAAA8X,SAAA,CAAAhV,UACU,CAAC,oBAAA9E,MAAA,CAAA+E,eAKE,CAAC,qBAAA/E,MAAA,CAAAgF,cAAA,CAAAC,GACG,CAAC,gBAAAjF,MAAA,CAAAkF,UAAA,CAAAC,OACN,CAAC,iBAAAnF,MAAA,CAAAoF,eAAA,GAAAC,SAAA,GAAArF,MAAA,CAAAsF,cAAA,CAAAwU,SAAA,CACkC,CAAC,oBAAA9Z,MAAA,CAAAoF,eACnC,CAAC,mBAAA0U,SAAA,CAAA9V,IACN,CAAC;EAAA;AAAA;AAAA,SAAAqW,wCAAAniB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IA10YkEhE,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,OAyxYjD,CAAC,OACZ,CAAC;IA1xYyDnE,EAAE,CAAAoE,UAAA,IAAAshB,gDAAA,eAmzYnG,CAAC,IAAAK,gDAAA,eAwBD,CAAC;IA30YgG/lB,EAAE,CAAAqE,YAAA,CA40Y/F,CAAC,CACH,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAA4hB,SAAA,GAAA3hB,GAAA,CAAAkC,SAAA;IAAA,MAAA2F,MAAA,GA70Y8F9L,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAwE,SAAA,CA0xY7D,CAAC;IA1xY0DxE,EAAE,CAAAoI,WAAA,cAAAwd,SAAA,CAAA5Y,SAAA;IAAFhN,EAAE,CAAAwE,SAAA,CA4xYtF,CAAC;IA5xYmFxE,EAAE,CAAAyE,UAAA,UAAAqH,MAAA,CAAAyE,KA4xYtF,CAAC;IA5xYmFvQ,EAAE,CAAAwE,SAAA,CAqzYvF,CAAC;IArzYoFxE,EAAE,CAAAyE,UAAA,SAAAqH,MAAA,CAAAyE,KAqzYvF,CAAC;EAAA;AAAA;AAAA,SAAA6V,uCAAApiB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAAqG,GAAA,GArzYoFrK,EAAE,CAAAsF,gBAAA;IAAFtF,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,UAgsZnG,CAAC;IAhsZgGnE,EAAE,CAAAuF,UAAA,+BAAA8gB,sEAAA5gB,MAAA;MAAFzF,EAAE,CAAA0F,aAAA,CAAA2E,GAAA;MAAA,MAAAE,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CA+rZ7E4E,MAAA,CAAA4J,iBAAA,CAAA1O,MAAwB,CAAC;IAAA,EAAC;IA/rZiDzF,EAAE,CAAAqE,YAAA,CAgsZnG,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAAuG,MAAA,GAhsZgGvK,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,kBAAA8F,MAAA,CAAAL,aAorZpE,CAAC,SAAAK,MAAA,CAAAU,IACnB,CAAC,WAAAV,MAAA,CAAAQ,MACG,CAAC,cAAAR,MAAA,CAAA6J,cACU,CAAC,cAAA7J,MAAA,CAAA8J,UACL,CAAC,cAAA9J,MAAA,CAAA+J,cACG,CAAC,gBAAA/J,MAAA,CAAAgK,gBACG,CAAC,kBAAAhK,MAAA,CAAAiK,kBACG,CAAC,mBAAAjK,MAAA,CAAAkK,mBACC,CAAC,UAAAlK,MAAA,CAAAmK,UACnB,CAAC,cAAAnK,MAAA,CAAAc,SACE,CAAC;EAAA;AAAA;AAAA,SAAAib,uCAAAtiB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAA4Q,GAAA,GA9rZyE5U,EAAE,CAAAsF,gBAAA;IAAFtF,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,UA+sZnG,CAAC;IA/sZgGnE,EAAE,CAAAuF,UAAA,+BAAAghB,sEAAA9gB,MAAA;MAAFzF,EAAE,CAAA0F,aAAA,CAAAkP,GAAA;MAAA,MAAArK,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CA8sZ7E4E,MAAA,CAAAuK,gBAAA,CAAArP,MAAuB,CAAC;IAAA,EAAC;IA9sZkDzF,EAAE,CAAAqE,YAAA,CA+sZnG,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAAuG,MAAA,GA/sZgGvK,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,kBAAA8F,MAAA,CAAAL,aAosZpE,CAAC,WAAAK,MAAA,CAAAiE,MACf,CAAC,SAAAjE,MAAA,CAAAU,IACL,CAAC,cAAAV,MAAA,CAAAwK,cACc,CAAC,cAAAxK,MAAA,CAAAyK,UACL,CAAC,cAAAzK,MAAA,CAAA0K,cACG,CAAC,kBAAA1K,MAAA,CAAA2K,kBACO,CAAC,mBAAA3K,MAAA,CAAA4K,mBACC,CAAC,UAAA5K,MAAA,CAAA6K,UACnB,CAAC,cAAA7K,MAAA,CAAAc,SACE,CAAC;EAAA;AAAA;AAAA,SAAAmb,gDAAAxiB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAAgX,GAAA,GA7sZyEhb,EAAE,CAAAsF,gBAAA;IAAFtF,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,OA0tZjB,CAAC,UAkB/E,CAAC;IA5uZ4FnE,EAAE,CAAAuF,UAAA,oBAAAkhB,oEAAAhhB,MAAA;MAAA,MAAAihB,SAAA,GAAF1mB,EAAE,CAAA0F,aAAA,CAAAsV,GAAA,EAAA7U,SAAA;MAAA,MAAAoE,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CAyuZpF4E,MAAA,CAAAsF,OAAA,CAAApK,MAAA,EAAAihB,SAAsB,CAAC;IAAA,EAAC,sBAAAC,sEAAAlhB,MAAA;MAzuZ0DzF,EAAE,CAAA0F,aAAA,CAAAsV,GAAA;MAAA,MAAAzQ,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CA0uZlF4E,MAAA,CAAAyL,UAAA,CAAAvQ,MAAiB,CAAC;IAAA,EAAC,wBAAAmhB,wEAAAnhB,MAAA;MA1uZ6DzF,EAAE,CAAA0F,aAAA,CAAAsV,GAAA;MAAA,MAAAzQ,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CA2uZhF4E,MAAA,CAAA2L,YAAA,CAAAzQ,MAAmB,CAAC;IAAA,EAAC;IA3uZyDzF,EAAE,CAAAqE,YAAA,CA4uZ/F,CAAC,CACG,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAA0iB,SAAA,GAAAziB,GAAA,CAAAkC,SAAA;IAAA,MAAAoE,MAAA,GA7uZwFvK,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,4BA0tZlB,CAAC;IA1tZezE,EAAE,CAAAwE,SAAA,CA6tZ9E,CAAC;IA7tZ2ExE,EAAE,CAAAyE,UAAA,WAAA8F,MAAA,CAAAQ,MA6tZ9E,CAAC,WAAAR,MAAA,CAAAiE,MACD,CAAC,WAAAjE,MAAA,CAAAsc,MACD,CAAC,eAAAtc,MAAA,CAAAuc,UACO,CAAC,eAAAvc,MAAA,CAAAwc,UACD,CAAC,eAAAxc,MAAA,CAAA8J,UACD,CAAC,eAAA9J,MAAA,CAAAyK,UACD,CAAC,WAAAzK,MAAA,CAAAxD,MACT,CAAC,SAAA2f,SACH,CAAC,kBAAAnc,MAAA,CAAA9C,aACe,CAAC,oBAAA8C,MAAA,CAAAsG,eACG,CAAC,oBAAAtG,MAAA,CAAA2G,eACD,CAAC;EAAA;AAAA;AAAA,SAAA8V,uCAAAhjB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAxuZyDhE,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,OAytZnD,CAAC;IAztZgDnE,EAAE,CAAAoE,UAAA,IAAAoiB,+CAAA,eA0tZjB,CAAC;IA1tZcxmB,EAAE,CAAAqE,YAAA,CA8uZ7F,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAAuG,MAAA,GA9uZ0FvK,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAoI,WAAA,cAAAmC,MAAA,CAAA0c,QAAA;IAAFjnB,EAAE,CAAAwE,SAAA,CA0tZhE,CAAC;IA1tZ6DxE,EAAE,CAAAyE,UAAA,YAAA8F,MAAA,CAAAuF,IA0tZhE,CAAC,iBAAAvF,MAAA,CAAAqN,OAAe,CAAC;EAAA;AAAA;AAAA,SAAAsP,gDAAAljB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAA4R,GAAA,GA1tZ6C5V,EAAE,CAAAsF,gBAAA;IAAFtF,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,OAgvZ9C,CAAC,UAkBlD,CAAC;IAlwZ4FnE,EAAE,CAAAuF,UAAA,oBAAA4hB,oEAAA1hB,MAAA;MAAA,MAAAqQ,SAAA,GAAF9V,EAAE,CAAA0F,aAAA,CAAAkQ,GAAA,EAAAzP,SAAA;MAAA,MAAAoE,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CA+vZpF4E,MAAA,CAAAsF,OAAA,CAAApK,MAAA,EAAAqQ,SAAsB,CAAC;IAAA,EAAC,sBAAAsR,sEAAA3hB,MAAA;MA/vZ0DzF,EAAE,CAAA0F,aAAA,CAAAkQ,GAAA;MAAA,MAAArL,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CAgwZlF4E,MAAA,CAAAyL,UAAA,CAAAvQ,MAAiB,CAAC;IAAA,EAAC,wBAAA4hB,wEAAA5hB,MAAA;MAhwZ6DzF,EAAE,CAAA0F,aAAA,CAAAkQ,GAAA;MAAA,MAAArL,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CAiwZhF4E,MAAA,CAAA2L,YAAA,CAAAzQ,MAAmB,CAAC;IAAA,EAAC;IAjwZyDzF,EAAE,CAAAqE,YAAA,CAkwZ/F,CAAC,CACG,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAA8R,SAAA,GAAA7R,GAAA,CAAAkC,SAAA;IAAA,MAAAoE,MAAA,GAnwZwFvK,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAwE,SAAA,CAmvZ9E,CAAC;IAnvZ2ExE,EAAE,CAAAyE,UAAA,WAAA8F,MAAA,CAAAQ,MAmvZ9E,CAAC,WAAAR,MAAA,CAAAiE,MACD,CAAC,WAAAjE,MAAA,CAAAsc,MACD,CAAC,eAAAtc,MAAA,CAAAuc,UACO,CAAC,eAAAvc,MAAA,CAAAwc,UACD,CAAC,eAAAxc,MAAA,CAAA8J,UACD,CAAC,eAAA9J,MAAA,CAAAyK,UACD,CAAC,WAAAzK,MAAA,CAAAxD,MACT,CAAC,SAAA+O,SACH,CAAC,kBAAAvL,MAAA,CAAA9C,aACe,CAAC,oBAAA8C,MAAA,CAAAsG,eACG,CAAC,oBAAAtG,MAAA,CAAA2G,eACD,CAAC;EAAA;AAAA;AAAA,SAAAoW,uCAAAtjB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IA9vZyDhE,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,OA+uZpD,CAAC;IA/uZiDnE,EAAE,CAAAoE,UAAA,IAAA8iB,+CAAA,eAgvZ9C,CAAC;IAhvZ2ClnB,EAAE,CAAAqE,YAAA,CAowZ7F,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAAuG,MAAA,GApwZ0FvK,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAoI,WAAA,cAAAmC,MAAA,CAAA0c,QAAA;IAAFjnB,EAAE,CAAAwE,SAAA,CAgvZhE,CAAC;IAhvZ6DxE,EAAE,CAAAyE,UAAA,YAAA8F,MAAA,CAAAuF,IAgvZhE,CAAC,iBAAAvF,MAAA,CAAAqN,OAAe,CAAC;EAAA;AAAA;AAAA,MAAA2P,IAAA;AAAA,SAAAC,0CAAAxjB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAhvZ6ChE,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,UA0hahF,CAAC;IA1ha6EnE,EAAE,CAAA8E,SAAA,UAgianG,CAAC;IAhiagG9E,EAAE,CAAAqE,YAAA,CAiiahG,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAAM,MAAA,GAjia6FtE,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAwE,SAAA,CA6ha5D,CAAC;IA7hayDxE,EAAE,CAAAyE,UAAA,gBAAAH,MAAA,CAAA6L,cAAA,CAAAC,QA6ha5D,CAAC,SAAA9L,MAAA,CAAA+L,UACrB,CAAC,UAAA/L,MAAA,CAAAgM,aACG,CAAC;EAAA;AAAA;AAAA,MAAAmX,IAAA;AAAA,MAAAC,IAAA,GAAAA,CAAA7jB,EAAA,EAAAmQ,EAAA,EAAA2T,EAAA;EAAA1K,MAAA,EAAApZ,EAAA;EAAAkK,IAAA,EAAAiG,EAAA;EAAAlG,KAAA,EAAA6Z;AAAA;AAAA,SAAAC,0CAAA5jB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAAqG,GAAA,GA/hayErK,EAAE,CAAAsF,gBAAA;IAAFtF,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,UAmraxG,CAAC;IAnraqGnE,EAAE,CAAAuF,UAAA,oBAAAsiB,8DAAA;MAAA,MAAAC,IAAA,GAAF9nB,EAAE,CAAA0F,aAAA,CAAA2E,GAAA,EAAAlE,SAAA;MAAA,MAAA2F,MAAA,GAAF9L,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CAuqa5FmG,MAAA,CAAA+D,OAAA,CAAAiY,IAAA,CAAAC,IAAc,CAAC;IAAA,EAAC,sBAAAC,gEAAA;MAAA,MAAAF,IAAA,GAvqa0E9nB,EAAE,CAAA0F,aAAA,CAAA2E,GAAA,EAAAlE,SAAA;MAAA,MAAA2F,MAAA,GAAF9L,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CAwqa1FmG,MAAA,CAAA/F,QAAA,CAAAF,IAAA,CAAAiiB,IAAA,CAAAC,IAAoB,CAAC;IAAA,EAAC,wBAAAE,kEAAA;MAAA,MAAAH,IAAA,GAxqakE9nB,EAAE,CAAA0F,aAAA,CAAA2E,GAAA,EAAAlE,SAAA;MAAA,MAAA2F,MAAA,GAAF9L,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CAyqaxFmG,MAAA,CAAA7F,UAAA,CAAAJ,IAAA,CAAAiiB,IAAA,CAAAC,IAAsB,CAAC;IAAA,EAAC;IAzqa8D/nB,EAAE,CAAAqE,YAAA,CAmrahG,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAA8jB,IAAA,GAAA7jB,GAAA,CAAAkC,SAAA;IAAA,MAAA2F,MAAA,GAnra6F9L,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,MAAAqjB,IAAA,CAAApW,CAiqa9F,CAAC,MAAAoW,IAAA,CAAAnW,CACD,CAAC,UAAAmW,IAAA,CAAA3c,KACO,CAAC,WAAA2c,IAAA,CAAA5c,MACC,CAAC,SAAA4c,IAAA,CAAAI,IACL,CAAC,SAAAJ,IAAA,CAAAhY,IACD,CAAC,aAAAhE,MAAA,CAAA2J,QAIK,CAAC,eAAA3J,MAAA,CAAA4H,UACG,CAAC,oBAAA5H,MAAA,CAAA+E,eAES,CAAC,qBAAA/E,MAAA,CAAAgF,cAAA,CAAAC,GACG,CAAC,gBAAAjF,MAAA,CAAAkF,UAAA,CAAAC,OACN,CAAC,iBAAAnF,MAAA,CAAAoF,eAAA,GAAAC,SAAA,GAAArF,MAAA,CAAA+O,WAAA,CAAAiN,IAAA,CAC0B,CAAC,oBAAAhc,MAAA,CAAAoF,eAC3B,CAAC,mBAjraiElR,EAAE,CAAAmoB,eAAA,KAAAT,IAAA,EAAAI,IAAA,CAAA7K,MAAA,EAAA6K,IAAA,CAAA1hB,KAAA,EAAA0hB,IAAA,CAAAhY,IAAA,CAkralC,CAAC;EAAA;AAAA;AAAA,SAAAsY,mCAAApkB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAAqG,GAAA,GAlra+BrK,EAAE,CAAAsF,gBAAA;IAAFtF,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,UAg9apG,CAAC;IAh9aiGnE,EAAE,CAAAuF,UAAA,+BAAA8iB,kEAAA5iB,MAAA;MAAFzF,EAAE,CAAA0F,aAAA,CAAA2E,GAAA;MAAA,MAAAE,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CA+8a7E4E,MAAA,CAAA4J,iBAAA,CAAA1O,MAAwB,CAAC;IAAA,EAAC;IA/8aiDzF,EAAE,CAAAqE,YAAA,CAg9a5F,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAAuG,MAAA,GAh9ayFvK,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,WAAA8F,MAAA,CAAAQ,MAq8alF,CAAC,SAAAR,MAAA,CAAAU,IACL,CAAC,cAAAV,MAAA,CAAA6J,cACc,CAAC,cAAA7J,MAAA,CAAA8J,UACL,CAAC,cAAA9J,MAAA,CAAA+J,cACG,CAAC,gBAAA/J,MAAA,CAAAgK,gBACG,CAAC,kBAAAhK,MAAA,CAAAiK,kBACG,CAAC,mBAAAjK,MAAA,CAAAkK,mBACC,CAAC,UAAAlK,MAAA,CAAAmK,UACnB,CAAC,cAAAnK,MAAA,CAAAc,SACE,CAAC;EAAA;AAAA;AAAA,SAAAid,mCAAAtkB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAA4Q,GAAA,GA98ayE5U,EAAE,CAAAsF,gBAAA;IAAFtF,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,UA89apG,CAAC;IA99aiGnE,EAAE,CAAAuF,UAAA,+BAAAgjB,kEAAA9iB,MAAA;MAAFzF,EAAE,CAAA0F,aAAA,CAAAkP,GAAA;MAAA,MAAArK,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CA69a7E4E,MAAA,CAAAuK,gBAAA,CAAArP,MAAuB,CAAC;IAAA,EAAC;IA79akDzF,EAAE,CAAAqE,YAAA,CA89a5F,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAAuG,MAAA,GA99ayFvK,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,WAAA8F,MAAA,CAAAiE,MAo9alF,CAAC,SAAAjE,MAAA,CAAAU,IACL,CAAC,cAAAV,MAAA,CAAAwK,cACc,CAAC,cAAAxK,MAAA,CAAAyK,UACL,CAAC,cAAAzK,MAAA,CAAA0K,cACG,CAAC,kBAAA1K,MAAA,CAAA2K,kBACO,CAAC,mBAAA3K,MAAA,CAAA4K,mBACC,CAAC,UAAA5K,MAAA,CAAA6K,UACnB,CAAC,cAAA7K,MAAA,CAAAc,SACE,CAAC;EAAA;AAAA;AAAA,SAAAmd,sCAAAxkB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IA59ayEhE,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAA8E,SAAA,UAu+anG,CAAC;EAAA;EAAA,IAAAd,EAAA;IAAA,MAAAykB,OAAA,GAAAxkB,GAAA,CAAAkC,SAAA;IAv+agGnG,EAAE,CAAAoI,WAAA,MAAAqgB,OAAA,CAAA/W,CAAA,OAAA+W,OAAA,CAAA9W,CAAA,QAAA8W,OAAA,CAAAC,EAAA,WAAAD,OAAA,CAAAtd,KAAA,YAAAsd,OAAA,CAAAvd,MAAA,UAAAud,OAAA,CAAAP,IAAA;EAAA;AAAA;AAAA,MAAAS,IAAA;AAAA,SAAAC,gCAAA5kB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAFhE,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,OA4qbnF,CAAC;IA5qbgFnE,EAAE,CAAA8E,SAAA,aAorbrG,CAAC;IAprbkG9E,EAAE,CAAAqE,YAAA,CAqrbjG,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAAM,MAAA,GArrb8FtE,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAwE,SAAA,CA8qbzE,CAAC;IA9qbsExE,EAAE,CAAAyE,UAAA,4BA8qbzE,CAAC;IA9qbsEzE,EAAE,CAAAoI,WAAA,MAAA9D,MAAA,CAAAukB,WAAA,UAAAvkB,MAAA,CAAA4jB,IAAA,YAAA5jB,MAAA,CAAAwkB,MAAA;EAAA;AAAA;AAAA,SAAAC,gCAAA/kB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAFhE,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,OAsrbpF,CAAC;IAtrbiFnE,EAAE,CAAA8E,SAAA,aAurbQ,CAAC;IAvrbX9E,EAAE,CAAAqE,YAAA,CAwrbjG,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAAM,MAAA,GAxrb8FtE,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAwE,SAAA,CAurb1D,CAAC;IAvrbuDxE,EAAE,CAAAoI,WAAA,MAAA9D,MAAA,CAAAukB,WAAA,UAAAvkB,MAAA,CAAA4jB,IAAA,YAAA5jB,MAAA,CAAAwkB,MAAA;EAAA;AAAA;AAAA,MAAAE,IAAA;AAAA,SAAAC,sCAAAjlB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAFhE,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAA8E,SAAA,UAi4bnG,CAAC;EAAA;EAAA,IAAAd,EAAA;IAAA,MAAAM,MAAA,GAj4bgGtE,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,gBAAAH,MAAA,CAAA6L,cAAA,CAAAC,QA83b5D,CAAC,SAAA9L,MAAA,CAAA+L,UACrB,CAAC,UAAA/L,MAAA,CAAAgM,aACG,CAAC;EAAA;AAAA;AAAA,SAAA4Y,sCAAAllB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAh4byEhE,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAA8E,SAAA,UAs6brG,CAAC;EAAA;EAAA,IAAAd,EAAA;IAAA,MAAAM,MAAA,GAt6bkGtE,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAA0Q,WAAA,WAAApM,MAAA,CAAAiC,QAAA,CAAAjC,MAAA,CAAAwL,IAAA,CAk6btE,CAAC,aAAAxL,MAAA,CAAA6kB,UAAA,CAAA7kB,MAAA,CAAAwL,IAAA,CACG,CAAC;IAn6b+D9P,EAAE,CAAAyE,UAAA,SAAAH,MAAA,CAAAwL,IA+5bxF,CAAC,SAAAxL,MAAA,CAAA8kB,SACI,CAAC,SAAA9kB,MAAA,CAAA+kB,WAAA,GAAA/kB,MAAA,CAAAglB,WAAA,GAAAhlB,MAAA,CAAAyC,MAAA,CAAAwiB,QAAA,CAAAjlB,MAAA,CAAAwL,IAAA,CAAA/B,IAAA,CAC4C,CAAC,YAAAzJ,MAAA,CAAAklB,gBAGpC,CAAC,eAAAllB,MAAA,CAAAoP,UACJ,CAAC;EAAA;AAAA;AAAA,SAAA+V,qCAAAzlB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAAqG,GAAA,GAr6byErK,EAAE,CAAAsF,gBAAA;IAAFtF,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,UAixcpG,CAAC;IAjxciGnE,EAAE,CAAAuF,UAAA,+BAAAmkB,oEAAAjkB,MAAA;MAAFzF,EAAE,CAAA0F,aAAA,CAAA2E,GAAA;MAAA,MAAAE,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CAgxc7E4E,MAAA,CAAA4J,iBAAA,CAAA1O,MAAwB,CAAC;IAAA,EAAC;IAhxciDzF,EAAE,CAAAqE,YAAA,CAixc5F,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAAuG,MAAA,GAjxcyFvK,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,WAAA8F,MAAA,CAAAQ,MAqwclF,CAAC,SAAAR,MAAA,CAAAU,IACL,CAAC,kBAAAV,MAAA,CAAAL,aACiB,CAAC,cAAAK,MAAA,CAAA6J,cACJ,CAAC,cAAA7J,MAAA,CAAA8J,UACL,CAAC,cAAA9J,MAAA,CAAA+J,cACG,CAAC,gBAAA/J,MAAA,CAAAgK,gBACG,CAAC,kBAAAhK,MAAA,CAAAiK,kBACG,CAAC,mBAAAjK,MAAA,CAAAkK,mBACC,CAAC,UAAAlK,MAAA,CAAAmK,UACnB,CAAC,cAAAnK,MAAA,CAAAc,SACE,CAAC;EAAA;AAAA;AAAA,SAAAse,qCAAA3lB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAA4Q,GAAA,GA/wcyE5U,EAAE,CAAAsF,gBAAA;IAAFtF,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,UAmycpG,CAAC;IAnyciGnE,EAAE,CAAAuF,UAAA,+BAAAqkB,oEAAAnkB,MAAA;MAAFzF,EAAE,CAAA0F,aAAA,CAAAkP,GAAA;MAAA,MAAArK,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CAkyc7E4E,MAAA,CAAAuK,gBAAA,CAAArP,MAAuB,CAAC;IAAA,EAAC;IAlyckDzF,EAAE,CAAAqE,YAAA,CAmyc5F,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAAuG,MAAA,GAnycyFvK,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,WAAA8F,MAAA,CAAAiE,MAqxclF,CAAC,SAAAjE,MAAA,CAAAU,IACL,CAAC,kBAAAV,MAAA,CAAAL,aACiB,CAAC,cAAAK,MAAA,CAAAwK,cACJ,CAAC,cAAAxK,MAAA,CAAAyK,UACL,CAAC,cAAAzK,MAAA,CAAA0K,cACG,CAAC,kBAAA1K,MAAA,CAAA2K,kBACO,CAAC,mBAAA3K,MAAA,CAAA4K,mBACC,CAAC,UAAA5K,MAAA,CAAA6K,UACnB,CAAC,mBAAA7K,MAAA,CAAAmE,cACY,CAAC,iBAAAnE,MAAA,CAAA4D,YACL,CAAC,kBAAA5D,MAAA,CAAA0D,aACC,CAAC,cAAA1D,MAAA,CAAAc,SACT,CAAC;EAAA;AAAA;AAAA,SAAAwe,8CAAA7lB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAjycyEhE,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,OAsycZ,CAAC;IAtycSnE,EAAE,CAAA8E,SAAA,WAmzc7F,CAAC;IAnzc0F9E,EAAE,CAAAqE,YAAA,CAozczF,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAAsR,SAAA,GAAArR,GAAA,CAAAkC,SAAA;IAAA,MAAAoE,MAAA,GApzcsFvK,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,4BAsycb,CAAC;IAtycUzE,EAAE,CAAAwE,SAAA,CAyyc5E,CAAC;IAzycyExE,EAAE,CAAAyE,UAAA,WAAA8F,MAAA,CAAAQ,MAyyc5E,CAAC,WAAAR,MAAA,CAAAiE,MACD,CAAC,WAAAjE,MAAA,CAAAxD,MACD,CAAC,SAAAuO,SACH,CAAC,kBAAA/K,MAAA,CAAA9C,aACe,CAAC,cAAA8C,MAAA,CAAAiL,SACT,CAAC,UAAAjL,MAAA,CAAAmL,KACT,CAAC,qBAAAnL,MAAA,CAAAif,gBACqB,CAAC,aAAAjf,MAAA,CAAAuf,QACjB,CAAC,eAAAvf,MAAA,CAAAmJ,UACG,CAAC;EAAA;AAAA;AAAA,SAAAqW,qCAAA/lB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAlzciEhE,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,OAqyc7E,CAAC;IAryc0EnE,EAAE,CAAAoE,UAAA,IAAAylB,6CAAA,eAsycZ,CAAC;IAtycS7pB,EAAE,CAAAqE,YAAA,CAqzc3F,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAAuG,MAAA,GArzcwFvK,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAwE,SAAA,CAsyc3D,CAAC;IAtycwDxE,EAAE,CAAAyE,UAAA,YAAA8F,MAAA,CAAAoM,OAsyc3D,CAAC,iBAAApM,MAAA,CAAAqN,OAAe,CAAC;EAAA;AAAA;AAAA,SAAAoS,8CAAAhmB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAtycwChE,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,OAuzczC,CAAC;IAvzcsCnE,EAAE,CAAA8E,SAAA,WAo0c7F,CAAC;IAp0c0F9E,EAAE,CAAAqE,YAAA,CAq0czF,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAA0iB,SAAA,GAAAziB,GAAA,CAAAkC,SAAA;IAAA,MAAAoE,MAAA,GAr0csFvK,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAwE,SAAA,CA0zc5E,CAAC;IA1zcyExE,EAAE,CAAAyE,UAAA,WAAA8F,MAAA,CAAAQ,MA0zc5E,CAAC,WAAAR,MAAA,CAAAiE,MACD,CAAC,WAAAjE,MAAA,CAAAxD,MACD,CAAC,SAAA2f,SACH,CAAC,kBAAAnc,MAAA,CAAA9C,aACe,CAAC,cAAA8C,MAAA,CAAAiL,SACT,CAAC,UAAAjL,MAAA,CAAAmL,KACT,CAAC,qBAAAnL,MAAA,CAAAif,gBACqB,CAAC,aAAAjf,MAAA,CAAAuf,QACjB,CAAC,eAAAvf,MAAA,CAAAmJ,UACG,CAAC;EAAA;AAAA;AAAA,SAAAuW,qCAAAjmB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAn0ciEhE,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,OAszc9E,CAAC;IAtzc2EnE,EAAE,CAAAoE,UAAA,IAAA4lB,6CAAA,eAuzczC,CAAC;IAvzcsChqB,EAAE,CAAAqE,YAAA,CAs0c3F,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAAuG,MAAA,GAt0cwFvK,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAwE,SAAA,CAuzc3D,CAAC;IAvzcwDxE,EAAE,CAAAyE,UAAA,YAAA8F,MAAA,CAAAoM,OAuzc3D,CAAC,iBAAApM,MAAA,CAAAqN,OAAe,CAAC;EAAA;AAAA;AAAA,SAAAsS,+CAAAlmB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAAqZ,GAAA,GAvzcwCrd,EAAE,CAAAsF,gBAAA;IAAFtF,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,OAs1c3D,CAAC,WAenC,CAAC;IAr2c0FnE,EAAE,CAAAuF,UAAA,oBAAA4kB,mEAAA1kB,MAAA;MAAFzF,EAAE,CAAA0F,aAAA,CAAA2X,GAAA;MAAA,MAAA9S,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CAk2clF4E,MAAA,CAAAsF,OAAA,CAAApK,MAAc,CAAC;IAAA,EAAC,sBAAA2kB,qEAAA3kB,MAAA;MAl2cgEzF,EAAE,CAAA0F,aAAA,CAAA2X,GAAA;MAAA,MAAA9S,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CAm2chF4E,MAAA,CAAAyL,UAAA,CAAAvQ,MAAiB,CAAC;IAAA,EAAC,wBAAA4kB,uEAAA5kB,MAAA;MAn2c2DzF,EAAE,CAAA0F,aAAA,CAAA2X,GAAA;MAAA,MAAA9S,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CAo2c9E4E,MAAA,CAAA2L,YAAA,CAAAzQ,MAAmB,CAAC;IAAA,EAAC;IAp2cuDzF,EAAE,CAAAqE,YAAA,CAq2c7F,CAAC,CACG,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAAsmB,SAAA,GAAArmB,GAAA,CAAAkC,SAAA;IAAA,MAAAoE,MAAA,GAt2csFvK,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAwE,SAAA,CAy1c5E,CAAC;IAz1cyExE,EAAE,CAAAyE,UAAA,WAAA8F,MAAA,CAAAQ,MAy1c5E,CAAC,WAAAR,MAAA,CAAAiE,MACD,CAAC,WAAAjE,MAAA,CAAAxD,MACD,CAAC,SAAAujB,SACH,CAAC,cAAA/f,MAAA,CAAAiL,SACO,CAAC,iBAAAjL,MAAA,CAAA4L,eACQ,CAAC,kBAAA5L,MAAA,CAAA9C,aACF,CAAC,oBAAA8C,MAAA,CAAAsG,eACG,CAAC,oBAAAtG,MAAA,CAAA2G,eACD,CAAC;EAAA;AAAA;AAAA,SAAAqZ,sCAAAvmB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAA4R,GAAA,GAj2cuD5V,EAAE,CAAAsF,gBAAA;IAAFtF,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,WAw0ctC,CAAC;IAx0cmCnE,EAAE,CAAAuF,UAAA,wBAAAilB,8DAAA;MAAFxqB,EAAE,CAAA0F,aAAA,CAAAkQ,GAAA;MAAA,MAAArL,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CAw0cpD4E,MAAA,CAAAgM,WAAA,CAAY,CAAC;IAAA,EAAC;IAx0coCvW,EAAE,CAAAmE,cAAA,WAo1c/F,CAAC;IAp1c4FnE,EAAE,CAAAuF,UAAA,mBAAAklB,yDAAAhlB,MAAA;MAAFzF,EAAE,CAAA0F,aAAA,CAAAkQ,GAAA;MAAA,MAAArL,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CAm1crF4E,MAAA,CAAAkM,qBAAA,CAAAhR,MAA4B,CAAC;IAAA,EAAC;IAn1cqDzF,EAAE,CAAAqE,YAAA,CAo1c/F,CAAC;IAp1c4FrE,EAAE,CAAAoE,UAAA,IAAA8lB,8CAAA,eAs1c3D,CAAC;IAt1cwDlqB,EAAE,CAAAqE,YAAA,CAu2c3F,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAAuG,MAAA,GAv2cwFvK,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAwE,SAAA,CA20clF,CAAC;IA30c+ExE,EAAE,CAAAyE,UAAA,SAAA8F,MAAA,CAAAU,IA20clF,CAAC,SAAAV,MAAA,CAAAmM,IACD,CAAC,WAAAnM,MAAA,CAAAQ,MACG,CAAC,WAAAR,MAAA,CAAAiE,MACD,CAAC,YAAAjE,MAAA,CAAAoM,OACC,CAAC,WAAApM,MAAA,CAAAxD,MACH,CAAC,oBAAAwD,MAAA,CAAAsG,eACiB,CAAC,oBAAAtG,MAAA,CAAAqM,qBACK,CAAC;IAl1cmD5W,EAAE,CAAAwE,SAAA,CAs1c7D,CAAC;IAt1c0DxE,EAAE,CAAAyE,UAAA,YAAA8F,MAAA,CAAAoM,OAs1c7D,CAAC;EAAA;AAAA;AAAA,SAAA+T,+CAAA1mB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAt1c0DhE,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,OAu3c7C,CAAC;IAv3c0CnE,EAAE,CAAA8E,SAAA,WAk4cjG,CAAC;IAl4c8F9E,EAAE,CAAAqE,YAAA,CAm4c7F,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAA2mB,UAAA,GAAA1mB,GAAA,CAAAkC,SAAA;IAAA,MAAAoE,MAAA,GAn4c0FvK,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAwE,SAAA,CA03cxE,CAAC;IA13cqExE,EAAE,CAAAyE,UAAA,WAAA8F,MAAA,CAAAwM,cA03cxE,CAAC,WAAAxM,MAAA,CAAAyM,cACD,CAAC,WAAAzM,MAAA,CAAAxD,MACT,CAAC,SAAA4jB,UACH,CAAC,cAAApgB,MAAA,CAAAiL,SACO,CAAC,UAAAjL,MAAA,CAAAmL,KACT,CAAC,aAAAnL,MAAA,CAAAuf,QACK,CAAC,eAAAvf,MAAA,CAAAmJ,UACG,CAAC;EAAA;AAAA;AAAA,SAAAkX,sCAAA5mB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAA6mB,GAAA,GAj4cqE7qB,EAAE,CAAAsF,gBAAA;IAAFtF,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,WAs3ctG,CAAC;IAt3cmGnE,EAAE,CAAAuF,UAAA,4BAAAulB,kEAAArlB,MAAA;MAAFzF,EAAE,CAAA0F,aAAA,CAAAmlB,GAAA;MAAA,MAAAtgB,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CAq3clF4E,MAAA,CAAA6M,YAAA,CAAA3R,MAAmB,CAAC;IAAA,EAAC;IAr3c2DzF,EAAE,CAAAoE,UAAA,IAAAsmB,8CAAA,cAu3c7C,CAAC;IAv3c0C1qB,EAAE,CAAAqE,YAAA,CAo4c/F,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAAuG,MAAA,GAp4c4FvK,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,YAAA8F,MAAA,CAAAoM,OA82clF,CAAC,SA92c+E3W,EAAE,CAAAqX,eAAA,KAAAtD,IAAA,EAAAxJ,MAAA,CAAA+M,aAAA,EAAA/M,MAAA,CAAAW,MAAA,CA+2crE,CAAC,WAAAX,MAAA,CAAAgN,cACR,CAAC,WAAAhN,MAAA,CAAAiN,MACT,CAAC,iBAAAjN,MAAA,CAAAkN,YACW,CAAC,cAAAlN,MAAA,CAAAiL,SACP,CAAC,WAAAjL,MAAA,CAAAmN,MACP,CAAC;IAp3ciF1X,EAAE,CAAAoI,WAAA,cAAAmC,MAAA,CAAAoN,iBAAA;IAAF3X,EAAE,CAAAwE,SAAA,CAu3c/D,CAAC;IAv3c4DxE,EAAE,CAAAyE,UAAA,YAAA8F,MAAA,CAAAoM,OAu3c/D,CAAC,iBAAApM,MAAA,CAAAqN,OAAe,CAAC;EAAA;AAAA;AAAA,MAAAmT,IAAA;AAAA,MAAAC,IAAA;AAAA,SAAAC,uCAAAjnB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAv3c4ChE,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAA8E,SAAA,UA65dnG,CAAC;EAAA;EAAA,IAAAd,EAAA;IAAA,MAAAM,MAAA,GA75dgGtE,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,UAAAH,MAAA,CAAA4mB,WAw5d9E,CAAC,SAAA5mB,MAAA,CAAA+L,UACH,CAAC,qBACC,CAAC,gBACN,CAAC,UAAA/L,MAAA,CAAAgM,aACM,CAAC;EAAA;AAAA;AAAA,SAAA6a,uCAAAnnB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAAqB,GAAA,GA55dyErF,EAAE,CAAAsF,gBAAA;IAAFtF,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,UA67dtG,CAAC;IA77dmGnE,EAAE,CAAAuF,UAAA,oBAAA6lB,2DAAA;MAAA,MAAAC,SAAA,GAAFrrB,EAAE,CAAA0F,aAAA,CAAAL,GAAA,EAAAc,SAAA;MAAA,MAAA7B,MAAA,GAAFtE,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CA07d1FrB,MAAA,CAAAzC,MAAA,CAAAgE,IAAA,CAAAwlB,SAAA,CAAAvb,IAAuB,CAAC;IAAA,EAAC,sBAAAwb,6DAAA;MAAA,MAAAD,SAAA,GA17d+DrrB,EAAE,CAAA0F,aAAA,CAAAL,GAAA,EAAAc,SAAA;MAAA,MAAA7B,MAAA,GAAFtE,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CA27dxFrB,MAAA,CAAAyB,QAAA,CAAAF,IAAA,CAAc;QAAAkI,IAAA,EAAAsd,SAAA,CAAAvb,IAAA,CAAAmN;MAA2B,CAAC,CAAC;IAAA,EAAC,wBAAAsO,+DAAA;MAAA,MAAAF,SAAA,GA37d0CrrB,EAAE,CAAA0F,aAAA,CAAAL,GAAA,EAAAc,SAAA;MAAA,MAAA7B,MAAA,GAAFtE,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CA47dtFrB,MAAA,CAAA2B,UAAA,CAAAJ,IAAA,CAAgB;QAAAkI,IAAA,EAAAsd,SAAA,CAAAvb,IAAA,CAAAmN;MAA2B,CAAC,CAAC;IAAA,EAAC;IA57dsCjd,EAAE,CAAAqE,YAAA,CA67d9F,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAAqnB,SAAA,GAAApnB,GAAA,CAAAkC,SAAA;IAAA,MAAA7B,MAAA,GA77d2FtE,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAA2M,WAAA,YAAArI,MAAA,CAAAknB,QAAA,UAk7djE,CAAC;IAl7d8DxrB,EAAE,CAAAyE,UAAA,OAAA4mB,SAAA,CAAA/b,EA86drF,CAAC,OAAA+b,SAAA,CAAA7b,EACD,CAAC,MAAAlL,MAAA,CAAAmnB,YACC,CAAC,SAAAJ,SAAA,CAAA/kB,KACE,CAAC,oBAAAhC,MAAA,CAAAuM,eAGa,CAAC,qBAAAvM,MAAA,CAAAwM,cAAA,CAAAC,GACG,CAAC,gBAAAzM,MAAA,CAAA0M,UAAA,CAAAC,OACN,CAAC,iBAAA3M,MAAA,CAAA4M,eAAA,GAAAC,SAAA,GAAA7M,MAAA,CAAAuW,WAAA,CAAAwQ,SAAA,CAC+B,CAAC,oBAAA/mB,MAAA,CAAA4M,eAChC,CAAC,mBAAAma,SAAA,CAAAvb,IACN,CAAC;EAAA;AAAA;AAAA,SAAA4b,oDAAA1nB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAz7doEhE,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAA8E,SAAA,eAk0e/F,CAAC;EAAA;EAAA,IAAAd,EAAA;IAAA,MAAA2nB,IAAA,GAAA1nB,GAAA,CAAAkC,SAAA;IAl0e4FnG,EAAE,CAAAoI,WAAA,MAAAujB,IAAA;EAAA;AAAA;AAAA,SAAAC,sCAAA5nB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAFhE,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,OA2zetE,CAAC;IA3zemEnE,EAAE,CAAAoE,UAAA,IAAAsnB,mDAAA,mBAk0e/F,CAAC;IAl0e4F1rB,EAAE,CAAAqE,YAAA,CAm0e3F,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAAuG,MAAA,GAn0ewFvK,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAwE,SAAA,CA6zenE,CAAC;IA7zegExE,EAAE,CAAAyE,UAAA,YAAA8F,MAAA,CAAAshB,WA6zenE,CAAC;EAAA;AAAA;AAAA,SAAAC,+CAAA9nB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IA7zegEhE,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAA8E,SAAA,UAi1exF,CAAC;EAAA;EAAA,IAAAd,EAAA;IAAA,MAAA+nB,OAAA,GAAA9nB,GAAA,CAAAkC,SAAA;IAAA,MAAAoE,MAAA,GAj1eqFvK,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,SAAAsnB,OAw0elF,CAAC,WAAAxhB,MAAA,CAAAyhB,WACQ,CAAC,UAAAD,OAAA,CAAA3lB,KACH,CAAC,QAAAmE,MAAA,CAAAyhB,WACF,CAAC,UAAAzhB,MAAA,CAAAL,aAAA,OAAAK,MAAA,CAAAyhB,WACqB,CAAC,sBACpB,CAAC,eAAAzhB,MAAA,CAAAmJ,UACE,CAAC,cAAAnJ,MAAA,CAAA0hB,SACH,CAAC,kBAAA1hB,MAAA,CAAA2hB,aACO,CAAC;EAAA;AAAA;AAAA,SAAAC,sCAAAnoB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAh1e6DhE,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,OAo0e9E,CAAC;IAp0e2EnE,EAAE,CAAAoE,UAAA,IAAA0nB,8CAAA,cAi1ehG,CAAC;IAj1e6F9rB,EAAE,CAAAqE,YAAA,CAk1e3F,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAAuG,MAAA,GAl1ewFvK,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAwE,SAAA,CAu0ejE,CAAC;IAv0e8DxE,EAAE,CAAAyE,UAAA,YAAA8F,MAAA,CAAA6hB,UAu0ejE,CAAC;EAAA;AAAA;AAAA,SAAAC,sCAAAroB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAAgX,GAAA,GAv0e8Dhb,EAAE,CAAAsF,gBAAA;IAAFtF,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,WAk2epG,CAAC;IAl2eiGnE,EAAE,CAAAuF,UAAA,+BAAA+mB,qEAAA7mB,MAAA;MAAFzF,EAAE,CAAA0F,aAAA,CAAAsV,GAAA;MAAA,MAAAzQ,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CAi2e7E4E,MAAA,CAAAuK,gBAAA,CAAArP,MAAuB,CAAC;IAAA,EAAC;IAj2ekDzF,EAAE,CAAAqE,YAAA,CAk2e5F,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAAuG,MAAA,GAl2eyFvK,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,WAAA8F,MAAA,CAAAgiB,UAw1e9E,CAAC,SAAAhiB,MAAA,CAAAiiB,SACJ,CAAC,kBAAAjiB,MAAA,CAAAL,aACY,CAAC,cAAAK,MAAA,CAAAwK,cACJ,CAAC,cAAAxK,MAAA,CAAAyK,UACL,CAAC,cAAAzK,MAAA,CAAA0K,cACG,CAAC,kBAAA1K,MAAA,CAAA2K,kBACO,CAAC,mBAAA3K,MAAA,CAAA4K,mBACC,CAAC,cAAA5K,MAAA,CAAAc,SAChB,CAAC;IAh2eyErL,EAAE,CAAAoI,WAAA,cAAAmC,MAAA,CAAAkiB,cAAA;EAAA;AAAA;AAAA,SAAAC,sCAAA1oB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAFhE,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAA8E,SAAA,WA22e5F,CAAC;EAAA;EAAA,IAAAd,EAAA;IAAA,MAAAuG,MAAA,GA32eyFvK,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,UAAA8F,MAAA,CAAA8J,UAs2e/E,CAAC,WAAA9J,MAAA,CAAAiB,WACC,CAAC,WAAAjB,MAAA,CAAAkB,WAAA,CAAAC,MACM,CAAC,WAAAnB,MAAA,CAAAU,IAAA,CAAAC,MACR,CAAC,UAAAX,MAAA,CAAAU,IAAA,CAAAE,KACH,CAAC;EAAA;AAAA;AAAA,SAAAwhB,+CAAA3oB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAAqS,GAAA,GA12e4ErW,EAAE,CAAAsF,gBAAA;IAAFtF,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,OA62ed,CAAC,WAkBlF,CAAC;IA/3e4FnE,EAAE,CAAAuF,UAAA,oBAAAqnB,mEAAAnnB,MAAA;MAAFzF,EAAE,CAAA0F,aAAA,CAAA2Q,GAAA;MAAA,MAAA9L,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CA43epF4E,MAAA,CAAAsF,OAAA,CAAApK,MAAc,CAAC;IAAA,EAAC,sBAAAonB,qEAAApnB,MAAA;MA53ekEzF,EAAE,CAAA0F,aAAA,CAAA2Q,GAAA;MAAA,MAAA9L,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CA63elF4E,MAAA,CAAAyL,UAAA,CAAAvQ,MAAiB,CAAC;IAAA,EAAC,wBAAAqnB,uEAAArnB,MAAA;MA73e6DzF,EAAE,CAAA0F,aAAA,CAAA2Q,GAAA;MAAA,MAAA9L,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CA83ehF4E,MAAA,CAAA2L,YAAA,CAAAzQ,MAAmB,CAAC;IAAA,EAAC;IA93eyDzF,EAAE,CAAAqE,YAAA,CA+3e/F,CAAC,CACG,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAA+oB,SAAA,GAAA9oB,GAAA,CAAAkC,SAAA;IAAA,MAAAoE,MAAA,GAh4ewFvK,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,4BA62ef,CAAC;IA72eYzE,EAAE,CAAAwE,SAAA,CAg3e1E,CAAC;IAh3euExE,EAAE,CAAAyE,UAAA,aAAA8F,MAAA,CAAAkL,QAg3e1E,CAAC,WAAAlL,MAAA,CAAAQ,MACL,CAAC,WAAAR,MAAA,CAAAiE,MACD,CAAC,WAAAjE,MAAA,CAAAxD,MACD,CAAC,SAAAgmB,SACH,CAAC,kBAAAxiB,MAAA,CAAA9C,aACe,CAAC,cAAA8C,MAAA,CAAAiL,SACT,CAAC,UAAAjL,MAAA,CAAAmL,KACT,CAAC,qBAAAnL,MAAA,CAAAif,gBACqB,CAAC,eAAAjf,MAAA,CAAAmJ,UACb,CAAC,oBAAAnJ,MAAA,CAAAsG,eACS,CAAC,oBAAAtG,MAAA,CAAA2G,eACD,CAAC;EAAA;AAAA;AAAA,SAAA8b,sCAAAhpB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IA33eyDhE,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,OA42e9C,CAAC;IA52e2CnE,EAAE,CAAAoE,UAAA,IAAAuoB,8CAAA,gBA62ed,CAAC;IA72eW3sB,EAAE,CAAAqE,YAAA,CAi4e7F,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAAuG,MAAA,GAj4e0FvK,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAoI,WAAA,cAAAmC,MAAA,CAAA0iB,aAAA;IAAFjtB,EAAE,CAAAwE,SAAA,CA62e7D,CAAC;IA72e0DxE,EAAE,CAAAyE,UAAA,YAAA8F,MAAA,CAAAoM,OA62e7D,CAAC,iBAAApM,MAAA,CAAAqN,OAAe,CAAC;EAAA;AAAA;AAAA,SAAAsV,+CAAAlpB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAAqZ,GAAA,GA72e0Crd,EAAE,CAAAsF,gBAAA;IAAFtF,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,OAm4e3C,CAAC,WAkBrD,CAAC;IAr5e4FnE,EAAE,CAAAuF,UAAA,oBAAA4nB,mEAAA1nB,MAAA;MAAFzF,EAAE,CAAA0F,aAAA,CAAA2X,GAAA;MAAA,MAAA9S,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CAk5epF4E,MAAA,CAAAsF,OAAA,CAAApK,MAAc,CAAC;IAAA,EAAC,sBAAA2nB,qEAAA3nB,MAAA;MAl5ekEzF,EAAE,CAAA0F,aAAA,CAAA2X,GAAA;MAAA,MAAA9S,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CAm5elF4E,MAAA,CAAAyL,UAAA,CAAAvQ,MAAiB,CAAC;IAAA,EAAC,wBAAA4nB,uEAAA5nB,MAAA;MAn5e6DzF,EAAE,CAAA0F,aAAA,CAAA2X,GAAA;MAAA,MAAA9S,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CAo5ehF4E,MAAA,CAAA2L,YAAA,CAAAzQ,MAAmB,CAAC;IAAA,EAAC;IAp5eyDzF,EAAE,CAAAqE,YAAA,CAq5e/F,CAAC,CACG,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAAsmB,SAAA,GAAArmB,GAAA,CAAAkC,SAAA;IAAA,MAAAoE,MAAA,GAt5ewFvK,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAwE,SAAA,CAs4e1E,CAAC;IAt4euExE,EAAE,CAAAyE,UAAA,aAAA8F,MAAA,CAAAkL,QAs4e1E,CAAC,WAAAlL,MAAA,CAAAQ,MACL,CAAC,WAAAR,MAAA,CAAAiE,MACD,CAAC,WAAAjE,MAAA,CAAAxD,MACD,CAAC,SAAAujB,SACH,CAAC,kBAAA/f,MAAA,CAAA9C,aACe,CAAC,cAAA8C,MAAA,CAAAiL,SACT,CAAC,UAAAjL,MAAA,CAAAmL,KACT,CAAC,qBAAAnL,MAAA,CAAAif,gBACqB,CAAC,eAAAjf,MAAA,CAAAmJ,UACb,CAAC,oBAAAnJ,MAAA,CAAAsG,eACS,CAAC,oBAAAtG,MAAA,CAAA2G,eACD,CAAC;EAAA;AAAA;AAAA,SAAAoc,sCAAAtpB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAj5eyDhE,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,OAk4e/C,CAAC;IAl4e4CnE,EAAE,CAAAoE,UAAA,IAAA8oB,8CAAA,gBAm4e3C,CAAC;IAn4ewCltB,EAAE,CAAAqE,YAAA,CAu5e7F,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAAuG,MAAA,GAv5e0FvK,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAoI,WAAA,cAAAmC,MAAA,CAAA0iB,aAAA;IAAFjtB,EAAE,CAAAwE,SAAA,CAm4e7D,CAAC;IAn4e0DxE,EAAE,CAAAyE,UAAA,YAAA8F,MAAA,CAAAoM,OAm4e7D,CAAC,iBAAApM,MAAA,CAAAqN,OAAe,CAAC;EAAA;AAAA;AAAA,MAAA2V,IAAA;AAAA,SAAAC,qCAAAxpB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAn4e0ChE,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,UAktf5E,CAAC;IAltfyEnE,EAAE,CAAA8E,SAAA,UAmtfU,CAAC;IAntfb9E,EAAE,CAAAqE,YAAA,CAotf5F,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAAM,MAAA,GAptfyFtE,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAwE,SAAA,CAmtfjD,CAAC;IAntf8CxE,EAAE,CAAAyE,UAAA,UAAAH,MAAA,CAAA4jB,IAmtfjD,CAAC,SAAA5jB,MAAA,CAAAmpB,gBAAyB,CAAC,iBAAAnpB,MAAA,CAAAopB,YAA6B,CAAC;EAAA;AAAA;AAAA,MAAAC,IAAA;AAAA,SAAAC,8CAAA5pB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAntfVhE,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAA8E,SAAA,UA+5f9F,CAAC;EAAA;EAAA,IAAAd,EAAA;IAAA,MAAA6pB,MAAA,GA/5f2F7tB,EAAE,CAAAuE,aAAA,GAAA4B,SAAA;IAAA,MAAA2F,MAAA,GAAF9L,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,SAAAopB,MAq5fzF,CAAC,WAAA/hB,MAAA,CAAAkgB,WACS,CAAC,UAAAlgB,MAAA,CAAAxF,KAAA,CAAAunB,MAAA,CACH,CAAC,UAAA/hB,MAAA,CAAAP,SAAA,CAAAsiB,MAAA,CACG,CAAC,cAAA/hB,MAAA,CAAAgiB,UACD,CAAC,kBAAAhiB,MAAA,CAAAiiB,cACO,CAAC,QAAAjiB,MAAA,CAAAhJ,GACtB,CAAC,UAAA+qB,MAAA,CAAA/f,KACO,CAAC,kBAAAhC,MAAA,CAAAkiB,aACW,CAAC,eAAAliB,MAAA,CAAA4H,UACP,CAAC;EAAA;AAAA;AAAA,SAAAua,qCAAAjqB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAAqG,GAAA,GA95fyErK,EAAE,CAAAsF,gBAAA;IAAFtF,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,OAi5fvD,CAAC;IAj5foDnE,EAAE,CAAAoE,UAAA,IAAAwpB,6CAAA,eA+5ftG,CAAC;IA/5fmG5tB,EAAE,CAAAmE,cAAA,UAy7ftG,CAAC;IAz7fmGnE,EAAE,CAAAuF,UAAA,oBAAA2oB,yDAAAzoB,MAAA;MAAFzF,EAAE,CAAA0F,aAAA,CAAA2E,GAAA;MAAA,MAAAyB,MAAA,GAAF9L,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CA86f1FmG,MAAA,CAAA+D,OAAA,CAAApK,MAAc,CAAC;IAAA,EAAC,sBAAA0oB,2DAAA1oB,MAAA;MA96fwEzF,EAAE,CAAA0F,aAAA,CAAA2E,GAAA;MAAA,MAAAyB,MAAA,GAAF9L,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CA+6fxFmG,MAAA,CAAA/F,QAAA,CAAAF,IAAA,CAAAJ,MAAoB,CAAC;IAAA,EAAC,wBAAA2oB,6DAAA3oB,MAAA;MA/6fgEzF,EAAE,CAAA0F,aAAA,CAAA2E,GAAA;MAAA,MAAAyB,MAAA,GAAF9L,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CAg7ftFmG,MAAA,CAAA7F,UAAA,CAAAJ,IAAA,CAAAJ,MAAsB,CAAC;IAAA,EAAC,sBAAA4oB,2DAAA5oB,MAAA;MAh7f4DzF,EAAE,CAAA0F,aAAA,CAAA2E,GAAA;MAAA,MAAAyB,MAAA,GAAF9L,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CAi7fxFmG,MAAA,CAAAwiB,QAAA,CAAAzoB,IAAA,CAAAJ,MAAoB,CAAC;IAAA,EAAC;IAj7fgEzF,EAAE,CAAAqE,YAAA,CAy7f9F,CAAC,CACJ,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAA6pB,MAAA,GAAA5pB,GAAA,CAAAkC,SAAA;IAAA,MAAA2F,MAAA,GA17f8F9L,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAwE,SAAA,CAo5f7E,CAAC;IAp5f0ExE,EAAE,CAAAyE,UAAA,SAAAqH,MAAA,CAAAyiB,YAAA,CAAAV,MAAA,CAo5f7E,CAAC;IAp5f0E7tB,EAAE,CAAAwE,SAAA,CAk6fxE,CAAC;IAl6fqExE,EAAE,CAAAyE,UAAA,eAAAopB,MAAA,CAAAW,UAk6fxE,CAAC,aAAAX,MAAA,CAAAY,QACL,CAAC,gBAAA3iB,MAAA,CAAA4iB,WACC,CAAC,gBAAA5iB,MAAA,CAAAkgB,WACD,CAAC,SAAAlgB,MAAA,CAAAxF,KAAA,CAAAunB,MAAA,CACT,CAAC,UAAAA,MAAA,CAAA/d,IAAA,CAAAhC,KACI,CAAC,aAAAhC,MAAA,CAAA2J,QACJ,CAAC,SAAAoY,MAAA,CAAA/d,IACL,CAAC,QAAAhE,MAAA,CAAAhJ,GACP,CAAC,kBAAAgJ,MAAA,CAAAkiB,aACmB,CAAC,aAAAliB,MAAA,CAAAvF,QAAA,CAAAsnB,MAAA,CAAA/d,IAAA,CACD,CAAC,YAAAhE,MAAA,CAAA4H,UACV,CAAC,oBAAA5H,MAAA,CAAA+E,eAMY,CAAC,qBAAA/E,MAAA,CAAAgF,cAAA,CAAAC,GACG,CAAC,gBAAAjF,MAAA,CAAAkF,UAAA,CAAAC,OACN,CAAC,iBAAAnF,MAAA,CAAA6iB,eAAA,CAAAd,MAAA,CACE,CAAC,oBAAA/hB,MAAA,CAAAoF,eACH,CAAC,mBAAA2c,MAAA,CAAA/d,IACT,CAAC;EAAA;AAAA;AAAA,MAAA8e,IAAA;AAAA,MAAAC,IAAA;AAAA,SAAAC,yCAAA9qB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAAqG,GAAA,GAx7fuErK,EAAE,CAAAsF,gBAAA;IAAFtF,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,UAwjhBtG,CAAC;IAxjhBmGnE,EAAE,CAAAuF,UAAA,oBAAAwpB,6DAAAtpB,MAAA;MAAFzF,EAAE,CAAA0F,aAAA,CAAA2E,GAAA;MAAA,MAAAE,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CAqjhB1F4E,MAAA,CAAAsF,OAAA,CAAApK,MAAc,CAAC;IAAA,EAAC,sBAAAupB,+DAAAvpB,MAAA;MArjhBwEzF,EAAE,CAAA0F,aAAA,CAAA2E,GAAA;MAAA,MAAAE,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CAsjhBxF4E,MAAA,CAAAxE,QAAA,CAAAF,IAAA,CAAAJ,MAAoB,CAAC;IAAA,EAAC,wBAAAwpB,iEAAAxpB,MAAA;MAtjhBgEzF,EAAE,CAAA0F,aAAA,CAAA2E,GAAA;MAAA,MAAAE,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CAujhBtF4E,MAAA,CAAAtE,UAAA,CAAAJ,IAAA,CAAAJ,MAAsB,CAAC;IAAA,EAAC;IAvjhB4DzF,EAAE,CAAAqE,YAAA,CAwjhB9F,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAAkrB,MAAA,GAAAjrB,GAAA,CAAAkC,SAAA;IAAA,MAAAoE,MAAA,GAxjhB2FvK,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,eAAAyqB,MAAA,CAAAV,UA2ihBxE,CAAC,aAAAU,MAAA,CAAAT,QACL,CAAC,gBAAAlkB,MAAA,CAAAmkB,WACC,CAAC,gBAAAnkB,MAAA,CAAAyhB,WACD,CAAC,SAAAzhB,MAAA,CAAAjE,KAAA,CAAA4oB,MAAA,CACT,CAAC,UAAAA,MAAA,CAAApf,IAAA,CAAAhC,KACI,CAAC,SAAAohB,MAAA,CAAApf,IACR,CAAC,kBACA,CAAC,kBAAAof,MAAA,CAAAC,aACgB,CAAC,YAAAD,MAAA,CAAAttB,OACb,CAAC;IApjhB2E5B,EAAE,CAAAoI,WAAA,UAAA8mB,MAAA,CAAAzd,KAAA;EAAA;AAAA;AAAA,MAAA2d,IAAA,GAAAvrB,EAAA;EAAAiM,IAAA,EAAAjM;AAAA;AAAA,SAAAwrB,+CAAArrB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAFhE,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAA8E,SAAA,cA0whBvF,CAAC;EAAA;EAAA,IAAAd,EAAA;IAAA,MAAAsrB,SAAA,GA1whBoFtvB,EAAE,CAAAuE,aAAA,GAAA4B,SAAA;IAAFnG,EAAE,CAAAyE,UAAA,YAAA6qB,SAAA,CAAAC,OAuwhBvE,CAAC,mBACR,CAAC;EAAA;AAAA;AAAA,SAAAC,+CAAAxrB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAxwhB2EhE,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,cA2whBI,CAAC;IA3whBPnE,EAAE,CAAAkF,MAAA,EA6whBnG,CAAC;IA7whBgGlF,EAAE,CAAAqE,YAAA,CA6whBxF,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAAsrB,SAAA,GA7whBqFtvB,EAAE,CAAAuE,aAAA,GAAA4B,SAAA;IAAFnG,EAAE,CAAAwE,SAAA,CA6whBnG,CAAC;IA7whBgGxE,EAAE,CAAAqI,kBAAA,MAAAinB,SAAA,CAAAC,OAAA,CAAAlc,cAAA,OA6whBnG,CAAC;EAAA;AAAA;AAAA,SAAAoc,+CAAAzrB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IA7whBgGhE,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAA8E,SAAA,cA2xhBvF,CAAC;EAAA;EAAA,IAAAd,EAAA;IAAA,MAAAsrB,SAAA,GA3xhBoFtvB,EAAE,CAAAuE,aAAA,GAAA4B,SAAA;IAAA,MAAAoE,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,YAAA6qB,SAAA,CAAAhU,KAyxhBzE,CAAC,gBAAA/Q,MAAA,CAAAnE,KAAA,OACG,CAAC;IA1xhBkEpG,EAAE,CAAAoI,WAAA,MAAAknB,SAAA,CAAAtD,WAAA;EAAA;AAAA;AAAA,SAAA0D,+CAAA1rB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAFhE,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,cAmyhBlG,CAAC;IAnyhB+FnE,EAAE,CAAAkF,MAAA,EAqyhBnG,CAAC;IAryhBgGlF,EAAE,CAAAqE,YAAA,CAqyhBxF,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAAsrB,SAAA,GAryhBqFtvB,EAAE,CAAAuE,aAAA,GAAA4B,SAAA;IAAA,MAAAoE,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAoI,WAAA,MAAAknB,SAAA,CAAAtD,WAAA;IAAFhsB,EAAE,CAAAwE,SAAA,CAqyhBnG,CAAC;IAryhBgGxE,EAAE,CAAA2vB,kBAAA,MAAAplB,MAAA,CAAAnE,KAAA,QAAAkpB,SAAA,CAAAhU,KAAA,CAAAjI,cAAA,OAqyhBnG,CAAC;EAAA;AAAA;AAAA,SAAAuc,mCAAA5rB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAAqG,GAAA,GAryhBgGrK,EAAE,CAAAsF,gBAAA;IAAFtF,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,UA6uhBN,CAAC,UAkB5F,CAAC;IA/vhB8FnE,EAAE,CAAAuF,UAAA,oBAAAsqB,uDAAApqB,MAAA;MAAFzF,EAAE,CAAA0F,aAAA,CAAA2E,GAAA;MAAA,MAAAE,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CAqvhBtF4E,MAAA,CAAAsF,OAAA,CAAApK,MAAc,CAAC;IAAA,EAAC,sBAAAqqB,yDAAArqB,MAAA;MArvhBoEzF,EAAE,CAAA0F,aAAA,CAAA2E,GAAA;MAAA,MAAAE,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CA6vhBpF4E,MAAA,CAAAyL,UAAA,CAAAvQ,MAAiB,CAAC;IAAA,EAAC,wBAAAsqB,2DAAAtqB,MAAA;MA7vhB+DzF,EAAE,CAAA0F,aAAA,CAAA2E,GAAA;MAAA,MAAAE,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CA8vhBlF4E,MAAA,CAAA2L,YAAA,CAAAzQ,MAAmB,CAAC;IAAA,EAAC;IA9vhB2DzF,EAAE,CAAAqE,YAAA,CA+vhBjG,CAAC;IA/vhB8FrE,EAAE,CAAAoE,UAAA,IAAAirB,8CAAA,iBA0whBlG,CAAC,IAAAG,8CAAA,iBACqG,CAAC;IA3whBPxvB,EAAE,CAAAmE,cAAA,aA8whB/B,CAAC;IA9whB4BnE,EAAE,CAAAkF,MAAA,EAgxhBnG,CAAC;IAhxhBgGlF,EAAE,CAAAqE,YAAA,CAgxhBxF,CAAC;IAhxhBqFrE,EAAE,CAAAoE,UAAA,IAAAqrB,8CAAA,iBA2xhBlG,CAAC,IAAAC,8CAAA,iBAQD,CAAC;IAnyhB+F1vB,EAAE,CAAAqE,YAAA,CAsyhB7F,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAAsrB,SAAA,GAAArrB,GAAA,CAAAkC,SAAA;IAAA,MAAAoE,MAAA,GAtyhB0FvK,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAoI,WAAA,cAAAknB,SAAA,CAAAtiB,SAAA;IAAFhN,EAAE,CAAAwE,SAAA,CAgvhBzE,CAAC;IAhvhBsExE,EAAE,CAAAyE,UAAA,WAAA6qB,SAAA,CAAAvoB,MAgvhBzE,CAAC,SAAAuoB,SAAA,CAAAxf,IACL,CAAC,gBAAAwf,SAAA,CAAAZ,WACa,CAAC,gBAAAY,SAAA,CAAAtD,WACD,CAAC,eAAAzhB,MAAA,CAAAmJ,UACV,CAAC,oBAAAnJ,MAAA,CAAAsG,eAGS,CAAC,qBAAAtG,MAAA,CAAAuG,cAAA,CAAAC,GACG,CAAC,gBAAAxG,MAAA,CAAAyG,UAAA,CAAAC,OACN,CAAC,iBAAA1G,MAAA,CAAA2G,eAAA,GAAAC,SAAA,GAAA5G,MAAA,CAAAsQ,WAAA,CAzvhB4D7a,EAAE,CAAA2E,eAAA,KAAAyqB,IAAA,EAAAE,SAAA,EA0vhBrB,CAAC,oBAAA/kB,MAAA,CAAA2G,eAC1C,CAAC,mBAAAoe,SAAA,CAAAxf,IAAA,IAAAA,IACE,CAAC;IA5vhBwD9P,EAAE,CAAAwE,SAAA,CAiwhBhF,CAAC;IAjwhB6ExE,EAAE,CAAAyE,UAAA,SAAA8F,MAAA,CAAAmJ,UAiwhBhF,CAAC;IAjwhB6E1T,EAAE,CAAAwE,SAAA,CA2whBvE,CAAC;IA3whBoExE,EAAE,CAAAyE,UAAA,UAAA8F,MAAA,CAAAmJ,UA2whBvE,CAAC;IA3whBoE1T,EAAE,CAAAwE,SAAA,EAgxhBnG,CAAC;IAhxhBgGxE,EAAE,CAAAqI,kBAAA,MAAAinB,SAAA,CAAAlpB,KAAA,KAgxhBnG,CAAC;IAhxhBgGpG,EAAE,CAAAwE,SAAA,CAkxhBhF,CAAC;IAlxhB6ExE,EAAE,CAAAyE,UAAA,SAAA8F,MAAA,CAAAmJ,UAkxhBhF,CAAC;IAlxhB6E1T,EAAE,CAAAwE,SAAA,CA6xhB/E,CAAC;IA7xhB4ExE,EAAE,CAAAyE,UAAA,UAAA8F,MAAA,CAAAmJ,UA6xhB/E,CAAC;EAAA;AAAA;AAAA,MAAAsc,IAAA;AAAA,MAAAC,IAAA;AAAA,SAAAC,mCAAAlsB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IA7xhB4EhE,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAA8E,SAAA,aAgqiBrG,CAAC;EAAA;EAAA,IAAAd,EAAA;IAAA,MAAAuG,MAAA,GAhqiBkGvK,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAoI,WAAA,SAAAmC,MAAA,CAAA4lB,SAAA,eAAA5lB,MAAA,CAAA6lB,aAAA,OAAA7lB,MAAA,CAAA8lB,QAAA;EAAA;AAAA;AAAA,MAAAC,IAAA;AAAA,SAAAC,yCAAAvsB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAFhE,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAA8E,SAAA,aA84iBvG,CAAC;EAAA;EAAA,IAAAd,EAAA;IAAA,MAAAwsB,IAAA,GAAAvsB,GAAA,CAAAkC,SAAA;IAAA,MAAAoE,MAAA,GA94iBoGvK,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAA2M,WAAA,SAAApC,MAAA,CAAAkmB,UAy4iB9E,CAAC;IAz4iB2EzwB,EAAE,CAAAoI,WAAA,MAAAooB,IAAA,CAAA9e,CAAA,OAAA8e,IAAA,CAAA7e,CAAA,WAAA6e,IAAA,CAAArlB,KAAA,YAAAqlB,IAAA,CAAAtlB,MAAA;EAAA;AAAA;AAAA,SAAAwlB,sCAAA1sB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAA4Q,GAAA,GAAF5U,EAAE,CAAAsF,gBAAA;IAAFtF,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,UAg6iBvG,CAAC;IAh6iBoGnE,EAAE,CAAAuF,UAAA,oBAAAorB,0DAAAlrB,MAAA;MAAFzF,EAAE,CAAA0F,aAAA,CAAAkP,GAAA;MAAA,MAAArK,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CA+5iB5F4E,MAAA,CAAAsF,OAAA,CAAApK,MAAc,CAAC;IAAA,EAAC;IA/5iB0EzF,EAAE,CAAAqE,YAAA,CAg6iBvG,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAA4sB,IAAA,GAAA3sB,GAAA,CAAAkC,SAAA;IAAA,MAAAoE,MAAA,GAh6iBoGvK,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,MAAAmsB,IAAA,CAAAlf,CAk5iB9F,CAAC,MAAAkf,IAAA,CAAAjf,CACD,CAAC,UAAAif,IAAA,CAAAzlB,KACO,CAAC,WAAAylB,IAAA,CAAA1lB,MACC,CAAC,UAAA0lB,IAAA,CAAAtqB,KACH,CAAC,cAAAsqB,IAAA,CAAAT,SACO,CAAC,cAAAS,IAAA,CAAAC,SACD,CAAC,SAAAD,IAAA,CAAA9gB,IACX,CAAC,UAAA8gB,IAAA,CAAAxqB,KACC,CAAC,eAAAmE,MAAA,CAAAumB,UACO,CAAC,oBAAAvmB,MAAA,CAAAoI,eACS,CAAC,oBAAApI,MAAA,CAAAwmB,eACD,CAAC,eAAAxmB,MAAA,CAAAmJ,UACX,CAAC;EAAA;AAAA;AAAA,MAAAsd,IAAA;AAAA,SAAAC,0CAAAjtB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IA95iB2EhE,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,UAqqjBhF,CAAC;IArqjB6EnE,EAAE,CAAA8E,SAAA,UA2qjBnG,CAAC;IA3qjBgG9E,EAAE,CAAAqE,YAAA,CA4qjBhG,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAAM,MAAA,GA5qjB6FtE,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAwE,SAAA,CAwqjB/D,CAAC;IAxqjB4DxE,EAAE,CAAAyE,UAAA,gBAAAH,MAAA,CAAAmH,WAAA,CAAA2E,QAwqjB/D,CAAC,SAAA9L,MAAA,CAAA+L,UAClB,CAAC,UAAA/L,MAAA,CAAAgM,aACG,CAAC;EAAA;AAAA;AAAA,SAAA4gB,0DAAAltB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IA1qjByEhE,EAAE,CAAA8E,SAAA,aAysjBtF,CAAC;EAAA;EAAA,IAAAd,EAAA;IAAA,MAAAM,MAAA,GAzsjBmFtE,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,YAAAH,MAAA,CAAAwJ,KAssjBhF,CAAC,oBAAAxJ,MAAA,CAAAqO,eACiB,CAAC;EAAA;AAAA;AAAA,SAAAwe,0DAAAntB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAvsjB2DhE,EAAE,CAAAmE,cAAA,aA0sjB/C,CAAC;IA1sjB4CnE,EAAE,CAAAkF,MAAA,EA4sjBnG,CAAC;IA5sjBgGlF,EAAE,CAAAqE,YAAA,CA4sjBtF,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAAM,MAAA,GA5sjBmFtE,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAwE,SAAA,CA4sjBnG,CAAC;IA5sjBgGxE,EAAE,CAAAqI,kBAAA,MAAA/D,MAAA,CAAA8sB,cAAA,KA4sjBnG,CAAC;EAAA;AAAA;AAAA,SAAAC,mDAAArtB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IA5sjBgGhE,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,sBA8rjBtG,CAAC;IA9rjBmGnE,EAAE,CAAAsxB,eAAA;IAAFtxB,EAAE,CAAAmE,cAAA,OA+rjBD,CAAC;IA/rjBFnE,EAAE,CAAA8E,SAAA,aAgsjBtB,CAAC,QAClE,CAAC;IAjsjBoF9E,EAAE,CAAAoE,UAAA,IAAA8sB,yDAAA,iBAwsjBlG,CAAC,IAAAC,yDAAA,iBAEkD,CAAC;IA1sjB4CnxB,EAAE,CAAAqE,YAAA,CA6sjB3F,CAAC,CACO,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAAM,MAAA,GA9sjBgFtE,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAA2M,WAAA,yBA6rjBtE,CAAC;IA7rjBmE3M,EAAE,CAAAoI,WAAA,MAAA9D,MAAA,CAAAoN,CAAA,OAAApN,MAAA,CAAAqN,CAAA,WAAArN,MAAA,CAAA6G,KAAA,YAAA7G,MAAA,CAAA4G,MAAA;IAAFlL,EAAE,CAAAwE,SAAA,CA+rjB9D,CAAC;IA/rjB2DxE,EAAE,CAAA2M,WAAA,UAAArI,MAAA,CAAAitB,YAAA,EA+rjB9D,CAAC,WAAAjtB,MAAA,CAAA4G,MAAA,OAA8B,CAAC,UAAA5G,MAAA,CAAA6G,KAAA,OAA4B,CAAC;IA/rjBDnL,EAAE,CAAAwE,SAAA,CAgsjBrC,CAAC;IAhsjBkCxE,EAAE,CAAAyE,UAAA,cAAAH,MAAA,CAAA+B,cAAA,EAAFrG,EAAE,CAAAgF,cAgsjBrC,CAAC;IAhsjBkChF,EAAE,CAAAwE,SAAA,EAmsjBhF,CAAC;IAnsjB6ExE,EAAE,CAAAyE,UAAA,SAAAH,MAAA,CAAAoP,UAmsjBhF,CAAC;IAnsjB6E1T,EAAE,CAAAwE,SAAA,CA0sjBrE,CAAC;IA1sjBkExE,EAAE,CAAAyE,UAAA,UAAAH,MAAA,CAAAoP,UA0sjBrE,CAAC;EAAA;AAAA;AAAA,MAAA8d,IAAA;AAAA,SAAAC,6CAAAztB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAAqG,GAAA,GA1sjBkErK,EAAE,CAAAsF,gBAAA;IAAFtF,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,UAs2jBxG,CAAC;IAt2jBqGnE,EAAE,CAAAuF,UAAA,oBAAAmsB,iEAAAjsB,MAAA;MAAFzF,EAAE,CAAA0F,aAAA,CAAA2E,GAAA;MAAA,MAAAE,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CA81jB5F4E,MAAA,CAAAsF,OAAA,CAAApK,MAAc,CAAC;IAAA,EAAC;IA91jB0EzF,EAAE,CAAAqE,YAAA,CAs2jBhG,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAA2tB,IAAA,GAAA1tB,GAAA,CAAAkC,SAAA;IAAA,MAAAoE,MAAA,GAt2jB6FvK,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,SAAAktB,IAAA,CAAA7hB,IAk1jBxF,CAAC,MAAA6hB,IAAA,CAAAjgB,CACP,CAAC,MAAAigB,IAAA,CAAAhgB,CACD,CAAC,UAAAggB,IAAA,CAAAxmB,KACO,CAAC,WAAAwmB,IAAA,CAAAzmB,MACC,CAAC,SAAAymB,IAAA,CAAAzJ,IACL,CAAC,UAAAyJ,IAAA,CAAAvrB,KACC,CAAC,UAAAurB,IAAA,CAAA7jB,KACD,CAAC,oBAAAvD,MAAA,CAAAoI,eACiB,CAAC,oBAAApI,MAAA,CAAAwmB,eACD,CAAC,aAAAxmB,MAAA,CAAAkL,QACf,CAAC,eAAAlL,MAAA,CAAAmJ,UACG,CAAC,oBAAAnJ,MAAA,CAAAsG,eAGS,CAAC,qBAAAtG,MAAA,CAAAuG,cAAA,CAAAC,GACG,CAAC,gBAAAxG,MAAA,CAAAyG,UAAA,CAAAC,OACN,CAAC,iBAAA1G,MAAA,CAAA2G,eAAA,GAAAC,SAAA,GAAA5G,MAAA,CAAA6G,cAAA,CAAAugB,IAAA,CAC6B,CAAC,oBAAApnB,MAAA,CAAA2G,eAC9B,CAAC,mBAAAygB,IAAA,CAAA7hB,IACX,CAAC;EAAA;AAAA;AAAA,MAAA8hB,IAAA;AAAA,MAAAC,IAAA;AAAA,MAAAC,IAAA,GAAAA,CAAA;AAAA,SAAAC,0CAAA/tB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAr2jB2EhE,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAA8E,SAAA,cAuskBnG,CAAC;EAAA;EAAA,IAAAd,EAAA;IAAA,MAAAuG,MAAA,GAvskBgGvK,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAoI,WAAA,cAAAmC,MAAA,CAAAynB,aAAA,YAAAznB,MAAA,CAAAxD,MAAA,CAAAwiB,QAAA,CAAAhf,MAAA,CAAA0nB,KAAA;EAAA;AAAA;AAAA,SAAAC,0CAAAluB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAFhE,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAA8E,SAAA,cAitkBnG,CAAC;EAAA;EAAA,IAAAd,EAAA;IAAA,MAAAuG,MAAA,GAjtkBgGvK,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAoI,WAAA,cAAAmC,MAAA,CAAAynB,aAAA,YAAAznB,MAAA,CAAAxD,MAAA,CAAAwiB,QAAA,CAAAhf,MAAA,CAAA0nB,KAAA;EAAA;AAAA;AAAA,MAAAE,IAAA;AAAA,MAAAC,IAAA;AAAA,SAAAC,qCAAAruB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAFhE,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,UA8ilB7B,CAAC;IA9ilB0BnE,EAAE,CAAA8E,SAAA,UA+ilBpE,CAAC;IA/ilBiE9E,EAAE,CAAAqE,YAAA,CAgjlB/F,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAAsuB,OAAA,GAAAruB,GAAA,CAAAkC,SAAA;IAhjlB4FnG,EAAE,CAAAwE,SAAA,CA+ilBvE,CAAC;IA/ilBoExE,EAAE,CAAAoI,WAAA,MAAAkqB,OAAA,CAAA/vB,IAAA;EAAA;AAAA;AAAA,SAAAgwB,qCAAAvuB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAFhE,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,UAijlB7B,CAAC,aAKxE,CAAC;IAtjlBiGnE,EAAE,CAAAkF,MAAA,EAwjlBrG,CAAC;IAxjlBkGlF,EAAE,CAAAqE,YAAA,CAwjlB1F,CAAC,CACN,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAAwuB,OAAA,GAAAvuB,GAAA,CAAAkC,SAAA;IAzjlB4FnG,EAAE,CAAAwE,SAAA,CAmjlB/D,CAAC;IAnjlB4DxE,EAAE,CAAA2M,WAAA,gBAAA6lB,OAAA,CAAAjpB,UAmjlB/D,CAAC;IAnjlB4DvJ,EAAE,CAAAoI,WAAA,cAAAoqB,OAAA,CAAAhpB,aAAA;IAAFxJ,EAAE,CAAAwE,SAAA,CAwjlBrG,CAAC;IAxjlBkGxE,EAAE,CAAAqI,kBAAA,MAAAmqB,OAAA,CAAAC,IAAA,KAwjlBrG,CAAC;EAAA;AAAA;AAAA,SAAAC,qCAAA1uB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAxjlBkGhE,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,UA0jlB3B,CAAC;IA1jlBwBnE,EAAE,CAAA8E,SAAA,UA2jlBpE,CAAC;IA3jlBiE9E,EAAE,CAAAqE,YAAA,CA4jlB/F,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAA+nB,OAAA,GAAA9nB,GAAA,CAAAkC,SAAA;IA5jlB4FnG,EAAE,CAAAwE,SAAA,CA2jlBvE,CAAC;IA3jlBoExE,EAAE,CAAAoI,WAAA,MAAA2jB,OAAA,CAAAxpB,IAAA;EAAA;AAAA;AAAA,SAAAowB,iCAAA3uB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAAqG,GAAA,GAAFrK,EAAE,CAAAsF,gBAAA;IAAFtF,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,OAo0lBvB,CAAC,UAe5E,CAAC;IAn1lB+FnE,EAAE,CAAAuF,UAAA,oBAAAqtB,qDAAAntB,MAAA;MAAFzF,EAAE,CAAA0F,aAAA,CAAA2E,GAAA;MAAA,MAAAE,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CAg1lBtF4E,MAAA,CAAAsF,OAAA,CAAApK,MAAc,CAAC;IAAA,EAAC,sBAAAotB,uDAAAptB,MAAA;MAh1lBoEzF,EAAE,CAAA0F,aAAA,CAAA2E,GAAA;MAAA,MAAAE,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CAi1lBpF4E,MAAA,CAAAyL,UAAA,CAAAvQ,MAAiB,CAAC;IAAA,EAAC,wBAAAqtB,yDAAArtB,MAAA;MAj1lB+DzF,EAAE,CAAA0F,aAAA,CAAA2E,GAAA;MAAA,MAAAE,MAAA,GAAFvK,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CAk1lBlF4E,MAAA,CAAA2L,YAAA,CAAAzQ,MAAmB,CAAC;IAAA,EAAC;IAl1lB2DzF,EAAE,CAAAqE,YAAA,CAm1lB1F,CAAC,CACJ,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAAkrB,MAAA,GAAAjrB,GAAA,CAAAkC,SAAA;IAAA,MAAAoE,MAAA,GAp1lB0FvK,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAoI,WAAA,cAAAmC,MAAA,CAAAwoB,QAAA;IAAF/yB,EAAE,CAAAwE,SAAA,CAu0lB9D,CAAC;IAv0lB2DxE,EAAE,CAAAyE,UAAA,kBAAAyqB,MAAA,CAAA8D,aAu0lB9D,CAAC,aAAA9D,MAAA,CAAA+D,QACX,CAAC,iBAAA1oB,MAAA,CAAA2oB,YACG,CAAC,WAAA3oB,MAAA,CAAAxD,MACb,CAAC,aAAAwD,MAAA,CAAAhE,QAAA,CAAA2oB,MAAA,CAAA+D,QAAA,CAAAnjB,IAAA,CACsB,CAAC,oBAAAvF,MAAA,CAAAsG,eACN,CAAC,oBAAAtG,MAAA,CAAA2G,eACD,CAAC,oBAAA3G,MAAA,CAAAoI,eACD,CAAC,eAAApI,MAAA,CAAAmJ,UACX,CAAC;EAAA;AAAA;AAAA,SAAAyf,iCAAAnvB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IA/0lBqEhE,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAA8E,SAAA,UAk2lB5F,CAAC;EAAA;EAAA,IAAAd,EAAA;IAAA,MAAAuG,MAAA,GAl2lByFvK,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,gBAAA8F,MAAA,CAAA6oB,WAy1lBxE,CAAC,kBAAA7oB,MAAA,CAAA8oB,aACG,CAAC,QAAA9oB,MAAA,CAAA1H,GACrB,CAAC,QAAA0H,MAAA,CAAAzH,GACD,CAAC,WAAAyH,MAAA,CAAAyhB,WACU,CAAC,cAAAzhB,MAAA,CAAA+oB,SACA,CAAC,eAAA/oB,MAAA,CAAA4R,UACC,CAAC,eAAA5R,MAAA,CAAAikB,UACD,CAAC,mBAAAjkB,MAAA,CAAAgpB,kBACW,CAAC;EAAA;AAAA;AAAA,SAAAC,oCAAAxvB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAj2lB2DhE,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,gBA02lBpG,CAAC,cACoB,CAAC;IA32lB4EnE,EAAE,CAAAkF,MAAA,EA22lB7D,CAAC;IA32lB0DlF,EAAE,CAAAqE,YAAA,CA22lBrD,CAAC;IA32lBkDrE,EAAE,CAAAmE,cAAA,eA42lB3E,CAAC;IA52lBwEnE,EAAE,CAAAkF,MAAA,EA42lBhE,CAAC;IA52lB6DlF,EAAE,CAAAqE,YAAA,CA42lBxD,CAAC,CACnC,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAAuG,MAAA,GA72lBuFvK,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAA2M,WAAA,wBAu2lBtE,CAAC;IAv2lBmE3M,EAAE,CAAAoI,WAAA,cAAAmC,MAAA,CAAAf,aAAA;IAAFxJ,EAAE,CAAAwE,SAAA,EA22lB7D,CAAC;IA32lB0DxE,EAAE,CAAAmF,iBAAA,CAAAoF,MAAA,CAAAkpB,YA22lB7D,CAAC;IA32lB0DzzB,EAAE,CAAAwE,SAAA,EA42lBhE,CAAC;IA52lB6DxE,EAAE,CAAAmF,iBAAA,CAAAoF,MAAA,CAAA0nB,KA42lBhE,CAAC;EAAA;AAAA;AAAA,SAAAyB,kCAAA1vB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAAqG,GAAA,GA52lB6DrK,EAAE,CAAAsF,gBAAA;IAAFtF,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,UAynmBpG,CAAC,UACU,CAAC,uBAMR,CAAC;IAhomB6FnE,EAAE,CAAA8E,SAAA,aAiomB1B,CAAC,aACD,CAAC;IAlomBuB9E,EAAE,CAAAqE,YAAA,CAmomB5E,CAAC,CACb,CAAC;IApomBqFrE,EAAE,CAAAmE,cAAA,aA6omBlG,CAAC;IA7omB+FnE,EAAE,CAAAuF,UAAA,mBAAAouB,wDAAA;MAAA,MAAAC,OAAA,GAAF5zB,EAAE,CAAA0F,aAAA,CAAA2E,GAAA,EAAAlE,SAAA;MAAA,MAAA2F,MAAA,GAAF9L,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CA2omBvFmG,MAAA,CAAAjK,MAAA,CAAAgE,IAAA,CAAA+tB,OAAA,CAAA9jB,IAAqB,CAAC;IAAA,EAAC,wBAAA+jB,6DAAA;MAAA,MAAAD,OAAA,GA3omB8D5zB,EAAE,CAAA0F,aAAA,CAAA2E,GAAA,EAAAlE,SAAA;MAAA,MAAA2F,MAAA,GAAF9L,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CA4omBlFmG,MAAA,CAAA/F,QAAA,CAAAF,IAAA,CAAA+tB,OAAA,CAAA9jB,IAAuB,CAAC;IAAA,EAAC;IA5omBuD9P,EAAE,CAAAqE,YAAA,CA6omBvF,CAAC,CACP,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAA4vB,OAAA,GAAA3vB,GAAA,CAAAkC,SAAA;IAAA,MAAA2F,MAAA,GA9omB0F9L,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAyE,UAAA,oBAAAqH,MAAA,CAAA+E,eAmnmBhE,CAAC,gBAAA/E,MAAA,CAAAkF,UAAA,CAAAC,OACF,CAAC,0BACT,CAAC,iBAAAnF,MAAA,CAAAoF,eAAA,GAAAC,SAAA,GAAAyiB,OAAA,CAAA3iB,OACgC,CAAC,oBAAAnF,MAAA,CAAAoF,eACzB,CAAC,mBAAA0iB,OAAA,CAAA9jB,IACR,CAAC;IAxnmBoE9P,EAAE,CAAAwE,SAAA,EA4nmB5E,CAAC;IA5nmByExE,EAAE,CAAAoI,WAAA,OAAAwrB,OAAA,CAAAE,EAAA,QAAAF,OAAA,CAAAG,MAAA,CAAAlnB,EAAA,QAAA+mB,OAAA,CAAAI,MAAA,CAAAC,EAAA;IAAFj0B,EAAE,CAAAwE,SAAA,CAiomBtC,CAAC;IAjomBmCxE,EAAE,CAAAoI,WAAA,eAAAwrB,OAAA,CAAAM,UAAA;IAAFl0B,EAAE,CAAAwE,SAAA,CAkomBtC,CAAC;IAlomBmCxE,EAAE,CAAAoI,WAAA,eAAAwrB,OAAA,CAAAO,QAAA;IAAFn0B,EAAE,CAAAwE,SAAA,CAsomB7E,CAAC;IAtomB0ExE,EAAE,CAAAoI,WAAA,MAAAwrB,OAAA,CAAAQ,IAAA,YAAAR,OAAA,CAAAnkB,YAAA,kBAAAmkB,OAAA,CAAApO,WAAA;EAAA;AAAA;AAAA,SAAA6O,kCAAArwB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAAgX,GAAA,GAAFhb,EAAE,CAAAsF,gBAAA;IAAFtF,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,WAgpmBhB,CAAC,cAgBnF,CAAC;IAhqmB+FnE,EAAE,CAAAuF,UAAA,mBAAA+uB,wDAAA;MAAA,MAAAC,OAAA,GAAFv0B,EAAE,CAAA0F,aAAA,CAAAsV,GAAA,EAAA7U,SAAA;MAAA,MAAA2F,MAAA,GAAF9L,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CA8pmBvFmG,MAAA,CAAAjK,MAAA,CAAAgE,IAAA,CAAA0uB,OAAA,CAAAzkB,IAAqB,CAAC;IAAA,EAAC,wBAAA0kB,6DAAA;MAAA,MAAAD,OAAA,GA9pmB8Dv0B,EAAE,CAAA0F,aAAA,CAAAsV,GAAA,EAAA7U,SAAA;MAAA,MAAA2F,MAAA,GAAF9L,EAAE,CAAAuE,aAAA;MAAA,OAAFvE,EAAE,CAAA2F,WAAA,CA+pmBlFmG,MAAA,CAAA/F,QAAA,CAAAF,IAAA,CAAA0uB,OAAA,CAAAzkB,IAAuB,CAAC;IAAA,EAAC;IA/pmBuD9P,EAAE,CAAAqE,YAAA,CAgqmBvF,CAAC,CACP,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAAuwB,OAAA,GAAAtwB,GAAA,CAAAkC,SAAA;IAAA,MAAA2F,MAAA,GAjqmB0F9L,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAoI,WAAA,cAAAmsB,OAAA,CAAAvnB,SAAA;IAAFhN,EAAE,CAAAwE,SAAA,CAwpmB9D,CAAC;IAxpmB2DxE,EAAE,CAAAyE,UAAA,oBAAAqH,MAAA,CAAA+E,eAwpmB9D,CAAC,gBAAA/E,MAAA,CAAAkF,UAAA,CAAAC,OACF,CAAC,0BACT,CAAC,iBAAAnF,MAAA,CAAAoF,eAAA,GAAAC,SAAA,GAAAojB,OAAA,CAAAtjB,OACgC,CAAC,oBAAAnF,MAAA,CAAAoF,eACzB,CAAC,mBAAAqjB,OAAA,CAAAzkB,IACR,CAAC;IA7pmBkE9P,EAAE,CAAAoI,WAAA,0BAAAmsB,OAAA,CAAAppB,KAAA,YAAAopB,OAAA,CAAArpB,MAAA,UAAAqpB,OAAA,CAAArM,IAAA;EAAA;AAAA;AAAA,SAAAuM,8CAAAzwB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAFhE,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,cA4qmBlG,CAAC;IA5qmB+FnE,EAAE,CAAAkF,MAAA,EA8qmBnG,CAAC;IA9qmBgGlF,EAAE,CAAAqE,YAAA,CA8qmBxF,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAA0wB,OAAA,GA9qmBqF10B,EAAE,CAAAuE,aAAA,GAAA4B,SAAA;IAAFnG,EAAE,CAAAoI,WAAA,MAAAssB,OAAA,CAAAvpB,KAAA,WAAAupB,OAAA,CAAAxpB,MAAA,qBAAAwpB,OAAA,CAAAC,WAAA,QAAAD,OAAA,CAAAC,WAAA;IAAF30B,EAAE,CAAAwE,SAAA,CA8qmBnG,CAAC;IA9qmBgGxE,EAAE,CAAAqI,kBAAA,MAAAqsB,OAAA,CAAAtuB,KAAA,KA8qmBnG,CAAC;EAAA;AAAA;AAAA,SAAAwuB,kCAAA5wB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IA9qmBgGhE,EAAE,CAAA8H,cAAA;IAAF9H,EAAE,CAAAmE,cAAA,OAmqmB7B,CAAC;IAnqmB0BnE,EAAE,CAAAoE,UAAA,IAAAqwB,6CAAA,kBA4qmBlG,CAAC;IA5qmB+Fz0B,EAAE,CAAAqE,YAAA,CA+qmB7F,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAA0wB,OAAA,GAAAzwB,GAAA,CAAAkC,SAAA;IAAA,MAAA2F,MAAA,GA/qmB0F9L,EAAE,CAAAuE,aAAA;IAAFvE,EAAE,CAAAoI,WAAA,cAAAssB,OAAA,CAAA1nB,SAAA;IAAFhN,EAAE,CAAAwE,SAAA,CAqqmB5D,CAAC;IArqmByDxE,EAAE,CAAAyE,UAAA,SAAAqH,MAAA,CAAA+oB,UAAA,IAAAH,OAAA,CAAAxpB,MAAA,KAqqmB5D,CAAC;EAAA;AAAA;AA1+mBjD,SAAS4pB,QAAQA,CAACC,IAAI,EAAEC,IAAI,EAAEC,OAAO,EAAE;EACnCA,OAAO,GAAGA,OAAO,IAAI,CAAC,CAAC;EACvB,IAAIrwB,OAAO;EACX,IAAIswB,IAAI;EACR,IAAIC,MAAM;EACV,IAAIC,OAAO,GAAG,IAAI;EAClB,IAAIC,QAAQ,GAAG,CAAC;EAChB,SAASC,KAAKA,CAAA,EAAG;IACbD,QAAQ,GAAGJ,OAAO,CAACM,OAAO,KAAK,KAAK,GAAG,CAAC,GAAG,CAAC,IAAIC,IAAI,CAAC,CAAC;IACtDJ,OAAO,GAAG,IAAI;IACdD,MAAM,GAAGJ,IAAI,CAACU,KAAK,CAAC7wB,OAAO,EAAEswB,IAAI,CAAC;EACtC;EACA,OAAO,YAAY;IACf,MAAMQ,GAAG,GAAG,CAAC,IAAIF,IAAI,CAAC,CAAC;IACvB,IAAI,CAACH,QAAQ,IAAIJ,OAAO,CAACM,OAAO,KAAK,KAAK,EAAE;MACxCF,QAAQ,GAAGK,GAAG;IAClB;IACA,MAAMC,SAAS,GAAGX,IAAI,IAAIU,GAAG,GAAGL,QAAQ,CAAC;IACzCzwB,OAAO,GAAG,IAAI;IACd;IACAswB,IAAI,GAAGU,SAAS;IAChB,IAAID,SAAS,IAAI,CAAC,EAAE;MAChBE,YAAY,CAACT,OAAO,CAAC;MACrBA,OAAO,GAAG,IAAI;MACdC,QAAQ,GAAGK,GAAG;MACdP,MAAM,GAAGJ,IAAI,CAACU,KAAK,CAAC7wB,OAAO,EAAEswB,IAAI,CAAC;IACtC,CAAC,MACI,IAAI,CAACE,OAAO,IAAIH,OAAO,CAACa,QAAQ,KAAK,KAAK,EAAE;MAC7CV,OAAO,GAAGW,UAAU,CAACT,KAAK,EAAEK,SAAS,CAAC;IAC1C;IACA,OAAOR,MAAM;EACjB,CAAC;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASa,YAAYA,CAACC,QAAQ,EAAEhB,OAAO,EAAE;EACrC,OAAO,SAASiB,cAAcA,CAAClC,MAAM,EAAEmC,GAAG,EAAEC,UAAU,EAAE;IACpD,OAAO;MACHC,YAAY,EAAE,IAAI;MAClBC,UAAU,EAAEF,UAAU,CAACE,UAAU;MACjCC,GAAG,EAAE,SAASC,MAAMA,CAAA,EAAG;QACnBC,MAAM,CAACC,cAAc,CAAC,IAAI,EAAEP,GAAG,EAAE;UAC7BE,YAAY,EAAE,IAAI;UAClBC,UAAU,EAAEF,UAAU,CAACE,UAAU;UACjCxoB,KAAK,EAAEgnB,QAAQ,CAACsB,UAAU,CAACtoB,KAAK,EAAEmoB,QAAQ,EAAEhB,OAAO;QACvD,CAAC,CAAC;QACF,OAAO,IAAI,CAACkB,GAAG,CAAC;MACpB;IACJ,CAAC;EACL,CAAC;AACL;AAEA,IAAIQ,cAAc;AAClB,CAAC,UAAUA,cAAc,EAAE;EACvBA,cAAc,CAAC,KAAK,CAAC,GAAG,KAAK;EAC7BA,cAAc,CAAC,QAAQ,CAAC,GAAG,QAAQ;EACnCA,cAAc,CAAC,MAAM,CAAC,GAAG,MAAM;EAC/BA,cAAc,CAAC,OAAO,CAAC,GAAG,OAAO;EACjCA,cAAc,CAAC,QAAQ,CAAC,GAAG,QAAQ;AACvC,CAAC,EAAEA,cAAc,KAAKA,cAAc,GAAG,CAAC,CAAC,CAAC,CAAC;AAE3C,MAAMC,WAAW,GAAG,CAAC;AACrB,SAASC,gBAAgBA,CAACC,YAAY,EAAEC,iBAAiB,EAAEC,SAAS,EAAE;EAClE,IAAIA,SAAS,KAAKL,cAAc,CAAC5lB,GAAG,EAAE;IAClC,OAAO+lB,YAAY,CAACG,GAAG,GAAGL,WAAW;EACzC;EACA,IAAII,SAAS,KAAKL,cAAc,CAACjrB,MAAM,EAAE;IACrC,OAAOorB,YAAY,CAACG,GAAG,GAAGH,YAAY,CAAC5rB,MAAM,GAAG6rB,iBAAiB,CAAC7rB,MAAM,GAAG0rB,WAAW;EAC1F;EACA,IAAII,SAAS,KAAKL,cAAc,CAACO,MAAM,EAAE;IACrC,OAAOJ,YAAY,CAACG,GAAG,GAAGH,YAAY,CAAC5rB,MAAM,GAAG,CAAC,GAAG6rB,iBAAiB,CAAC7rB,MAAM,GAAG,CAAC;EACpF;EACA,OAAOiG,SAAS;AACpB;AACA,SAASgmB,kBAAkBA,CAACL,YAAY,EAAEC,iBAAiB,EAAEC,SAAS,EAAE;EACpE,IAAIA,SAAS,KAAKL,cAAc,CAAClpB,IAAI,EAAE;IACnC,OAAOqpB,YAAY,CAACM,IAAI,GAAGR,WAAW;EAC1C;EACA,IAAII,SAAS,KAAKL,cAAc,CAACjpB,KAAK,EAAE;IACpC,OAAOopB,YAAY,CAACM,IAAI,GAAGN,YAAY,CAAC3rB,KAAK,GAAG4rB,iBAAiB,CAAC5rB,KAAK,GAAGyrB,WAAW;EACzF;EACA,IAAII,SAAS,KAAKL,cAAc,CAACO,MAAM,EAAE;IACrC,OAAOJ,YAAY,CAACM,IAAI,GAAGN,YAAY,CAAC3rB,KAAK,GAAG,CAAC,GAAG4rB,iBAAiB,CAAC5rB,KAAK,GAAG,CAAC;EACnF;EACA,OAAOgG,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,MAAMkmB,cAAc,CAAC;EACjB;AACJ;AACA;AACA;AACA;EACI,OAAOC,0BAA0BA,CAACR,YAAY,EAAEC,iBAAiB,EAAEC,SAAS,EAAE;IAC1E,IAAI7B,MAAM,GAAG0B,gBAAgB,CAACC,YAAY,EAAEC,iBAAiB,EAAEC,SAAS,CAAC;IACzE,IAAI7B,MAAM,GAAG4B,iBAAiB,CAAC7rB,MAAM,GAAGqsB,MAAM,CAACC,WAAW,EAAE;MACxDrC,MAAM,GAAGoC,MAAM,CAACC,WAAW,GAAGT,iBAAiB,CAAC7rB,MAAM;IAC1D;IACA,OAAOiqB,MAAM;EACjB;EACA;AACJ;AACA;AACA;AACA;EACI,OAAOsC,sBAAsBA,CAACX,YAAY,EAAEC,iBAAiB,EAAEW,eAAe,EAAEV,SAAS,EAAE;IACvF,IAAI7B,MAAM;IACV,IAAI6B,SAAS,KAAKL,cAAc,CAAC5lB,GAAG,EAAE;MAClCokB,MAAM,GAAG2B,YAAY,CAAC5rB,MAAM,GAAG,CAAC,GAAGwsB,eAAe,CAACxsB,MAAM,GAAG,CAAC,GAAG0rB,WAAW;IAC/E;IACA,IAAII,SAAS,KAAKL,cAAc,CAACjrB,MAAM,EAAE;MACrCypB,MAAM,GAAG4B,iBAAiB,CAAC7rB,MAAM,GAAG4rB,YAAY,CAAC5rB,MAAM,GAAG,CAAC,GAAGwsB,eAAe,CAACxsB,MAAM,GAAG,CAAC,GAAG0rB,WAAW;IAC1G;IACA,IAAII,SAAS,KAAKL,cAAc,CAACO,MAAM,EAAE;MACrC/B,MAAM,GAAG4B,iBAAiB,CAAC7rB,MAAM,GAAG,CAAC,GAAGwsB,eAAe,CAACxsB,MAAM,GAAG,CAAC;IACtE;IACA,MAAMysB,eAAe,GAAGd,gBAAgB,CAACC,YAAY,EAAEC,iBAAiB,EAAEC,SAAS,CAAC;IACpF,IAAIW,eAAe,GAAGZ,iBAAiB,CAAC7rB,MAAM,GAAGqsB,MAAM,CAACC,WAAW,EAAE;MACjErC,MAAM,IAAIwC,eAAe,GAAGZ,iBAAiB,CAAC7rB,MAAM,GAAGqsB,MAAM,CAACC,WAAW;IAC7E;IACA,OAAOrC,MAAM;EACjB;EACA;AACJ;AACA;AACA;AACA;EACI,OAAOyC,4BAA4BA,CAACd,YAAY,EAAEC,iBAAiB,EAAEC,SAAS,EAAE;IAC5E,IAAI7B,MAAM,GAAGgC,kBAAkB,CAACL,YAAY,EAAEC,iBAAiB,EAAEC,SAAS,CAAC;IAC3E,IAAI7B,MAAM,GAAG4B,iBAAiB,CAAC5rB,KAAK,GAAGosB,MAAM,CAACM,UAAU,EAAE;MACtD1C,MAAM,GAAGoC,MAAM,CAACM,UAAU,GAAGd,iBAAiB,CAAC5rB,KAAK;IACxD;IACA,OAAOgqB,MAAM;EACjB;EACA;AACJ;AACA;AACA;AACA;EACI,OAAO2C,wBAAwBA,CAAChB,YAAY,EAAEC,iBAAiB,EAAEW,eAAe,EAAEV,SAAS,EAAE;IACzF,IAAI7B,MAAM;IACV,IAAI6B,SAAS,KAAKL,cAAc,CAAClpB,IAAI,EAAE;MACnC0nB,MAAM,GAAG2B,YAAY,CAAC3rB,KAAK,GAAG,CAAC,GAAGusB,eAAe,CAACvsB,KAAK,GAAG,CAAC,GAAGyrB,WAAW;IAC7E;IACA,IAAII,SAAS,KAAKL,cAAc,CAACjpB,KAAK,EAAE;MACpCynB,MAAM,GAAG4B,iBAAiB,CAAC5rB,KAAK,GAAG2rB,YAAY,CAAC3rB,KAAK,GAAG,CAAC,GAAGusB,eAAe,CAACvsB,KAAK,GAAG,CAAC,GAAGyrB,WAAW;IACvG;IACA,IAAII,SAAS,KAAKL,cAAc,CAACO,MAAM,EAAE;MACrC/B,MAAM,GAAG4B,iBAAiB,CAAC5rB,KAAK,GAAG,CAAC,GAAGusB,eAAe,CAACvsB,KAAK,GAAG,CAAC;IACpE;IACA,MAAMwsB,eAAe,GAAGR,kBAAkB,CAACL,YAAY,EAAEC,iBAAiB,EAAEC,SAAS,CAAC;IACtF,IAAIW,eAAe,GAAGZ,iBAAiB,CAAC5rB,KAAK,GAAGosB,MAAM,CAACM,UAAU,EAAE;MAC/D1C,MAAM,IAAIwC,eAAe,GAAGZ,iBAAiB,CAAC5rB,KAAK,GAAGosB,MAAM,CAACM,UAAU;IAC3E;IACA,OAAO1C,MAAM;EACjB;EACA;AACJ;AACA;AACA;AACA;EACI,OAAO4C,UAAUA,CAACjB,YAAY,EAAEC,iBAAiB,EAAEiB,SAAS,EAAEC,OAAO,EAAE;IACnE,IAAIC,IAAI,GAAG,KAAK;IAChB,IAAIF,SAAS,KAAKrB,cAAc,CAACjpB,KAAK,EAAE;MACpC,IAAIopB,YAAY,CAACM,IAAI,GAAGN,YAAY,CAAC3rB,KAAK,GAAG4rB,iBAAiB,CAAC5rB,KAAK,GAAG8sB,OAAO,GAAGV,MAAM,CAACM,UAAU,EAAE;QAChGK,IAAI,GAAG,IAAI;MACf;IACJ;IACA,IAAIF,SAAS,KAAKrB,cAAc,CAAClpB,IAAI,EAAE;MACnC,IAAIqpB,YAAY,CAACM,IAAI,GAAGL,iBAAiB,CAAC5rB,KAAK,GAAG8sB,OAAO,GAAG,CAAC,EAAE;QAC3DC,IAAI,GAAG,IAAI;MACf;IACJ;IACA,IAAIF,SAAS,KAAKrB,cAAc,CAAC5lB,GAAG,EAAE;MAClC,IAAI+lB,YAAY,CAACG,GAAG,GAAGF,iBAAiB,CAAC7rB,MAAM,GAAG+sB,OAAO,GAAG,CAAC,EAAE;QAC3DC,IAAI,GAAG,IAAI;MACf;IACJ;IACA,IAAIF,SAAS,KAAKrB,cAAc,CAACjrB,MAAM,EAAE;MACrC,IAAIorB,YAAY,CAACG,GAAG,GAAGH,YAAY,CAAC5rB,MAAM,GAAG6rB,iBAAiB,CAAC7rB,MAAM,GAAG+sB,OAAO,GAAGV,MAAM,CAACC,WAAW,EAAE;QAClGU,IAAI,GAAG,IAAI;MACf;IACJ;IACA,OAAOA,IAAI;EACf;EACA;AACJ;AACA;AACA;AACA;EACI,OAAOC,aAAaA,CAACH,SAAS,EAAEI,MAAM,EAAEC,OAAO,EAAEX,eAAe,EAAEV,SAAS,EAAE;IACzE,IAAIC,GAAG,GAAG,CAAC;IACX,IAAIG,IAAI,GAAG,CAAC;IACZ,IAAIY,SAAS,KAAKrB,cAAc,CAACjpB,KAAK,EAAE;MACpC0pB,IAAI,GAAG,CAAC,CAAC;MACTH,GAAG,GAAGI,cAAc,CAACI,sBAAsB,CAACY,OAAO,EAAED,MAAM,EAAEV,eAAe,EAAEV,SAAS,CAAC;IAC5F,CAAC,MACI,IAAIgB,SAAS,KAAKrB,cAAc,CAAClpB,IAAI,EAAE;MACxC2pB,IAAI,GAAGgB,MAAM,CAACjtB,KAAK;MACnB8rB,GAAG,GAAGI,cAAc,CAACI,sBAAsB,CAACY,OAAO,EAAED,MAAM,EAAEV,eAAe,EAAEV,SAAS,CAAC;IAC5F,CAAC,MACI,IAAIgB,SAAS,KAAKrB,cAAc,CAAC5lB,GAAG,EAAE;MACvCkmB,GAAG,GAAGmB,MAAM,CAACltB,MAAM;MACnBksB,IAAI,GAAGC,cAAc,CAACS,wBAAwB,CAACO,OAAO,EAAED,MAAM,EAAEV,eAAe,EAAEV,SAAS,CAAC;IAC/F,CAAC,MACI,IAAIgB,SAAS,KAAKrB,cAAc,CAACjrB,MAAM,EAAE;MAC1CurB,GAAG,GAAG,CAAC,CAAC;MACRG,IAAI,GAAGC,cAAc,CAACS,wBAAwB,CAACO,OAAO,EAAED,MAAM,EAAEV,eAAe,EAAEV,SAAS,CAAC;IAC/F;IACA,OAAO;MAAEC,GAAG;MAAEG;IAAK,CAAC;EACxB;EACA;AACJ;AACA;AACA;AACA;EACI,OAAOkB,eAAeA,CAACN,SAAS,EAAEI,MAAM,EAAEC,OAAO,EAAEJ,OAAO,EAAEjB,SAAS,EAAE;IACnE,IAAIC,GAAG,GAAG,CAAC;IACX,IAAIG,IAAI,GAAG,CAAC;IACZ,IAAIY,SAAS,KAAKrB,cAAc,CAACjpB,KAAK,EAAE;MACpC0pB,IAAI,GAAGiB,OAAO,CAACjB,IAAI,GAAGiB,OAAO,CAACltB,KAAK,GAAG8sB,OAAO;MAC7ChB,GAAG,GAAGI,cAAc,CAACC,0BAA0B,CAACe,OAAO,EAAED,MAAM,EAAEpB,SAAS,CAAC;IAC/E,CAAC,MACI,IAAIgB,SAAS,KAAKrB,cAAc,CAAClpB,IAAI,EAAE;MACxC2pB,IAAI,GAAGiB,OAAO,CAACjB,IAAI,GAAGgB,MAAM,CAACjtB,KAAK,GAAG8sB,OAAO;MAC5ChB,GAAG,GAAGI,cAAc,CAACC,0BAA0B,CAACe,OAAO,EAAED,MAAM,EAAEpB,SAAS,CAAC;IAC/E,CAAC,MACI,IAAIgB,SAAS,KAAKrB,cAAc,CAAC5lB,GAAG,EAAE;MACvCkmB,GAAG,GAAGoB,OAAO,CAACpB,GAAG,GAAGmB,MAAM,CAACltB,MAAM,GAAG+sB,OAAO;MAC3Cb,IAAI,GAAGC,cAAc,CAACO,4BAA4B,CAACS,OAAO,EAAED,MAAM,EAAEpB,SAAS,CAAC;IAClF,CAAC,MACI,IAAIgB,SAAS,KAAKrB,cAAc,CAACjrB,MAAM,EAAE;MAC1CurB,GAAG,GAAGoB,OAAO,CAACpB,GAAG,GAAGoB,OAAO,CAACntB,MAAM,GAAG+sB,OAAO;MAC5Cb,IAAI,GAAGC,cAAc,CAACO,4BAA4B,CAACS,OAAO,EAAED,MAAM,EAAEpB,SAAS,CAAC;IAClF;IACA,OAAO;MAAEC,GAAG;MAAEG;IAAK,CAAC;EACxB;EACA;AACJ;AACA;AACA;AACA;EACI,OAAOmB,kBAAkBA,CAACP,SAAS,EAAEI,MAAM,EAAEC,OAAO,EAAEJ,OAAO,EAAE;IAC3D,MAAMF,UAAU,GAAGV,cAAc,CAACU,UAAU,CAACM,OAAO,EAAED,MAAM,EAAEJ,SAAS,EAAEC,OAAO,CAAC;IACjF,IAAIF,UAAU,EAAE;MACZ,IAAIC,SAAS,KAAKrB,cAAc,CAACjpB,KAAK,EAAE;QACpC,OAAOipB,cAAc,CAAClpB,IAAI;MAC9B,CAAC,MACI,IAAIuqB,SAAS,KAAKrB,cAAc,CAAClpB,IAAI,EAAE;QACxC,OAAOkpB,cAAc,CAACjpB,KAAK;MAC/B,CAAC,MACI,IAAIsqB,SAAS,KAAKrB,cAAc,CAAC5lB,GAAG,EAAE;QACvC,OAAO4lB,cAAc,CAACjrB,MAAM;MAChC,CAAC,MACI,IAAIssB,SAAS,KAAKrB,cAAc,CAACjrB,MAAM,EAAE;QAC1C,OAAOirB,cAAc,CAAC5lB,GAAG;MAC7B;IACJ;IACA,OAAOinB,SAAS;EACpB;AACJ;AAEA,MAAMQ,uBAAuB,CAAC;EAC1BC,WAAWA,CAACC,OAAO,EAAEC,QAAQ,EAAEC,UAAU,EAAE;IACvC,IAAI,CAACF,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACC,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACC,UAAU,GAAGA,UAAU;EAChC;EACA,IAAIC,UAAUA,CAAA,EAAG;IACb,IAAIC,GAAG,GAAG,4BAA4B;IACtCA,GAAG,IAAK,aAAY,IAAI,CAACd,SAAU,EAAC;IACpCc,GAAG,IAAK,SAAQ,IAAI,CAACroB,IAAK,EAAC;IAC3BqoB,GAAG,IAAK,IAAG,IAAI,CAACC,QAAS,EAAC;IAC1B,OAAOD,GAAG;EACd;EACAE,eAAeA,CAAA,EAAG;IACdjD,UAAU,CAAC,IAAI,CAACpvB,QAAQ,CAACsyB,IAAI,CAAC,IAAI,CAAC,CAAC;EACxC;EACAtyB,QAAQA,CAAA,EAAG;IACP,IAAI,CAAC1F,iBAAiB,CAAC,IAAI,CAAC23B,UAAU,CAAC,EAAE;MACrC;IACJ;IACA,MAAMM,SAAS,GAAG,IAAI,CAACR,OAAO,CAACS,aAAa;IAC5C,MAAMd,OAAO,GAAG,IAAI,CAACe,IAAI,CAACD,aAAa,CAACE,qBAAqB,CAAC,CAAC;IAC/D;IACA,IAAI,CAAChB,OAAO,CAACntB,MAAM,IAAI,CAACmtB,OAAO,CAACltB,KAAK,EACjC;IACJ,MAAMitB,MAAM,GAAGc,SAAS,CAACG,qBAAqB,CAAC,CAAC;IAChD,IAAI,CAACC,SAAS,CAACjB,OAAO,EAAED,MAAM,CAAC;IAC/B,IAAI,CAACE,eAAe,CAACY,SAAS,EAAEb,OAAO,EAAED,MAAM,CAAC;IAChD,IAAI,IAAI,CAACmB,SAAS,EAAE;MAChB,IAAI,CAACpB,aAAa,CAACE,OAAO,EAAED,MAAM,CAAC;IACvC;IACA;IACArC,UAAU,CAAC,MAAM,IAAI,CAAC4C,QAAQ,CAACa,QAAQ,CAACN,SAAS,EAAE,SAAS,CAAC,EAAE,CAAC,CAAC;EACrE;EACAZ,eAAeA,CAACY,SAAS,EAAEb,OAAO,EAAED,MAAM,EAAE;IACxC,MAAM;MAAEnB,GAAG;MAAEG;IAAK,CAAC,GAAGC,cAAc,CAACiB,eAAe,CAAC,IAAI,CAACN,SAAS,EAAEI,MAAM,EAAEC,OAAO,EAAE,IAAI,CAACJ,OAAO,EAAE,IAAI,CAACjB,SAAS,CAAC;IACnH,IAAI,CAAC2B,QAAQ,CAACc,QAAQ,CAACP,SAAS,EAAE,KAAK,EAAG,GAAEjC,GAAI,IAAG,CAAC;IACpD,IAAI,CAAC0B,QAAQ,CAACc,QAAQ,CAACP,SAAS,EAAE,MAAM,EAAG,GAAE9B,IAAK,IAAG,CAAC;EAC1D;EACAe,aAAaA,CAACE,OAAO,EAAED,MAAM,EAAE;IAC3B,MAAMsB,QAAQ,GAAG,IAAI,CAACA,QAAQ,CAACP,aAAa;IAC5C,MAAMzB,eAAe,GAAGgC,QAAQ,CAACL,qBAAqB,CAAC,CAAC;IACxD,MAAM;MAAEpC,GAAG;MAAEG;IAAK,CAAC,GAAGC,cAAc,CAACc,aAAa,CAAC,IAAI,CAACH,SAAS,EAAEI,MAAM,EAAEC,OAAO,EAAEX,eAAe,EAAE,IAAI,CAACV,SAAS,CAAC;IACpH,IAAI,CAAC2B,QAAQ,CAACc,QAAQ,CAACC,QAAQ,EAAE,KAAK,EAAG,GAAEzC,GAAI,IAAG,CAAC;IACnD,IAAI,CAAC0B,QAAQ,CAACc,QAAQ,CAACC,QAAQ,EAAE,MAAM,EAAG,GAAEtC,IAAK,IAAG,CAAC;EACzD;EACAkC,SAASA,CAACjB,OAAO,EAAED,MAAM,EAAE;IACvB,IAAI,CAACJ,SAAS,GAAGX,cAAc,CAACkB,kBAAkB,CAAC,IAAI,CAACP,SAAS,EAAEI,MAAM,EAAEC,OAAO,EAAE,IAAI,CAACJ,OAAO,CAAC;EACrG;EACA0B,cAAcA,CAAA,EAAG;IACb,IAAI,CAAChzB,QAAQ,CAAC,CAAC;EACnB;AACJ;AACA6xB,uBAAuB,CAACoB,IAAI,YAAAC,gCAAAC,CAAA;EAAA,YAAAA,CAAA,IAAwFtB,uBAAuB,EAAjCx4B,EAAE,CAAA+5B,iBAAA,CAAiD/5B,EAAE,CAACg6B,UAAU,GAAhEh6B,EAAE,CAAA+5B,iBAAA,CAA2E/5B,EAAE,CAACi6B,SAAS,GAAzFj6B,EAAE,CAAA+5B,iBAAA,CAAoG95B,WAAW;AAAA,CAA4C;AACvQu4B,uBAAuB,CAAC0B,IAAI,kBAD8El6B,EAAE,CAAAm6B,iBAAA;EAAA1pB,IAAA,EACJ+nB,uBAAuB;EAAA4B,SAAA;EAAAC,SAAA,WAAAC,8BAAAt2B,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MADrBhE,EAAE,CAAAu6B,WAAA,CAAA52B,GAAA;IAAA;IAAA,IAAAK,EAAA;MAAA,IAAAw2B,EAAA;MAAFx6B,EAAE,CAAAy6B,cAAA,CAAAD,EAAA,GAAFx6B,EAAE,CAAA06B,WAAA,QAAAz2B,GAAA,CAAAy1B,QAAA,GAAAc,EAAA,CAAAG,KAAA;IAAA;EAAA;EAAAC,QAAA;EAAAC,YAAA,WAAAC,qCAAA92B,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MAAFhE,EAAE,CAAAuF,UAAA,oBAAAw1B,kDAAA;QAAA,OACJ92B,GAAA,CAAA01B,cAAA,CAAe,CAAC;MAAA,UADd35B,EAAE,CAAAg7B,eACkB,CAAC;IAAA;IAAA,IAAAh3B,EAAA;MADrBhE,EAAE,CAAAi7B,UAAA,CAAAh3B,GAAA,CAAA40B,UACkB,CAAC;IAAA;EAAA;EAAAqC,MAAA;IAAA9B,IAAA;IAAAG,SAAA;IAAA9oB,IAAA;IAAAunB,SAAA;IAAAhB,SAAA;IAAAiB,OAAA;IAAAc,QAAA;IAAAh0B,KAAA;IAAAL,QAAA;IAAAE,OAAA;EAAA;EAAAu2B,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAA32B,QAAA,WAAA42B,iCAAAt3B,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MADrBhE,EAAE,CAAAmE,cAAA,SAEpG,CAAC;MAFiGnE,EAAE,CAAA8E,SAAA,gBAGL,CAAC;MAHE9E,EAAE,CAAAmE,cAAA,YAI1E,CAAC;MAJuEnE,EAAE,CAAAoE,UAAA,IAAAF,uCAAA,iBAKhF,CAAC,IAAAW,uCAAA,iBAGkB,CAAC;MAR0D7E,EAAE,CAAAqE,YAAA,CASjG,CAAC,CACH,CAAC;IAAA;IAAA,IAAAL,EAAA;MAVgGhE,EAAE,CAAAwE,SAAA,CAGd,CAAC;MAHWxE,EAAE,CAAAu7B,sBAAA,4BAAAt3B,GAAA,CAAA+zB,SAAA,IAGd,CAAC;MAHWh4B,EAAE,CAAAyE,UAAA,YAAAR,GAAA,CAAAs1B,SAGlE,CAAC;MAH+Dv5B,EAAE,CAAAwE,SAAA,EAKlF,CAAC;MAL+ExE,EAAE,CAAAyE,UAAA,UAAAR,GAAA,CAAAc,KAKlF,CAAC;MAL+E/E,EAAE,CAAAwE,SAAA,CAQnF,CAAC;MARgFxE,EAAE,CAAAyE,UAAA,SAAAR,GAAA,CAAAc,KAQnF,CAAC;IAAA;EAAA;EAAAy2B,YAAA,GAG44Fx6B,EAAE,CAACy6B,IAAI,EAA0Ez6B,EAAE,CAAC06B,gBAAgB;EAAAC,MAAA;EAAAC,aAAA;AAAA,EAAyI;AACnpGx6B,UAAU,CAAC,CACP40B,YAAY,CAAC,GAAG,CAAC,CACpB,EAAEwC,uBAAuB,CAACqD,SAAS,EAAE,gBAAgB,EAAE,IAAI,CAAC;AAC7D;EAAA,QAAAC,SAAA,oBAAAA,SAAA,KAf0G97B,EAAE,CAAA+7B,iBAAA,CAejBvD,uBAAuB,EAAc,CAAC;IACrH/nB,IAAI,EAAEvQ,SAAS;IACfg1B,IAAI,EAAE,CAAC;MAAE8G,QAAQ,EAAE,qBAAqB;MAAEt3B,QAAQ,EAAG;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;MAAEk3B,aAAa,EAAEz7B,iBAAiB,CAAC87B,IAAI;MAAEN,MAAM,EAAE,CAAC,g3FAAg3F;IAAE,CAAC;EACh6F,CAAC,CAAC,EAAkB,YAAY;IAAE,OAAO,CAAC;MAAElrB,IAAI,EAAEzQ,EAAE,CAACg6B;IAAW,CAAC,EAAE;MAAEvpB,IAAI,EAAEzQ,EAAE,CAACi6B;IAAU,CAAC,EAAE;MAAExpB,IAAI,EAAEU,SAAS;MAAE+qB,UAAU,EAAE,CAAC;QAC/GzrB,IAAI,EAAErQ,MAAM;QACZ80B,IAAI,EAAE,CAACj1B,WAAW;MACtB,CAAC;IAAE,CAAC,CAAC;EAAE,CAAC,EAAkB;IAAEm5B,IAAI,EAAE,CAAC;MACnC3oB,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEk5B,SAAS,EAAE,CAAC;MACZ9oB,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEoQ,IAAI,EAAE,CAAC;MACPA,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE23B,SAAS,EAAE,CAAC;MACZvnB,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE22B,SAAS,EAAE,CAAC;MACZvmB,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE43B,OAAO,EAAE,CAAC;MACVxnB,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE04B,QAAQ,EAAE,CAAC;MACXtoB,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE0E,KAAK,EAAE,CAAC;MACR0L,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEqE,QAAQ,EAAE,CAAC;MACX+L,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEuE,OAAO,EAAE,CAAC;MACV6L,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEq5B,QAAQ,EAAE,CAAC;MACXjpB,IAAI,EAAEnQ,SAAS;MACf40B,IAAI,EAAE,CAAC,UAAU;IACrB,CAAC,CAAC;IAAE2D,UAAU,EAAE,CAAC;MACbpoB,IAAI,EAAElQ,WAAW;MACjB20B,IAAI,EAAE,CAAC,OAAO;IAClB,CAAC,CAAC;IAAEyE,cAAc,EAAE,CAAC;MACjBlpB,IAAI,EAAEjQ,YAAY;MAClB00B,IAAI,EAAE,CAAC,eAAe;IAC1B,CAAC;EAAE,CAAC;AAAA;AAEhB,MAAMiH,yBAAyB,CAAC;EAC5B1D,WAAWA,CAAC2D,gBAAgB,EAAE;IAC1B,IAAI,CAACA,gBAAgB,GAAGA,gBAAgB;IACxC,IAAI,CAACC,QAAQ,GAAG,CAAC,CAAC;IAClB,IAAI,CAACC,UAAU,GAAG,IAAIC,GAAG,CAAC,CAAC;EAC/B;EACAC,SAASA,CAAC/rB,IAAI,GAAG,IAAI,CAACA,IAAI,EAAE;IACxB,OAAO,IAAI,CAAC6rB,UAAU,CAAC/F,GAAG,CAAC9lB,IAAI,CAAC;EACpC;EACAgsB,MAAMA,CAACC,QAAQ,EAAE;IACb,OAAO,IAAI,CAACC,YAAY,CAAC,IAAI,CAAClsB,IAAI,EAAEisB,QAAQ,CAAC;EACjD;EACAC,YAAYA,CAAClsB,IAAI,EAAEisB,QAAQ,EAAE;IACzBA,QAAQ,GAAG,IAAI,CAACE,cAAc,CAACF,QAAQ,CAAC;IACxC,MAAMG,SAAS,GAAG,IAAI,CAACC,eAAe,CAACrsB,IAAI,EAAEisB,QAAQ,CAAC;IACtD,IAAI,CAACK,QAAQ,CAACtsB,IAAI,EAAEosB,SAAS,CAAC;IAC9B,OAAOA,SAAS;EACpB;EACAG,OAAOA,CAACC,QAAQ,EAAE;IACd,MAAMC,WAAW,GAAG,IAAI,CAACZ,UAAU,CAAC/F,GAAG,CAAC0G,QAAQ,CAACE,aAAa,CAAC;IAC/D,IAAID,WAAW,IAAIA,WAAW,CAAC9wB,MAAM,EAAE;MACnC,MAAMgxB,GAAG,GAAGF,WAAW,CAACG,OAAO,CAACJ,QAAQ,CAAC;MACzC,IAAIG,GAAG,GAAG,CAAC,CAAC,EAAE;QACV,MAAMP,SAAS,GAAGK,WAAW,CAACE,GAAG,CAAC;QAClCP,SAAS,CAACG,OAAO,CAAC,CAAC;QACnBE,WAAW,CAACI,MAAM,CAACF,GAAG,EAAE,CAAC,CAAC;MAC9B;IACJ;EACJ;EACAG,UAAUA,CAAA,EAAG;IACT,IAAI,CAACC,aAAa,CAAC,IAAI,CAAC/sB,IAAI,CAAC;EACjC;EACA+sB,aAAaA,CAAC/sB,IAAI,EAAE;IAChB,MAAMgtB,KAAK,GAAG,IAAI,CAACnB,UAAU,CAAC/F,GAAG,CAAC9lB,IAAI,CAAC;IACvC,IAAIgtB,KAAK,IAAIA,KAAK,CAACrxB,MAAM,EAAE;MACvB,IAAIsxB,CAAC,GAAGD,KAAK,CAACrxB,MAAM,GAAG,CAAC;MACxB,OAAOsxB,CAAC,IAAI,CAAC,EAAE;QACX,IAAI,CAACV,OAAO,CAACS,KAAK,CAACC,CAAC,EAAE,CAAC,CAAC;MAC5B;IACJ;EACJ;EACAZ,eAAeA,CAACrsB,IAAI,EAAEisB,QAAQ,EAAE;IAC5B,OAAO,IAAI,CAACN,gBAAgB,CAACuB,eAAe,CAACltB,IAAI,EAAEisB,QAAQ,CAAC;EAChE;EACAE,cAAcA,CAACF,QAAQ,EAAE;IACrB,MAAMxB,MAAM,GAAG;MAAE,GAAG,IAAI,CAACmB,QAAQ,CAACnB;IAAO,CAAC;IAC1C,MAAM0C,OAAO,GAAG;MAAE,GAAG,IAAI,CAACvB,QAAQ,CAACuB;IAAQ,CAAC;IAC5C,IAAI,CAAClB,QAAQ,CAACxB,MAAM,IAAI,CAACwB,QAAQ,CAACkB,OAAO,EAAE;MACvClB,QAAQ,GAAG;QAAExB,MAAM,EAAEwB;MAAS,CAAC;IACnC;IACA,IAAIxB,MAAM,EAAE;MACRwB,QAAQ,CAACxB,MAAM,GAAG;QAAE,GAAGA,MAAM;QAAE,GAAGwB,QAAQ,CAACxB;MAAO,CAAC;IACvD;IACA,IAAI0C,OAAO,EAAE;MACTlB,QAAQ,CAACkB,OAAO,GAAG;QAAE,GAAGA,OAAO;QAAE,GAAGlB,QAAQ,CAACkB;MAAQ,CAAC;IAC1D;IACA,OAAOlB,QAAQ;EACnB;EACAK,QAAQA,CAACtsB,IAAI,EAAEosB,SAAS,EAAE;IACtB,IAAI,CAAC,IAAI,CAACP,UAAU,CAACuB,GAAG,CAACptB,IAAI,CAAC,EAAE;MAC5B,IAAI,CAAC6rB,UAAU,CAACwB,GAAG,CAACrtB,IAAI,EAAE,EAAE,CAAC;IACjC;IACA,MAAMstB,KAAK,GAAG,IAAI,CAACzB,UAAU,CAAC/F,GAAG,CAAC9lB,IAAI,CAAC;IACvCstB,KAAK,CAACC,IAAI,CAACnB,SAAS,CAAC;EACzB;AACJ;AAEA,SAASoB,kBAAkBA,CAACvsB,CAAC,EAAE;EAC3B,OAAOA,CAAC,CAACgnB,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMwF,gBAAgB,CAAC;EACnBzF,WAAWA,CAAC0F,cAAc,EAAEC,wBAAwB,EAAEC,QAAQ,EAAE;IAC5D,IAAI,CAACF,cAAc,GAAGA,cAAc;IACpC,IAAI,CAACC,wBAAwB,GAAGA,wBAAwB;IACxD,IAAI,CAACC,QAAQ,GAAGA,QAAQ;EAC5B;EACA;AACJ;AACA;AACA;AACA;AACA;EACI,OAAOC,0BAA0BA,CAACC,SAAS,EAAE;IACzCL,gBAAgB,CAACM,uBAAuB,GAAGD,SAAS;EACxD;EACA;AACJ;AACA;AACA;AACA;EACIE,oBAAoBA,CAAA,EAAG;IACnB,IAAI,IAAI,CAACC,UAAU,EACf,OAAO,IAAI,CAACA,UAAU;IAC1B,IAAIR,gBAAgB,CAACM,uBAAuB,EACxC,OAAON,gBAAgB,CAACM,uBAAuB;IACnD,IAAI,IAAI,CAACL,cAAc,CAAC7B,UAAU,CAAClwB,MAAM,EACrC,OAAO,IAAI,CAAC+xB,cAAc,CAAC7B,UAAU,CAAC,CAAC,CAAC;IAC5C,MAAM,IAAIqC,KAAK,CAAC,wHAAwH,CAAC;EAC7I;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACIC,oBAAoBA,CAACL,SAAS,EAAE;IAC5B,IAAI,CAACG,UAAU,GAAGH,SAAS;EAC/B;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACIM,oBAAoBA,CAAChC,SAAS,EAAE;IAC5B,IAAIoB,kBAAkB,CAACpB,SAAS,CAAC,EAAE;MAC/B,OAAOA,SAAS,CAACnE,OAAO,CAACS,aAAa;IAC1C;IACA,IAAI0D,SAAS,CAACiC,QAAQ,IAAIjC,SAAS,CAACiC,QAAQ,CAACC,SAAS,CAAC3yB,MAAM,GAAG,CAAC,EAAE;MAC/D,OAAOywB,SAAS,CAACiC,QAAQ,CAACC,SAAS,CAAC,CAAC,CAAC;IAC1C;IACA;IACA,OAAOlC,SAAS,CAACmC,QAAQ,CAAC7F,aAAa;EAC3C;EACA;AACJ;AACA;AACA;AACA;EACI8F,wBAAwBA,CAACpC,SAAS,EAAE;IAChC,OAAO,IAAI,CAACgC,oBAAoB,CAAChC,SAAS,CAAC;EAC/C;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACIqC,wBAAwBA,CAACrC,SAAS,EAAEH,QAAQ,EAAE;IAC1C,IAAIA,QAAQ,EAAE;MACV,IAAIA,QAAQ,CAACxB,MAAM,KAAK/pB,SAAS,EAAE;QAC/B,MAAMguB,WAAW,GAAG1I,MAAM,CAAC2I,mBAAmB,CAAC1C,QAAQ,CAACxB,MAAM,CAAC;QAC/D,KAAK,MAAMmE,WAAW,IAAIF,WAAW,EAAE;UACnCtC,SAAS,CAACI,QAAQ,CAACoC,WAAW,CAAC,GAAG3C,QAAQ,CAACxB,MAAM,CAACmE,WAAW,CAAC;QAClE;MACJ;MACA,IAAI3C,QAAQ,CAACkB,OAAO,KAAKzsB,SAAS,EAAE;QAChC,MAAMmuB,SAAS,GAAG7I,MAAM,CAAC2I,mBAAmB,CAAC1C,QAAQ,CAACkB,OAAO,CAAC;QAC9D,KAAK,MAAM2B,SAAS,IAAID,SAAS,EAAE;UAC/BzC,SAAS,CAACI,QAAQ,CAACsC,SAAS,CAAC,GAAG7C,QAAQ,CAACkB,OAAO,CAAC2B,SAAS,CAAC;QAC/D;MACJ;IACJ;IACA,OAAO1C,SAAS;EACpB;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIc,eAAeA,CAAC6B,cAAc,EAAE9C,QAAQ,GAAG,CAAC,CAAC,EAAEsC,QAAQ,EAAE;IACrD,IAAI,CAACA,QAAQ,EACTA,QAAQ,GAAG,IAAI,CAACP,oBAAoB,CAAC,CAAC;IAC1C,MAAMgB,cAAc,GAAG,IAAI,CAACZ,oBAAoB,CAACG,QAAQ,CAAC;IAC1D,MAAMU,UAAU,GAAG,IAAIr+B,eAAe,CAACo+B,cAAc,EAAE,IAAI,CAACrB,wBAAwB,EAAE,IAAI,CAACD,cAAc,EAAE,IAAI,CAACE,QAAQ,CAAC;IACzH,MAAMsB,MAAM,GAAG,IAAIr+B,eAAe,CAACk+B,cAAc,CAAC;IAClD,MAAMI,YAAY,GAAGF,UAAU,CAACG,MAAM,CAACF,MAAM,CAAC;IAC9C,IAAI,CAACT,wBAAwB,CAACU,YAAY,EAAElD,QAAQ,CAAC;IACrD,OAAOkD,YAAY;EACvB;AACJ;AACA1B,gBAAgB,CAACM,uBAAuB,GAAG,IAAI;AAC/CN,gBAAgB,CAACtE,IAAI,YAAAkG,yBAAAhG,CAAA;EAAA,YAAAA,CAAA,IAAwFoE,gBAAgB,EA1PnBl+B,EAAE,CAAA+/B,QAAA,CA0PmC//B,EAAE,CAACggC,cAAc,GA1PtDhgC,EAAE,CAAA+/B,QAAA,CA0PiE//B,EAAE,CAACigC,wBAAwB,GA1P9FjgC,EAAE,CAAA+/B,QAAA,CA0PyG//B,EAAE,CAACkgC,QAAQ;AAAA,CAA6C;AAC7QhC,gBAAgB,CAACiC,KAAK,kBA3PoFngC,EAAE,CAAAogC,kBAAA;EAAAC,KAAA,EA2PKnC,gBAAgB;EAAAoC,OAAA,EAAhBpC,gBAAgB,CAAAtE;AAAA,EAAG;AACpI;EAAA,QAAAkC,SAAA,oBAAAA,SAAA,KA5P0G97B,EAAE,CAAA+7B,iBAAA,CA4PjBmC,gBAAgB,EAAc,CAAC;IAC9GztB,IAAI,EAAEhQ;EACV,CAAC,CAAC,EAAkB,YAAY;IAAE,OAAO,CAAC;MAAEgQ,IAAI,EAAEzQ,EAAE,CAACggC;IAAe,CAAC,EAAE;MAAEvvB,IAAI,EAAEzQ,EAAE,CAACigC;IAAyB,CAAC,EAAE;MAAExvB,IAAI,EAAEzQ,EAAE,CAACkgC;IAAS,CAAC,CAAC;EAAE,CAAC;AAAA;AAE/I,MAAMK,cAAc,SAASpE,yBAAyB,CAAC;EACnD1D,WAAWA,CAAC2D,gBAAgB,EAAE;IAC1B,KAAK,CAACA,gBAAgB,CAAC;IACvB,IAAI,CAAC3rB,IAAI,GAAG+nB,uBAAuB;EACvC;AACJ;AACA+H,cAAc,CAAC3G,IAAI,YAAA4G,uBAAA1G,CAAA;EAAA,YAAAA,CAAA,IAAwFyG,cAAc,EAtQfvgC,EAAE,CAAA+/B,QAAA,CAsQ+B7B,gBAAgB;AAAA,CAA6C;AACxMqC,cAAc,CAACJ,KAAK,kBAvQsFngC,EAAE,CAAAogC,kBAAA;EAAAC,KAAA,EAuQGE,cAAc;EAAAD,OAAA,EAAdC,cAAc,CAAA3G;AAAA,EAAG;AAChI;EAAA,QAAAkC,SAAA,oBAAAA,SAAA,KAxQ0G97B,EAAE,CAAA+7B,iBAAA,CAwQjBwE,cAAc,EAAc,CAAC;IAC5G9vB,IAAI,EAAEhQ;EACV,CAAC,CAAC,EAAkB,YAAY;IAAE,OAAO,CAAC;MAAEgQ,IAAI,EAAEytB;IAAiB,CAAC,CAAC;EAAE,CAAC;AAAA;AAEhF,IAAIt3B,cAAc;AAClB,CAAC,UAAUA,cAAc,EAAE;EACvBA,cAAc,CAAC,OAAO,CAAC,GAAG,OAAO;EACjCA,cAAc,CAAC,OAAO,CAAC,GAAG,OAAO;AACrC,CAAC,EAAEA,cAAc,KAAKA,cAAc,GAAG,CAAC,CAAC,CAAC,CAAC;AAC3C,IAAI65B,UAAU;AACd,CAAC,UAAUA,UAAU,EAAE;EACnBA,UAAU,CAAC,aAAa,CAAC,GAAG,aAAa;EACzCA,UAAU,CAAC,QAAQ,CAAC,GAAG,QAAQ;AACnC,CAAC,EAAEA,UAAU,KAAKA,UAAU,GAAG,CAAC,CAAC,CAAC,CAAC;AAEnC,IAAIC,SAAS;AACb,CAAC,UAAUA,SAAS,EAAE;EAClBA,SAAS,CAAC,MAAM,CAAC,GAAG,MAAM;EAC1BA,SAAS,CAAC,QAAQ,CAAC,GAAG,QAAQ;EAC9BA,SAAS,CAAC,SAAS,CAAC,GAAG,SAAS;EAChCA,SAAS,CAAC,UAAU,CAAC,GAAG,UAAU;AACtC,CAAC,EAAEA,SAAS,KAAKA,SAAS,GAAG,CAAC,CAAC,CAAC,CAAC;AAEjC,MAAMC,oBAAoB,CAAC;EACvBlI,WAAWA,CAAA,EAAG;IACV,IAAI,CAACmI,UAAU,GAAG,KAAK;EAC3B;EACAC,WAAWA,CAACC,OAAO,EAAE;IACjB,MAAMC,cAAc,GAAG,IAAI,CAACC,cAAc,CAAC,IAAI,CAACj6B,MAAM,CAACnE,KAAK,CAAC,CAAC,EAAE,IAAI,CAACmE,MAAM,CAACD,MAAM,CAAC,CAAC,CAAC;IACrF,MAAMm6B,SAAS,GAAG,IAAI,CAACL,UAAU,GAAG,OAAO,GAAG,QAAQ;IACtD,IAAI,CAACnrB,QAAQ,GAAI,sBAAqBwrB,SAAU,KAAIF,cAAe,GAAE;EACzE;EACA;AACJ;AACA;AACA;AACA;EACIC,cAAcA,CAACj6B,MAAM,EAAEm6B,MAAM,EAAE;IAC3B;IACAA,MAAM,CAAClD,IAAI,CAAC,CAAC,CAAC;IACd,MAAMmD,KAAK,GAAG,EAAE;IAChBp6B,MAAM,CAACq6B,OAAO,CAAC,CAAC,CAACC,OAAO,CAAC,CAACC,CAAC,EAAE5D,CAAC,KAAK;MAC/ByD,KAAK,CAACnD,IAAI,CAAE,GAAEsD,CAAE,IAAGC,IAAI,CAACC,KAAK,CAACN,MAAM,CAACxD,CAAC,CAAC,GAAG,GAAG,CAAE,GAAE,CAAC;IACtD,CAAC,CAAC;IACF,OAAOyD,KAAK,CAACM,IAAI,CAAC,IAAI,CAAC;EAC3B;AACJ;AACAd,oBAAoB,CAAC/G,IAAI,YAAA8H,6BAAA5H,CAAA;EAAA,YAAAA,CAAA,IAAwF6G,oBAAoB;AAAA,CAAmD;AACxLA,oBAAoB,CAACzG,IAAI,kBAxTiFl6B,EAAE,CAAAm6B,iBAAA;EAAA1pB,IAAA,EAwTPkwB,oBAAoB;EAAAvG,SAAA;EAAAc,MAAA;IAAAyG,UAAA;IAAA56B,MAAA;IAAAmE,MAAA;IAAAC,KAAA;IAAAy1B,UAAA;EAAA;EAAAgB,QAAA,GAxTf5hC,EAAE,CAAA6hC,oBAAA;EAAA1G,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAA32B,QAAA,WAAAo9B,8BAAA99B,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MAAFhE,EAAE,CAAAmE,cAAA,YA8TxG,CAAC,YACgC,CAAC,UACzB,CAAC;MAhU4FnE,EAAE,CAAAkF,MAAA,EAgU3D,CAAC;MAhUwDlF,EAAE,CAAAqE,YAAA,CAgUpD,CAAC,CAC9C,CAAC;MAjU8FrE,EAAE,CAAA8E,SAAA,YAkUpC,CAAC;MAlUiC9E,EAAE,CAAAmE,cAAA,YAmUvE,CAAC,UACzB,CAAC;MApU4FnE,EAAE,CAAAkF,MAAA,EAoU3D,CAAC;MApUwDlF,EAAE,CAAAqE,YAAA,CAoUpD,CAAC,CAC9C,CAAC,CACH,CAAC;IAAA;IAAA,IAAAL,EAAA;MAtUgGhE,EAAE,CAAA2M,WAAA,WAAA1I,GAAA,CAAA28B,UAAA,GAAAzvB,SAAA,GAAAlN,GAAA,CAAAiH,MAAA,MA4TpD,CAAC,UAAAjH,GAAA,CAAAkH,KAAA,MAC5B,CAAC;MA7T4EnL,EAAE,CAAA0Q,WAAA,sBAAAzM,GAAA,CAAA28B,UA2TjE,CAAC;MA3T8D5gC,EAAE,CAAAwE,SAAA,EAgU3D,CAAC;MAhUwDxE,EAAE,CAAAmF,iBAAA,CAAAlB,GAAA,CAAA09B,UAAA,IAAAtuB,cAAA,EAgU3D,CAAC;MAhUwDrT,EAAE,CAAAwE,SAAA,CAkU3C,CAAC;MAlUwCxE,EAAE,CAAA2M,WAAA,eAAA1I,GAAA,CAAAwR,QAkU3C,CAAC;MAlUwCzV,EAAE,CAAAwE,SAAA,EAoU3D,CAAC;MApUwDxE,EAAE,CAAAmF,iBAAA,CAAAlB,GAAA,CAAA09B,UAAA,IAAAtuB,cAAA,EAoU3D,CAAC;IAAA;EAAA;EAAAsoB,MAAA;EAAAC,aAAA;EAAAmG,eAAA;AAAA,EAGwhB;AAC1kB;EAAA,QAAAjG,SAAA,oBAAAA,SAAA,KAxU0G97B,EAAE,CAAA+7B,iBAAA,CAwUjB4E,oBAAoB,EAAc,CAAC;IAClHlwB,IAAI,EAAEvQ,SAAS;IACfg1B,IAAI,EAAE,CAAC;MAAE8G,QAAQ,EAAE,yBAAyB;MAAEt3B,QAAQ,EAAG;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;MAAEk3B,aAAa,EAAEz7B,iBAAiB,CAAC87B,IAAI;MAAE8F,eAAe,EAAErhC,uBAAuB,CAACshC,MAAM;MAAErG,MAAM,EAAE,CAAC,0cAA0c;IAAE,CAAC;EAC3iB,CAAC,CAAC,QAAkB;IAAEgG,UAAU,EAAE,CAAC;MAC3BlxB,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE0G,MAAM,EAAE,CAAC;MACT0J,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE6K,MAAM,EAAE,CAAC;MACTuF,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE8K,KAAK,EAAE,CAAC;MACRsF,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEugC,UAAU,EAAE,CAAC;MACbnwB,IAAI,EAAEpQ;IACV,CAAC;EAAE,CAAC;AAAA;;AAEhB;AACA;AACA;AACA;AACA;AACA,SAAS4hC,WAAWA,CAAC77B,KAAK,EAAE;EACxB,IAAIA,KAAK,YAAYovB,IAAI,EAAE;IACvBpvB,KAAK,GAAGA,KAAK,CAAC87B,kBAAkB,CAAC,CAAC;EACtC,CAAC,MACI;IACD97B,KAAK,GAAGA,KAAK,CAACiN,cAAc,CAAC,CAAC;EAClC;EACA,OAAOjN,KAAK;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS+7B,WAAWA,CAAC/7B,KAAK,EAAE;EACxB,OAAOA,KAAK,CAACiN,cAAc,CAAC,CAAC,CAAC+uB,OAAO,CAAC,WAAW,EAAEC,KAAK,IAAI;IACxD,OAAO;MACH,GAAG,EAAE,OAAO;MACZ;MACA,GAAG,EAAE,QAAQ;MACb,GAAG,EAAE,QAAQ;MACb,GAAG,EAAE,QAAQ;MACb,GAAG,EAAE,MAAM;MACX,GAAG,EAAE;IACT,CAAC,CAACA,KAAK,CAAC;EACZ,CAAC,CAAC;AACN;AAEA,MAAMC,oBAAoB,CAAC;EACvB7J,WAAWA,CAAA,EAAG;IACV,IAAI,CAAClyB,QAAQ,GAAG,KAAK;IACrB,IAAI,CAAC1E,MAAM,GAAG,IAAIlB,YAAY,CAAC,CAAC;IAChC,IAAI,CAACoF,QAAQ,GAAG,IAAIpF,YAAY,CAAC,CAAC;IAClC,IAAI,CAACsF,UAAU,GAAG,IAAItF,YAAY,CAAC,CAAC;IACpC,IAAI,CAAC4hC,MAAM,GAAG,IAAI5hC,YAAY,CAAC,CAAC;EACpC;EACA,IAAI6hC,YAAYA,CAAA,EAAG;IACf,OAAO,IAAI,CAACn8B,cAAc,IAAI,SAAS;EAC3C;EACAo8B,YAAYA,CAAA,EAAG;IACX,IAAI,CAAC18B,QAAQ,CAACF,IAAI,CAAC;MAAEkI,IAAI,EAAE,IAAI,CAAC3H;IAAM,CAAC,CAAC;EAC5C;EACAs8B,YAAYA,CAAA,EAAG;IACX,IAAI,CAACz8B,UAAU,CAACJ,IAAI,CAAC;MAAEkI,IAAI,EAAE,IAAI,CAAC3H;IAAM,CAAC,CAAC;EAC9C;AACJ;AACAk8B,oBAAoB,CAAC1I,IAAI,YAAA+I,6BAAA7I,CAAA;EAAA,YAAAA,CAAA,IAAwFwI,oBAAoB;AAAA,CAAmD;AACxLA,oBAAoB,CAACpI,IAAI,kBA1ZiFl6B,EAAE,CAAAm6B,iBAAA;EAAA1pB,IAAA,EA0ZP6xB,oBAAoB;EAAAlI,SAAA;EAAAS,YAAA,WAAA+H,kCAAA5+B,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MA1ZfhE,EAAE,CAAAuF,UAAA,wBAAAs9B,mDAAA;QAAA,OA0ZP5+B,GAAA,CAAAw+B,YAAA,CAAa,CAAC;MAAA,CAAK,CAAC,wBAAAK,mDAAA;QAAA,OAApB7+B,GAAA,CAAAy+B,YAAA,CAAa,CAAC;MAAA,CAAK,CAAC;IAAA;EAAA;EAAAxH,MAAA;IAAA50B,KAAA;IAAAF,KAAA;IAAAC,cAAA;IAAAE,QAAA;EAAA;EAAAq3B,OAAA;IAAA/7B,MAAA;IAAAkE,QAAA;IAAAE,UAAA;IAAAs8B,MAAA;EAAA;EAAApH,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAA32B,QAAA,WAAAq+B,8BAAA/+B,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MA1ZfhE,EAAE,CAAAmE,cAAA,aA2ZI,CAAC;MA3ZPnE,EAAE,CAAAuF,UAAA,mBAAAy9B,oDAAA;QAAA,OA2ZxB/+B,GAAA,CAAApC,MAAA,CAAAgE,IAAA,CAAA5B,GAAA,CAAAoC,cAA0B,CAAC;MAAA,EAAC;MA3ZNrG,EAAE,CAAAmE,cAAA,aA4ZC,CAAC;MA5ZJnE,EAAE,CAAAuF,UAAA,mBAAA09B,oDAAA;QAAA,OA4Z3Bh/B,GAAA,CAAAs+B,MAAA,CAAA18B,IAAA,CAAA5B,GAAA,CAAAoC,cAA0B,CAAC;MAAA,EAAC;MA5ZHrG,EAAE,CAAAqE,YAAA,CA4ZS,CAAC;MA5ZZrE,EAAE,CAAAmE,cAAA,aA6ZvE,CAAC;MA7ZoEnE,EAAE,CAAAkF,MAAA,EA+ZvG,CAAC;MA/ZoGlF,EAAE,CAAAqE,YAAA,CA+ZhG,CAAC,CACH,CAAC;IAAA;IAAA,IAAAL,EAAA;MAha+FhE,EAAE,CAAA0Q,WAAA,WAAAzM,GAAA,CAAAsC,QA2ZnC,CAAC;MA3ZgCvG,EAAE,CAAAyE,UAAA,UAAAR,GAAA,CAAAoC,cA2Z3E,CAAC;MA3ZwErG,EAAE,CAAAwE,SAAA,CA4ZtC,CAAC;MA5ZmCxE,EAAE,CAAA2M,WAAA,qBAAA1I,GAAA,CAAAqC,KA4ZtC,CAAC;MA5ZmCtG,EAAE,CAAAwE,SAAA,EA+ZvG,CAAC;MA/ZoGxE,EAAE,CAAAqI,kBAAA,MAAApE,GAAA,CAAAu+B,YAAA,KA+ZvG,CAAC;IAAA;EAAA;EAAA5G,aAAA;EAAAmG,eAAA;AAAA,EAEoE;AAC1E;EAAA,QAAAjG,SAAA,oBAAAA,SAAA,KAla0G97B,EAAE,CAAA+7B,iBAAA,CAkajBuG,oBAAoB,EAAc,CAAC;IAClH7xB,IAAI,EAAEvQ,SAAS;IACfg1B,IAAI,EAAE,CAAC;MACC8G,QAAQ,EAAE,yBAAyB;MACnCt3B,QAAQ,EAAG;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;MACiBq9B,eAAe,EAAErhC,uBAAuB,CAACshC;IAC7C,CAAC;EACT,CAAC,CAAC,QAAkB;IAAE17B,KAAK,EAAE,CAAC;MACtBmK,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE+F,KAAK,EAAE,CAAC;MACRqK,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEgG,cAAc,EAAE,CAAC;MACjBoK,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEkG,QAAQ,EAAE,CAAC;MACXkK,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEwB,MAAM,EAAE,CAAC;MACT4O,IAAI,EAAE7P;IACV,CAAC,CAAC;IAAEmF,QAAQ,EAAE,CAAC;MACX0K,IAAI,EAAE7P;IACV,CAAC,CAAC;IAAEqF,UAAU,EAAE,CAAC;MACbwK,IAAI,EAAE7P;IACV,CAAC,CAAC;IAAE2hC,MAAM,EAAE,CAAC;MACT9xB,IAAI,EAAE7P;IACV,CAAC,CAAC;IAAE6hC,YAAY,EAAE,CAAC;MACfhyB,IAAI,EAAEjQ,YAAY;MAClB00B,IAAI,EAAE,CAAC,YAAY;IACvB,CAAC,CAAC;IAAEwN,YAAY,EAAE,CAAC;MACfjyB,IAAI,EAAEjQ,YAAY;MAClB00B,IAAI,EAAE,CAAC,YAAY;IACvB,CAAC;EAAE,CAAC;AAAA;AAEhB,MAAMgO,eAAe,CAAC;EAClBzK,WAAWA,CAAC0K,EAAE,EAAE;IACZ,IAAI,CAACA,EAAE,GAAGA,EAAE;IACZ,IAAI,CAACvC,UAAU,GAAG,KAAK;IACvB,IAAI,CAACh7B,UAAU,GAAG,IAAIjF,YAAY,CAAC,CAAC;IACpC,IAAI,CAACyiC,aAAa,GAAG,IAAIziC,YAAY,CAAC,CAAC;IACvC,IAAI,CAAC0iC,eAAe,GAAG,IAAI1iC,YAAY,CAAC,CAAC;IACzC,IAAI,CAAC2iC,aAAa,GAAG,EAAE;EAC3B;EACAzC,WAAWA,CAACC,OAAO,EAAE;IACjB,IAAI,CAACyC,MAAM,CAAC,CAAC;EACjB;EACAA,MAAMA,CAAA,EAAG;IACL,IAAI,CAACJ,EAAE,CAACK,YAAY,CAAC,CAAC;IACtB,IAAI,CAACF,aAAa,GAAG,IAAI,CAACG,gBAAgB,CAAC,CAAC;EAChD;EACAA,gBAAgBA,CAAA,EAAG;IACf,MAAMC,KAAK,GAAG,EAAE;IAChB,KAAK,MAAMt9B,KAAK,IAAI,IAAI,CAAC0J,IAAI,EAAE;MAC3B,MAAMzJ,cAAc,GAAG47B,WAAW,CAAC77B,KAAK,CAAC;MACzC,MAAMg3B,GAAG,GAAGsG,KAAK,CAACC,SAAS,CAACjG,CAAC,IAAI;QAC7B,OAAOA,CAAC,CAACt3B,KAAK,KAAKC,cAAc;MACrC,CAAC,CAAC;MACF,IAAI+2B,GAAG,KAAK,CAAC,CAAC,EAAE;QACZsG,KAAK,CAAC1F,IAAI,CAAC;UACP53B,KAAK;UACLC,cAAc;UACdC,KAAK,EAAE,IAAI,CAACS,MAAM,CAACwiB,QAAQ,CAACnjB,KAAK;QACrC,CAAC,CAAC;MACN;IACJ;IACA,OAAOs9B,KAAK;EAChB;EACAn9B,QAAQA,CAACq9B,KAAK,EAAE;IACZ,IAAI,CAAC,IAAI,CAACn8B,aAAa,EACnB,OAAO,KAAK;IAChB,MAAMo8B,IAAI,GAAG,IAAI,CAACp8B,aAAa,CAACq8B,IAAI,CAACC,CAAC,IAAI;MACtC,OAAOH,KAAK,CAACx9B,KAAK,KAAK29B,CAAC,CAACh2B,IAAI;IACjC,CAAC,CAAC;IACF,OAAO81B,IAAI,KAAK1yB,SAAS;EAC7B;EACApL,QAAQA,CAAC89B,IAAI,EAAE;IACX,IAAI,CAACT,aAAa,CAACv9B,IAAI,CAACg+B,IAAI,CAAC;EACjC;EACA59B,UAAUA,CAAC49B,IAAI,EAAE;IACb,IAAI,CAACR,eAAe,CAACx9B,IAAI,CAACg+B,IAAI,CAAC;EACnC;EACAjsB,OAAOA,CAACzP,KAAK,EAAE07B,IAAI,EAAE;IACjB,OAAOA,IAAI,CAACz9B,KAAK;EACrB;AACJ;AACA88B,eAAe,CAACtJ,IAAI,YAAAoK,wBAAAlK,CAAA;EAAA,YAAAA,CAAA,IAAwFoJ,eAAe,EA3fjBljC,EAAE,CAAA+5B,iBAAA,CA2fiC/5B,EAAE,CAACikC,iBAAiB;AAAA,CAA4C;AAC7Mf,eAAe,CAAChJ,IAAI,kBA5fsFl6B,EAAE,CAAAm6B,iBAAA;EAAA1pB,IAAA,EA4fZyyB,eAAe;EAAA9I,SAAA;EAAAc,MAAA;IAAAprB,IAAA;IAAA/K,KAAA;IAAAgC,MAAA;IAAAmE,MAAA;IAAAC,KAAA;IAAA1D,aAAA;IAAAm5B,UAAA;EAAA;EAAAhD,OAAA;IAAAh4B,UAAA;IAAAw9B,aAAA;IAAAC,eAAA;EAAA;EAAAzB,QAAA,GA5fL5hC,EAAE,CAAA6hC,oBAAA;EAAA1G,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAA32B,QAAA,WAAAw/B,yBAAAlgC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MAAFhE,EAAE,CAAAmE,cAAA,SA6f3E,CAAC;MA7fwEnE,EAAE,CAAAoE,UAAA,IAAAa,iCAAA,mBA8fhD,CAAC;MA9f6CjF,EAAE,CAAAmE,cAAA,YAigB9E,CAAC,WAC6E,CAAC;MAlgBHnE,EAAE,CAAAoE,UAAA,IAAAgB,6BAAA,eAmgBpB,CAAC;MAngBiBpF,EAAE,CAAAqE,YAAA,CA+gBhG,CAAC,CACF,CAAC,CACH,CAAC;IAAA;IAAA,IAAAL,EAAA;MAjhBgGhE,EAAE,CAAA2M,WAAA,UAAA1I,GAAA,CAAAkH,KAAA,MA6f5E,CAAC;MA7fyEnL,EAAE,CAAAwE,SAAA,CA8flD,CAAC;MA9f+CxE,EAAE,CAAAyE,UAAA,UAAAR,GAAA,CAAAc,KAAA,kBAAAd,GAAA,CAAAc,KAAA,CAAAqH,MAAA,KA8flD,CAAC;MA9f+CpM,EAAE,CAAAwE,SAAA,EAkgBD,CAAC;MAlgBFxE,EAAE,CAAA2M,WAAA,eAAA1I,GAAA,CAAAiH,MAAA,WAkgBD,CAAC;MAlgBFlL,EAAE,CAAA0Q,WAAA,sBAAAzM,GAAA,CAAA28B,UAkgBrC,CAAC;MAlgBkC5gC,EAAE,CAAAwE,SAAA,CAmgB3D,CAAC;MAngBwDxE,EAAE,CAAAyE,UAAA,YAAAR,GAAA,CAAAq/B,aAmgB3D,CAAC,iBAAAr/B,GAAA,CAAA2T,OAAe,CAAC;IAAA;EAAA;EAAA4jB,YAAA,GAektC8G,oBAAoB,EAAkLthC,EAAE,CAACy6B,IAAI,EAA0Ez6B,EAAE,CAACmjC,OAAO;EAAAxI,MAAA;EAAAC,aAAA;EAAAmG,eAAA;AAAA,EAAwL;AAC7uD;EAAA,QAAAjG,SAAA,oBAAAA,SAAA,KAnhB0G97B,EAAE,CAAA+7B,iBAAA,CAmhBjBmH,eAAe,EAAc,CAAC;IAC7GzyB,IAAI,EAAEvQ,SAAS;IACfg1B,IAAI,EAAE,CAAC;MAAE8G,QAAQ,EAAE,mBAAmB;MAAEt3B,QAAQ,EAAG;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;MAAEk3B,aAAa,EAAEz7B,iBAAiB,CAAC87B,IAAI;MAAE8F,eAAe,EAAErhC,uBAAuB,CAACshC,MAAM;MAAErG,MAAM,EAAE,CAAC,8tCAA8tC;IAAE,CAAC;EAC/zC,CAAC,CAAC,EAAkB,YAAY;IAAE,OAAO,CAAC;MAAElrB,IAAI,EAAEzQ,EAAE,CAACikC;IAAkB,CAAC,CAAC;EAAE,CAAC,EAAkB;IAAEn0B,IAAI,EAAE,CAAC;MAC/FW,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE0E,KAAK,EAAE,CAAC;MACR0L,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE0G,MAAM,EAAE,CAAC;MACT0J,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE6K,MAAM,EAAE,CAAC;MACTuF,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE8K,KAAK,EAAE,CAAC;MACRsF,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEoH,aAAa,EAAE,CAAC;MAChBgJ,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEugC,UAAU,EAAE,CAAC;MACbnwB,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEuF,UAAU,EAAE,CAAC;MACb6K,IAAI,EAAE7P;IACV,CAAC,CAAC;IAAEwiC,aAAa,EAAE,CAAC;MAChB3yB,IAAI,EAAE7P;IACV,CAAC,CAAC;IAAEyiC,eAAe,EAAE,CAAC;MAClB5yB,IAAI,EAAE7P;IACV,CAAC;EAAE,CAAC;AAAA;AAEhB,MAAMwjC,cAAc,CAAC;EACjB3L,WAAWA,CAAA,EAAG;IACV,IAAI,CAAC4L,UAAU,GAAG,KAAK;IACvB,IAAI,CAAC3wB,UAAU,GAAG,IAAI;IACtB,IAAI,CAACtM,gBAAgB,GAAG,IAAIzG,YAAY,CAAC,CAAC;IAC1C,IAAI,CAAC2G,mBAAmB,GAAG,IAAI3G,YAAY,CAAC,CAAC;IAC7C,IAAI,CAAC6G,qBAAqB,GAAG,IAAI7G,YAAY,CAAC,CAAC;IAC/C,IAAI,CAACiG,cAAc,GAAGA,cAAc;IACpC,IAAI,CAAC65B,UAAU,GAAGA,UAAU;EAChC;EACAI,WAAWA,CAACC,OAAO,EAAE;IACjB,IAAI,CAACyC,MAAM,CAAC,CAAC;EACjB;EACAA,MAAMA,CAAA,EAAG;IACL,IAAIe,aAAa,GAAG,CAAC;IACrB,IAAI,IAAI,CAACD,UAAU,EAAE;MACjB,IAAI,CAACE,UAAU,GAAG,IAAI,CAACC,aAAa,CAAC,CAAC;MACtC,IAAI,CAAC,IAAI,CAAC99B,aAAa,IAAI,IAAI,CAACA,aAAa,CAACC,QAAQ,KAAKC,cAAc,CAAC8G,KAAK,EAAE;QAC7E,IAAI,IAAI,CAAC62B,UAAU,KAAK9D,UAAU,CAACgE,WAAW,EAAE;UAC5CH,aAAa,GAAG,CAAC;QACrB,CAAC,MACI;UACDA,aAAa,GAAG,CAAC;QACrB;MACJ;IACJ;IACA,MAAMI,YAAY,GAAG,EAAE,GAAGJ,aAAa;IACvC,IAAI,CAACK,UAAU,GAAGpD,IAAI,CAACqD,KAAK,CAAE,IAAI,CAAC59B,IAAI,CAAC,CAAC,CAAC,GAAG09B,YAAY,GAAI,IAAI,CAAC;IAClE,IAAI,CAACz9B,WAAW,GACZ,CAAC,IAAI,CAACP,aAAa,IAAI,IAAI,CAACA,aAAa,CAACC,QAAQ,KAAKC,cAAc,CAAC8G,KAAK,GACrE6zB,IAAI,CAACqD,KAAK,CAAE,IAAI,CAAC59B,IAAI,CAAC,CAAC,CAAC,GAAGs9B,aAAa,GAAI,IAAI,CAAC,GACjD,IAAI,CAACK,UAAU;EAC7B;EACAH,aAAaA,CAAA,EAAG;IACZ,OAAO,IAAI,CAAC99B,aAAa,CAAC8O,SAAS,KAAKkrB,SAAS,CAACmE,MAAM,GAAGpE,UAAU,CAACgE,WAAW,GAAGhE,UAAU,CAACqE,MAAM;EACzG;AACJ;AACAV,cAAc,CAACxK,IAAI,YAAAmL,uBAAAjL,CAAA;EAAA,YAAAA,CAAA,IAAwFsK,cAAc;AAAA,CAAmD;AAC5KA,cAAc,CAAClK,IAAI,kBAxmBuFl6B,EAAE,CAAAm6B,iBAAA;EAAA1pB,IAAA,EAwmBb2zB,cAAc;EAAAhK,SAAA;EAAAc,MAAA;IAAAl0B,IAAA;IAAAq9B,UAAA;IAAA39B,aAAA;IAAA69B,UAAA;IAAA98B,aAAA;IAAAiM,UAAA;EAAA;EAAAkqB,OAAA;IAAAx2B,gBAAA;IAAAE,mBAAA;IAAAE,qBAAA;EAAA;EAAAo6B,QAAA,GAxmBH5hC,EAAE,CAAAglC,kBAAA,CAwmBmW,CAACzE,cAAc,CAAC,GAxmBrXvgC,EAAE,CAAA6hC,oBAAA;EAAAoD,kBAAA,EAAAz+B,GAAA;EAAA20B,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAA32B,QAAA,WAAAwgC,wBAAAlhC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MAAFhE,EAAE,CAAAmlC,eAAA;MAAFnlC,EAAE,CAAAmE,cAAA,YAymBpB,CAAC;MAzmBiBnE,EAAE,CAAA8H,cAAA;MAAF9H,EAAE,CAAAmE,cAAA,YA0mB7B,CAAC;MA1mB0BnE,EAAE,CAAAolC,YAAA,EA2mB5E,CAAC;MA3mByEplC,EAAE,CAAAqE,YAAA,CA4mBjG,CAAC;MA5mB8FrE,EAAE,CAAAoE,UAAA,IAAAqC,iDAAA,oCAqnBtG,CAAC,IAAAS,2CAAA,8BAeD,CAAC;MApoBmGlH,EAAE,CAAAqE,YAAA,CAsoBnG,CAAC;IAAA;IAAA,IAAAL,EAAA;MAtoBgGhE,EAAE,CAAA2M,WAAA,UAAA1I,GAAA,CAAA+C,IAAA,SAymBjD,CAAC,WAAA/C,GAAA,CAAA+C,IAAA,SAA2B,CAAC;MAzmBkBhH,EAAE,CAAAwE,SAAA,CA0mBtD,CAAC;MA1mBmDxE,EAAE,CAAAoI,WAAA,UAAAnE,GAAA,CAAA0gC,UAAA,YAAA1gC,GAAA,CAAA+C,IAAA;MAAFhH,EAAE,CAAAwE,SAAA,EA8mB3C,CAAC;MA9mBwCxE,EAAE,CAAAyE,UAAA,SAAAR,GAAA,CAAAogC,UAAA,IAAApgC,GAAA,CAAAsgC,UAAA,KAAAtgC,GAAA,CAAAw8B,UAAA,CAAAgE,WA8mB3C,CAAC;MA9mBwCzkC,EAAE,CAAAwE,SAAA,CAwnBhD,CAAC;MAxnB6CxE,EAAE,CAAAyE,UAAA,SAAAR,GAAA,CAAAogC,UAAA,IAAApgC,GAAA,CAAAsgC,UAAA,KAAAtgC,GAAA,CAAAw8B,UAAA,CAAAqE,MAwnBhD,CAAC;IAAA;EAAA;EAAAtJ,YAAA,GAenBmF,oBAAoB,EAAoHuC,eAAe,EAA6MliC,EAAE,CAACy6B,IAAI;EAAAG,aAAA;EAAAmG,eAAA;AAAA,EAAwH;AAC7gB;EAAA,QAAAjG,SAAA,oBAAAA,SAAA,KAxoB0G97B,EAAE,CAAA+7B,iBAAA,CAwoBjBqI,cAAc,EAAc,CAAC;IAC5G3zB,IAAI,EAAEvQ,SAAS;IACfg1B,IAAI,EAAE,CAAC;MACCmQ,SAAS,EAAE,CAAC9E,cAAc,CAAC;MAC3BvE,QAAQ,EAAE,kBAAkB;MAC5Bt3B,QAAQ,EAAG;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;MACiBq9B,eAAe,EAAErhC,uBAAuB,CAACshC;IAC7C,CAAC;EACT,CAAC,CAAC,QAAkB;IAAEh7B,IAAI,EAAE,CAAC;MACrByJ,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEgkC,UAAU,EAAE,CAAC;MACb5zB,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEqG,aAAa,EAAE,CAAC;MAChB+J,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEkkC,UAAU,EAAE,CAAC;MACb9zB,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEoH,aAAa,EAAE,CAAC;MAChBgJ,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEqT,UAAU,EAAE,CAAC;MACbjD,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE+G,gBAAgB,EAAE,CAAC;MACnBqJ,IAAI,EAAE7P;IACV,CAAC,CAAC;IAAE0G,mBAAmB,EAAE,CAAC;MACtBmJ,IAAI,EAAE7P;IACV,CAAC,CAAC;IAAE4G,qBAAqB,EAAE,CAAC;MACxBiJ,IAAI,EAAE7P;IACV,CAAC;EAAE,CAAC;AAAA;;AAEhB;AACA;AACA;AACA,MAAM0kC,kBAAkB,CAAC;EACrB7M,WAAWA,CAACC,OAAO,EAAE6M,IAAI,EAAE;IACvB,IAAI,CAAC7M,OAAO,GAAGA,OAAO;IACtB,IAAI,CAAC6M,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACC,OAAO,GAAG,IAAI7kC,YAAY,CAAC,CAAC;IACjC,IAAI,CAAC8kC,SAAS,GAAG,KAAK;IACtB,IAAI,CAACC,QAAQ,CAAC,CAAC;EACnB;EACA1I,OAAOA,CAAA,EAAG;IACNnH,YAAY,CAAC,IAAI,CAACT,OAAO,CAAC;EAC9B;EACAuQ,kBAAkBA,CAAA,EAAG;IACjB;IACA,IAAI,CAACJ,IAAI,CAACK,GAAG,CAAC,MAAM;MAChB,IAAI,CAACH,SAAS,GAAG,IAAI;MACrB,IAAI,CAACD,OAAO,CAAC3/B,IAAI,CAAC,IAAI,CAAC;IAC3B,CAAC,CAAC;EACN;EACA6/B,QAAQA,CAAA,EAAG;IACP,MAAMG,KAAK,GAAGA,CAAA,KAAM;MAChB,IAAI,CAAC,IAAI,CAACnN,OAAO,EAAE;QACf;MACJ;MACA;MACA,MAAM;QAAEoN,YAAY;QAAEC;MAAY,CAAC,GAAG,IAAI,CAACrN,OAAO,CAACS,aAAa;MAChE,IAAI2M,YAAY,IAAIC,WAAW,EAAE;QAC7BlQ,YAAY,CAAC,IAAI,CAACT,OAAO,CAAC;QAC1B,IAAI,CAACuQ,kBAAkB,CAAC,CAAC;MAC7B,CAAC,MACI;QACD9P,YAAY,CAAC,IAAI,CAACT,OAAO,CAAC;QAC1B,IAAI,CAACmQ,IAAI,CAACS,iBAAiB,CAAC,MAAM;UAC9B,IAAI,CAAC5Q,OAAO,GAAGW,UAAU,CAAC,MAAM8P,KAAK,CAAC,CAAC,EAAE,GAAG,CAAC;QACjD,CAAC,CAAC;MACN;IACJ,CAAC;IACD,IAAI,CAACN,IAAI,CAACS,iBAAiB,CAAC,MAAM;MAC9B,IAAI,CAAC5Q,OAAO,GAAGW,UAAU,CAAC,MAAM8P,KAAK,CAAC,CAAC,CAAC;IAC5C,CAAC,CAAC;EACN;AACJ;AACAP,kBAAkB,CAAC1L,IAAI,YAAAqM,2BAAAnM,CAAA;EAAA,YAAAA,CAAA,IAAwFwL,kBAAkB,EA/uBvBtlC,EAAE,CAAA+5B,iBAAA,CA+uBuC/5B,EAAE,CAACg6B,UAAU,GA/uBtDh6B,EAAE,CAAA+5B,iBAAA,CA+uBiE/5B,EAAE,CAACkmC,MAAM;AAAA,CAA4C;AAClOZ,kBAAkB,CAACa,IAAI,kBAhvBmFnmC,EAAE,CAAAomC,iBAAA;EAAA31B,IAAA,EAgvBT60B,kBAAkB;EAAAlL,SAAA;EAAAwD,OAAA;IAAA4H,OAAA;EAAA;AAAA,EAAmF;AACxM;EAAA,QAAA1J,SAAA,oBAAAA,SAAA,KAjvB0G97B,EAAE,CAAA+7B,iBAAA,CAivBjBuJ,kBAAkB,EAAc,CAAC;IAChH70B,IAAI,EAAE5P,SAAS;IACfq0B,IAAI,EAAE,CAAC;MACC8G,QAAQ,EAAE;IACd,CAAC;EACT,CAAC,CAAC,EAAkB,YAAY;IAAE,OAAO,CAAC;MAAEvrB,IAAI,EAAEzQ,EAAE,CAACg6B;IAAW,CAAC,EAAE;MAAEvpB,IAAI,EAAEzQ,EAAE,CAACkmC;IAAO,CAAC,CAAC;EAAE,CAAC,EAAkB;IAAEV,OAAO,EAAE,CAAC;MAChH/0B,IAAI,EAAE7P;IACV,CAAC;EAAE,CAAC;AAAA;AAEhB,SAASylC,MAAMA,CAACv4B,KAAK,EAAE;EACnB,OAAOw4B,QAAQ,CAACC,IAAI,CAACz4B,KAAK,CAAC,KAAK,eAAe;AACnD;AACA,SAAS04B,QAAQA,CAAC14B,KAAK,EAAE;EACrB,OAAO,OAAOA,KAAK,KAAK,QAAQ;AACpC;AAEA,MAAM24B,kBAAkB,CAAC;EACrBhO,WAAWA,CAACiO,YAAY,EAAEnB,IAAI,EAAEpC,EAAE,EAAEvK,UAAU,EAAE;IAC5C,IAAI,CAAC8N,YAAY,GAAGA,YAAY;IAChC,IAAI,CAACnB,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACpC,EAAE,GAAGA,EAAE;IACZ,IAAI,CAACvK,UAAU,GAAGA,UAAU;IAC5B,IAAI,CAACphB,MAAM,GAAG,MAAM;IACpB,IAAI,CAACmvB,UAAU,GAAGjG,SAAS,CAACkG,OAAO;IACnC,IAAI,CAAClzB,UAAU,GAAG,IAAI;IACtB,IAAI,CAAC7R,MAAM,GAAG,IAAIlB,YAAY,CAAC,CAAC;EACpC;EACAkmC,QAAQA,CAAA,EAAG;IACP,IAAI3lC,gBAAgB,CAAC,IAAI,CAAC03B,UAAU,CAAC,EAAE;MACnC,IAAI,CAACllB,UAAU,GAAG,KAAK;IAC3B;EACJ;EACAslB,eAAeA,CAAA,EAAG;IACd,IAAI,CAAC8N,qBAAqB,CAAC,CAAC;IAC5B;IACA,IAAI,CAACC,kBAAkB,GAAG,IAAIzB,kBAAkB,CAAC,IAAI,CAACoB,YAAY,EAAE,IAAI,CAACnB,IAAI,CAAC;IAC9E,IAAI,CAACwB,kBAAkB,CAACvB,OAAO,CAACwB,SAAS,CAAC,IAAI,CAACzD,MAAM,CAACtK,IAAI,CAAC,IAAI,CAAC,CAAC;EACrE;EACAgO,WAAWA,CAAA,EAAG;IACV,IAAI,CAACC,YAAY,CAAC,CAAC;IACnB,IAAI,IAAI,CAACH,kBAAkB,EAAE;MACzB,IAAI,CAACA,kBAAkB,CAACvB,OAAO,CAAC2B,WAAW,CAAC,CAAC;MAC7C,IAAI,CAACJ,kBAAkB,CAAC/J,OAAO,CAAC,CAAC;IACrC;EACJ;EACA6D,WAAWA,CAACC,OAAO,EAAE;IACjB,IAAI,CAACyC,MAAM,CAAC,CAAC;EACjB;EACAA,MAAMA,CAAA,EAAG;IACL,IAAI,IAAI,CAAC5sB,OAAO,EAAE;MACd,IAAI,CAACA,OAAO,GAAG,IAAI,CAACywB,SAAS,CAAC,IAAI,CAACzwB,OAAO,CAAC;IAC/C,CAAC,MACI;MACD,IAAI,CAACA,OAAO,GAAG,EAAE;IACrB;IACA,IAAI,IAAI,CAAC3P,IAAI,EAAE;MACX,IAAI,CAACmE,KAAK,GAAG,IAAI,CAACnE,IAAI,CAAC,CAAC,CAAC;MACzB,IAAI,CAACkE,MAAM,GAAG,IAAI,CAAClE,IAAI,CAAC,CAAC,CAAC;IAC9B,CAAC,MACI;MACD,MAAMiE,IAAI,GAAG,IAAI,CAACo8B,gBAAgB,CAAC,CAAC;MACpC,IAAIp8B,IAAI,EAAE;QACN,IAAI,CAACE,KAAK,GAAGF,IAAI,CAACE,KAAK;QACvB,IAAI,CAACD,MAAM,GAAGD,IAAI,CAACC,MAAM;MAC7B;IACJ;IACA;IACA,IAAI,CAAC,IAAI,CAACC,KAAK,EAAE;MACb,IAAI,CAACA,KAAK,GAAG,GAAG;IACpB;IACA,IAAI,CAAC,IAAI,CAACD,MAAM,EAAE;MACd,IAAI,CAACA,MAAM,GAAG,GAAG;IACrB;IACA,IAAI,CAACC,KAAK,GAAGo2B,IAAI,CAACqD,KAAK,CAAC,IAAI,CAACz5B,KAAK,CAAC;IACnC,IAAI,CAACD,MAAM,GAAGq2B,IAAI,CAACqD,KAAK,CAAC,IAAI,CAAC15B,MAAM,CAAC;IACrC,IAAI,IAAI,CAACi4B,EAAE,EAAE;MACT,IAAI,CAACA,EAAE,CAACK,YAAY,CAAC,CAAC;IAC1B;EACJ;EACA6D,gBAAgBA,CAAA,EAAG;IACf,IAAIl8B,KAAK;IACT,IAAID,MAAM;IACV,MAAMo8B,QAAQ,GAAG,IAAI,CAACZ,YAAY,CAACvN,aAAa;IAChD,IAAIl4B,iBAAiB,CAAC,IAAI,CAAC23B,UAAU,CAAC,IAAI0O,QAAQ,CAACC,UAAU,KAAK,IAAI,EAAE;MACpE;MACA,MAAMt8B,IAAI,GAAGq8B,QAAQ,CAACC,UAAU,CAAClO,qBAAqB,CAAC,CAAC;MACxDluB,KAAK,GAAGF,IAAI,CAACE,KAAK;MAClBD,MAAM,GAAGD,IAAI,CAACC,MAAM;IACxB;IACA,IAAIC,KAAK,IAAID,MAAM,EAAE;MACjB,OAAO;QAAEC,KAAK;QAAED;MAAO,CAAC;IAC5B;IACA,OAAO,IAAI;EACf;EACA;AACJ;AACA;AACA;EACIs8B,WAAWA,CAAA,EAAG;IACV,KAAK,IAAI9J,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAAC/mB,OAAO,CAACvK,MAAM,EAAEsxB,CAAC,EAAE,EAAE;MAC1C,MAAM+J,CAAC,GAAG,IAAI,CAAC9wB,OAAO,CAAC+mB,CAAC,CAAC;MACzB+J,CAAC,CAACrhC,KAAK,GAAGqhC,CAAC,CAAC15B,IAAI;MAChB,IAAIs4B,MAAM,CAACoB,CAAC,CAACrhC,KAAK,CAAC,EAAE;QACjBqhC,CAAC,CAACrhC,KAAK,GAAGqhC,CAAC,CAACrhC,KAAK,CAAC87B,kBAAkB,CAAC,CAAC;MAC1C;MACA,IAAIuF,CAAC,CAACxqB,MAAM,EAAE;QACV,KAAK,IAAIyqB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,CAAC,CAACxqB,MAAM,CAAC7Q,MAAM,EAAEs7B,CAAC,EAAE,EAAE;UACtC,MAAM3D,CAAC,GAAG0D,CAAC,CAACxqB,MAAM,CAACyqB,CAAC,CAAC;UACrB3D,CAAC,CAAC39B,KAAK,GAAG29B,CAAC,CAACh2B,IAAI;UAChB,IAAIs4B,MAAM,CAACtC,CAAC,CAAC39B,KAAK,CAAC,EAAE;YACjB29B,CAAC,CAAC39B,KAAK,GAAG29B,CAAC,CAAC39B,KAAK,CAAC87B,kBAAkB,CAAC,CAAC;UAC1C;QACJ;MACJ;IACJ;EACJ;EACAgF,YAAYA,CAAA,EAAG;IACX,IAAI,IAAI,CAACS,kBAAkB,EAAE;MACzB,IAAI,CAACA,kBAAkB,CAACR,WAAW,CAAC,CAAC;IACzC;EACJ;EACAL,qBAAqBA,CAAA,EAAG;IACpB,IAAI,CAAC7lC,iBAAiB,CAAC,IAAI,CAAC23B,UAAU,CAAC,EAAE;MACrC;IACJ;IACA,MAAM7E,MAAM,GAAGxyB,SAAS,CAACg2B,MAAM,EAAE,QAAQ,CAAC;IAC1C,MAAMqQ,YAAY,GAAG7T,MAAM,CAAC8T,IAAI,CAACrmC,YAAY,CAAC,GAAG,CAAC,CAAC,CAACwlC,SAAS,CAACc,CAAC,IAAI;MAC/D,IAAI,CAACvE,MAAM,CAAC,CAAC;MACb,IAAI,IAAI,CAACJ,EAAE,EAAE;QACT,IAAI,CAACA,EAAE,CAACK,YAAY,CAAC,CAAC;MAC1B;IACJ,CAAC,CAAC;IACF,IAAI,CAACmE,kBAAkB,GAAGC,YAAY;EAC1C;EACA;AACJ;AACA;AACA;AACA;EACIR,SAASA,CAACt3B,IAAI,EAAE;IACZ,MAAM6G,OAAO,GAAG,EAAE;IAClB,KAAK,MAAMktB,IAAI,IAAI/zB,IAAI,EAAE;MACrB,MAAMi4B,IAAI,GAAG,CAAC,CAAC;MACf,IAAIlE,IAAI,CAAC,MAAM,CAAC,KAAK1yB,SAAS,EAAE;QAC5B42B,IAAI,CAAC,MAAM,CAAC,GAAGlE,IAAI,CAAC,MAAM,CAAC;MAC/B;MACA,IAAIA,IAAI,CAAC,OAAO,CAAC,KAAK1yB,SAAS,EAAE;QAC7B42B,IAAI,CAAC,OAAO,CAAC,GAAGlE,IAAI,CAAC,OAAO,CAAC;MACjC;MACA,IAAIA,IAAI,CAAC,QAAQ,CAAC,KAAK1yB,SAAS,EAAE;QAC9B42B,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE;QACnB,KAAK,MAAMC,UAAU,IAAInE,IAAI,CAAC,QAAQ,CAAC,EAAE;UACrC,MAAMoE,cAAc,GAAGxR,MAAM,CAACyR,MAAM,CAAC,CAAC,CAAC,EAAEF,UAAU,CAAC;UACpDD,IAAI,CAAC,QAAQ,CAAC,CAAC/J,IAAI,CAACiK,cAAc,CAAC;QACvC;MACJ;MACA,IAAIpE,IAAI,CAAC,OAAO,CAAC,KAAK1yB,SAAS,EAAE;QAC7B42B,IAAI,CAAC,OAAO,CAAC,GAAGI,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,SAAS,CAACxE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;MAC7D;MACA,IAAIA,IAAI,CAAC,QAAQ,CAAC,KAAK1yB,SAAS,EAAE;QAC9B42B,IAAI,CAAC,QAAQ,CAAC,GAAGlE,IAAI,CAAC,QAAQ,CAAC;MACnC;MACA,IAAIA,IAAI,CAAC,QAAQ,CAAC,KAAK1yB,SAAS,EAAE;QAC9B42B,IAAI,CAAC,QAAQ,CAAC,GAAGlE,IAAI,CAAC,QAAQ,CAAC;MACnC;MACAltB,OAAO,CAACqnB,IAAI,CAAC+J,IAAI,CAAC;IACtB;IACA,OAAOpxB,OAAO;EAClB;AACJ;AACA8vB,kBAAkB,CAAC7M,IAAI,YAAA0O,2BAAAxO,CAAA;EAAA,YAAAA,CAAA,IAAwF2M,kBAAkB,EA35BvBzmC,EAAE,CAAA+5B,iBAAA,CA25BuC/5B,EAAE,CAACg6B,UAAU,GA35BtDh6B,EAAE,CAAA+5B,iBAAA,CA25BiE/5B,EAAE,CAACkmC,MAAM,GA35B5ElmC,EAAE,CAAA+5B,iBAAA,CA25BuF/5B,EAAE,CAACikC,iBAAiB,GA35B7GjkC,EAAE,CAAA+5B,iBAAA,CA25BwH95B,WAAW;AAAA,CAA4C;AAC3RwmC,kBAAkB,CAACvM,IAAI,kBA55BmFl6B,EAAE,CAAAm6B,iBAAA;EAAA1pB,IAAA,EA45BTg2B,kBAAkB;EAAArM,SAAA;EAAAc,MAAA;IAAAvkB,OAAA;IAAA3P,IAAA;IAAAwQ,MAAA;IAAAmvB,UAAA;IAAAlvB,YAAA;IAAA/D,UAAA;EAAA;EAAAkqB,OAAA;IAAA/7B,MAAA;EAAA;EAAA+/B,QAAA,GA55BX5hC,EAAE,CAAA6hC,oBAAA;EAAA1G,KAAA;EAAAC,IAAA;EAAA12B,QAAA,WAAA6jC,4BAAAvkC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MAAFhE,EAAE,CAAA8E,SAAA,SA45B6Q,CAAC;IAAA;EAAA;EAAA82B,aAAA;AAAA,EAAqB;AAC/Y;EAAA,QAAAE,SAAA,oBAAAA,SAAA,KA75B0G97B,EAAE,CAAA+7B,iBAAA,CA65BjB0K,kBAAkB,EAAc,CAAC;IAChHh2B,IAAI,EAAEvQ,SAAS;IACfg1B,IAAI,EAAE,CAAC;MACC8G,QAAQ,EAAE,YAAY;MACtBt3B,QAAQ,EAAG;IACf,CAAC;EACT,CAAC,CAAC,EAAkB,YAAY;IAAE,OAAO,CAAC;MAAE+L,IAAI,EAAEzQ,EAAE,CAACg6B;IAAW,CAAC,EAAE;MAAEvpB,IAAI,EAAEzQ,EAAE,CAACkmC;IAAO,CAAC,EAAE;MAAEz1B,IAAI,EAAEzQ,EAAE,CAACikC;IAAkB,CAAC,EAAE;MAAExzB,IAAI,EAAEU,SAAS;MAAE+qB,UAAU,EAAE,CAAC;QAC5IzrB,IAAI,EAAErQ,MAAM;QACZ80B,IAAI,EAAE,CAACj1B,WAAW;MACtB,CAAC;IAAE,CAAC,CAAC;EAAE,CAAC,EAAkB;IAAE0W,OAAO,EAAE,CAAC;MACtClG,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE2G,IAAI,EAAE,CAAC;MACPyJ,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEmX,MAAM,EAAE,CAAC;MACT/G,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEsmC,UAAU,EAAE,CAAC;MACbl2B,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEoX,YAAY,EAAE,CAAC;MACfhH,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEqT,UAAU,EAAE,CAAC;MACbjD,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEwB,MAAM,EAAE,CAAC;MACT4O,IAAI,EAAE7P;IACV,CAAC;EAAE,CAAC;AAAA;AAEhB,IAAI4M,WAAW;AACf,CAAC,UAAUA,WAAW,EAAE;EACpBA,WAAW,CAAC,KAAK,CAAC,GAAG,KAAK;EAC1BA,WAAW,CAAC,QAAQ,CAAC,GAAG,QAAQ;EAChCA,WAAW,CAAC,MAAM,CAAC,GAAG,MAAM;EAC5BA,WAAW,CAAC,OAAO,CAAC,GAAG,OAAO;AAClC,CAAC,EAAEA,WAAW,KAAKA,WAAW,GAAG,CAAC,CAAC,CAAC,CAAC;AAErC,MAAMg7B,kBAAkB,CAAC;EACrB/P,WAAWA,CAACC,OAAO,EAAE;IACjB,IAAI,CAAC+P,UAAU,GAAG,EAAE;IACpB,IAAI,CAACC,MAAM,GAAG,CAAC;IACf,IAAI,CAAChQ,OAAO,GAAGA,OAAO,CAACS,aAAa;EACxC;EACA0H,WAAWA,CAACC,OAAO,EAAE;IACjB,IAAI,CAACyC,MAAM,CAAC,CAAC;EACjB;EACAA,MAAMA,CAAA,EAAG;IACL,IAAI,CAAC/d,WAAW,GAAG,MAAM;IACzB,IAAI,CAACjc,UAAU,GAAG,QAAQ;IAC1B,IAAI,CAACyD,SAAS,GAAG,EAAE;IACnB,QAAQ,IAAI,CAACO,MAAM;MACf,KAAKC,WAAW,CAACuD,GAAG;QAChB,IAAI,CAACY,CAAC,GAAG,IAAI,CAAC3C,MAAM;QACpB,IAAI,CAAC0C,CAAC,GAAG,IAAI,CAACvG,KAAK,GAAG,CAAC;QACvB;MACJ,KAAKqC,WAAW,CAAC9B,MAAM;QACnB,IAAI,CAACiG,CAAC,GAAG,IAAI,CAAC3C,MAAM;QACpB,IAAI,CAAC0C,CAAC,GAAG,IAAI,CAACvG,KAAK,GAAG,CAAC;QACvB;MACJ,KAAKqC,WAAW,CAACC,IAAI;QACjB,IAAI,CAACkE,CAAC,GAAG,EAAE,IAAI,CAAC3C,MAAM,GAAG,IAAI,CAACy5B,UAAU,GAAG,IAAI,CAACC,MAAM,CAAC;QACvD,IAAI,CAACh3B,CAAC,GAAG,CAAC,IAAI,CAACxG,MAAM,GAAG,CAAC;QACzB,IAAI,CAAC8B,SAAS,GAAG,aAAa;QAC9B;MACJ,KAAKQ,WAAW,CAACE,KAAK;QAClB,IAAI,CAACiE,CAAC,GAAG,IAAI,CAAC3C,MAAM,GAAG,IAAI,CAAC05B,MAAM;QAClC,IAAI,CAACh3B,CAAC,GAAG,CAAC,IAAI,CAACxG,MAAM,GAAG,CAAC;QACzB,IAAI,CAAC8B,SAAS,GAAG,aAAa;QAC9B;MACJ;IACJ;EACJ;AACJ;AACAw7B,kBAAkB,CAAC5O,IAAI,YAAA+O,2BAAA7O,CAAA;EAAA,YAAAA,CAAA,IAAwF0O,kBAAkB,EAl+BvBxoC,EAAE,CAAA+5B,iBAAA,CAk+BuC/5B,EAAE,CAACg6B,UAAU;AAAA,CAA4C;AAC5MwO,kBAAkB,CAACtO,IAAI,kBAn+BmFl6B,EAAE,CAAAm6B,iBAAA;EAAA1pB,IAAA,EAm+BT+3B,kBAAkB;EAAApO,SAAA;EAAAc,MAAA;IAAA3tB,MAAA;IAAAnH,KAAA;IAAA4I,MAAA;IAAA7D,KAAA;IAAAD,MAAA;EAAA;EAAA02B,QAAA,GAn+BX5hC,EAAE,CAAA6hC,oBAAA;EAAA+G,KAAA,EAAAlhC,GAAA;EAAAyzB,KAAA;EAAAC,IAAA;EAAA12B,QAAA,WAAAmkC,4BAAA7kC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MAAFhE,EAAE,CAAA8H,cAAA;MAAF9H,EAAE,CAAAmE,cAAA,UA0+BxG,CAAC;MA1+BqGnE,EAAE,CAAAkF,MAAA,EA4+BzG,CAAC;MA5+BsGlF,EAAE,CAAAqE,YAAA,CA4+B9F,CAAC;IAAA;IAAA,IAAAL,EAAA;MA5+B2FhE,EAAE,CAAAoI,WAAA,iBAAAnE,GAAA,CAAAuhB,WAAA,OAAAvhB,GAAA,CAAAyN,CAAA,OAAAzN,GAAA,CAAA0N,CAAA,iBAAA1N,GAAA,CAAAsF,UAAA,eAAAtF,GAAA,CAAA+I,SAAA;MAAFhN,EAAE,CAAAwE,SAAA,CA4+BzG,CAAC;MA5+BsGxE,EAAE,CAAAqI,kBAAA,MAAApE,GAAA,CAAAmC,KAAA,KA4+BzG,CAAC;IAAA;EAAA;EAAAw1B,aAAA;EAAAmG,eAAA;AAAA,EACsE;AAC1E;EAAA,QAAAjG,SAAA,oBAAAA,SAAA,KA9+B0G97B,EAAE,CAAA+7B,iBAAA,CA8+BjByM,kBAAkB,EAAc,CAAC;IAChH/3B,IAAI,EAAEvQ,SAAS;IACfg1B,IAAI,EAAE,CAAC;MACC8G,QAAQ,EAAE,0BAA0B;MACpCt3B,QAAQ,EAAG;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;MACiBq9B,eAAe,EAAErhC,uBAAuB,CAACshC;IAC7C,CAAC;EACT,CAAC,CAAC,EAAkB,YAAY;IAAE,OAAO,CAAC;MAAEvxB,IAAI,EAAEzQ,EAAE,CAACg6B;IAAW,CAAC,CAAC;EAAE,CAAC,EAAkB;IAAEzsB,MAAM,EAAE,CAAC;MAC1FkD,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE+F,KAAK,EAAE,CAAC;MACRqK,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE2O,MAAM,EAAE,CAAC;MACTyB,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE8K,KAAK,EAAE,CAAC;MACRsF,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE6K,MAAM,EAAE,CAAC;MACTuF,IAAI,EAAEpQ;IACV,CAAC;EAAE,CAAC;AAAA;AAEhB,SAASyoC,SAASA,CAACC,CAAC,EAAEjmC,GAAG,GAAG,EAAE,EAAE;EAC5B,IAAI,OAAOimC,CAAC,KAAK,QAAQ,EAAE;IACvB,IAAI,OAAOA,CAAC,KAAK,QAAQ,EAAE;MACvB,OAAOA,CAAC,GAAG,EAAE;IACjB,CAAC,MACI;MACD,OAAO,EAAE;IACb;EACJ;EACAA,CAAC,GAAGA,CAAC,CAACC,IAAI,CAAC,CAAC;EACZ,IAAID,CAAC,CAAC38B,MAAM,IAAItJ,GAAG,EAAE;IACjB,OAAOimC,CAAC;EACZ,CAAC,MACI;IACD,OAAQ,GAAEA,CAAC,CAACE,KAAK,CAAC,CAAC,EAAEnmC,GAAG,CAAE,KAAI;EAClC;AACJ;AAEA,SAASomC,WAAWA,CAAC99B,KAAK,EAAE+9B,QAAQ,EAAE;EAClC,IAAI/9B,KAAK,CAACgB,MAAM,GAAG+8B,QAAQ,EAAE;IACzB,MAAMC,OAAO,GAAG,EAAE;IAClB,MAAMC,OAAO,GAAG9H,IAAI,CAACqD,KAAK,CAACx5B,KAAK,CAACgB,MAAM,GAAG+8B,QAAQ,CAAC;IACnD,KAAK,IAAIzL,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGtyB,KAAK,CAACgB,MAAM,EAAEsxB,CAAC,EAAE,EAAE;MACnC,IAAIA,CAAC,GAAG2L,OAAO,KAAK,CAAC,EAAE;QACnBD,OAAO,CAACpL,IAAI,CAAC5yB,KAAK,CAACsyB,CAAC,CAAC,CAAC;MAC1B;IACJ;IACAtyB,KAAK,GAAGg+B,OAAO;EACnB;EACA,OAAOh+B,KAAK;AAChB;AACA,SAASk+B,YAAYA,CAACljC,KAAK,EAAEmjC,SAAS,EAAEC,QAAQ,EAAE;EAC9C,MAAMC,WAAW,GAAG,CAACrjC,KAAK,IAAI,EAAE,EAAEkgC,QAAQ,CAAC,CAAC;EAC5C,IAAIoD,UAAU,GAAG,EAAE;EACnB,IAAI,IAAI,CAACC,IAAI,CAACF,WAAW,CAAC,EAAE;IACxBC,UAAU,GAAGD,WAAW,CAACG,KAAK,CAAC,KAAK,CAAC,CAACC,MAAM,CAAC,CAACC,KAAK,EAAEvnC,IAAI,KAAK;MAC1D,MAAMwnC,IAAI,GAAG,CAACD,KAAK,CAACE,GAAG,CAAC,CAAC,IAAI,EAAE,IAAI,GAAG;MACtC,OAAOD,IAAI,CAAC39B,MAAM,GAAG7J,IAAI,CAAC6J,MAAM,GAAGm9B,SAAS,GAAG,CAAC,GAAGO,KAAK,EAAEC,IAAI,CAACf,IAAI,CAAC,CAAC,EAAEzmC,IAAI,CAACymC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,GAAGc,KAAK,EAAEC,IAAI,GAAGxnC,IAAI,CAAC;IACjH,CAAC,EAAE,EAAE,CAAC;EACV,CAAC,MACI;IACD,IAAI0nC,UAAU,GAAG,CAAC;IAClB,OAAOA,UAAU,GAAGR,WAAW,CAACr9B,MAAM,EAAE;MACpCs9B,UAAU,CAAC1L,IAAI,CAACyL,WAAW,CAACS,SAAS,CAACD,UAAU,EAAEA,UAAU,GAAGV,SAAS,CAAC,CAAC;MAC1EU,UAAU,IAAIV,SAAS;IAC3B;EACJ;EACA,IAAIG,UAAU,CAACt9B,MAAM,GAAGo9B,QAAQ,EAAE;IAC9BE,UAAU,GAAGA,UAAU,CAACpM,MAAM,CAAC,CAAC,EAAEkM,QAAQ,CAAC;IAC3CE,UAAU,CAACA,UAAU,CAACt9B,MAAM,GAAG,CAAC,CAAC,IAAI,KAAK;EAC9C;EACA,OAAOs9B,UAAU;AACrB;AAEA,IAAIS,UAAU;AACd,CAAC,UAAUA,UAAU,EAAE;EACnBA,UAAU,CAAC,OAAO,CAAC,GAAG,OAAO;EAC7BA,UAAU,CAAC,QAAQ,CAAC,GAAG,QAAQ;EAC/BA,UAAU,CAAC,KAAK,CAAC,GAAG,KAAK;AAC7B,CAAC,EAAEA,UAAU,KAAKA,UAAU,GAAG,CAAC,CAAC,CAAC,CAAC;AAEnC,MAAMC,mBAAmB,CAAC;EACtB3R,WAAWA,CAACG,UAAU,EAAE;IACpB,IAAI,CAACA,UAAU,GAAGA,UAAU;IAC5B,IAAI,CAAC/tB,aAAa,GAAG,CAAC,CAAC,CAAC;IACxB,IAAI,CAACC,UAAU,GAAG,MAAM;IACxB,IAAI,CAACL,SAAS,GAAG,IAAI;IACrB,IAAI,CAACE,aAAa,GAAG,EAAE;IACvB,IAAI,CAACT,aAAa,GAAG,KAAK;IAC1B,IAAI,CAACQ,WAAW,GAAG,IAAI;IACvB,IAAI,CAACW,SAAS,GAAG,KAAK;IACtB,IAAI,CAACg/B,iBAAiB,GAAG,IAAI1pC,YAAY,CAAC,CAAC;IAC3C,IAAI,CAAC2pC,eAAe,GAAG,EAAE;IACzB,IAAI,CAACC,YAAY,GAAG,KAAK;IACzB,IAAI,CAACC,aAAa,GAAG,CAAC;IACtB,IAAI,CAACC,aAAa,GAAG,CAAC;IACtB,IAAI,CAACC,WAAW,GAAG,CAAC;IACpB,IAAI,CAACnhC,UAAU,GAAG4gC,UAAU,CAACQ,MAAM;IACnC,IAAI,CAACC,cAAc,GAAG,CAAC;IACvB,IAAI,CAACC,gBAAgB,GAAG,EAAE;IAC1B,IAAI,CAAC3/B,MAAM,GAAG,CAAC;IACf,IAAI,CAAC4/B,YAAY,GAAG,EAAE;IACtB,IAAI,CAACC,iCAAiC,GAAG,EAAE;EAC/C;EACA,IAAIthC,oBAAoBA,CAAA,EAAG;IACvB,OAAO,IAAI,CAAC4B,SAAS,IAAI,IAAI,CAAC2/B,KAAK,CAACC,IAAI;EAC5C;EACApK,WAAWA,CAACC,OAAO,EAAE;IACjB,IAAI,CAACyC,MAAM,CAAC,CAAC;EACjB;EACAvK,eAAeA,CAAA,EAAG;IACdjD,UAAU,CAAC,MAAM,IAAI,CAACmV,UAAU,CAAC,CAAC,CAAC;EACvC;EACAA,UAAUA,CAAA,EAAG;IACT,IAAI,CAACjqC,iBAAiB,CAAC,IAAI,CAAC23B,UAAU,CAAC,EAAE;MACrC;MACA,IAAI,CAACyR,iBAAiB,CAACxkC,IAAI,CAAC;QAAEqF,MAAM,EAAE,IAAI,CAAC4/B;MAAa,CAAC,CAAC;MAC1D;IACJ;IACA,MAAM5/B,MAAM,GAAGigC,QAAQ,CAAC,IAAI,CAACC,YAAY,CAACjS,aAAa,CAACE,qBAAqB,CAAC,CAAC,CAACnuB,MAAM,EAAE,EAAE,CAAC;IAC3F,IAAIA,MAAM,KAAK,IAAI,CAACA,MAAM,EAAE;MACxB,IAAI,CAACA,MAAM,GAAGA,MAAM;MACpB,IAAI,CAACm/B,iBAAiB,CAACxkC,IAAI,CAAC;QAAEqF,MAAM,EAAE,IAAI,CAACA;MAAO,CAAC,CAAC;MACpD6qB,UAAU,CAAC,MAAM,IAAI,CAACmV,UAAU,CAAC,CAAC,CAAC;IACvC;EACJ;EACA3H,MAAMA,CAAA,EAAG;IACL,MAAMyH,KAAK,GAAG,IAAI,CAACA,KAAK;IACxB,IAAI,CAAC5/B,KAAK,GAAG,IAAI,CAACigC,QAAQ,CAAC,CAAC;IAC5B,IAAI,IAAI,CAACzgC,cAAc,EAAE;MACrB,IAAI,CAAChB,UAAU,GAAG,IAAI,CAACgB,cAAc;IACzC,CAAC,MACI,IAAIogC,KAAK,CAACphC,UAAU,EAAE;MACvB;MACA,IAAI,CAACA,UAAU,GAAGohC,KAAK,CAACphC,UAAU,CAAC6rB,KAAK,CAACuV,KAAK,EAAE,IAAI,CAACngC,aAAa,CAAC;IACvE,CAAC,MACI;MACD,IAAI,CAACjB,UAAU,GAAG,UAAUm6B,CAAC,EAAE;QAC3B,IAAIA,CAAC,CAACtL,WAAW,CAAC1qB,IAAI,KAAK,MAAM,EAAE;UAC/B,OAAOg2B,CAAC,CAAC7B,kBAAkB,CAAC,CAAC;QACjC;QACA,OAAO6B,CAAC,CAAC1wB,cAAc,CAAC,CAAC;MAC7B,CAAC;IACL;IACA,MAAMi4B,KAAK,GAAG,IAAI,CAAC5gC,WAAW,GAAG,IAAI,CAAC6gC,gBAAgB,CAAC,IAAI,CAACngC,KAAK,CAAC,GAAG,IAAI;IACzE,IAAI,CAACogC,aAAa,GAAG,IAAI,CAACR,KAAK,CAACS,SAAS,GACnC,UAAU1H,CAAC,EAAE;MACX,OAAO,IAAI,CAACiH,KAAK,CAACjH,CAAC,CAAC,GAAG,IAAI,CAACiH,KAAK,CAACS,SAAS,CAAC,CAAC,GAAG,GAAG;IACvD,CAAC,GACC,IAAI,CAACT,KAAK;IAChB,IAAI,CAACxhC,aAAa,GAAG,EAAE;IACvB,IAAI8hC,KAAK,IAAIA,KAAK,KAAK,CAAC,EAAE;MACtB,IAAI,CAAC9hC,aAAa,GAAI,UAAS8hC,KAAM,GAAE;MACvC,IAAI,CAAC/hC,UAAU,GAAG4gC,UAAU,CAACuB,GAAG;MAChC,IAAI,CAACpB,eAAe,GAAG,EAAE;IAC7B,CAAC,MACI;MACD,IAAI,CAAC/gC,UAAU,GAAG4gC,UAAU,CAACQ,MAAM;IACvC;IACA5U,UAAU,CAAC,MAAM,IAAI,CAACmV,UAAU,CAAC,CAAC,CAAC;EACvC;EACAK,gBAAgBA,CAACngC,KAAK,EAAE;IACpB,IAAIkgC,KAAK,GAAG,CAAC;IACb,IAAI,CAACV,cAAc,GAAG,CAAC;IACvB,KAAK,IAAIlN,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGtyB,KAAK,CAACgB,MAAM,EAAEsxB,CAAC,EAAE,EAAE;MACnC,MAAMiO,IAAI,GAAG,IAAI,CAAC/hC,UAAU,CAACwB,KAAK,CAACsyB,CAAC,CAAC,CAAC,CAAC4I,QAAQ,CAAC,CAAC;MACjD,IAAIsF,UAAU,GAAGD,IAAI,CAACv/B,MAAM;MAC5B,IAAI,IAAI,CAAC3B,SAAS,EAAE;QAChBmhC,UAAU,GAAG,IAAI,CAAC3iC,QAAQ,CAAC0iC,IAAI,CAAC,CAACv/B,MAAM;MAC3C;MACA,IAAIw/B,UAAU,GAAG,IAAI,CAAChB,cAAc,EAAE;QAClC,IAAI,CAACA,cAAc,GAAGgB,UAAU;MACpC;IACJ;IACA,MAAMC,GAAG,GAAGtK,IAAI,CAAC1+B,GAAG,CAAC,IAAI,CAAC+nC,cAAc,EAAE,IAAI,CAACC,gBAAgB,CAAC;IAChE,MAAMiB,SAAS,GAAG,CAAC,CAAC,CAAC;IACrB,MAAMC,SAAS,GAAGF,GAAG,GAAGC,SAAS;IACjC,IAAIE,SAAS,GAAGD,SAAS;IACzB,MAAME,YAAY,GAAG1K,IAAI,CAACqD,KAAK,CAAC,IAAI,CAACz5B,KAAK,GAAGC,KAAK,CAACgB,MAAM,CAAC;IAC1D;IACA,OAAO4/B,SAAS,GAAGC,YAAY,IAAIX,KAAK,GAAG,CAAC,EAAE,EAAE;MAC5CA,KAAK,IAAI,EAAE;MACXU,SAAS,GAAGzK,IAAI,CAAC2K,GAAG,CAACZ,KAAK,IAAI/J,IAAI,CAAC4K,EAAE,GAAG,GAAG,CAAC,CAAC,GAAGJ,SAAS;IAC7D;IACA,IAAIK,WAAW,GAAG,EAAE;IACpB,IAAI,IAAI,CAAC3iC,oBAAoB,EAAE;MAC3B,MAAM4iC,WAAW,GAAG,IAAI,CAACjhC,KAAK,CAACy+B,MAAM,CAAC,CAACyC,OAAO,EAAEC,OAAO,KAAMA,OAAO,CAACngC,MAAM,GAAGkgC,OAAO,CAAClgC,MAAM,GAAGmgC,OAAO,GAAGD,OAAQ,EAAE,EAAE,CAAC;MACtH,MAAME,SAAS,GAAG,IAAI,CAAC1jC,UAAU,CAACujC,WAAW,CAAC;MAC9CD,WAAW,GAAG,EAAE,IAAII,SAAS,CAACpgC,MAAM,IAAI,CAAC,CAAC;MAC1C,IAAI,CAAC2+B,iCAAiC,GAAG,IAAI,CAAC0B,2BAA2B,CAACJ,WAAW,CAAC;IAC1F;IACA,MAAMK,cAAc,GAAGpB,KAAK,KAAK,CAAC,GAC5B/J,IAAI,CAACz+B,GAAG,CAACy+B,IAAI,CAACoL,GAAG,CAACpL,IAAI,CAACqL,GAAG,CAAEtB,KAAK,GAAG/J,IAAI,CAAC4K,EAAE,GAAI,GAAG,CAAC,CAAC,GAAG,IAAI,CAACxhC,aAAa,GAAGmhC,SAAS,EAAE,EAAE,CAAC,GAC1FM,WAAW;IACjB,IAAI,CAACtB,YAAY,GAAGvJ,IAAI,CAAC1+B,GAAG,CAAC6pC,cAAc,EAAE,GAAG,CAAC;IACjD,OAAOpB,KAAK;EAChB;EACAD,QAAQA,CAAA,EAAG;IACP,IAAIjgC,KAAK;IACT,MAAM+9B,QAAQ,GAAG,IAAI,CAAC0D,WAAW,CAAC,EAAE,CAAC;IACrC,MAAMC,aAAa,GAAG,IAAI,CAACD,WAAW,CAAC,GAAG,CAAC;IAC3C,IAAI,IAAI,CAACE,UAAU,EAAE;MACjB3hC,KAAK,GAAG,IAAI,CAAC2hC,UAAU;IAC3B,CAAC,MACI,IAAI,IAAI,CAAC/B,KAAK,CAAC5/B,KAAK,EAAE;MACvBA,KAAK,GAAG,IAAI,CAAC4/B,KAAK,CAAC5/B,KAAK,CAACqqB,KAAK,CAAC,IAAI,CAACuV,KAAK,EAAE,CAAC8B,aAAa,CAAC,CAAC;IAC/D,CAAC,MACI;MACD1hC,KAAK,GAAG,IAAI,CAAC4/B,KAAK,CAAClkC,MAAM,CAAC,CAAC;MAC3BsE,KAAK,GAAG89B,WAAW,CAAC99B,KAAK,EAAE+9B,QAAQ,CAAC;IACxC;IACA,OAAO/9B,KAAK;EAChB;EACAyhC,WAAWA,CAACG,SAAS,EAAE;IACnB,OAAOzL,IAAI,CAACqD,KAAK,CAAC,IAAI,CAACz5B,KAAK,GAAG6hC,SAAS,CAAC;EAC7C;EACArjC,aAAaA,CAACgiC,IAAI,EAAE;IAChB,OAAO,YAAY,GAAG,IAAI,CAACH,aAAa,CAACG,IAAI,CAAC,GAAG,GAAG,GAAG,IAAI,CAACrB,eAAe,GAAG,GAAG;EACrF;EACAxgC,iBAAiBA,CAAA,EAAG;IAChB,OAAQ,eAAc,CAAC,IAAI,CAACwgC,eAAe,GAAG,CAAE,GAAE;EACtD;EACArhC,QAAQA,CAAC7C,KAAK,EAAE;IACZ,OAAO,IAAI,CAACqE,SAAS,GAAGq+B,SAAS,CAAC1iC,KAAK,EAAE,IAAI,CAACuE,aAAa,CAAC,GAAGvE,KAAK;EACxE;EACAqmC,2BAA2BA,CAACQ,YAAY,EAAE;IACtC,IAAI,IAAI,CAACjC,KAAK,CAACS,SAAS,EAAE;MACtB,MAAMyB,qBAAqB,GAAG,CAAC,CAAC,CAAC;MACjC,MAAMC,aAAa,GAAG5L,IAAI,CAACqD,KAAK,CAAC,IAAI,CAACoG,KAAK,CAACS,SAAS,CAAC,CAAC,GAAGyB,qBAAqB,CAAC;MAChF,MAAME,aAAa,GAAGH,YAAY,CAAChE,KAAK,CAAC,CAAC,EAAEkE,aAAa,CAAC;MAC1D,OAAO5L,IAAI,CAACz+B,GAAG,CAACsqC,aAAa,CAAChhC,MAAM,EAAE,IAAI,CAACzB,aAAa,CAAC;IAC7D;IACA,OAAO,IAAI,CAACA,aAAa;EAC7B;EACA7B,UAAUA,CAAC1C,KAAK,EAAE;IACd,IAAIA,KAAK,CAACkgC,QAAQ,CAAC,CAAC,CAACl6B,MAAM,GAAG,IAAI,CAACzB,aAAa,IAAI,IAAI,CAACqgC,KAAK,CAACS,SAAS,EAAE;MACtE,MAAM4B,eAAe,GAAG,CAAC;MACzB,IAAI7D,QAAQ,GAAG,IAAI,CAAC9+B,WAAW,GAAG62B,IAAI,CAACqD,KAAK,CAAC,IAAI,CAACoG,KAAK,CAACC,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC,GAAGoC,eAAe;MACtF,IAAI7D,QAAQ,IAAI,CAAC,EAAE;QACf,OAAO,CAAC,IAAI,CAACvgC,QAAQ,CAAC7C,KAAK,CAAC,CAAC;MACjC;MACA,IAAIknC,oBAAoB,GAAG/L,IAAI,CAACz+B,GAAG,CAAC,IAAI,CAACioC,iCAAiC,EAAE,IAAI,CAACpgC,aAAa,CAAC;MAC/F,IAAI,CAAC1J,iBAAiB,CAAC,IAAI,CAAC23B,UAAU,CAAC,EAAE;QACrC0U,oBAAoB,GAAG/L,IAAI,CAACqD,KAAK,CAACrD,IAAI,CAAC1+B,GAAG,CAAC,IAAI,CAACioC,YAAY,GAAGuC,eAAe,EAAE9L,IAAI,CAACz+B,GAAG,CAAC,IAAI,CAACioC,iCAAiC,EAAE,IAAI,CAACpgC,aAAa,CAAC,CAAC,CAAC;MAC1J;MACA6+B,QAAQ,GAAGjI,IAAI,CAAC1+B,GAAG,CAAC2mC,QAAQ,EAAE6D,eAAe,CAAC;MAC9C,MAAMvD,KAAK,GAAGR,YAAY,CAACljC,KAAK,EAAEknC,oBAAoB,EAAE9D,QAAQ,GAAG,CAAC,GAAG,CAAC,GAAGA,QAAQ,CAAC;MACpF,OAAOM,KAAK;IAChB;IACA,OAAO,CAAC,IAAI,CAAC7gC,QAAQ,CAAC7C,KAAK,CAAC,CAAC;EACjC;AACJ;AACAgkC,mBAAmB,CAACxQ,IAAI,YAAA2T,4BAAAzT,CAAA;EAAA,YAAAA,CAAA,IAAwFsQ,mBAAmB,EAnvCzBpqC,EAAE,CAAA+5B,iBAAA,CAmvCyC95B,WAAW;AAAA,CAA4C;AAC5MmqC,mBAAmB,CAAClQ,IAAI,kBApvCkFl6B,EAAE,CAAAm6B,iBAAA;EAAA1pB,IAAA,EAovCR25B,mBAAmB;EAAAhQ,SAAA;EAAAC,SAAA,WAAAmT,0BAAAxpC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MApvCbhE,EAAE,CAAAu6B,WAAA,CAAA5yB,GAAA;IAAA;IAAA,IAAA3D,EAAA;MAAA,IAAAw2B,EAAA;MAAFx6B,EAAE,CAAAy6B,cAAA,CAAAD,EAAA,GAAFx6B,EAAE,CAAA06B,WAAA,QAAAz2B,GAAA,CAAAmnC,YAAA,GAAA5Q,EAAA,CAAAG,KAAA;IAAA;EAAA;EAAAO,MAAA;IAAA8P,KAAA;IAAAz9B,MAAA;IAAA1C,aAAA;IAAAkiC,UAAA;IAAAjiC,UAAA;IAAAL,SAAA;IAAAE,aAAA;IAAAC,cAAA;IAAAV,aAAA;IAAAH,cAAA;IAAAoB,KAAA;IAAAT,WAAA;IAAAW,SAAA;EAAA;EAAAuyB,OAAA;IAAAyM,iBAAA;EAAA;EAAAzI,QAAA,GAAF5hC,EAAE,CAAA6hC,oBAAA;EAAA+G,KAAA,EAAAhhC,GAAA;EAAAuzB,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAA32B,QAAA,WAAA+oC,6BAAAzpC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MAAFhE,EAAE,CAAA8H,cAAA;MAAF9H,EAAE,CAAAmE,cAAA,gBAqvCzF,CAAC;MArvCsFnE,EAAE,CAAAoE,UAAA,IAAAsF,qCAAA,cAsvCjB,CAAC;MAtvCc1J,EAAE,CAAAqE,YAAA,CA+wCjG,CAAC;MA/wC8FrE,EAAE,CAAAoE,UAAA,IAAA4F,qCAAA,cAixChC,CAAC;IAAA;IAAA,IAAAhG,EAAA;MAjxC6BhE,EAAE,CAAAwE,SAAA,EAsvCvE,CAAC;MAtvCoExE,EAAE,CAAAyE,UAAA,YAAAR,GAAA,CAAAmH,KAsvCvE,CAAC;MAtvCoEpL,EAAE,CAAAwE,SAAA,CAixCzE,CAAC;MAjxCsExE,EAAE,CAAAyE,UAAA,YAAAR,GAAA,CAAAmH,KAixCzE,CAAC;IAAA;EAAA;EAAAowB,YAAA,GAKMx6B,EAAE,CAACmjC,OAAO,EAAgGnjC,EAAE,CAACy6B,IAAI;EAAAG,aAAA;EAAAmG,eAAA;AAAA,EAAwH;AACnR;EAAA,QAAAjG,SAAA,oBAAAA,SAAA,KAvxC0G97B,EAAE,CAAA+7B,iBAAA,CAuxCjBqO,mBAAmB,EAAc,CAAC;IACjH35B,IAAI,EAAEvQ,SAAS;IACfg1B,IAAI,EAAE,CAAC;MACC8G,QAAQ,EAAE,4BAA4B;MACtCt3B,QAAQ,EAAG;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;MACiBq9B,eAAe,EAAErhC,uBAAuB,CAACshC;IAC7C,CAAC;EACT,CAAC,CAAC,EAAkB,YAAY;IAAE,OAAO,CAAC;MAAEvxB,IAAI,EAAEU,SAAS;MAAE+qB,UAAU,EAAE,CAAC;QAC9DzrB,IAAI,EAAErQ,MAAM;QACZ80B,IAAI,EAAE,CAACj1B,WAAW;MACtB,CAAC;IAAE,CAAC,CAAC;EAAE,CAAC,EAAkB;IAAE+qC,KAAK,EAAE,CAAC;MACpCv6B,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEkN,MAAM,EAAE,CAAC;MACTkD,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEwK,aAAa,EAAE,CAAC;MAChB4F,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE0sC,UAAU,EAAE,CAAC;MACbt8B,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEyK,UAAU,EAAE,CAAC;MACb2F,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEoK,SAAS,EAAE,CAAC;MACZgG,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEsK,aAAa,EAAE,CAAC;MAChB8F,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEuK,cAAc,EAAE,CAAC;MACjB6F,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE6J,aAAa,EAAE,CAAC;MAChBuG,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE0J,cAAc,EAAE,CAAC;MACjB0G,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE8K,KAAK,EAAE,CAAC;MACRsF,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEqK,WAAW,EAAE,CAAC;MACd+F,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEgL,SAAS,EAAE,CAAC;MACZoF,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEgqC,iBAAiB,EAAE,CAAC;MACpB55B,IAAI,EAAE7P;IACV,CAAC,CAAC;IAAEwqC,YAAY,EAAE,CAAC;MACf36B,IAAI,EAAEnQ,SAAS;MACf40B,IAAI,EAAE,CAAC,SAAS;IACpB,CAAC;EAAE,CAAC;AAAA;AAEhB,MAAMwY,cAAc,CAAC;EACjBjV,WAAWA,CAAA,EAAG;IACV,IAAI,CAAC/tB,WAAW,GAAG,IAAI;IACvB,IAAI,CAACR,aAAa,GAAG,KAAK;IAC1B,IAAI,CAACc,OAAO,GAAGwC,WAAW,CAAC9B,MAAM;IACjC,IAAI,CAACiiC,WAAW,GAAG,CAAC;IACpB,IAAI,CAACtiC,SAAS,GAAG,KAAK;IACtB,IAAI,CAACg/B,iBAAiB,GAAG,IAAI1pC,YAAY,CAAC,CAAC;IAC3C,IAAI,CAACitC,cAAc,GAAG,QAAQ;IAC9B,IAAI,CAACpiC,WAAW,GAAG,CAAC;IACpB,IAAI,CAAC0c,IAAI,GAAG,MAAM;IAClB,IAAI,CAACY,MAAM,GAAG,QAAQ;IACtB,IAAI,CAAChe,UAAU,GAAG,MAAM;IACxB,IAAI,CAAC0a,WAAW,GAAG,MAAM;IACzB,IAAI,CAACqoB,OAAO,GAAG,CAAC;IAChB,IAAI,CAACpiC,WAAW,GAAG+B,WAAW;EAClC;EACAqzB,WAAWA,CAACC,OAAO,EAAE;IACjB,IAAI,CAACyC,MAAM,CAAC,CAAC;EACjB;EACAA,MAAMA,CAAA,EAAG;IACL,IAAI,CAACv2B,SAAS,GAAI,eAAc,IAAI,CAAC2gC,WAAW,GAAG,IAAI,CAACE,OAAO,GAAG,IAAI,CAAC5iC,IAAI,CAACC,MAAO,GAAE;IACrF,IAAI,OAAO,IAAI,CAAC4iC,cAAc,KAAK,WAAW,EAAE;MAC5C,IAAI,CAACjjC,aAAa,GAAG,CAAC,IAAI,CAACijC,cAAc,CAAC;IAC9C;EACJ;EACAtjC,eAAeA,CAAC;IAAEU;EAAO,CAAC,EAAE;IACxB,MAAM6iC,cAAc,GAAG7iC,MAAM,GAAG,EAAE,GAAG,CAAC;IACtC,IAAI6iC,cAAc,KAAK,IAAI,CAACviC,WAAW,EAAE;MACrC,IAAI,CAACA,WAAW,GAAGuiC,cAAc;MACjChY,UAAU,CAAC,MAAM;QACb,IAAI,CAACsU,iBAAiB,CAACxkC,IAAI,CAAC;UAAEqF;QAAO,CAAC,CAAC;MAC3C,CAAC,EAAE,CAAC,CAAC;IACT;EACJ;AACJ;AACAwiC,cAAc,CAAC9T,IAAI,YAAAoU,uBAAAlU,CAAA;EAAA,YAAAA,CAAA,IAAwF4T,cAAc;AAAA,CAAmD;AAC5KA,cAAc,CAACxT,IAAI,kBAz4CuFl6B,EAAE,CAAAm6B,iBAAA;EAAA1pB,IAAA,EAy4Cbi9B,cAAc;EAAAtT,SAAA;EAAAC,SAAA,WAAA4T,qBAAAjqC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MAz4CHhE,EAAE,CAAAu6B,WAAA,CAy4C8gB6P,mBAAmB;IAAA;IAAA,IAAApmC,EAAA;MAAA,IAAAw2B,EAAA;MAz4CniBx6B,EAAE,CAAAy6B,cAAA,CAAAD,EAAA,GAAFx6B,EAAE,CAAA06B,WAAA,QAAAz2B,GAAA,CAAAiqC,cAAA,GAAA1T,EAAA,CAAAG,KAAA;IAAA;EAAA;EAAAO,MAAA;IAAAnwB,MAAA;IAAAE,IAAA;IAAAR,SAAA;IAAAC,WAAA;IAAAC,aAAA;IAAAC,cAAA;IAAAV,aAAA;IAAAikC,SAAA;IAAA5iC,SAAA;IAAAH,KAAA;IAAA0iC,cAAA;IAAA9iC,OAAA;IAAA2iC,WAAA;IAAAtiC,SAAA;EAAA;EAAAuyB,OAAA;IAAAyM,iBAAA;EAAA;EAAAzI,QAAA,GAAF5hC,EAAE,CAAA6hC,oBAAA;EAAA+G,KAAA,EAAAz+B,GAAA;EAAAgxB,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAA32B,QAAA,WAAA0pC,wBAAApqC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MAAFhE,EAAE,CAAA8H,cAAA;MAAF9H,EAAE,CAAAmE,cAAA,OA04CvC,CAAC;MA14CoCnE,EAAE,CAAAoE,UAAA,IAAAgG,gCAAA,eA45CrG,CAAC,IAAAkB,gCAAA,cASF,CAAC;MAr6CmGtL,EAAE,CAAAqE,YAAA,CAs6CjG,CAAC;IAAA;IAAA,IAAAL,EAAA;MAt6C8FhE,EAAE,CAAAoI,WAAA,UAAAnE,GAAA,CAAA2pC,cAAA,eAAA3pC,GAAA,CAAA+I,SAAA;MAAFhN,EAAE,CAAAwE,SAAA,CA64CxF,CAAC;MA74CqFxE,EAAE,CAAAyE,UAAA,SAAAR,GAAA,CAAA8G,MA64CxF,CAAC;MA74CqF/K,EAAE,CAAAwE,SAAA,CA+5CrF,CAAC;MA/5CkFxE,EAAE,CAAAyE,UAAA,SAAAR,GAAA,CAAAkqC,SA+5CrF,CAAC;IAAA;EAAA;EAAA3S,YAAA,GAQkB4O,mBAAmB,EAAsR5B,kBAAkB,EAA0HxnC,EAAE,CAACy6B,IAAI;EAAAG,aAAA;EAAAmG,eAAA;AAAA,EAAwH;AAC9lB;EAAA,QAAAjG,SAAA,oBAAAA,SAAA,KAx6C0G97B,EAAE,CAAA+7B,iBAAA,CAw6CjB2R,cAAc,EAAc,CAAC;IAC5Gj9B,IAAI,EAAEvQ,SAAS;IACfg1B,IAAI,EAAE,CAAC;MACC8G,QAAQ,EAAE,sBAAsB;MAChCt3B,QAAQ,EAAG;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;MACiBq9B,eAAe,EAAErhC,uBAAuB,CAACshC;IAC7C,CAAC;EACT,CAAC,CAAC,QAAkB;IAAEj3B,MAAM,EAAE,CAAC;MACvB0F,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE4K,IAAI,EAAE,CAAC;MACPwF,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEoK,SAAS,EAAE,CAAC;MACZgG,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEqK,WAAW,EAAE,CAAC;MACd+F,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEsK,aAAa,EAAE,CAAC;MAChB8F,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEuK,cAAc,EAAE,CAAC;MACjB6F,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE6J,aAAa,EAAE,CAAC;MAChBuG,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE8tC,SAAS,EAAE,CAAC;MACZ19B,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEkL,SAAS,EAAE,CAAC;MACZkF,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE+K,KAAK,EAAE,CAAC;MACRqF,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEytC,cAAc,EAAE,CAAC;MACjBr9B,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE2K,OAAO,EAAE,CAAC;MACVyF,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEstC,WAAW,EAAE,CAAC;MACdl9B,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEgL,SAAS,EAAE,CAAC;MACZoF,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEgqC,iBAAiB,EAAE,CAAC;MACpB55B,IAAI,EAAE7P;IACV,CAAC,CAAC;IAAEstC,cAAc,EAAE,CAAC;MACjBz9B,IAAI,EAAEnQ,SAAS;MACf40B,IAAI,EAAE,CAACkV,mBAAmB;IAC9B,CAAC;EAAE,CAAC;AAAA;;AAEhB;AACA;AACA;AACA;AACA;AACA;AACA,SAASiE,WAAWA,CAAC38B,CAAC,EAAEC,CAAC,EAAE28B,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAE,CAACC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,CAAC,EAAE;EAClD,IAAIC,MAAM,GAAG,EAAE;EACfP,CAAC,GAAG/M,IAAI,CAACqD,KAAK,CAAC0J,CAAC,CAAC;EACjBC,CAAC,GAAGhN,IAAI,CAACqD,KAAK,CAAC2J,CAAC,CAAC;EACjBD,CAAC,GAAGA,CAAC,KAAK,CAAC,GAAG,CAAC,GAAGA,CAAC;EACnBC,CAAC,GAAGA,CAAC,KAAK,CAAC,GAAG,CAAC,GAAGA,CAAC;EACnBM,MAAM,GAAI,IAAG,CAACn9B,CAAC,GAAG88B,CAAC,EAAE78B,CAAC,CAAE,EAAC;EACzBk9B,MAAM,IAAK,IAAGP,CAAC,GAAG,CAAC,GAAGE,CAAE,EAAC;EACzB,IAAIE,EAAE,EAAE;IACJG,MAAM,IAAK,IAAG,CAACL,CAAC,EAAEA,CAAC,CAAE,UAAS,CAACA,CAAC,EAAEA,CAAC,CAAE,EAAC;EAC1C,CAAC,MACI;IACDK,MAAM,IAAK,IAAGL,CAAE,IAAGA,CAAE,EAAC;EAC1B;EACAK,MAAM,IAAK,IAAGN,CAAC,GAAG,CAAC,GAAGC,CAAE,EAAC;EACzB,IAAII,EAAE,EAAE;IACJC,MAAM,IAAK,IAAG,CAACL,CAAC,EAAEA,CAAC,CAAE,UAAS,CAAC,CAACA,CAAC,EAAEA,CAAC,CAAE,EAAC;EAC3C,CAAC,MACI;IACDK,MAAM,IAAK,IAAGL,CAAE,IAAG,CAACA,CAAE,EAAC;EAC3B;EACAK,MAAM,IAAK,IAAG,CAAC,GAAGL,CAAC,GAAGF,CAAE,EAAC;EACzB,IAAIK,EAAE,EAAE;IACJE,MAAM,IAAK,IAAG,CAACL,CAAC,EAAEA,CAAC,CAAE,UAAS,CAAC,CAACA,CAAC,EAAE,CAACA,CAAC,CAAE,EAAC;EAC5C,CAAC,MACI;IACDK,MAAM,IAAK,IAAG,CAACL,CAAE,IAAG,CAACA,CAAE,EAAC;EAC5B;EACAK,MAAM,IAAK,IAAG,CAAC,GAAGL,CAAC,GAAGD,CAAE,EAAC;EACzB,IAAIE,EAAE,EAAE;IACJI,MAAM,IAAK,IAAG,CAACL,CAAC,EAAEA,CAAC,CAAE,UAAS,CAACA,CAAC,EAAE,CAACA,CAAC,CAAE,EAAC;EAC3C,CAAC,MACI;IACDK,MAAM,IAAK,IAAG,CAACL,CAAE,IAAGA,CAAE,EAAC;EAC3B;EACAK,MAAM,IAAK,GAAE;EACb,OAAOA,MAAM;AACjB;AAEA,MAAMC,mBAAmB,CAAC;EACtBrW,WAAWA,CAACG,UAAU,EAAE;IACpB,IAAI,CAACA,UAAU,GAAGA,UAAU;IAC5B,IAAI,CAAC/tB,aAAa,GAAG,CAAC,CAAC,CAAC;IACxB,IAAI,CAACC,UAAU,GAAG,MAAM;IACxB,IAAI,CAACL,SAAS,GAAG,IAAI;IACrB,IAAI,CAACE,aAAa,GAAG,EAAE;IACvB,IAAI,CAACT,aAAa,GAAG,KAAK;IAC1B,IAAI,CAAC+D,aAAa,GAAG,KAAK;IAC1B,IAAI,CAACE,YAAY,GAAG,KAAK;IACzB,IAAI,CAAC9C,SAAS,GAAG,KAAK;IACtB,IAAI,CAACg/B,iBAAiB,GAAG,IAAI1pC,YAAY,CAAC,CAAC;IAC3C,IAAI,CAAC6pC,aAAa,GAAG,CAAC;IACtB,IAAI,CAACE,WAAW,GAAG,CAAC;IACpB,IAAI,CAACJ,eAAe,GAAG,EAAE;IACzB,IAAI,CAAC/gC,UAAU,GAAG4gC,UAAU,CAACQ,MAAM;IACnC,IAAI,CAACx/B,KAAK,GAAG,CAAC;IACd,IAAI,CAACs/B,aAAa,GAAG,CAAC;IACtB,IAAI,CAACF,YAAY,GAAG,KAAK;IACzB,IAAI,CAACwE,mBAAmB,GAAG,CAAC;IAC5B,IAAI,CAACvhC,WAAW,GAAGA,WAAW;EAClC;EACAqzB,WAAWA,CAACC,OAAO,EAAE;IACjB,IAAI,CAACyC,MAAM,CAAC,CAAC;EACjB;EACAvK,eAAeA,CAAA,EAAG;IACdjD,UAAU,CAAC,MAAM,IAAI,CAACmV,UAAU,CAAC,CAAC,CAAC;EACvC;EACAA,UAAUA,CAAA,EAAG;IACT,IAAI,CAACjqC,iBAAiB,CAAC,IAAI,CAAC23B,UAAU,CAAC,EAAE;MACrC;MACA,IAAI,CAACztB,KAAK,GAAG,IAAI,CAAC6jC,uBAAuB,CAAC,CAAC;MAC3C,IAAI,CAAC3E,iBAAiB,CAACxkC,IAAI,CAAC;QAAEsF,KAAK,EAAE,IAAI,CAACA;MAAM,CAAC,CAAC;MAClD;IACJ;IACA,MAAMA,KAAK,GAAGggC,QAAQ,CAAC,IAAI,CAACC,YAAY,CAACjS,aAAa,CAACE,qBAAqB,CAAC,CAAC,CAACluB,KAAK,EAAE,EAAE,CAAC;IACzF,IAAIA,KAAK,KAAK,IAAI,CAACA,KAAK,EAAE;MACtB,IAAI,CAACA,KAAK,GAAGA,KAAK;MAClB,IAAI,CAACk/B,iBAAiB,CAACxkC,IAAI,CAAC;QAAEsF;MAAM,CAAC,CAAC;MACtC4qB,UAAU,CAAC,MAAM,IAAI,CAACmV,UAAU,CAAC,CAAC,CAAC;IACvC;EACJ;EACA3H,MAAMA,CAAA,EAAG;IACL,MAAMyH,KAAK,GAAG,IAAI,CAACA,KAAK;IACxB,MAAMiE,IAAI,GAAG,IAAI,CAAC1hC,MAAM,KAAKC,WAAW,CAACuD,GAAG,IAAI,IAAI,CAACxD,MAAM,KAAKC,WAAW,CAACE,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC;IAC1F,IAAI,CAAC3B,WAAW,GAAGw1B,IAAI,CAACz+B,GAAG,CAAC,IAAI,CAAC0nC,aAAa,EAAE,CAAC,CAAC,GAAG,IAAI,CAACE,WAAW;IACrE,IAAI,CAACt/B,KAAK,GAAG,IAAI,CAACigC,QAAQ,CAAC,CAAC;IAC5B,IAAI,IAAI,CAACzgC,cAAc,EAAE;MACrB,IAAI,CAAChB,UAAU,GAAG,IAAI,CAACgB,cAAc;IACzC,CAAC,MACI,IAAIogC,KAAK,CAACphC,UAAU,EAAE;MACvB;MACA,IAAI,CAACA,UAAU,GAAGohC,KAAK,CAACphC,UAAU,CAAC6rB,KAAK,CAACuV,KAAK,EAAE,IAAI,CAACngC,aAAa,CAAC;IACvE,CAAC,MACI;MACD,IAAI,CAACjB,UAAU,GAAG,UAAUm6B,CAAC,EAAE;QAC3B,IAAIA,CAAC,CAACtL,WAAW,CAAC1qB,IAAI,KAAK,MAAM,EAAE;UAC/B,OAAOg2B,CAAC,CAAC7B,kBAAkB,CAAC,CAAC;QACjC;QACA,OAAO6B,CAAC,CAAC1wB,cAAc,CAAC,CAAC;MAC7B,CAAC;IACL;IACA,IAAI,CAACm4B,aAAa,GAAGR,KAAK,CAACS,SAAS,GAC9B1H,CAAC,IAAI;MACH;MACA,MAAMmL,cAAc,GAAGlE,KAAK,CAACjH,CAAC,CAAC,GAAGiH,KAAK,CAACS,SAAS,CAAC,CAAC,GAAG,GAAG;MACzD,IAAI,IAAI,CAACpgC,SAAS,IAAI04B,CAAC,CAACuC,QAAQ,CAAC,CAAC,CAACl6B,MAAM,GAAG,IAAI,CAACzB,aAAa,EAAE;QAC5D,MAAMwkC,YAAY,GAAG,IAAI,CAACrmC,UAAU,CAACi7B,CAAC,CAAC,CAAC33B,MAAM;QAC9C,IAAI+iC,YAAY,KAAK,CAAC,EAAE;UACpB,OAAOD,cAAc;QACzB;QACA,MAAME,SAAS,GAAGpE,KAAK,CAACS,SAAS,CAAC,CAAC;QACnC,MAAM4D,aAAa,GAAGF,YAAY,GAAG,CAAC;QACtC,MAAMG,kBAAkB,GAAGF,SAAS,GAAG,GAAG,GAAGC,aAAa,GAAG,GAAG;QAChE,OAAOrE,KAAK,CAACjH,CAAC,CAAC,GAAGuL,kBAAkB;MACxC;MACA,OAAOJ,cAAc;IACzB,CAAC,GACClE,KAAK;IACX,IAAI,IAAI,CAAC78B,YAAY,IAAI,IAAI,CAACO,cAAc,EAAE;MAC1C,IAAI,CAAC6gC,iBAAiB,CAAC,CAAC;IAC5B;IACA,QAAQ,IAAI,CAAChiC,MAAM;MACf,KAAKC,WAAW,CAACuD,GAAG;QAChB,IAAI,CAAC/D,SAAS,GAAG,UAAU2+B,IAAI,EAAE;UAC7B,OAAO,YAAY,GAAG,IAAI,CAACH,aAAa,CAACG,IAAI,CAAC,GAAG,KAAK;QAC1D,CAAC;QACD,IAAI,CAACpiC,UAAU,GAAG4gC,UAAU,CAACQ,MAAM;QACnC,IAAI,CAAC6E,EAAE,GAAG,IAAI,CAAChF,aAAa,GAAGyE,IAAI;QACnC,IAAI,CAACniC,EAAE,GAAG,IAAI,CAACf,WAAW,GAAGkjC,IAAI;QACjC,IAAI,CAACriC,EAAE,GAAGqiC,IAAI,GAAG,CAAC,GAAG,KAAK,GAAG,OAAO;QACpC;MACJ,KAAKzhC,WAAW,CAAC9B,MAAM;QACnB,IAAI,CAACsB,SAAS,GAAG,UAAU2+B,IAAI,EAAE;UAC7B,OAAO,YAAY,GAAG,IAAI,CAACH,aAAa,CAACG,IAAI,CAAC,GAAG,KAAK;QAC1D,CAAC;QACD,IAAI,CAACpiC,UAAU,GAAG4gC,UAAU,CAACQ,MAAM;QACnC,IAAI,CAAC6E,EAAE,GAAG,IAAI,CAAChF,aAAa,GAAGyE,IAAI;QACnC,IAAI,CAACniC,EAAE,GAAG,IAAI,CAACf,WAAW,GAAGkjC,IAAI;QACjC,IAAI,CAACriC,EAAE,GAAGqiC,IAAI,GAAG,CAAC,GAAG,KAAK,GAAG,OAAO;QACpC;MACJ,KAAKzhC,WAAW,CAACC,IAAI;QACjB,IAAI,CAACT,SAAS,GAAG,UAAU2+B,IAAI,EAAE;UAC7B,OAAO,cAAc,GAAG,IAAI,CAACH,aAAa,CAACG,IAAI,CAAC,GAAG,GAAG;QAC1D,CAAC;QACD,IAAI,CAACpiC,UAAU,GAAG4gC,UAAU,CAACuB,GAAG;QAChC,IAAI,CAAC+D,EAAE,GAAG,IAAI,CAACjF,aAAa,GAAG,CAACyE,IAAI;QACpC,IAAI,CAACpiC,EAAE,GAAG,IAAI,CAACd,WAAW,GAAG,CAACkjC,IAAI;QAClC,IAAI,CAACriC,EAAE,GAAG,OAAO;QACjB;MACJ,KAAKY,WAAW,CAACE,KAAK;QAClB,IAAI,CAACV,SAAS,GAAG,UAAU2+B,IAAI,EAAE;UAC7B,OAAO,cAAc,GAAG,IAAI,CAACH,aAAa,CAACG,IAAI,CAAC,GAAG,GAAG;QAC1D,CAAC;QACD,IAAI,CAACpiC,UAAU,GAAG4gC,UAAU,CAACuF,KAAK;QAClC,IAAI,CAACD,EAAE,GAAG,IAAI,CAACjF,aAAa,GAAG,CAACyE,IAAI;QACpC,IAAI,CAACpiC,EAAE,GAAG,IAAI,CAACd,WAAW,GAAG,CAACkjC,IAAI;QAClC,IAAI,CAACriC,EAAE,GAAG,OAAO;QACjB;MACJ;IACJ;IACAmpB,UAAU,CAAC,MAAM,IAAI,CAACmV,UAAU,CAAC,CAAC,CAAC;EACvC;EACAqE,iBAAiBA,CAAA,EAAG;IAChB,IAAI,CAACI,MAAM,GAAG,IAAI,CAACnE,aAAa,CAACjK,IAAI,CAAC1+B,GAAG,CAAC4yB,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC/mB,cAAc,CAACkhC,GAAG,CAAC/L,IAAI,IAAIA,IAAI,CAAC/1B,KAAK,CAAC,CAAC,CAAC;IACnG,IAAI,CAAC+hC,MAAM,GAAG,IAAI,CAACrE,aAAa,CAACjK,IAAI,CAACz+B,GAAG,CAAC2yB,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC/mB,cAAc,CAACkhC,GAAG,CAAC/L,IAAI,IAAIA,IAAI,CAAC/1B,KAAK,CAAC,CAAC,CAAC;IACnG,IAAI,CAACihC,mBAAmB,GAAG,IAAI,CAACrgC,cAAc,CAACtC,MAAM;IACrD,IAAI,CAACc,iBAAiB,GAAGmhC,WAAW,CAAC,CAAC,EAAE,IAAI,CAACwB,MAAM,EAAE,IAAI,CAACziC,aAAa,EAAE,IAAI,CAACuiC,MAAM,GAAG,IAAI,CAACE,MAAM,EAAE,CAAC,EAAE,CACnG,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,CACR,CAAC;EACN;EACAxE,QAAQA,CAAA,EAAG;IACP,IAAIjgC,KAAK;IACT,MAAM+9B,QAAQ,GAAG,IAAI,CAAC0D,WAAW,CAAC,EAAE,CAAC;IACrC,MAAMC,aAAa,GAAG,IAAI,CAACD,WAAW,CAAC,EAAE,CAAC;IAC1C,IAAI,IAAI,CAACE,UAAU,EAAE;MACjB3hC,KAAK,GAAG,IAAI,CAAC2hC,UAAU;IAC3B,CAAC,MACI,IAAI,IAAI,CAAC/B,KAAK,CAAC5/B,KAAK,EAAE;MACvBA,KAAK,GAAG,IAAI,CAAC4/B,KAAK,CAAC5/B,KAAK,CAACqqB,KAAK,CAAC,IAAI,CAACuV,KAAK,EAAE,CAAC8B,aAAa,CAAC,CAAC;IAC/D,CAAC,MACI;MACD1hC,KAAK,GAAG,IAAI,CAAC4/B,KAAK,CAAClkC,MAAM,CAAC,CAAC;MAC3BsE,KAAK,GAAG89B,WAAW,CAAC99B,KAAK,EAAE+9B,QAAQ,CAAC;IACxC;IACA,OAAO/9B,KAAK;EAChB;EACAyhC,WAAWA,CAACiD,UAAU,EAAE;IACpB,OAAOvO,IAAI,CAACqD,KAAK,CAAC,IAAI,CAAC15B,MAAM,GAAG4kC,UAAU,CAAC;EAC/C;EACAnmC,aAAaA,CAACgiC,IAAI,EAAE;IAChB,OAAQ,aAAY,IAAI,CAACH,aAAa,CAACG,IAAI,CAAE,IAAG,IAAI,CAACrB,eAAgB,GAAE;EAC3E;EACAxgC,iBAAiBA,CAAA,EAAG;IAChB,OAAQ,gBAAe;EAC3B;EACAb,QAAQA,CAAC7C,KAAK,EAAE;IACZ,OAAO,IAAI,CAACqE,SAAS,GAAGq+B,SAAS,CAAC1iC,KAAK,EAAE,IAAI,CAACuE,aAAa,CAAC,GAAGvE,KAAK;EACxE;EACA4oC,uBAAuBA,CAAA,EAAG;IACtB,MAAMe,QAAQ,GAAGxO,IAAI,CAACz+B,GAAG,CAAC,GAAG,IAAI,CAACsI,KAAK,CAACwkC,GAAG,CAAC9V,CAAC,IAAI,IAAI,CAAC7wB,QAAQ,CAAC,IAAI,CAACW,UAAU,CAACkwB,CAAC,CAAC,CAAC,CAAC1tB,MAAM,CAAC,CAAC;IAC3F,MAAM0/B,SAAS,GAAG,CAAC;IACnB,OAAOiE,QAAQ,GAAGjE,SAAS;EAC/B;EACAhjC,UAAUA,CAAC1C,KAAK,EAAE;IACd,IAAIA,KAAK,CAACkgC,QAAQ,CAAC,CAAC,CAACl6B,MAAM,GAAG,IAAI,CAACzB,aAAa,IAAI,IAAI,CAACqgC,KAAK,CAACS,SAAS,EAAE;MACtE;MACA,MAAMuE,cAAc,GAAG,IAAI,CAACrlC,aAAa;MACzC,MAAM6+B,QAAQ,GAAGjI,IAAI,CAACqD,KAAK,CAAC,IAAI,CAACoG,KAAK,CAACS,SAAS,CAAC,CAAC,GAAG,EAAE,CAAC;MACxD,IAAIjC,QAAQ,IAAI,CAAC,EAAE;QACf,OAAO,CAAC,IAAI,CAACvgC,QAAQ,CAAC7C,KAAK,CAAC,CAAC;MACjC;MACA,OAAOkjC,YAAY,CAACljC,KAAK,EAAE4pC,cAAc,EAAEzO,IAAI,CAAC1+B,GAAG,CAAC2mC,QAAQ,EAAE,CAAC,CAAC,CAAC;IACrE;IACA,OAAO,CAAC,IAAI,CAAC5/B,UAAU,CAACxD,KAAK,CAAC,CAAC;EACnC;AACJ;AACA0oC,mBAAmB,CAAClV,IAAI,YAAAqW,4BAAAnW,CAAA;EAAA,YAAAA,CAAA,IAAwFgV,mBAAmB,EAjtDzB9uC,EAAE,CAAA+5B,iBAAA,CAitDyC95B,WAAW;AAAA,CAA4C;AAC5M6uC,mBAAmB,CAAC5U,IAAI,kBAltDkFl6B,EAAE,CAAAm6B,iBAAA;EAAA1pB,IAAA,EAktDRq+B,mBAAmB;EAAA1U,SAAA;EAAAC,SAAA,WAAA6V,0BAAAlsC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MAltDbhE,EAAE,CAAAu6B,WAAA,CAAA5yB,GAAA;IAAA;IAAA,IAAA3D,EAAA;MAAA,IAAAw2B,EAAA;MAAFx6B,EAAE,CAAAy6B,cAAA,CAAAD,EAAA,GAAFx6B,EAAE,CAAA06B,WAAA,QAAAz2B,GAAA,CAAAmnC,YAAA,GAAA5Q,EAAA,CAAAG,KAAA;IAAA;EAAA;EAAAO,MAAA;IAAA8P,KAAA;IAAAz9B,MAAA;IAAA1C,aAAA;IAAAkiC,UAAA;IAAAjiC,UAAA;IAAAL,SAAA;IAAAE,aAAA;IAAAC,cAAA;IAAAV,aAAA;IAAAkD,aAAA;IAAAlC,MAAA;IAAAwD,cAAA;IAAAT,aAAA;IAAAE,YAAA;IAAA9C,SAAA;EAAA;EAAAuyB,OAAA;IAAAyM,iBAAA;EAAA;EAAAzI,QAAA,GAAF5hC,EAAE,CAAA6hC,oBAAA;EAAA+G,KAAA,EAAAj9B,GAAA;EAAAwvB,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAA32B,QAAA,WAAAyrC,6BAAAnsC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MAAFhE,EAAE,CAAA8H,cAAA;MAAF9H,EAAE,CAAAmE,cAAA,gBAmtDzF,CAAC;MAntDsFnE,EAAE,CAAAoE,UAAA,IAAA2I,qCAAA,cAotDrB,CAAC;MAptDkB/M,EAAE,CAAAqE,YAAA,CAivDjG,CAAC;MAjvD8FrE,EAAE,CAAAoE,UAAA,IAAA6I,wCAAA,iBAwvDvG,CAAC,IAAAU,qCAAA,cACkE,CAAC,IAAAO,qCAAA,cAiBxB,CAAC;IAAA;IAAA,IAAAlK,EAAA;MA1wDwDhE,EAAE,CAAAwE,SAAA,EAotDvE,CAAC;MAptDoExE,EAAE,CAAAyE,UAAA,YAAAR,GAAA,CAAAmH,KAotDvE,CAAC;MAptDoEpL,EAAE,CAAAwE,SAAA,CAovDrC,CAAC;MApvDkCxE,EAAE,CAAAyE,UAAA,SAAAR,GAAA,CAAA8qC,mBAAA,QAAA9qC,GAAA,CAAA4rC,MAAA,IAAA5rC,GAAA,CAAA0rC,MAAA,IAAA1rC,GAAA,CAAAkK,YAovDrC,CAAC;MApvDkCnO,EAAE,CAAAwE,SAAA,CAyvDzE,CAAC;MAzvDsExE,EAAE,CAAAyE,UAAA,YAAAR,GAAA,CAAAmH,KAyvDzE,CAAC;MAzvDsEpL,EAAE,CAAAwE,SAAA,CA0wD7D,CAAC;MA1wD0DxE,EAAE,CAAAyE,UAAA,YAAAR,GAAA,CAAAyK,cA0wD7D,CAAC;IAAA;EAAA;EAAA8sB,YAAA,GAsBNx6B,EAAE,CAACmjC,OAAO,EAAgGnjC,EAAE,CAACy6B,IAAI;EAAAG,aAAA;EAAAmG,eAAA;AAAA,EAAwH;AACnR;EAAA,QAAAjG,SAAA,oBAAAA,SAAA,KAjyD0G97B,EAAE,CAAA+7B,iBAAA,CAiyDjB+S,mBAAmB,EAAc,CAAC;IACjHr+B,IAAI,EAAEvQ,SAAS;IACfg1B,IAAI,EAAE,CAAC;MACC8G,QAAQ,EAAE,4BAA4B;MACtCt3B,QAAQ,EAAG;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;MACiBq9B,eAAe,EAAErhC,uBAAuB,CAACshC;IAC7C,CAAC;EACT,CAAC,CAAC,EAAkB,YAAY;IAAE,OAAO,CAAC;MAAEvxB,IAAI,EAAEU,SAAS;MAAE+qB,UAAU,EAAE,CAAC;QAC9DzrB,IAAI,EAAErQ,MAAM;QACZ80B,IAAI,EAAE,CAACj1B,WAAW;MACtB,CAAC;IAAE,CAAC,CAAC;EAAE,CAAC,EAAkB;IAAE+qC,KAAK,EAAE,CAAC;MACpCv6B,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEkN,MAAM,EAAE,CAAC;MACTkD,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEwK,aAAa,EAAE,CAAC;MAChB4F,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE0sC,UAAU,EAAE,CAAC;MACbt8B,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEyK,UAAU,EAAE,CAAC;MACb2F,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEoK,SAAS,EAAE,CAAC;MACZgG,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEsK,aAAa,EAAE,CAAC;MAChB8F,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEuK,cAAc,EAAE,CAAC;MACjB6F,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE6J,aAAa,EAAE,CAAC;MAChBuG,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE+M,aAAa,EAAE,CAAC;MAChBqD,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE6K,MAAM,EAAE,CAAC;MACTuF,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEqO,cAAc,EAAE,CAAC;MACjB+B,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE4N,aAAa,EAAE,CAAC;MAChBwC,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE8N,YAAY,EAAE,CAAC;MACfsC,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEgL,SAAS,EAAE,CAAC;MACZoF,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEgqC,iBAAiB,EAAE,CAAC;MACpB55B,IAAI,EAAE7P;IACV,CAAC,CAAC;IAAEwqC,YAAY,EAAE,CAAC;MACf36B,IAAI,EAAEnQ,SAAS;MACf40B,IAAI,EAAE,CAAC,SAAS;IACpB,CAAC;EAAE,CAAC;AAAA;AAEhB,MAAMkb,cAAc,CAAC;EACjB3X,WAAWA,CAAA,EAAG;IACV,IAAI,CAACvuB,aAAa,GAAG,KAAK;IAC1B,IAAI,CAACuE,OAAO,GAAGjB,WAAW,CAACC,IAAI;IAC/B,IAAI,CAAC4iC,WAAW,GAAG,CAAC;IACpB,IAAI,CAAChlC,SAAS,GAAG,KAAK;IACtB,IAAI,CAACg/B,iBAAiB,GAAG,IAAI1pC,YAAY,CAAC,CAAC;IAC3C,IAAI,CAAC2vC,cAAc,GAAG,QAAQ;IAC9B,IAAI,CAAC9kC,WAAW,GAAG,EAAE;IACrB,IAAI,CAAC0c,IAAI,GAAG,MAAM;IAClB,IAAI,CAACY,MAAM,GAAG,MAAM;IACpB,IAAI,CAAChe,UAAU,GAAG,MAAM;IACxB,IAAI,CAAC0a,WAAW,GAAG,CAAC;IACpB,IAAI,CAACqoB,OAAO,GAAG,CAAC;EACpB;EACAhN,WAAWA,CAACC,OAAO,EAAE;IACjB,IAAI,CAACyC,MAAM,CAAC,CAAC;EACjB;EACAA,MAAMA,CAAA,EAAG;IACL,IAAI,CAACv0B,MAAM,GAAG,EAAE,IAAI,CAACqhC,WAAW,GAAG,IAAI,CAACxC,OAAO,CAAC;IAChD,IAAI,IAAI,CAACp/B,OAAO,KAAKjB,WAAW,CAACE,KAAK,EAAE;MACpC,IAAI,CAAClC,WAAW,GAAG,EAAE;MACrB,IAAI,CAACwB,SAAS,GAAI,aAAY,IAAI,CAACgC,MAAM,GAAG,IAAI,CAAC/D,IAAI,CAACE,KAAM,OAAM;IACtE,CAAC,MACI;MACD,IAAI,CAAC6B,SAAS,GAAI,aAAY,IAAI,CAACgC,MAAO,OAAM;IACpD;IACA,IAAI,IAAI,CAACuhC,cAAc,KAAKp/B,SAAS,EAAE;MACnC,IAAI,CAACtG,aAAa,GAAG,CAAC,IAAI,CAAC0lC,cAAc,CAAC;IAC9C;EACJ;EACAhiC,cAAcA,CAAC;IAAEpD;EAAM,CAAC,EAAE;IACtB,IAAIA,KAAK,KAAK,IAAI,CAACK,WAAW,IAAI,IAAI,CAACiD,OAAO,KAAKjB,WAAW,CAACE,KAAK,EAAE;MAClE,IAAI,CAAClC,WAAW,GAAGL,KAAK,GAAG,IAAI,CAACK,WAAW;MAC3CuqB,UAAU,CAAC,MAAM;QACb,IAAI,CAACsU,iBAAiB,CAACxkC,IAAI,CAAC;UAAEsF;QAAM,CAAC,CAAC;MAC1C,CAAC,EAAE,CAAC,CAAC;IACT,CAAC,MACI,IAAIA,KAAK,KAAK,IAAI,CAACK,WAAW,EAAE;MACjC,IAAI,CAACA,WAAW,GAAGL,KAAK;MACxB4qB,UAAU,CAAC,MAAM;QACb,IAAI,CAACsU,iBAAiB,CAACxkC,IAAI,CAAC;UAAEsF;QAAM,CAAC,CAAC;MAC1C,CAAC,EAAE,CAAC,CAAC;IACT;EACJ;AACJ;AACAilC,cAAc,CAACxW,IAAI,YAAA4W,uBAAA1W,CAAA;EAAA,YAAAA,CAAA,IAAwFsW,cAAc;AAAA,CAAmD;AAC5KA,cAAc,CAAClW,IAAI,kBA78DuFl6B,EAAE,CAAAm6B,iBAAA;EAAA1pB,IAAA,EA68Db2/B,cAAc;EAAAhW,SAAA;EAAAC,SAAA,WAAAoW,qBAAAzsC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MA78DHhE,EAAE,CAAAu6B,WAAA,CA68DklBuU,mBAAmB;IAAA;IAAA,IAAA9qC,EAAA;MAAA,IAAAw2B,EAAA;MA78DvmBx6B,EAAE,CAAAy6B,cAAA,CAAAD,EAAA,GAAFx6B,EAAE,CAAA06B,WAAA,QAAAz2B,GAAA,CAAAiqC,cAAA,GAAA1T,EAAA,CAAAG,KAAA;IAAA;EAAA;EAAAO,MAAA;IAAA1sB,MAAA;IAAAvD,IAAA;IAAAR,SAAA;IAAAE,aAAA;IAAAC,cAAA;IAAAQ,KAAA;IAAAlB,aAAA;IAAAikC,SAAA;IAAA5iC,SAAA;IAAAglC,cAAA;IAAA9hC,OAAA;IAAAC,cAAA;IAAAP,YAAA;IAAAF,aAAA;IAAAoiC,WAAA;IAAAhlC,SAAA;EAAA;EAAAuyB,OAAA;IAAAyM,iBAAA;EAAA;EAAAzI,QAAA,GAAF5hC,EAAE,CAAA6hC,oBAAA;EAAA+G,KAAA,EAAAx6B,GAAA;EAAA+sB,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAA32B,QAAA,WAAAgsC,wBAAA1sC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MAAFhE,EAAE,CAAA8H,cAAA;MAAF9H,EAAE,CAAAmE,cAAA,OA88DvC,CAAC;MA98DoCnE,EAAE,CAAAoE,UAAA,IAAAiK,gCAAA,eAk+DrG,CAAC,IAAAM,gCAAA,cAUF,CAAC;MA5+DmG3O,EAAE,CAAAqE,YAAA,CA6+DjG,CAAC;IAAA;IAAA,IAAAL,EAAA;MA7+D8FhE,EAAE,CAAAoI,WAAA,UAAAnE,GAAA,CAAAqsC,cAAA,eAAArsC,GAAA,CAAA+I,SAAA;MAAFhN,EAAE,CAAAwE,SAAA,CAi9DxF,CAAC;MAj9DqFxE,EAAE,CAAAyE,UAAA,SAAAR,GAAA,CAAAuK,MAi9DxF,CAAC;MAj9DqFxO,EAAE,CAAAwE,SAAA,CAs+DrF,CAAC;MAt+DkFxE,EAAE,CAAAyE,UAAA,SAAAR,GAAA,CAAAkqC,SAs+DrF,CAAC;IAAA;EAAA;EAAA3S,YAAA,GAQkBsT,mBAAmB,EAA0TtG,kBAAkB,EAA0HxnC,EAAE,CAACy6B,IAAI;EAAAG,aAAA;EAAAmG,eAAA;AAAA,EAAwH;AACloB;EAAA,QAAAjG,SAAA,oBAAAA,SAAA,KA/+D0G97B,EAAE,CAAA+7B,iBAAA,CA++DjBqU,cAAc,EAAc,CAAC;IAC5G3/B,IAAI,EAAEvQ,SAAS;IACfg1B,IAAI,EAAE,CAAC;MACC8G,QAAQ,EAAE,sBAAsB;MAChCt3B,QAAQ,EAAG;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;MACiBq9B,eAAe,EAAErhC,uBAAuB,CAACshC;IAC7C,CAAC;EACT,CAAC,CAAC,QAAkB;IAAExzB,MAAM,EAAE,CAAC;MACvBiC,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE4K,IAAI,EAAE,CAAC;MACPwF,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEoK,SAAS,EAAE,CAAC;MACZgG,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEsK,aAAa,EAAE,CAAC;MAChB8F,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEuK,cAAc,EAAE,CAAC;MACjB6F,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE+K,KAAK,EAAE,CAAC;MACRqF,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE6J,aAAa,EAAE,CAAC;MAChBuG,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE8tC,SAAS,EAAE,CAAC;MACZ19B,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEkL,SAAS,EAAE,CAAC;MACZkF,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEkwC,cAAc,EAAE,CAAC;MACjB9/B,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEoO,OAAO,EAAE,CAAC;MACVgC,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEqO,cAAc,EAAE,CAAC;MACjB+B,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE8N,YAAY,EAAE,CAAC;MACfsC,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE4N,aAAa,EAAE,CAAC;MAChBwC,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEgwC,WAAW,EAAE,CAAC;MACd5/B,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEgL,SAAS,EAAE,CAAC;MACZoF,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEgqC,iBAAiB,EAAE,CAAC;MACpB55B,IAAI,EAAE7P;IACV,CAAC,CAAC;IAAEstC,cAAc,EAAE,CAAC;MACjBz9B,IAAI,EAAEnQ,SAAS;MACf40B,IAAI,EAAE,CAAC4Z,mBAAmB;IAC9B,CAAC;EAAE,CAAC;AAAA;AAEhB,MAAM6B,UAAU,CAAC;AAEjBA,UAAU,CAAC/W,IAAI,YAAAgX,mBAAA9W,CAAA;EAAA,YAAAA,CAAA,IAAwF6W,UAAU;AAAA,CAAkD;AACnKA,UAAU,CAACE,IAAI,kBAjkE2F7wC,EAAE,CAAA8wC,gBAAA;EAAArgC,IAAA,EAikEJkgC;AAAU,EAAmP;AACrWA,UAAU,CAACI,IAAI,kBAlkE2F/wC,EAAE,CAAAgxC,gBAAA;EAAAC,OAAA,GAkkEkB,CAAC9vC,YAAY,CAAC;AAAA,EAAI;AAChJ;EAAA,QAAA26B,SAAA,oBAAAA,SAAA,KAnkE0G97B,EAAE,CAAA+7B,iBAAA,CAmkEjB4U,UAAU,EAAc,CAAC;IACxGlgC,IAAI,EAAE3P,QAAQ;IACdo0B,IAAI,EAAE,CAAC;MACC+b,OAAO,EAAE,CAAC9vC,YAAY,CAAC;MACvB+vC,YAAY,EAAE,CAAC1I,kBAAkB,EAAEkF,cAAc,EAAEtD,mBAAmB,EAAEgG,cAAc,EAAEtB,mBAAmB,CAAC;MAC5GqC,OAAO,EAAE,CAAC3I,kBAAkB,EAAEkF,cAAc,EAAEtD,mBAAmB,EAAEgG,cAAc,EAAEtB,mBAAmB;IAC1G,CAAC;EACT,CAAC,CAAC;AAAA;AAEV,IAAIsC,UAAU;AACd,CAAC,UAAUA,UAAU,EAAE;EACnBA,UAAU,CAAC,SAAS,CAAC,GAAG,SAAS;EACjCA,UAAU,CAAC,SAAS,CAAC,GAAG,SAAS;AACrC,CAAC,EAAEA,UAAU,KAAKA,UAAU,GAAG,CAAC,CAAC,CAAC,CAAC;AAEnC,IAAIC,SAAS;AACb,CAAC,UAAUA,SAAS,EAAE;EAClBA,SAAS,CAACA,SAAS,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,KAAK;EAC3CA,SAAS,CAACA,SAAS,CAAC,OAAO,CAAC,GAAG,OAAO,CAAC,GAAG,OAAO;EACjDA,SAAS,CAACA,SAAS,CAAC,WAAW,CAAC,GAAG,WAAW,CAAC,GAAG,WAAW;AACjE,CAAC,EAAEA,SAAS,KAAKA,SAAS,GAAG,CAAC,CAAC,CAAC,CAAC;AAEjC,MAAMC,gBAAgB,CAAC;EACnB7Y,WAAWA,CAAC8Y,cAAc,EAAEC,gBAAgB,EAAE7Y,QAAQ,EAAE;IACpD,IAAI,CAAC4Y,cAAc,GAAGA,cAAc;IACpC,IAAI,CAACC,gBAAgB,GAAGA,gBAAgB;IACxC,IAAI,CAAC7Y,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAAC8Y,eAAe,GAAG,EAAE;IACzB,IAAI,CAACC,mBAAmB,GAAG,IAAI;IAC/B,IAAI,CAACC,cAAc,GAAG,EAAE;IACxB,IAAI,CAAC9gC,eAAe,GAAG,KAAK;IAC5B,IAAI,CAAC+gC,gBAAgB,GAAG,IAAI;IAC5B,IAAI,CAACj3B,gBAAgB,GAAGgc,cAAc,CAAC5lB,GAAG;IAC1C,IAAI,CAAC8gC,gBAAgB,GAAGlb,cAAc,CAACO,MAAM;IAC7C,IAAI,CAACtc,WAAW,GAAGw2B,UAAU,CAACU,OAAO;IACrC,IAAI,CAACC,0BAA0B,GAAG,IAAI;IACtC,IAAI,CAACC,wBAAwB,GAAG,IAAI;IACpC,IAAI,CAACC,kBAAkB,GAAG,GAAG;IAC7B,IAAI,CAACC,kBAAkB,GAAG,GAAG;IAC7B,IAAI,CAACC,gBAAgB,GAAGd,SAAS,CAACe,GAAG;IACrC,IAAI,CAACC,oBAAoB,GAAG,KAAK;IACjC,IAAI,CAACC,IAAI,GAAG,IAAI3xC,YAAY,CAAC,CAAC;IAC9B,IAAI,CAAC4xC,IAAI,GAAG,IAAI5xC,YAAY,CAAC,CAAC;EAClC;EACA,IAAI6xC,eAAeA,CAAA,EAAG;IAClB,OAAO,IAAI,CAACL,gBAAgB,KAAKd,SAAS,CAACe,GAAG,IAAI,IAAI,CAACD,gBAAgB,KAAKd,SAAS,CAACoB,KAAK;EAC/F;EACA,IAAIC,eAAeA,CAAA,EAAG;IAClB,OAAO,IAAI,CAACP,gBAAgB,KAAKd,SAAS,CAACe,GAAG,IAAI,IAAI,CAACD,gBAAgB,KAAKd,SAAS,CAACsB,SAAS;EACnG;EACA1L,WAAWA,CAAA,EAAG;IACV,IAAI,CAAC2L,WAAW,CAAC,IAAI,CAAC;EAC1B;EACAC,OAAOA,CAAA,EAAG;IACN,IAAI,IAAI,CAACL,eAAe,EAAE;MACtB,IAAI,CAACM,WAAW,CAAC,CAAC;IACtB;EACJ;EACAC,MAAMA,CAAA,EAAG;IACL,IAAI,IAAI,CAACP,eAAe,EAAE;MACtB,IAAI,CAACI,WAAW,CAAC,IAAI,CAAC;IAC1B;EACJ;EACAnQ,YAAYA,CAAA,EAAG;IACX,IAAI,IAAI,CAACiQ,eAAe,EAAE;MACtB,IAAI,CAACI,WAAW,CAAC,CAAC;IACtB;EACJ;EACApQ,YAAYA,CAAC1O,MAAM,EAAE;IACjB,IAAI,IAAI,CAAC0e,eAAe,IAAI,IAAI,CAACV,wBAAwB,EAAE;MACvDnc,YAAY,CAAC,IAAI,CAACT,OAAO,CAAC;MAC1B,IAAI,IAAI,CAACyH,SAAS,EAAE;QAChB,MAAMmW,UAAU,GAAG,IAAI,CAACnW,SAAS,CAACI,QAAQ,CAACvE,OAAO,CAACS,aAAa;QAChE,MAAM8Z,QAAQ,GAAGD,UAAU,CAACC,QAAQ,CAACjf,MAAM,CAAC;QAC5C,IAAIif,QAAQ,EACR;MACR;MACA,IAAI,CAACL,WAAW,CAAC,IAAI,CAACP,oBAAoB,CAAC;IAC/C;EACJ;EACAa,YAAYA,CAAA,EAAG;IACX,IAAI,IAAI,CAACR,eAAe,EAAE;MACtB,IAAI,CAACE,WAAW,CAAC,IAAI,CAAC;IAC1B;EACJ;EACAE,WAAWA,CAACK,SAAS,EAAE;IACnB,IAAI,IAAI,CAACtW,SAAS,IAAI,IAAI,CAAChsB,eAAe,EACtC;IACJ,MAAMuiC,IAAI,GAAGD,SAAS,GAChB,CAAC,GACD,IAAI,CAACjB,kBAAkB,IAAImB,SAAS,CAACC,SAAS,CAACjR,KAAK,CAAC,+BAA+B,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;IACtGxM,YAAY,CAAC,IAAI,CAACT,OAAO,CAAC;IAC1B,IAAI,CAACA,OAAO,GAAGW,UAAU,CAAC,MAAM;MAC5B,IAAI,CAACwb,cAAc,CAAChU,UAAU,CAAC,CAAC;MAChC,MAAMtI,OAAO,GAAG,IAAI,CAACse,kBAAkB,CAAC,CAAC;MACzC,IAAI,CAAC1W,SAAS,GAAG,IAAI,CAAC0U,cAAc,CAAC9U,MAAM,CAACxH,OAAO,CAAC;MACpD;MACAc,UAAU,CAAC,MAAM;QACb,IAAI,IAAI,CAAC8G,SAAS,EAAE;UAChB,IAAI,CAAC2W,gBAAgB,CAAC,IAAI,CAAC3W,SAAS,CAACI,QAAQ,CAACvE,OAAO,CAACS,aAAa,CAAC;QACxE;MACJ,CAAC,EAAE,EAAE,CAAC;MACN,IAAI,CAACmZ,IAAI,CAACzsC,IAAI,CAAC,IAAI,CAAC;IACxB,CAAC,EAAEutC,IAAI,CAAC;EACZ;EACAI,gBAAgBA,CAACviC,OAAO,EAAE;IACtB;IACA,IAAI,CAACwiC,sBAAsB,GAAG,IAAI,CAAC9a,QAAQ,CAAC+a,MAAM,CAACziC,OAAO,EAAE,YAAY,EAAE,MAAM;MAC5E4kB,YAAY,CAAC,IAAI,CAACT,OAAO,CAAC;IAC9B,CAAC,CAAC;IACF;IACA,IAAI,IAAI,CAAC4c,wBAAwB,EAAE;MAC/B,IAAI,CAAC2B,sBAAsB,GAAG,IAAI,CAAChb,QAAQ,CAAC+a,MAAM,CAACziC,OAAO,EAAE,YAAY,EAAE,MAAM;QAC5E,IAAI,CAAC2hC,WAAW,CAAC,IAAI,CAACP,oBAAoB,CAAC;MAC/C,CAAC,CAAC;IACN;IACA;IACA,IAAI,IAAI,CAACN,0BAA0B,EAAE;MACjC,IAAI,CAAC6B,kBAAkB,GAAG,IAAI,CAACjb,QAAQ,CAAC+a,MAAM,CAAC,QAAQ,EAAE,OAAO,EAAEG,KAAK,IAAI;QACvE,MAAMZ,QAAQ,GAAGhiC,OAAO,CAACgiC,QAAQ,CAACY,KAAK,CAAC7f,MAAM,CAAC;QAC/C,IAAI,CAACif,QAAQ,EACT,IAAI,CAACL,WAAW,CAAC,CAAC;MAC1B,CAAC,CAAC;IACN;EACJ;EACAA,WAAWA,CAACO,SAAS,GAAG,KAAK,EAAE;IAC3B,IAAI,CAAC,IAAI,CAACtW,SAAS,EACf;IACJ,MAAMiX,SAAS,GAAGA,CAAA,KAAM;MACpB;MACA,IAAI,IAAI,CAACH,sBAAsB,EAC3B,IAAI,CAACA,sBAAsB,CAAC,CAAC;MACjC,IAAI,IAAI,CAACF,sBAAsB,EAC3B,IAAI,CAACA,sBAAsB,CAAC,CAAC;MACjC,IAAI,IAAI,CAACG,kBAAkB,EACvB,IAAI,CAACA,kBAAkB,CAAC,CAAC;MAC7B;MACA,IAAI,CAACrB,IAAI,CAAC1sC,IAAI,CAAC,IAAI,CAAC;MACpB;MACA,IAAI,CAAC0rC,cAAc,CAACvU,OAAO,CAAC,IAAI,CAACH,SAAS,CAAC;MAC3C,IAAI,CAACA,SAAS,GAAG1rB,SAAS;IAC9B,CAAC;IACD0kB,YAAY,CAAC,IAAI,CAACT,OAAO,CAAC;IAC1B,IAAI,CAAC+d,SAAS,EAAE;MACZ,IAAI,CAAC/d,OAAO,GAAGW,UAAU,CAAC+d,SAAS,EAAE,IAAI,CAAC7B,kBAAkB,CAAC;IACjE,CAAC,MACI;MACD6B,SAAS,CAAC,CAAC;IACf;EACJ;EACAP,kBAAkBA,CAAA,EAAG;IACjB,OAAO;MACHxuC,KAAK,EAAE,IAAI,CAACgvC,YAAY;MACxBrvC,QAAQ,EAAE,IAAI,CAACwM,eAAe;MAC9BkoB,IAAI,EAAE,IAAI,CAACoY,gBAAgB,CAAC9Y,OAAO;MACnCV,SAAS,EAAE,IAAI,CAACrd,gBAAgB;MAChCqc,SAAS,EAAE,IAAI,CAAC6a,gBAAgB;MAChCphC,IAAI,EAAE,IAAI,CAACmK,WAAW;MACtB2e,SAAS,EAAE,IAAI,CAACqY,gBAAgB;MAChC7Y,QAAQ,EAAE,IAAI,CAAC0Y,eAAe;MAC9BxZ,OAAO,EAAE,IAAI,CAAC0Z,cAAc;MAC5B/sC,OAAO,EAAE,IAAI,CAACovC;IAClB,CAAC;EACL;AACJ;AACA1C,gBAAgB,CAAC1X,IAAI,YAAAqa,yBAAAna,CAAA;EAAA,YAAAA,CAAA,IAAwFwX,gBAAgB,EAxuEnBtxC,EAAE,CAAA+5B,iBAAA,CAwuEmCwG,cAAc,GAxuEnDvgC,EAAE,CAAA+5B,iBAAA,CAwuE8D/5B,EAAE,CAACk0C,gBAAgB,GAxuEnFl0C,EAAE,CAAA+5B,iBAAA,CAwuE8F/5B,EAAE,CAACi6B,SAAS;AAAA,CAA4C;AAClQqX,gBAAgB,CAACnL,IAAI,kBAzuEqFnmC,EAAE,CAAAomC,iBAAA;EAAA31B,IAAA,EAyuEX6gC,gBAAgB;EAAAlX,SAAA;EAAAS,YAAA,WAAAsZ,8BAAAnwC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MAzuEPhE,EAAE,CAAAuF,UAAA,qBAAA6uC,4CAAA;QAAA,OAyuEXnwC,GAAA,CAAA4uC,OAAA,CAAQ,CAAC;MAAA,CAAM,CAAC,kBAAAwB,yCAAA;QAAA,OAAhBpwC,GAAA,CAAA8uC,MAAA,CAAO,CAAC;MAAA,CAAO,CAAC,wBAAAuB,+CAAA;QAAA,OAAhBrwC,GAAA,CAAAw+B,YAAA,CAAa,CAAC;MAAA,CAAC,CAAC,wBAAA8R,+CAAA9uC,MAAA;QAAA,OAAhBxB,GAAA,CAAAy+B,YAAA,CAAAj9B,MAAA,CAAAuuB,MAA0B,CAAC;MAAA,CAAZ,CAAC,mBAAAwgB,0CAAA;QAAA,OAAhBvwC,GAAA,CAAAivC,YAAA,CAAa,CAAC;MAAA,CAAC,CAAC;IAAA;EAAA;EAAAhY,MAAA;IAAAuW,eAAA;IAAAsC,YAAA;IAAArC,mBAAA;IAAAC,cAAA;IAAA9gC,eAAA;IAAA+gC,gBAAA;IAAAj3B,gBAAA;IAAAk3B,gBAAA;IAAAj3B,WAAA;IAAAm3B,0BAAA;IAAAC,wBAAA;IAAAC,kBAAA;IAAAC,kBAAA;IAAAhhC,eAAA;IAAAihC,gBAAA;IAAA6B,cAAA;IAAA3B,oBAAA;EAAA;EAAAzU,OAAA;IAAA0U,IAAA;IAAAC,IAAA;EAAA;AAAA,EAA86B;AAC/hC;EAAA,QAAAzW,SAAA,oBAAAA,SAAA,KA1uE0G97B,EAAE,CAAA+7B,iBAAA,CA0uEjBuV,gBAAgB,EAAc,CAAC;IAC9G7gC,IAAI,EAAE5P,SAAS;IACfq0B,IAAI,EAAE,CAAC;MAAE8G,QAAQ,EAAE;IAAgB,CAAC;EACxC,CAAC,CAAC,EAAkB,YAAY;IAAE,OAAO,CAAC;MAAEvrB,IAAI,EAAE8vB;IAAe,CAAC,EAAE;MAAE9vB,IAAI,EAAEzQ,EAAE,CAACk0C;IAAiB,CAAC,EAAE;MAAEzjC,IAAI,EAAEzQ,EAAE,CAACi6B;IAAU,CAAC,CAAC;EAAE,CAAC,EAAkB;IAAEwX,eAAe,EAAE,CAAC;MAC3JhhC,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE0zC,YAAY,EAAE,CAAC;MACftjC,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEqxC,mBAAmB,EAAE,CAAC;MACtBjhC,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEsxC,cAAc,EAAE,CAAC;MACjBlhC,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEwQ,eAAe,EAAE,CAAC;MAClBJ,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEuxC,gBAAgB,EAAE,CAAC;MACnBnhC,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEsa,gBAAgB,EAAE,CAAC;MACnBlK,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEwxC,gBAAgB,EAAE,CAAC;MACnBphC,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEua,WAAW,EAAE,CAAC;MACdnK,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE0xC,0BAA0B,EAAE,CAAC;MAC7BthC,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE2xC,wBAAwB,EAAE,CAAC;MAC3BvhC,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE4xC,kBAAkB,EAAE,CAAC;MACrBxhC,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE6xC,kBAAkB,EAAE,CAAC;MACrBzhC,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE6Q,eAAe,EAAE,CAAC;MAClBT,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE8xC,gBAAgB,EAAE,CAAC;MACnB1hC,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE2zC,cAAc,EAAE,CAAC;MACjBvjC,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEgyC,oBAAoB,EAAE,CAAC;MACvB5hC,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEiyC,IAAI,EAAE,CAAC;MACP7hC,IAAI,EAAE7P;IACV,CAAC,CAAC;IAAE2xC,IAAI,EAAE,CAAC;MACP9hC,IAAI,EAAE7P;IACV,CAAC,CAAC;IAAEiyC,OAAO,EAAE,CAAC;MACVpiC,IAAI,EAAEjQ,YAAY;MAClB00B,IAAI,EAAE,CAAC,SAAS;IACpB,CAAC,CAAC;IAAE6d,MAAM,EAAE,CAAC;MACTtiC,IAAI,EAAEjQ,YAAY;MAClB00B,IAAI,EAAE,CAAC,MAAM;IACjB,CAAC,CAAC;IAAEuN,YAAY,EAAE,CAAC;MACfhyB,IAAI,EAAEjQ,YAAY;MAClB00B,IAAI,EAAE,CAAC,YAAY;IACvB,CAAC,CAAC;IAAEwN,YAAY,EAAE,CAAC;MACfjyB,IAAI,EAAEjQ,YAAY;MAClB00B,IAAI,EAAE,CAAC,YAAY,EAAE,CAAC,eAAe,CAAC;IAC1C,CAAC,CAAC;IAAEge,YAAY,EAAE,CAAC;MACfziC,IAAI,EAAEjQ,YAAY;MAClB00B,IAAI,EAAE,CAAC,OAAO;IAClB,CAAC;EAAE,CAAC;AAAA;AAEhB,MAAMuf,aAAa,CAAC;AAEpBA,aAAa,CAAC7a,IAAI,YAAA8a,sBAAA5a,CAAA;EAAA,YAAAA,CAAA,IAAwF2a,aAAa;AAAA,CAAkD;AACzKA,aAAa,CAAC5D,IAAI,kBAvyEwF7wC,EAAE,CAAA8wC,gBAAA;EAAArgC,IAAA,EAuyEDgkC;AAAa,EAA6I;AACrQA,aAAa,CAAC1D,IAAI,kBAxyEwF/wC,EAAE,CAAAgxC,gBAAA;EAAA3L,SAAA,EAwyEyB,CAACnH,gBAAgB,EAAEqC,cAAc,CAAC;EAAA0Q,OAAA,GAAY,CAAC9vC,YAAY,CAAC;AAAA,EAAI;AACrM;EAAA,QAAA26B,SAAA,oBAAAA,SAAA,KAzyE0G97B,EAAE,CAAA+7B,iBAAA,CAyyEjB0Y,aAAa,EAAc,CAAC;IAC3GhkC,IAAI,EAAE3P,QAAQ;IACdo0B,IAAI,EAAE,CAAC;MACCgc,YAAY,EAAE,CAAC1Y,uBAAuB,EAAE8Y,gBAAgB,CAAC;MACzDjM,SAAS,EAAE,CAACnH,gBAAgB,EAAEqC,cAAc,CAAC;MAC7C4Q,OAAO,EAAE,CAAC3Y,uBAAuB,EAAE8Y,gBAAgB,CAAC;MACpDL,OAAO,EAAE,CAAC9vC,YAAY,CAAC;MACvBwzC,eAAe,EAAE,CAACnc,uBAAuB;IAC7C,CAAC;EACT,CAAC,CAAC;AAAA;AAEV,MAAMoc,KAAK,GAAG,CAAC,CAAC;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS9gB,EAAEA,CAAA,EAAG;EACV,IAAI+gB,KAAK,GAAG,CAAC,MAAM,GAAG,CAAEtT,IAAI,CAACuT,MAAM,CAAC,CAAC,GAAGvT,IAAI,CAACwT,GAAG,CAAC,EAAE,EAAE,CAAC,CAAC,IAAK,CAAC,EAAEzO,QAAQ,CAAC,EAAE,CAAC,EAAE2C,KAAK,CAAC,CAAC,CAAC,CAAC;EACtF;EACA4L,KAAK,GAAI,IAAGA,KAAM,EAAC;EACnB;EACA,IAAI,CAACD,KAAK,CAACC,KAAK,CAAC,EAAE;IACfD,KAAK,CAACC,KAAK,CAAC,GAAG,IAAI;IACnB,OAAOA,KAAK;EAChB;EACA,OAAO/gB,EAAE,CAAC,CAAC;AACf;AAEA,IAAIvP,cAAc;AAClB,CAAC,UAAUA,cAAc,EAAE;EACvBA,cAAc,CAAC,UAAU,CAAC,GAAG,UAAU;EACvCA,cAAc,CAAC,YAAY,CAAC,GAAG,YAAY;AAC/C,CAAC,EAAEA,cAAc,KAAKA,cAAc,GAAG,CAAC,CAAC,CAAC,CAAC;AAE3C,MAAMywB,0BAA0B,CAAC;EAC7Bvc,WAAWA,CAAA,EAAG;IACV,IAAI,CAAChtB,WAAW,GAAG8Y,cAAc,CAACnU,QAAQ;EAC9C;EACAywB,WAAWA,CAACC,OAAO,EAAE;IACjB,IAAI,CAACj0B,EAAE,GAAG,IAAI;IACd,IAAI,CAAC4iC,EAAE,GAAG,IAAI;IACd,IAAI,CAAC3iC,EAAE,GAAG,IAAI;IACd,IAAI,CAAC0iC,EAAE,GAAG,IAAI;IACd,IAAI,IAAI,CAAC/jC,WAAW,KAAK8Y,cAAc,CAAC/J,UAAU,EAAE;MAChD,IAAI,CAACi1B,EAAE,GAAG,MAAM;IACpB,CAAC,MACI,IAAI,IAAI,CAAChkC,WAAW,KAAK8Y,cAAc,CAACnU,QAAQ,EAAE;MACnD,IAAI,CAACtD,EAAE,GAAG,MAAM;IACpB;EACJ;AACJ;AACAkoC,0BAA0B,CAACpb,IAAI,YAAAqb,mCAAAnb,CAAA;EAAA,YAAAA,CAAA,IAAwFkb,0BAA0B;AAAA,CAAmD;AACpMA,0BAA0B,CAAC9a,IAAI,kBAn2E2El6B,EAAE,CAAAm6B,iBAAA;EAAA1pB,IAAA,EAm2EDukC,0BAA0B;EAAA5a,SAAA;EAAAc,MAAA;IAAAzvB,WAAA;IAAAsC,IAAA;IAAAmnC,KAAA;EAAA;EAAAtT,QAAA,GAn2E3B5hC,EAAE,CAAA6hC,oBAAA;EAAA+G,KAAA,EAAAh6B,GAAA;EAAAusB,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAA32B,QAAA,WAAAywC,oCAAAnxC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MAAFhE,EAAE,CAAA8H,cAAA;MAAF9H,EAAE,CAAAmE,cAAA,uBAo2Eb,CAAC;MAp2EUnE,EAAE,CAAAoE,UAAA,IAAAyK,+CAAA,iBA02ErG,CAAC;MA12EkG7O,EAAE,CAAAqE,YAAA,CA22EpF,CAAC;IAAA;IAAA,IAAAL,EAAA;MA32EiFhE,EAAE,CAAAyE,UAAA,OAAAR,GAAA,CAAA8J,IAo2E1E,CAAC;MAp2EuE/N,EAAE,CAAAoI,WAAA,OAAAnE,GAAA,CAAA4I,EAAA,QAAA5I,GAAA,CAAA6I,EAAA,QAAA7I,GAAA,CAAAwrC,EAAA,QAAAxrC,GAAA,CAAAurC,EAAA;MAAFxvC,EAAE,CAAAwE,SAAA,CAs2E5E,CAAC;MAt2EyExE,EAAE,CAAAyE,UAAA,YAAAR,GAAA,CAAAixC,KAs2E5E,CAAC;IAAA;EAAA;EAAA1Z,YAAA,GAMSx6B,EAAE,CAACmjC,OAAO;EAAAvI,aAAA;EAAAmG,eAAA;AAAA,EAA8I;AAClM;EAAA,QAAAjG,SAAA,oBAAAA,SAAA,KA72E0G97B,EAAE,CAAA+7B,iBAAA,CA62EjBiZ,0BAA0B,EAAc,CAAC;IACxHvkC,IAAI,EAAEvQ,SAAS;IACfg1B,IAAI,EAAE,CAAC;MACC8G,QAAQ,EAAE,mCAAmC;MAC7Ct3B,QAAQ,EAAG;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;MACiBq9B,eAAe,EAAErhC,uBAAuB,CAACshC;IAC7C,CAAC;EACT,CAAC,CAAC,QAAkB;IAAEv2B,WAAW,EAAE,CAAC;MAC5BgF,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE0N,IAAI,EAAE,CAAC;MACP0C,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE60C,KAAK,EAAE,CAAC;MACRzkC,IAAI,EAAEpQ;IACV,CAAC;EAAE,CAAC;AAAA;AAEhB,MAAM+0C,eAAe,CAAC;EAClB3c,WAAWA,CAAA,EAAG;IACV,IAAI,CAAC52B,MAAM,GAAG,IAAIlB,YAAY,CAAC,CAAC;IAChC,IAAI,CAACoF,QAAQ,GAAG,IAAIpF,YAAY,CAAC,CAAC;IAClC,IAAI,CAACsF,UAAU,GAAG,IAAItF,YAAY,CAAC,CAAC;EACxC;EACAkP,OAAOA,CAAA,EAAG;IACN,IAAI,CAAChO,MAAM,CAACgE,IAAI,CAAC,IAAI,CAACiK,IAAI,CAAC;EAC/B;EACA2yB,YAAYA,CAAA,EAAG;IACX,IAAI,CAAC18B,QAAQ,CAACF,IAAI,CAAC,IAAI,CAACiK,IAAI,CAAC;EACjC;EACA4yB,YAAYA,CAAA,EAAG;IACX,IAAI,CAACz8B,UAAU,CAACJ,IAAI,CAAC,IAAI,CAACiK,IAAI,CAAC;EACnC;EACA+wB,WAAWA,CAACC,OAAO,EAAE;IACjB,IAAI,CAAClwB,UAAU,GAAGykC,KAAK,CAACC,OAAO,CAAC,IAAI,CAAC1kC,UAAU,CAAC,GAAG,IAAI,CAACA,UAAU,CAAC6wB,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE;IACjF,IAAI,CAAC7wB,UAAU,IAAI,QAAQ;EAC/B;AACJ;AACAwkC,eAAe,CAACxb,IAAI,YAAA2b,wBAAAzb,CAAA;EAAA,YAAAA,CAAA,IAAwFsb,eAAe;AAAA,CAAmD;AAC9KA,eAAe,CAAClb,IAAI,kBA15EsFl6B,EAAE,CAAAm6B,iBAAA;EAAA1pB,IAAA,EA05EZ2kC,eAAe;EAAAhb,SAAA;EAAAS,YAAA,WAAA2a,6BAAAxxC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MA15ELhE,EAAE,CAAAuF,UAAA,mBAAAkwC,yCAAA;QAAA,OA05EZxxC,GAAA,CAAA4L,OAAA,CAAQ,CAAC;MAAA,CAAK,CAAC,wBAAA6lC,8CAAA;QAAA,OAAfzxC,GAAA,CAAAw+B,YAAA,CAAa,CAAC;MAAA,EAAC,wBAAAkT,8CAAA;QAAA,OAAf1xC,GAAA,CAAAy+B,YAAA,CAAa,CAAC;MAAA,EAAC;IAAA;EAAA;EAAAxH,MAAA;IAAA5rB,EAAA;IAAAE,EAAA;IAAAg/B,CAAA;IAAAtmB,IAAA;IAAAY,MAAA;IAAAhZ,IAAA;IAAAc,UAAA;IAAAglC,aAAA;IAAAzmB,aAAA;EAAA;EAAAyO,OAAA;IAAA/7B,MAAA;IAAAkE,QAAA;IAAAE,UAAA;EAAA;EAAA27B,QAAA,GA15EL5hC,EAAE,CAAA6hC,oBAAA;EAAA+G,KAAA,EAAA35B,IAAA;EAAAksB,KAAA;EAAAC,IAAA;EAAA12B,QAAA,WAAAmxC,yBAAA7xC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MAAFhE,EAAE,CAAA8H,cAAA;MAAF9H,EAAE,CAAA8E,SAAA,YAo6EvG,CAAC;IAAA;IAAA,IAAAd,EAAA;MAp6EoGhE,EAAE,CAAAoI,WAAA,OAAAnE,GAAA,CAAAqL,EAAA,QAAArL,GAAA,CAAAuL,EAAA,OAAAvL,GAAA,CAAAuqC,CAAA,UAAAvqC,GAAA,CAAAikB,IAAA,YAAAjkB,GAAA,CAAA6kB,MAAA,aAAA7kB,GAAA,CAAA2xC,aAAA,WAAA3xC,GAAA,CAAA2M,UAAA,oBAAA3M,GAAA,CAAAkrB,aAAA;IAAA;EAAA;EAAAyM,aAAA;EAAAmG,eAAA;AAAA,EAq6ElC;AAC1E;EAAA,QAAAjG,SAAA,oBAAAA,SAAA,KAt6E0G97B,EAAE,CAAA+7B,iBAAA,CAs6EjBqZ,eAAe,EAAc,CAAC;IAC7G3kC,IAAI,EAAEvQ,SAAS;IACfg1B,IAAI,EAAE,CAAC;MACC8G,QAAQ,EAAE,sBAAsB;MAChCt3B,QAAQ,EAAG;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;MACiBq9B,eAAe,EAAErhC,uBAAuB,CAACshC;IAC7C,CAAC;EACT,CAAC,CAAC,QAAkB;IAAE1yB,EAAE,EAAE,CAAC;MACnBmB,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEmP,EAAE,EAAE,CAAC;MACLiB,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEmuC,CAAC,EAAE,CAAC;MACJ/9B,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE6nB,IAAI,EAAE,CAAC;MACPzX,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEyoB,MAAM,EAAE,CAAC;MACTrY,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEyP,IAAI,EAAE,CAAC;MACPW,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEuQ,UAAU,EAAE,CAAC;MACbH,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEu1C,aAAa,EAAE,CAAC;MAChBnlC,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE8uB,aAAa,EAAE,CAAC;MAChB1e,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEwB,MAAM,EAAE,CAAC;MACT4O,IAAI,EAAE7P;IACV,CAAC,CAAC;IAAEmF,QAAQ,EAAE,CAAC;MACX0K,IAAI,EAAE7P;IACV,CAAC,CAAC;IAAEqF,UAAU,EAAE,CAAC;MACbwK,IAAI,EAAE7P;IACV,CAAC,CAAC;IAAEiP,OAAO,EAAE,CAAC;MACVY,IAAI,EAAEjQ,YAAY;MAClB00B,IAAI,EAAE,CAAC,OAAO;IAClB,CAAC,CAAC;IAAEuN,YAAY,EAAE,CAAC;MACfhyB,IAAI,EAAEjQ,YAAY;MAClB00B,IAAI,EAAE,CAAC,YAAY;IACvB,CAAC,CAAC;IAAEwN,YAAY,EAAE,CAAC;MACfjyB,IAAI,EAAEjQ,YAAY;MAClB00B,IAAI,EAAE,CAAC,YAAY;IACvB,CAAC;EAAE,CAAC;AAAA;AAEhB,IAAI4gB,UAAU;AACd,CAAC,UAAUA,UAAU,EAAE;EACnBA,UAAU,CAAC,UAAU,CAAC,GAAG,UAAU;EACnCA,UAAU,CAAC,SAAS,CAAC,GAAG,SAAS;AACrC,CAAC,EAAEA,UAAU,KAAKA,UAAU,GAAG,CAAC,CAAC,CAAC,CAAC;AACnC,MAAMC,qBAAqB,CAAC;EACxBtd,WAAWA,CAACG,UAAU,EAAE;IACpB,IAAI,CAACA,UAAU,GAAGA,UAAU;IAC5B,IAAI,CAACnoB,IAAI,GAAGqlC,UAAU,CAACE,QAAQ;IAC/B,IAAI,CAACnlC,eAAe,GAAG,KAAK;IAC5B,IAAI,CAAChP,MAAM,GAAG,IAAIlB,YAAY,CAAC,CAAC;IAChC,IAAI,CAACoF,QAAQ,GAAG,IAAIpF,YAAY,CAAC,CAAC;IAClC,IAAI,CAACsF,UAAU,GAAG,IAAItF,YAAY,CAAC,CAAC;IACpC,IAAI,CAAC6P,UAAU,GAAG,KAAK;IACvB,IAAI,CAACL,cAAc,GAAGoU,cAAc;IACpC,IAAI,CAACzT,cAAc,GAAG6lB,cAAc;IACpC,IAAI,CAAC3lB,UAAU,GAAGogC,UAAU;IAC5B,IAAI,CAAC7gC,KAAK,GAAG,KAAK;EACtB;EACAs2B,QAAQA,CAAA,EAAG;IACP,IAAI,CAACx2B,UAAU,GAAG,MAAM,GAAGyjB,EAAE,CAAC,CAAC,CAACwS,QAAQ,CAAC,CAAC;IAC1C,IAAI,CAAC72B,YAAY,GAAI,QAAO,IAAI,CAACY,UAAW,GAAE;IAC9C,IAAInP,gBAAgB,CAAC,IAAI,CAAC03B,UAAU,CAAC,EAAE;MACnC,IAAI,CAACroB,KAAK,GAAG,IAAI;IACrB;EACJ;EACAswB,WAAWA,CAAA,EAAG;IACV,IAAI,CAAC0C,MAAM,CAAC,CAAC;EACjB;EACAA,MAAMA,CAAA,EAAG;IACL,IAAI,CAACl0B,MAAM,GAAG,IAAI,CAAC4mC,eAAe,CAAC,CAAC;EACxC;EACAA,eAAeA,CAAA,EAAG;IACd,MAAMC,oBAAoB,GAAG,IAAI,CAACpmC,IAAI,CAACmN,MAAM,CAAC0mB,SAAS,CAACI,CAAC,IAAI;MACzD,MAAM39B,KAAK,GAAG29B,CAAC,CAACh2B,IAAI;MACpB,OAAO3H,KAAK,IAAI,IAAI,CAAC+vC,YAAY,IAAI/vC,KAAK,CAACkgC,QAAQ,CAAC,CAAC,KAAK,IAAI,CAAC6P,YAAY,CAAC7P,QAAQ,CAAC,CAAC,IAAIvC,CAAC,CAACj2B,KAAK,KAAKqD,SAAS;IACnH,CAAC,CAAC;IACF,IAAI+kC,oBAAoB,KAAK,CAAC,CAAC,EAAE;MAC7B;MACA,OAAO/kC,SAAS;IACpB;IACA,OAAO,IAAI,CAACilC,oBAAoB,CAAC,IAAI,CAACtmC,IAAI,CAACmN,MAAM,CAACi5B,oBAAoB,CAAC,EAAEA,oBAAoB,CAAC;EAClG;EACAE,oBAAoBA,CAACrS,CAAC,EAAErG,CAAC,EAAE;IACvB,MAAM/sB,UAAU,GAAG,IAAI,CAACb,IAAI,CAAC/B,IAAI;IACjC,MAAMD,KAAK,GAAGi2B,CAAC,CAACj2B,KAAK;IACrB,MAAM1H,KAAK,GAAG29B,CAAC,CAACh2B,IAAI;IACpB,MAAMsoC,YAAY,GAAGpU,WAAW,CAAC77B,KAAK,CAAC;IACvC,IAAIkJ,EAAE;IACN,IAAI,IAAI,CAACkG,SAAS,KAAKkrB,SAAS,CAAC4V,IAAI,EAAE;MACnChnC,EAAE,GAAG,IAAI,CAACvE,MAAM,CAAC3E,KAAK,CAAC;IAC3B,CAAC,MACI,IAAI,IAAI,CAACoP,SAAS,KAAKkrB,SAAS,CAACmE,MAAM,EAAE;MAC1Cv1B,EAAE,GAAG,IAAI,CAACvE,MAAM,CAACwrC,MAAM,CAACnwC,KAAK,CAAC,CAAC;IACnC,CAAC,MACI;MACDkJ,EAAE,GAAG,IAAI,CAACvE,MAAM,CAAC3E,KAAK,CAAC;IAC3B;IACA,MAAMoJ,EAAE,GAAG,IAAI,CAAChB,MAAM,CAAC,IAAI,CAACiC,IAAI,KAAKqlC,UAAU,CAACE,QAAQ,GAAGloC,KAAK,GAAGi2B,CAAC,CAACyS,EAAE,CAAC;IACxE,MAAMjnC,MAAM,GAAG,CAAC;IAChB,MAAMrE,MAAM,GAAG,IAAI,CAACsD,MAAM,CAAC5L,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG4M,EAAE;IAC1C,MAAMT,OAAO,GAAG,CAAC;IACjB,IAAIzI,KAAK;IACT,IAAI,IAAI,CAACS,MAAM,CAACyO,SAAS,KAAKkrB,SAAS,CAACmE,MAAM,EAAE;MAC5C,IAAI,IAAI,CAACp0B,IAAI,KAAKqlC,UAAU,CAACE,QAAQ,EAAE;QACnC1vC,KAAK,GAAG,IAAI,CAACS,MAAM,CAACwiB,QAAQ,CAACzb,KAAK,CAAC;MACvC,CAAC,MACI;QACDxH,KAAK,GAAG,IAAI,CAACS,MAAM,CAACwiB,QAAQ,CAACwa,CAAC,CAACyS,EAAE,CAAC;MACtC;IACJ,CAAC,MACI;MACDlwC,KAAK,GAAG,IAAI,CAACS,MAAM,CAACwiB,QAAQ,CAAC5Y,UAAU,CAAC;IAC5C;IACA,MAAMb,IAAI,GAAG2mB,MAAM,CAACyR,MAAM,CAAC,CAAC,CAAC,EAAEnE,CAAC,EAAE;MAC9B9mB,MAAM,EAAEtM,UAAU;MAClB7C,KAAK;MACLC,IAAI,EAAE3H;IACV,CAAC,CAAC;IACF,OAAO;MACHwK,UAAU,EAAE,CAAE,eAAc8sB,CAAE,EAAC,CAAC;MAChC5vB,KAAK;MACL1H,KAAK;MACL0J,IAAI;MACJR,EAAE;MACFE,EAAE;MACFD,MAAM;MACNrE,MAAM;MACNmrC,YAAY;MACZ/vC,KAAK;MACLyI,OAAO;MACP4B,UAAU;MACVL,aAAa,EAAE,IAAI,CAACmmC,gBAAgB,CAACnwC,KAAK,CAAC;MAC3CzD,GAAG,EAAEkhC,CAAC,CAAClhC,GAAG;MACVC,GAAG,EAAEihC,CAAC,CAACjhC;IACX,CAAC;EACL;EACAsO,cAAcA,CAAC;IAAEilC,YAAY;IAAEvoC,KAAK;IAAE6C,UAAU;IAAE9N,GAAG;IAAEC;EAAI,CAAC,EAAE;IAC1D,OAAQ;AAChB,oCAAoCq/B,WAAW,CAACxxB,UAAU,CAAE,MAAKwxB,WAAW,CAACkU,YAAY,CAAE;AAC3F,kCAAkCvoC,KAAK,CAACuF,cAAc,CAAC,CAAE,GAAE,IAAI,CAACqjC,oBAAoB,CAAC7zC,GAAG,EAAEC,GAAG,CAAE;AAC/F,KAAK;EACD;EACA4zC,oBAAoBA,CAAC7zC,GAAG,EAAEC,GAAG,EAAE;IAC3B,IAAID,GAAG,KAAKsO,SAAS,IAAIrO,GAAG,KAAKqO,SAAS,EAAE;MACxC,IAAIgkB,MAAM,GAAG,IAAI;MACjB,IAAItyB,GAAG,KAAKsO,SAAS,EAAE;QACnB,IAAIrO,GAAG,KAAKqO,SAAS,EAAE;UACnBgkB,MAAM,IAAI,GAAG;QACjB;QACAA,MAAM,IAAItyB,GAAG,CAACwQ,cAAc,CAAC,CAAC;QAC9B,IAAIvQ,GAAG,KAAKqO,SAAS,EAAE;UACnBgkB,MAAM,IAAI,KAAK;QACnB;MACJ,CAAC,MACI,IAAIryB,GAAG,KAAKqO,SAAS,EAAE;QACxBgkB,MAAM,IAAI,GAAG;MACjB;MACA,IAAIryB,GAAG,KAAKqO,SAAS,EAAE;QACnBgkB,MAAM,IAAIryB,GAAG,CAACuQ,cAAc,CAAC,CAAC;MAClC;MACA8hB,MAAM,IAAI,GAAG;MACb,OAAOA,MAAM;IACjB,CAAC,MACI;MACD,OAAO,EAAE;IACb;EACJ;EACAshB,gBAAgBA,CAACnwC,KAAK,EAAE;IACpB,OAAO,CACH;MACI0I,MAAM,EAAE,CAAC;MACT1I,KAAK;MACLyI,OAAO,EAAE;IACb,CAAC,EACD;MACIC,MAAM,EAAE,GAAG;MACX1I,KAAK;MACLyI,OAAO,EAAE;IACb,CAAC,CACJ;EACL;EACAc,OAAOA,CAACC,IAAI,EAAE;IACV,IAAI,CAACjO,MAAM,CAACgE,IAAI,CAACiK,IAAI,CAAC;EAC1B;EACAvJ,QAAQA,CAACq9B,KAAK,EAAE;IACZ,IAAI,CAAC,IAAI,CAACn8B,aAAa,EACnB,OAAO,KAAK;IAChB,MAAMo8B,IAAI,GAAG,IAAI,CAACp8B,aAAa,CAACq8B,IAAI,CAACC,CAAC,IAAI;MACtC,OAAOH,KAAK,CAAC71B,IAAI,KAAKg2B,CAAC,CAACh2B,IAAI;IAChC,CAAC,CAAC;IACF,OAAO81B,IAAI,KAAK1yB,SAAS;EAC7B;EACAnB,cAAcA,CAAA,EAAG;IACb,IAAI,CAACQ,UAAU,GAAG,IAAI;IACtB,IAAI,CAACzK,QAAQ,CAACF,IAAI,CAAC;MAAEkI,IAAI,EAAE,IAAI,CAAC+B,IAAI,CAAC/B;IAAK,CAAC,CAAC;EAChD;EACAmC,gBAAgBA,CAAA,EAAG;IACf,IAAI,CAACM,UAAU,GAAG,KAAK;IACvB,IAAI,CAACnB,MAAM,CAACN,OAAO,GAAG,CAAC;IACvB,IAAI,CAAC9I,UAAU,CAACJ,IAAI,CAAC;MAAEkI,IAAI,EAAE,IAAI,CAAC+B,IAAI,CAAC/B;IAAK,CAAC,CAAC;EAClD;AACJ;AACAgoC,qBAAqB,CAACnc,IAAI,YAAA+c,8BAAA7c,CAAA;EAAA,YAAAA,CAAA,IAAwFic,qBAAqB,EA9nF7B/1C,EAAE,CAAA+5B,iBAAA,CA8nF6C95B,WAAW;AAAA,CAA4C;AAChN81C,qBAAqB,CAAC7b,IAAI,kBA/nFgFl6B,EAAE,CAAAm6B,iBAAA;EAAA1pB,IAAA,EA+nFNslC,qBAAqB;EAAA3b,SAAA;EAAAc,MAAA;IAAAprB,IAAA;IAAAW,IAAA;IAAA1F,MAAA;IAAAyD,MAAA;IAAAzH,MAAA;IAAAyO,SAAA;IAAA2gC,YAAA;IAAA1uC,aAAA;IAAAoJ,eAAA;IAAAK,eAAA;EAAA;EAAA0sB,OAAA;IAAA/7B,MAAA;IAAAkE,QAAA;IAAAE,UAAA;EAAA;EAAA27B,QAAA,GA/nFjB5hC,EAAE,CAAA6hC,oBAAA;EAAA+G,KAAA,EAAA15B,IAAA;EAAAisB,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAA32B,QAAA,WAAAkyC,+BAAA5yC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MAAFhE,EAAE,CAAAoE,UAAA,IAAAuL,uCAAA,eAgoFnF,CAAC;IAAA;IAAA,IAAA3L,EAAA;MAhoFgFhE,EAAE,CAAAyE,UAAA,SAAAR,GAAA,CAAAoL,MAgoFrF,CAAC;IAAA;EAAA;EAAAmsB,YAAA,GAmDkBwZ,0BAA0B,EAAqGI,eAAe,EAAgNp0C,EAAE,CAACy6B,IAAI,EAA0E6V,gBAAgB;EAAA1V,aAAA;EAAA9rB,IAAA;IAAA+mC,SAAA,EAAkb,CACn5Bp1C,OAAO,CAAC,gBAAgB,EAAE,CACtBC,UAAU,CAAC,QAAQ,EAAE,CACjBC,KAAK,CAAC;MACFoN,OAAO,EAAE;IACb,CAAC,CAAC,EACFnN,OAAO,CAAC,GAAG,EAAED,KAAK,CAAC;MAAEoN,OAAO,EAAE;IAAE,CAAC,CAAC,CAAC,CACtC,CAAC,CACL,CAAC;EACL;EAAAgzB,eAAA;AAAA,EAAuD;AAC5D;EAAA,QAAAjG,SAAA,oBAAAA,SAAA,KA7rF0G97B,EAAE,CAAA+7B,iBAAA,CA6rFjBga,qBAAqB,EAAc,CAAC;IACnHtlC,IAAI,EAAEvQ,SAAS;IACfg1B,IAAI,EAAE,CAAC;MACC8G,QAAQ,EAAE,6BAA6B;MACvCt3B,QAAQ,EAAG;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;MACiBq9B,eAAe,EAAErhC,uBAAuB,CAACshC,MAAM;MAC/CtuB,UAAU,EAAE,CACRjS,OAAO,CAAC,gBAAgB,EAAE,CACtBC,UAAU,CAAC,QAAQ,EAAE,CACjBC,KAAK,CAAC;QACFoN,OAAO,EAAE;MACb,CAAC,CAAC,EACFnN,OAAO,CAAC,GAAG,EAAED,KAAK,CAAC;QAAEoN,OAAO,EAAE;MAAE,CAAC,CAAC,CAAC,CACtC,CAAC,CACL,CAAC;IAEV,CAAC;EACT,CAAC,CAAC,EAAkB,YAAY;IAAE,OAAO,CAAC;MAAE0B,IAAI,EAAEU,SAAS;MAAE+qB,UAAU,EAAE,CAAC;QAC9DzrB,IAAI,EAAErQ,MAAM;QACZ80B,IAAI,EAAE,CAACj1B,WAAW;MACtB,CAAC;IAAE,CAAC,CAAC;EAAE,CAAC,EAAkB;IAAE6P,IAAI,EAAE,CAAC;MACnCW,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEoQ,IAAI,EAAE,CAAC;MACPA,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE0K,MAAM,EAAE,CAAC;MACT0F,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEmO,MAAM,EAAE,CAAC;MACTiC,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE0G,MAAM,EAAE,CAAC;MACT0J,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEmV,SAAS,EAAE,CAAC;MACZ/E,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE81C,YAAY,EAAE,CAAC;MACf1lC,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEoH,aAAa,EAAE,CAAC;MAChBgJ,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEwQ,eAAe,EAAE,CAAC;MAClBJ,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE6Q,eAAe,EAAE,CAAC;MAClBT,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEwB,MAAM,EAAE,CAAC;MACT4O,IAAI,EAAE7P;IACV,CAAC,CAAC;IAAEmF,QAAQ,EAAE,CAAC;MACX0K,IAAI,EAAE7P;IACV,CAAC,CAAC;IAAEqF,UAAU,EAAE,CAAC;MACbwK,IAAI,EAAE7P;IACV,CAAC;EAAE,CAAC;AAAA;AAEhB,MAAMk2C,kBAAkB,CAAC;AAEzBA,kBAAkB,CAACld,IAAI,YAAAmd,2BAAAjd,CAAA;EAAA,YAAAA,CAAA,IAAwFgd,kBAAkB;AAAA,CAAmD;AACpLA,kBAAkB,CAAC5c,IAAI,kBApyFmFl6B,EAAE,CAAAm6B,iBAAA;EAAA1pB,IAAA,EAoyFTqmC,kBAAkB;EAAA1c,SAAA;EAAAc,MAAA;IAAA/vB,KAAA;IAAAD,MAAA;IAAAwG,CAAA;IAAAC,CAAA;EAAA;EAAAi3B,KAAA,EAAAv3B,IAAA;EAAA8pB,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAA32B,QAAA,WAAAsyC,4BAAAhzC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MApyFXhE,EAAE,CAAA8H,cAAA;MAAF9H,EAAE,CAAA8E,SAAA,aAqyFS,CAAC;IAAA;IAAA,IAAAd,EAAA;MAryFZhE,EAAE,CAAAoI,WAAA,WAAAnE,GAAA,CAAAiH,MAAA,WAAAjH,GAAA,CAAAkH,KAAA,OAAAlH,GAAA,CAAAyN,CAAA,OAAAzN,GAAA,CAAA0N,CAAA;IAAA;EAAA;EAAAiqB,aAAA;EAAAmG,eAAA;AAAA,EAsyFlC;AAC1E;EAAA,QAAAjG,SAAA,oBAAAA,SAAA,KAvyF0G97B,EAAE,CAAA+7B,iBAAA,CAuyFjB+a,kBAAkB,EAAc,CAAC;IAChHrmC,IAAI,EAAEvQ,SAAS;IACfg1B,IAAI,EAAE,CAAC;MACC8G,QAAQ,EAAE,0BAA0B;MACpCt3B,QAAQ,EAAG;AAC/B;AACA,GAAG;MACiBq9B,eAAe,EAAErhC,uBAAuB,CAACshC;IAC7C,CAAC;EACT,CAAC,CAAC,QAAkB;IAAE72B,KAAK,EAAE,CAAC;MACtBsF,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE6K,MAAM,EAAE,CAAC;MACTuF,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEqR,CAAC,EAAE,CAAC;MACJjB,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEsR,CAAC,EAAE,CAAC;MACJlB,IAAI,EAAEpQ;IACV,CAAC;EAAE,CAAC;AAAA;AAEhB,IAAI42C,SAAS;AACb,CAAC,UAAUA,SAAS,EAAE;EAClBA,SAAS,CAAC,KAAK,CAAC,GAAG,KAAK;EACxBA,SAAS,CAAC,MAAM,CAAC,GAAG,MAAM;AAC9B,CAAC,EAAEA,SAAS,KAAKA,SAAS,GAAG,CAAC,CAAC,CAAC,CAAC;AACjC,MAAMC,wBAAwB,CAAC;EAC3BrW,WAAWA,CAACC,OAAO,EAAE;IACjB,IAAI,CAACyC,MAAM,CAAC,CAAC;EACjB;EACAA,MAAMA,CAAA,EAAG;IACL,IAAI,CAAC4T,UAAU,GAAG,IAAI,CAACC,aAAa,CAAC,CAAC;EAC1C;EACAA,aAAaA,CAAA,EAAG;IACZ,OAAO,IAAI,CAACtnC,IAAI,CAAC8/B,GAAG,CAAC7L,CAAC,IAAI;MACtB,IAAI/0B,MAAM;MACV,IAAI7D,KAAK;MACT,IAAID,MAAM;MACV,IAAIwG,CAAC;MACL,IAAIC,CAAC;MACL,IAAI0lC,SAAS,GAAGJ,SAAS,CAACK,GAAG;MAC7B,IAAI,IAAI,CAAC/pC,MAAM,KAAKgX,cAAc,CAACnU,QAAQ,EAAE;QACzC,MAAMzJ,QAAQ,GAAG,IAAI,CAACoE,MAAM,CAACg5B,CAAC,CAACh2B,IAAI,CAAC;QACpC,MAAMwpC,aAAa,GAAGhB,MAAM,CAACpL,QAAQ,CAAC,CAACxkC,QAAQ,GAAG,IAAI,CAACoE,MAAM,CAACkgC,IAAI,CAAC,CAAC,EAAE3E,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC;QACrF,IAAIiR,aAAa,GAAG,CAAC,KAAK,CAAC,EAAE;UACzBF,SAAS,GAAGJ,SAAS,CAACO,IAAI;QAC9B;QACAxoC,MAAM,GAAG,IAAI,CAACjE,MAAM,CAAC0gC,SAAS,CAAC,CAAC,GAAG,IAAI,CAAC1gC,MAAM,CAAC0sC,YAAY,CAAC,CAAC;QAC7DtsC,KAAK,GAAG,IAAI,CAACJ,MAAM,CAAC0gC,SAAS,CAAC,CAAC,GAAGz8B,MAAM;QACxC9D,MAAM,GAAG,IAAI,CAACD,IAAI,CAACC,MAAM;QACzBwG,CAAC,GAAG,IAAI,CAAC3G,MAAM,CAACg5B,CAAC,CAACh2B,IAAI,CAAC,GAAGiB,MAAM,GAAG,CAAC;QACpC2C,CAAC,GAAG,CAAC;MACT,CAAC,MACI,IAAI,IAAI,CAACpE,MAAM,KAAKgX,cAAc,CAAC/J,UAAU,EAAE;QAChD,MAAM7T,QAAQ,GAAG,IAAI,CAAC6H,MAAM,CAACu1B,CAAC,CAACh2B,IAAI,CAAC;QACpC,MAAMwpC,aAAa,GAAGhB,MAAM,CAACpL,QAAQ,CAAC,CAACxkC,QAAQ,GAAG,IAAI,CAAC6H,MAAM,CAACy8B,IAAI,CAAC,CAAC,EAAE3E,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC;QACrF,IAAIiR,aAAa,GAAG,CAAC,KAAK,CAAC,EAAE;UACzBF,SAAS,GAAGJ,SAAS,CAACO,IAAI;QAC9B;QACAxoC,MAAM,GAAG,IAAI,CAACR,MAAM,CAACi9B,SAAS,CAAC,CAAC,GAAG,IAAI,CAACj9B,MAAM,CAACipC,YAAY,CAAC,CAAC;QAC7DtsC,KAAK,GAAG,IAAI,CAACF,IAAI,CAACE,KAAK;QACvBD,MAAM,GAAG,IAAI,CAACsD,MAAM,CAACi9B,SAAS,CAAC,CAAC,GAAGz8B,MAAM;QACzC0C,CAAC,GAAG,CAAC;QACLC,CAAC,GAAG,IAAI,CAACnD,MAAM,CAACu1B,CAAC,CAACh2B,IAAI,CAAC,GAAGiB,MAAM,GAAG,CAAC;MACxC;MACA,OAAO;QACHjB,IAAI,EAAEg2B,CAAC,CAACh2B,IAAI;QACZ0D,KAAK,EAAE4lC,SAAS;QAChBnsC,MAAM;QACNC,KAAK;QACLuG,CAAC;QACDC;MACJ,CAAC;IACL,CAAC,CAAC;EACN;AACJ;AACAulC,wBAAwB,CAACtd,IAAI,YAAA8d,iCAAA5d,CAAA;EAAA,YAAAA,CAAA,IAAwFod,wBAAwB;AAAA,CAAmD;AAChMA,wBAAwB,CAAChd,IAAI,kBAl3F6El6B,EAAE,CAAAm6B,iBAAA;EAAA1pB,IAAA,EAk3FHymC,wBAAwB;EAAA9c,SAAA;EAAAc,MAAA;IAAAprB,IAAA;IAAA7E,IAAA;IAAAF,MAAA;IAAAyD,MAAA;IAAAjB,MAAA;EAAA;EAAAq0B,QAAA,GAl3FvB5hC,EAAE,CAAA6hC,oBAAA;EAAA+G,KAAA,EAAAt3B,IAAA;EAAA6pB,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAA32B,QAAA,WAAAizC,kCAAA3zC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MAAFhE,EAAE,CAAAoE,UAAA,IAAAmN,0CAAA,eA63FxG,CAAC;IAAA;IAAA,IAAAvN,EAAA;MA73FqGhE,EAAE,CAAAyE,UAAA,YAAAR,GAAA,CAAAkzC,UAq3FpE,CAAC;IAAA;EAAA;EAAA3b,YAAA,GASCsb,kBAAkB,EAAuG91C,EAAE,CAACmjC,OAAO;EAAAvI,aAAA;EAAAmG,eAAA;AAAA,EAA8I;AAC3T;EAAA,QAAAjG,SAAA,oBAAAA,SAAA,KA/3F0G97B,EAAE,CAAA+7B,iBAAA,CA+3FjBmb,wBAAwB,EAAc,CAAC;IACtHzmC,IAAI,EAAEvQ,SAAS;IACfg1B,IAAI,EAAE,CAAC;MACC8G,QAAQ,EAAE,iCAAiC;MAC3Ct3B,QAAQ,EAAG;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;MACiBq9B,eAAe,EAAErhC,uBAAuB,CAACshC;IAC7C,CAAC;EACT,CAAC,CAAC,QAAkB;IAAElyB,IAAI,EAAE,CAAC;MACrBW,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE4K,IAAI,EAAE,CAAC;MACPwF,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE0K,MAAM,EAAE,CAAC;MACT0F,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEmO,MAAM,EAAE,CAAC;MACTiC,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEkN,MAAM,EAAE,CAAC;MACTkD,IAAI,EAAEpQ;IACV,CAAC;EAAE,CAAC;AAAA;AAEhB,MAAMu3C,0BAA0B,CAAC;EAC7Bnf,WAAWA,CAAA,EAAG;IACV,IAAI,CAACof,UAAU,GAAG,CAAC;IACnB,IAAI,CAACvoC,EAAE,GAAG,CAAC;IACX,IAAI,CAACE,EAAE,GAAG,CAAC;EACf;EACA,IAAI0lC,KAAKA,CAAA,EAAG;IACR,OAAO,IAAI,CAAC4C,UAAU,IAAI,IAAI,CAACC,YAAY;EAC/C;EACA,IAAI7C,KAAKA,CAACpnC,KAAK,EAAE;IACb,IAAI,CAACgqC,UAAU,GAAGhqC,KAAK;EAC3B;EACA+yB,WAAWA,CAACC,OAAO,EAAE;IACjB,IAAI,CAAC0N,CAAC,GAAG,KAAK;IACd,IAAI,OAAO,IAAI1N,OAAO,IAAI,cAAc,IAAIA,OAAO,IAAI,YAAY,IAAIA,OAAO,EAAE;MAC5E,IAAI,CAACiX,YAAY,GAAG,CAChB;QACI/oC,MAAM,EAAE,CAAC;QACT1I,KAAK,EAAE,IAAI,CAACA,KAAK;QACjByI,OAAO,EAAE,IAAI,CAAC2e;MAClB,CAAC,EACD;QACI1e,MAAM,EAAE,GAAG;QACX1I,KAAK,EAAE,IAAI,CAACA,KAAK;QACjByI,OAAO,EAAE,IAAI,CAAC8oC;MAClB,CAAC,CACJ;IACL;EACJ;AACJ;AACAD,0BAA0B,CAAChe,IAAI,YAAAoe,mCAAAle,CAAA;EAAA,YAAAA,CAAA,IAAwF8d,0BAA0B;AAAA,CAAmD;AACpMA,0BAA0B,CAAC1d,IAAI,kBA77F2El6B,EAAE,CAAAm6B,iBAAA;EAAA1pB,IAAA,EA67FDmnC,0BAA0B;EAAAxd,SAAA;EAAAc,MAAA;IAAA50B,KAAA;IAAAyH,IAAA;IAAA2f,YAAA;IAAAmqB,UAAA;IAAAvoC,EAAA;IAAAE,EAAA;IAAA0lC,KAAA;EAAA;EAAAtT,QAAA,GA77F3B5hC,EAAE,CAAA6hC,oBAAA;EAAA+G,KAAA,EAAAh3B,IAAA;EAAAupB,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAA32B,QAAA,WAAAuzC,oCAAAj0C,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MAAFhE,EAAE,CAAA8H,cAAA;MAAF9H,EAAE,CAAAmE,cAAA,uBA87FC,CAAC;MA97FJnE,EAAE,CAAAoE,UAAA,IAAAyN,+CAAA,iBAo8FrG,CAAC;MAp8FkG7R,EAAE,CAAAqE,YAAA,CAq8FpF,CAAC;IAAA;IAAA,IAAAL,EAAA;MAr8FiFhE,EAAE,CAAAyE,UAAA,OAAAR,GAAA,CAAA8J,IA87F1E,CAAC;MA97FuE/N,EAAE,CAAAoI,WAAA,OAAAnE,GAAA,CAAAqL,EAAA,QAAArL,GAAA,CAAAuL,EAAA,OAAAvL,GAAA,CAAAuqC,CAAA;MAAFxuC,EAAE,CAAAwE,SAAA,CAg8F5E,CAAC;MAh8FyExE,EAAE,CAAAyE,UAAA,YAAAR,GAAA,CAAAixC,KAg8F5E,CAAC;IAAA;EAAA;EAAA1Z,YAAA,GAMSx6B,EAAE,CAACmjC,OAAO;EAAAvI,aAAA;EAAAmG,eAAA;AAAA,EAA8I;AAClM;EAAA,QAAAjG,SAAA,oBAAAA,SAAA,KAv8F0G97B,EAAE,CAAA+7B,iBAAA,CAu8FjB6b,0BAA0B,EAAc,CAAC;IACxHnnC,IAAI,EAAEvQ,SAAS;IACfg1B,IAAI,EAAE,CAAC;MACC8G,QAAQ,EAAE,mCAAmC;MAC7Ct3B,QAAQ,EAAG;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;MACiBq9B,eAAe,EAAErhC,uBAAuB,CAACshC;IAC7C,CAAC;EACT,CAAC,CAAC,QAAkB;IAAE17B,KAAK,EAAE,CAAC;MACtBmK,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE0N,IAAI,EAAE,CAAC;MACP0C,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEqtB,YAAY,EAAE,CAAC;MACfjd,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEw3C,UAAU,EAAE,CAAC;MACbpnC,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEiP,EAAE,EAAE,CAAC;MACLmB,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEmP,EAAE,EAAE,CAAC;MACLiB,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE60C,KAAK,EAAE,CAAC;MACRzkC,IAAI,EAAEpQ;IACV,CAAC;EAAE,CAAC;AAAA;AAEhB,MAAM63C,aAAa,CAAC;EAChBzf,WAAWA,CAACC,OAAO,EAAE;IACjB,IAAI,CAAC3pB,OAAO,GAAG,CAAC;IAChB,IAAI,CAAC2e,YAAY,GAAG,GAAG;IACvB,IAAI,CAACmqB,UAAU,GAAG,CAAC;IACnB,IAAI,CAACpiC,QAAQ,GAAG,KAAK;IACrB,IAAI,CAAC/B,UAAU,GAAG,IAAI;IACtB,IAAI,CAAC7R,MAAM,GAAG,IAAIlB,YAAY,CAAC,CAAC;IAChC,IAAI,CAACw3C,gBAAgB,GAAG,KAAK;IAC7B,IAAI,CAAC9uB,WAAW,GAAG,KAAK;IACxB,IAAI,CAAClZ,cAAc,GAAGoU,cAAc;IACpC,IAAI,CAACmU,OAAO,GAAGA,OAAO,CAACS,aAAa;EACxC;EACA0H,WAAWA,CAAA,EAAG;IACV,IAAI,CAAC0C,MAAM,CAAC,CAAC;IACb,IAAI,CAAC,IAAI,CAAC4U,gBAAgB,EAAE;MACxB,IAAI,CAACC,aAAa,CAAC,CAAC;MACpB,IAAI,CAACD,gBAAgB,GAAG,IAAI;IAChC;EACJ;EACA5U,MAAMA,CAAA,EAAG;IACL,IAAI,CAAClzB,UAAU,GAAG,MAAM,GAAGyjB,EAAE,CAAC,CAAC,CAACwS,QAAQ,CAAC,CAAC;IAC1C,IAAI,CAAC72B,YAAY,GAAI,QAAO,IAAI,CAACY,UAAW,GAAE;IAC9C,IAAI,IAAI,CAACoF,QAAQ,IAAI,IAAI,CAACy/B,KAAK,EAAE;MAC7B,IAAI,CAAC5kC,aAAa,GAAG,IAAI,CAAC+nC,WAAW,CAAC,CAAC;MACvC,IAAI,CAAChvB,WAAW,GAAG,IAAI;IAC3B,CAAC,MACI;MACD,IAAI,CAACA,WAAW,GAAG,KAAK;IAC5B;IACA,IAAI,CAACivB,YAAY,CAAC,CAAC;EACvB;EACAF,aAAaA,CAAA,EAAG;IACZ,IAAI,CAACG,QAAQ,GAAG,IAAI,CAACC,YAAY;IACjCziB,UAAU,CAAC,IAAI,CAACuiB,YAAY,CAACrf,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC;EACjD;EACAqf,YAAYA,CAAA,EAAG;IACX,MAAMG,IAAI,GAAG52C,MAAM,CAAC,IAAI,CAAC62B,OAAO,CAAC,CAAC72B,MAAM,CAAC,OAAO,CAAC;IACjD,IAAI,IAAI,CAAC6R,UAAU,EAAE;MACjB+kC,IAAI,CAAC/2C,UAAU,CAAC,CAAC,CAACu0B,QAAQ,CAAC,GAAG,CAAC,CAACyiB,IAAI,CAAC,GAAG,EAAE,IAAI,CAACtkB,IAAI,CAAC;IACxD,CAAC,MACI;MACDqkB,IAAI,CAACC,IAAI,CAAC,GAAG,EAAE,IAAI,CAACtkB,IAAI,CAAC;IAC7B;EACJ;EACAikB,WAAWA,CAAA,EAAG;IACV,IAAI,IAAI,CAACnD,KAAK,EAAE;MACZ,OAAO,IAAI,CAACA,KAAK;IACrB;IACA,OAAO,CACH;MACIlmC,MAAM,EAAE,CAAC;MACT1I,KAAK,EAAE,IAAI,CAAC4hB,IAAI;MAChBnZ,OAAO,EAAE,IAAI,CAAC2e;IAClB,CAAC,EACD;MACI1e,MAAM,EAAE,GAAG;MACX1I,KAAK,EAAE,IAAI,CAAC4hB,IAAI;MAChBnZ,OAAO,EAAE,IAAI,CAAC8oC;IAClB,CAAC,CACJ;EACL;AACJ;AACAK,aAAa,CAACte,IAAI,YAAA+e,sBAAA7e,CAAA;EAAA,YAAAA,CAAA,IAAwFoe,aAAa,EAtiGbl4C,EAAE,CAAA+5B,iBAAA,CAsiG6B/5B,EAAE,CAACg6B,UAAU;AAAA,CAA4C;AAClMke,aAAa,CAAChe,IAAI,kBAviGwFl6B,EAAE,CAAAm6B,iBAAA;EAAA1pB,IAAA,EAuiGdynC,aAAa;EAAA9d,SAAA;EAAAc,MAAA;IAAAprB,IAAA;IAAAskB,IAAA;IAAAokB,YAAA;IAAAtwB,IAAA;IAAAnZ,OAAA;IAAA2e,YAAA;IAAAmqB,UAAA;IAAApiC,QAAA;IAAAy/B,KAAA;IAAAxhC,UAAA;EAAA;EAAAkqB,OAAA;IAAA/7B,MAAA;EAAA;EAAA+/B,QAAA,GAviGD5hC,EAAE,CAAA6hC,oBAAA;EAAA+G,KAAA,EAAA92B,IAAA;EAAAqpB,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAA32B,QAAA,WAAAk0C,uBAAA50C,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MAAFhE,EAAE,CAAAoE,UAAA,IAAA2N,kCAAA,iBAwiG9E,CAAC;MAxiG2E/R,EAAE,CAAA8H,cAAA;MAAF9H,EAAE,CAAA8E,SAAA,aAgjGW,CAAC;IAAA;IAAA,IAAAd,EAAA;MAhjGdhE,EAAE,CAAAyE,UAAA,SAAAR,GAAA,CAAAwR,QAwiGhF,CAAC;MAxiG6EzV,EAAE,CAAAwE,SAAA,CAgjGQ,CAAC;MAhjGXxE,EAAE,CAAA2M,WAAA,YAAA1I,GAAA,CAAA8K,OAgjGQ,CAAC;MAhjGX/O,EAAE,CAAAoI,WAAA,MAAAnE,GAAA,CAAAs0C,QAAA,UAAAt0C,GAAA,CAAAwR,QAAA,GAAAxR,GAAA,CAAAwL,YAAA,GAAAxL,GAAA,CAAAikB,IAAA;IAAA;EAAA;EAAAsT,YAAA,GAijGlEwZ,0BAA0B,EAAmHh0C,EAAE,CAACy6B,IAAI;EAAAG,aAAA;EAAAmG,eAAA;AAAA,EAAwH;AACtT;EAAA,QAAAjG,SAAA,oBAAAA,SAAA,KAljG0G97B,EAAE,CAAA+7B,iBAAA,CAkjGjBmc,aAAa,EAAc,CAAC;IAC3GznC,IAAI,EAAEvQ,SAAS;IACfg1B,IAAI,EAAE,CAAC;MACC8G,QAAQ,EAAE,oBAAoB;MAC9Bt3B,QAAQ,EAAG;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;MACiBq9B,eAAe,EAAErhC,uBAAuB,CAACshC;IAC7C,CAAC;EACT,CAAC,CAAC,EAAkB,YAAY;IAAE,OAAO,CAAC;MAAEvxB,IAAI,EAAEzQ,EAAE,CAACg6B;IAAW,CAAC,CAAC;EAAE,CAAC,EAAkB;IAAElqB,IAAI,EAAE,CAAC;MACxFW,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE+zB,IAAI,EAAE,CAAC;MACP3jB,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEm4C,YAAY,EAAE,CAAC;MACf/nC,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE6nB,IAAI,EAAE,CAAC;MACPzX,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE0O,OAAO,EAAE,CAAC;MACV0B,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEqtB,YAAY,EAAE,CAAC;MACfjd,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEw3C,UAAU,EAAE,CAAC;MACbpnC,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEoV,QAAQ,EAAE,CAAC;MACXhF,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE60C,KAAK,EAAE,CAAC;MACRzkC,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEqT,UAAU,EAAE,CAAC;MACbjD,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEwB,MAAM,EAAE,CAAC;MACT4O,IAAI,EAAE7P;IACV,CAAC;EAAE,CAAC;AAAA;;AAEhB;AACA,SAASi4C,WAAWA,CAAC/e,CAAC,EAAEgf,CAAC,EAAExX,CAAC,EAAEyC,CAAC,EAAE;EAC7B,OAAQzC,CAAC,IAAI,CAACC,IAAI,CAACwT,GAAG,CAAC,CAAC,EAAG,CAAC,EAAE,GAAGjb,CAAC,GAAIiK,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,GAAI,IAAI,GAAG+U,CAAC;AACpE;AACA;AACA;AACA;AACA,SAASC,KAAKA,CAACC,SAAS,EAAEC,OAAO,EAAEC,aAAa,EAAEC,aAAa,EAAEC,QAAQ,EAAE;EACvE,MAAMC,QAAQ,GAAG9C,MAAM,CAACyC,SAAS,CAAC;EAClC,MAAMM,MAAM,GAAG/C,MAAM,CAAC0C,OAAO,CAAC;EAC9B,MAAMM,SAAS,GAAGF,QAAQ,GAAGC,MAAM;EACnC,MAAME,QAAQ,GAAGjY,IAAI,CAACz+B,GAAG,CAAC,CAAC,EAAEo2C,aAAa,CAAC;EAC3C,MAAMO,GAAG,GAAGlY,IAAI,CAACwT,GAAG,CAAC,EAAE,EAAEyE,QAAQ,CAAC;EAClC,MAAMvjB,QAAQ,GAAGsgB,MAAM,CAAC4C,aAAa,CAAC,GAAG,IAAI;EAC7C,IAAIO,SAAS;EACb,SAASC,QAAQA,CAACC,SAAS,EAAE;IACzB,IAAIC,QAAQ;IACZ,MAAMC,QAAQ,GAAGF,SAAS,GAAGF,SAAS;IACtC,IAAIH,SAAS,EAAE;MACXM,QAAQ,GAAGR,QAAQ,GAAGR,WAAW,CAACiB,QAAQ,EAAE,CAAC,EAAET,QAAQ,GAAGC,MAAM,EAAErjB,QAAQ,CAAC;IAC/E,CAAC,MACI;MACD4jB,QAAQ,GAAGhB,WAAW,CAACiB,QAAQ,EAAET,QAAQ,EAAEC,MAAM,GAAGD,QAAQ,EAAEpjB,QAAQ,CAAC;IAC3E;IACA,IAAIsjB,SAAS,EAAE;MACXM,QAAQ,GAAGA,QAAQ,GAAGP,MAAM,GAAGA,MAAM,GAAGO,QAAQ;IACpD,CAAC,MACI;MACDA,QAAQ,GAAGA,QAAQ,GAAGP,MAAM,GAAGA,MAAM,GAAGO,QAAQ;IACpD;IACAA,QAAQ,GAAGtY,IAAI,CAACC,KAAK,CAACqY,QAAQ,GAAGJ,GAAG,CAAC,GAAGA,GAAG;IAC3C,MAAM9N,IAAI,GAAGmO,QAAQ,GAAG7jB,QAAQ;IAChCmjB,QAAQ,CAAC;MACLtrC,KAAK,EAAE+rC,QAAQ;MACfC,QAAQ;MACRF,SAAS;MACTG,QAAQ,EAAE,CAACpO;IACf,CAAC,CAAC;IACF,IAAIA,IAAI,EAAE;MACN,OAAOqO,qBAAqB,CAACC,GAAG,IAAIN,QAAQ,CAACM,GAAG,CAAC,CAAC;IACtD;EACJ;EACA,OAAOD,qBAAqB,CAACJ,SAAS,IAAI;IACtCF,SAAS,GAAGE,SAAS;IACrB,OAAOD,QAAQ,CAACC,SAAS,CAAC;EAC9B,CAAC,CAAC;AACN;AACA;AACA;AACA;AACA;AACA;AACA,SAASM,cAAcA,CAACjB,OAAO,EAAE;EAC7B,MAAMK,MAAM,GAAG/C,MAAM,CAAC0C,OAAO,CAAC;EAC9B,IAAIK,MAAM,GAAG,CAAC,KAAK,CAAC,IAAI/X,IAAI,CAACoL,GAAG,CAAC2M,MAAM,CAAC,IAAI,EAAE,EAAE;IAC5C,OAAO,CAAC;EACZ;EACA,OAAO,CAAC;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMa,gBAAgB,CAAC;EACnB1hB,WAAWA,CAAC0K,EAAE,EAAEzK,OAAO,EAAE;IACrB,IAAI,CAACyK,EAAE,GAAGA,EAAE;IACZ,IAAI,CAACgW,aAAa,GAAG,CAAC;IACtB,IAAI,CAACiB,WAAW,GAAG,EAAE;IACrB,IAAI,CAACC,WAAW,GAAG,EAAE;IACrB,IAAI,CAACC,WAAW,GAAG,IAAI35C,YAAY,CAAC,CAAC;IACrC,IAAI,CAAC45C,WAAW,GAAG,IAAI55C,YAAY,CAAC,CAAC;IACrC,IAAI,CAACmN,KAAK,GAAG,EAAE;IACf,IAAI,CAAC0sC,cAAc,GAAG,CAAC;IACvB,IAAI,CAACC,QAAQ,GAAG,CAAC;IACjB,IAAI,CAACC,UAAU,GAAG,CAAC;IACnB,IAAI,CAACvhB,aAAa,GAAGT,OAAO,CAACS,aAAa;EAC9C;EACA,IAAI+f,aAAaA,CAACe,GAAG,EAAE;IACnB,IAAI,CAACO,cAAc,GAAGP,GAAG;EAC7B;EACA,IAAIf,aAAaA,CAAA,EAAG;IAChB,IAAI,IAAI,CAACsB,cAAc,EACnB,OAAO,IAAI,CAACA,cAAc;IAC9B,OAAON,cAAc,CAAC,IAAI,CAACjB,OAAO,CAAC;EACvC;EACA,IAAIA,OAAOA,CAACgB,GAAG,EAAE;IACb,IAAI,CAACQ,QAAQ,GAAGE,UAAU,CAACV,GAAG,CAAC;IAC/B,IAAI,CAACW,KAAK,CAAC,CAAC;EAChB;EACA,IAAI3B,OAAOA,CAAA,EAAG;IACV,OAAO,IAAI,CAACwB,QAAQ;EACxB;EACA,IAAIzB,SAASA,CAACiB,GAAG,EAAE;IACf,IAAI,CAACS,UAAU,GAAGC,UAAU,CAACV,GAAG,CAAC;IACjC,IAAI,CAACW,KAAK,CAAC,CAAC;EAChB;EACA,IAAI5B,SAASA,CAAA,EAAG;IACZ,OAAO,IAAI,CAAC0B,UAAU;EAC1B;EACAzT,WAAWA,CAAA,EAAG;IACV4T,oBAAoB,CAAC,IAAI,CAACC,YAAY,CAAC;EAC3C;EACAF,KAAKA,CAAA,EAAG;IACJC,oBAAoB,CAAC,IAAI,CAACC,YAAY,CAAC;IACvC,MAAMnoC,eAAe,GAAG,IAAI,CAACA,eAAe,KAAK7E,KAAK,IAAK,GAAE,IAAI,CAACssC,WAAY,GAAEtsC,KAAK,CAACuF,cAAc,CAAC,CAAE,GAAE,IAAI,CAACgnC,WAAY,EAAC,CAAC;IAC5H,MAAMjB,QAAQ,GAAGA,CAAC;MAAEtrC,KAAK;MAAEgsC,QAAQ;MAAEC;IAAS,CAAC,KAAK;MAChD,IAAI,CAACjsC,KAAK,GAAG6E,eAAe,CAAC7E,KAAK,CAAC;MACnC,IAAI,CAACq1B,EAAE,CAACK,YAAY,CAAC,CAAC;MACtB,IAAI,CAACuW,QAAQ,EACT,IAAI,CAACO,WAAW,CAACz0C,IAAI,CAAC;QAAEiI,KAAK,EAAE,IAAI,CAACA,KAAK;QAAEgsC;MAAS,CAAC,CAAC;MAC1D,IAAIC,QAAQ,EACR,IAAI,CAACQ,WAAW,CAAC10C,IAAI,CAAC;QAAEiI,KAAK,EAAE,IAAI,CAACA,KAAK;QAAEgsC;MAAS,CAAC,CAAC;IAC9D,CAAC;IACD,IAAI,CAACgB,YAAY,GAAG/B,KAAK,CAAC,IAAI,CAACC,SAAS,EAAE,IAAI,CAACC,OAAO,EAAE,IAAI,CAACC,aAAa,EAAE,IAAI,CAACC,aAAa,EAAEC,QAAQ,CAAC;EAC7G;AACJ;AACAe,gBAAgB,CAACvgB,IAAI,YAAAmhB,yBAAAjhB,CAAA;EAAA,YAAAA,CAAA,IAAwFqgB,gBAAgB,EArtGnBn6C,EAAE,CAAA+5B,iBAAA,CAqtGmC/5B,EAAE,CAACikC,iBAAiB,GArtGzDjkC,EAAE,CAAA+5B,iBAAA,CAqtGoE/5B,EAAE,CAACg6B,UAAU;AAAA,CAA4C;AACzOmgB,gBAAgB,CAACjgB,IAAI,kBAttGqFl6B,EAAE,CAAAm6B,iBAAA;EAAA1pB,IAAA,EAstGX0pC,gBAAgB;EAAA/f,SAAA;EAAAc,MAAA;IAAAie,aAAA;IAAAiB,WAAA;IAAAC,WAAA;IAAA1nC,eAAA;IAAAumC,aAAA;IAAAD,OAAA;IAAAD,SAAA;EAAA;EAAApb,OAAA;IAAA0c,WAAA;IAAAC,WAAA;EAAA;EAAA3R,KAAA,EAAA52B,IAAA;EAAAmpB,KAAA;EAAAC,IAAA;EAAA12B,QAAA,WAAAs2C,0BAAAh3C,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MAttGPhE,EAAE,CAAAkF,MAAA,EAstGwW,CAAC;IAAA;IAAA,IAAAlB,EAAA;MAttG3WhE,EAAE,CAAAqI,kBAAA,MAAApE,GAAA,CAAA6J,KAAA,KAstGwW,CAAC;IAAA;EAAA;EAAA8tB,aAAA;AAAA,EAAoB;AACze;EAAA,QAAAE,SAAA,oBAAAA,SAAA,KAvtG0G97B,EAAE,CAAA+7B,iBAAA,CAutGjBoe,gBAAgB,EAAc,CAAC;IAC9G1pC,IAAI,EAAEvQ,SAAS;IACfg1B,IAAI,EAAE,CAAC;MACC8G,QAAQ,EAAE,uBAAuB;MACjCt3B,QAAQ,EAAG;IACf,CAAC;EACT,CAAC,CAAC,EAAkB,YAAY;IAAE,OAAO,CAAC;MAAE+L,IAAI,EAAEzQ,EAAE,CAACikC;IAAkB,CAAC,EAAE;MAAExzB,IAAI,EAAEzQ,EAAE,CAACg6B;IAAW,CAAC,CAAC;EAAE,CAAC,EAAkB;IAAEmf,aAAa,EAAE,CAAC;MACjI1oC,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE+5C,WAAW,EAAE,CAAC;MACd3pC,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEg6C,WAAW,EAAE,CAAC;MACd5pC,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEsS,eAAe,EAAE,CAAC;MAClBlC,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE64C,aAAa,EAAE,CAAC;MAChBzoC,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE44C,OAAO,EAAE,CAAC;MACVxoC,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE24C,SAAS,EAAE,CAAC;MACZvoC,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEi6C,WAAW,EAAE,CAAC;MACd7pC,IAAI,EAAE7P;IACV,CAAC,CAAC;IAAE25C,WAAW,EAAE,CAAC;MACd9pC,IAAI,EAAE7P;IACV,CAAC;EAAE,CAAC;AAAA;;AAEhB;AACA;AACA,IAAIq6C,IAAI;AACR,IAAI,OAAO1jB,MAAM,KAAK,WAAW,EAAE;EAC/B0jB,IAAI,GAAG1jB,MAAM;AACjB,CAAC,MACI,IAAI,OAAO2jB,MAAM,KAAK,WAAW,EAAE;EACpCD,IAAI,GAAGC,MAAM;AACjB;AACA;AACA,MAAMC,UAAU,GAAGF,IAAI,CAACE,UAAU;AAClC,SAASC,gBAAgBA,CAACrtC,IAAI,EAAEstC,OAAO,GAAG,KAAK,EAAEC,UAAU,GAAG,IAAI,EAAE;EAChE;EACA;EACA,IAAI,OAAOH,UAAU,KAAK,UAAU,EAAE;IAClC;IACA,OAAO,IAAIA,UAAU,CAACptC,IAAI,EAAE;MAAEstC,OAAO;MAAEC;IAAW,CAAC,CAAC;EACxD,CAAC,MACI;IACD;IACA,MAAMzH,KAAK,GAAG0H,QAAQ,CAACC,WAAW,CAAC,YAAY,CAAC;IAChD3H,KAAK,CAAC4H,SAAS,CAAC1tC,IAAI,EAAEstC,OAAO,EAAEC,UAAU,CAAC;IAC1C,OAAOzH,KAAK;EAChB;AACJ;AAEA,MAAM6H,WAAW,CAAC;EACdjjB,WAAWA,CAACG,UAAU,EAAE;IACpB,IAAI,CAACA,UAAU,GAAGA,UAAU;IAC5B,IAAI,CAAC+iB,aAAa,GAAG,CAAC;IACtB,IAAI,CAACC,SAAS,GAAG,CAAC,CAAC;IACnB,IAAI,CAACC,YAAY,GAAG,EAAE;IACtB,IAAI,CAAC/qC,cAAc,GAAG6lB,cAAc;IACpC,IAAI,CAAC3lB,UAAU,GAAGogC,UAAU;IAC5B,IAAI,CAAC0K,cAAc,GAAG,KAAK;IAC3B,IAAI,CAACjrC,eAAe,GAAG,KAAK;IAC5B,IAAI,CAACkrC,KAAK,GAAG,IAAIp7C,YAAY,CAAC,CAAC;EACnC;EACAq7C,SAASA,CAACC,IAAI,EAAE;IACZ,MAAMtlC,OAAO,GAAG,EAAE;IAClB,KAAK,MAAMulC,KAAK,IAAI,IAAI,CAACvlC,OAAO,EAAE;MAC9B,MAAMktB,IAAI,GAAGqY,KAAK,CAACj/B,MAAM,CAAC6mB,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACh2B,IAAI,CAACu4B,QAAQ,CAAC,CAAC,KAAK2V,IAAI,CAAC3V,QAAQ,CAAC,CAAC,CAAC;MAC1E,IAAI6V,SAAS,GAAGD,KAAK,CAACnuC,IAAI;MAC1B,IAAIouC,SAAS,YAAY3mB,IAAI,EAAE;QAC3B2mB,SAAS,GAAGA,SAAS,CAACja,kBAAkB,CAAC,CAAC;MAC9C;MACA,IAAI2B,IAAI,EAAE;QACN,MAAMz9B,KAAK,GAAGy9B,IAAI,CAAC91B,IAAI;QACvB,IAAIksC,GAAG,GAAGpW,IAAI,CAAC/1B,KAAK;QACpB,IAAI,IAAI,CAACguC,cAAc,EAAE;UACrB7B,GAAG,GAAG,CAACpW,IAAI,CAAC2S,EAAE,GAAG3S,IAAI,CAACuY,EAAE,EAAEC,OAAO,CAAC,CAAC,CAAC,GAAG,GAAG;QAC9C;QACA,IAAI/1C,KAAK;QACT,IAAI,IAAI,CAACS,MAAM,CAACyO,SAAS,KAAKkrB,SAAS,CAACmE,MAAM,EAAE;UAC5C,IAAIyX,CAAC,GAAGrC,GAAG;UACX,IAAIpW,IAAI,CAAC2S,EAAE,EAAE;YACT8F,CAAC,GAAGzY,IAAI,CAAC2S,EAAE;UACf;UACAlwC,KAAK,GAAG,IAAI,CAACS,MAAM,CAACwiB,QAAQ,CAAC+yB,CAAC,CAAC;QACnC,CAAC,MACI;UACDh2C,KAAK,GAAG,IAAI,CAACS,MAAM,CAACwiB,QAAQ,CAAC2yB,KAAK,CAACnuC,IAAI,CAAC;QAC5C;QACA,MAAM+B,IAAI,GAAG2mB,MAAM,CAACyR,MAAM,CAAC,CAAC,CAAC,EAAErE,IAAI,EAAE;UACjC/1B,KAAK,EAAEmsC,GAAG;UACVlsC,IAAI,EAAE3H,KAAK;UACX6W,MAAM,EAAEk/B,SAAS;UACjBt5C,GAAG,EAAEghC,IAAI,CAAChhC,GAAG;UACbC,GAAG,EAAE+gC,IAAI,CAAC/gC,GAAG;UACbwD;QACJ,CAAC,CAAC;QACFqQ,OAAO,CAACqnB,IAAI,CAACluB,IAAI,CAAC;MACtB;IACJ;IACA,OAAO6G,OAAO;EAClB;EACA4lC,SAASA,CAAC1I,KAAK,EAAE;IACb,IAAI,CAAC5yC,iBAAiB,CAAC,IAAI,CAAC23B,UAAU,CAAC,EAAE;MACrC;IACJ;IACA,MAAM4jB,IAAI,GAAG3I,KAAK,CAAC4I,KAAK,GAAG5I,KAAK,CAAC7f,MAAM,CAACqF,qBAAqB,CAAC,CAAC,CAACjC,IAAI;IACpE,MAAMslB,YAAY,GAAG,IAAI,CAACC,qBAAqB,CAACH,IAAI,CAAC;IACrD,MAAMI,YAAY,GAAG,IAAI,CAAClmC,IAAI,CAACgmC,YAAY,CAAC;IAC5C,IAAI,CAACd,SAAS,GAAG,IAAI,CAAC7wC,MAAM,CAAC6xC,YAAY,CAAC;IAC1C,IAAI,CAAChB,SAAS,GAAGra,IAAI,CAACz+B,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC84C,SAAS,CAAC;IAC5C,IAAI,CAACA,SAAS,GAAGra,IAAI,CAAC1+B,GAAG,CAAC,IAAI,CAACoI,IAAI,CAACE,KAAK,EAAE,IAAI,CAACywC,SAAS,CAAC;IAC1D,IAAI,CAACC,YAAY,GAAG,IAAI,CAACG,SAAS,CAACY,YAAY,CAAC;IAChD,IAAI,IAAI,CAAChB,SAAS,KAAK,IAAI,CAACiB,aAAa,EAAE;MACvC,MAAMC,EAAE,GAAG1B,gBAAgB,CAAC,YAAY,CAAC;MACzC,IAAI,CAAC2B,aAAa,CAAC5jB,aAAa,CAAC6jB,aAAa,CAACF,EAAE,CAAC;MAClD,IAAI,CAACnB,aAAa,GAAG,GAAG;MACxB,IAAI,CAACI,KAAK,CAACl2C,IAAI,CAAC;QACZiI,KAAK,EAAE8uC;MACX,CAAC,CAAC;MACF,IAAI,CAAC9J,WAAW,CAAC,CAAC;MAClB,IAAI,CAAC+J,aAAa,GAAG,IAAI,CAACjB,SAAS;IACvC;EACJ;EACAe,qBAAqBA,CAACH,IAAI,EAAE;IACxB,IAAIS,QAAQ,GAAG,CAAC;IAChB,IAAIC,QAAQ,GAAG,IAAI,CAACxmC,IAAI,CAACtK,MAAM,GAAG,CAAC;IACnC,IAAI+wC,OAAO,GAAG5G,MAAM,CAAC6G,SAAS;IAC9B,IAAIV,YAAY,GAAG,CAAC;IACpB,OAAOO,QAAQ,IAAIC,QAAQ,EAAE;MACzB,MAAMG,YAAY,GAAI,CAACJ,QAAQ,GAAGC,QAAQ,IAAI,CAAC,GAAI,CAAC;MACpD,MAAMI,cAAc,GAAG,IAAI,CAACvyC,MAAM,CAAC,IAAI,CAAC2L,IAAI,CAAC2mC,YAAY,CAAC,CAAC;MAC3D,MAAME,OAAO,GAAGhc,IAAI,CAACoL,GAAG,CAAC2Q,cAAc,GAAGd,IAAI,CAAC;MAC/C,IAAIe,OAAO,GAAGJ,OAAO,EAAE;QACnBA,OAAO,GAAGI,OAAO;QACjBb,YAAY,GAAGW,YAAY;MAC/B;MACA,IAAIC,cAAc,GAAGd,IAAI,EAAE;QACvBS,QAAQ,GAAGI,YAAY,GAAG,CAAC;MAC/B,CAAC,MACI,IAAIC,cAAc,GAAGd,IAAI,EAAE;QAC5BU,QAAQ,GAAGG,YAAY,GAAG,CAAC;MAC/B,CAAC,MACI;QACDF,OAAO,GAAG,CAAC;QACXT,YAAY,GAAGW,YAAY;QAC3B;MACJ;IACJ;IACA,OAAOX,YAAY;EACvB;EACA5J,WAAWA,CAAA,EAAG;IACV,MAAMe,KAAK,GAAGuH,gBAAgB,CAAC,YAAY,CAAC;IAC5C,IAAI,CAAC2B,aAAa,CAAC5jB,aAAa,CAAC6jB,aAAa,CAACnJ,KAAK,CAAC;EACzD;EACAjB,WAAWA,CAAA,EAAG;IACV,MAAMiB,KAAK,GAAGuH,gBAAgB,CAAC,YAAY,CAAC;IAC5C,IAAI,CAAC2B,aAAa,CAAC5jB,aAAa,CAAC6jB,aAAa,CAACnJ,KAAK,CAAC;IACrD,IAAI,CAAC8H,aAAa,GAAG,CAAC;IACtB,IAAI,CAACkB,aAAa,GAAG,CAAC,CAAC;EAC3B;EACAxqC,cAAcA,CAACmrC,WAAW,EAAE;IACxB,IAAIroB,MAAM,GAAG,EAAE;IACf,IAAIqoB,WAAW,CAACvgC,MAAM,KAAK9L,SAAS,EAAE;MAClCgkB,MAAM,IAAIqoB,WAAW,CAACvgC,MAAM;IAChC,CAAC,MACI;MACDkY,MAAM,IAAI,KAAK;IACnB;IACAA,MAAM,IAAI,IAAI;IACd,IAAIqoB,WAAW,CAAC1vC,KAAK,KAAKqD,SAAS,EAAE;MACjCgkB,MAAM,IAAIqoB,WAAW,CAAC1vC,KAAK,CAACuF,cAAc,CAAC,CAAC;IAChD;IACA,IAAImqC,WAAW,CAAC36C,GAAG,KAAKsO,SAAS,IAAIqsC,WAAW,CAAC16C,GAAG,KAAKqO,SAAS,EAAE;MAChEgkB,MAAM,IAAI,IAAI;MACd,IAAIqoB,WAAW,CAAC36C,GAAG,KAAKsO,SAAS,EAAE;QAC/B,IAAIqsC,WAAW,CAAC16C,GAAG,KAAKqO,SAAS,EAAE;UAC/BgkB,MAAM,IAAI,GAAG;QACjB;QACAA,MAAM,IAAIqoB,WAAW,CAAC36C,GAAG,CAACwQ,cAAc,CAAC,CAAC;QAC1C,IAAImqC,WAAW,CAAC16C,GAAG,KAAKqO,SAAS,EAAE;UAC/BgkB,MAAM,IAAI,KAAK;QACnB;MACJ,CAAC,MACI,IAAIqoB,WAAW,CAAC16C,GAAG,KAAKqO,SAAS,EAAE;QACpCgkB,MAAM,IAAI,GAAG;MACjB;MACA,IAAIqoB,WAAW,CAAC16C,GAAG,KAAKqO,SAAS,EAAE;QAC/BgkB,MAAM,IAAIqoB,WAAW,CAAC16C,GAAG,CAACuQ,cAAc,CAAC,CAAC;MAC9C;MACA8hB,MAAM,IAAI,GAAG;IACjB;IACA,OAAOA,MAAM;EACjB;AACJ;AACAumB,WAAW,CAAC9hB,IAAI,YAAA6jB,oBAAA3jB,CAAA;EAAA,YAAAA,CAAA,IAAwF4hB,WAAW,EA15GT17C,EAAE,CAAA+5B,iBAAA,CA05GyB95B,WAAW;AAAA,CAA4C;AAC5Ly7C,WAAW,CAACxhB,IAAI,kBA35G0Fl6B,EAAE,CAAAm6B,iBAAA;EAAA1pB,IAAA,EA25GhBirC,WAAW;EAAAthB,SAAA;EAAAC,SAAA,WAAAqjB,kBAAA15C,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MA35GGhE,EAAE,CAAAu6B,WAAA,CAAAtoB,IAAA;IAAA;IAAA,IAAAjO,EAAA;MAAA,IAAAw2B,EAAA;MAAFx6B,EAAE,CAAAy6B,cAAA,CAAAD,EAAA,GAAFx6B,EAAE,CAAA06B,WAAA,QAAAz2B,GAAA,CAAA84C,aAAA,GAAAviB,EAAA,CAAAG,KAAA;IAAA;EAAA;EAAAO,MAAA;IAAAjwB,IAAA;IAAAyL,IAAA;IAAA3L,MAAA;IAAAyD,MAAA;IAAAmI,OAAA;IAAA5P,MAAA;IAAA+0C,cAAA;IAAAjrC,eAAA;IAAAK,eAAA;EAAA;EAAA0sB,OAAA;IAAAme,KAAA;EAAA;EAAAnT,KAAA,EAAA12B,IAAA;EAAAipB,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAA32B,QAAA,WAAAi5C,qBAAA35C,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MAAA,MAAAqG,GAAA,GAAFrK,EAAE,CAAAsF,gBAAA;MAAFtF,EAAE,CAAA8H,cAAA;MAAF9H,EAAE,CAAAmE,cAAA,OA45GlG,CAAC,aAUJ,CAAC;MAt6GkGnE,EAAE,CAAAuF,UAAA,uBAAAq4C,+CAAAn4C,MAAA;QAAFzF,EAAE,CAAA0F,aAAA,CAAA2E,GAAA;QAAA,OAAFrK,EAAE,CAAA2F,WAAA,CAo6GvF1B,GAAA,CAAAs4C,SAAA,CAAA92C,MAAgB,CAAC;MAAA,EAAC,wBAAAo4C,gDAAA;QAp6GmE79C,EAAE,CAAA0F,aAAA,CAAA2E,GAAA;QAAA,OAAFrK,EAAE,CAAA2F,WAAA,CAq6GtF1B,GAAA,CAAA2uC,WAAA,CAAY,CAAC;MAAA,EAAC;MAr6GsE5yC,EAAE,CAAAqE,YAAA,CAs6GrG,CAAC;MAt6GkGrE,EAAE,CAAAoE,UAAA,IAAAkO,uCAAA,gCAAFtS,EAAE,CAAAmJ,sBAu6GhD,CAAC;MAv6G6CnJ,EAAE,CAAA8E,SAAA,gBAi8GrG,CAAC;MAj8GkG9E,EAAE,CAAAqE,YAAA,CAk8GjG,CAAC;IAAA;IAAA,IAAAL,EAAA;MAAA,MAAA85C,yBAAA,GAl8G8F99C,EAAE,CAAAqJ,WAAA;MAAFrJ,EAAE,CAAAwE,SAAA,CA+5GzF,CAAC;MA/5GsFxE,EAAE,CAAAoI,WAAA,kBAAAnE,GAAA,CAAAgH,IAAA,CAAAE,KAAA,YAAAlH,GAAA,CAAAgH,IAAA,CAAAC,MAAA;MAAFlL,EAAE,CAAAwE,SAAA,EAu7GtE,CAAC;MAv7GmExE,EAAE,CAAA2M,WAAA,YAAA1I,GAAA,CAAA03C,aAu7GtE,CAAC,yBACD,CAAC;MAx7GmE37C,EAAE,CAAAyE,UAAA,oBAAAR,GAAA,CAAA03C,aAAA,8BAi7GtC,CAAC,oBAAA13C,GAAA,CAAA4M,eAS7B,CAAC,qBAAA5M,GAAA,CAAA6M,cAAA,CAAApD,KACK,CAAC,gBAAAzJ,GAAA,CAAA+M,UAAA,CAAAC,OACR,CAAC,qBACd,CAAC,oBAAAhN,GAAA,CAAAiN,eAAA,GAAAjN,GAAA,CAAAiN,eAAA,GAAA4sC,yBACwD,CAAC,mBAAA75C,GAAA,CAAA43C,YAChD,CAAC,6BACH,CAAC;MAh8GqE77C,EAAE,CAAAoI,WAAA,MAAAnE,GAAA,CAAA23C,SAAA,wBAAA33C,GAAA,CAAAgH,IAAA,CAAAC,MAAA;IAAA;EAAA;EAAAswB,YAAA,GAm8GlEx6B,EAAE,CAACmjC,OAAO,EAAgGmN,gBAAgB;EAAA1V,aAAA;EAAA9rB,IAAA;IAAA+mC,SAAA,EAAkb,CAC9kBp1C,OAAO,CAAC,gBAAgB,EAAE,CACtBC,UAAU,CAAC,oBAAoB,EAAE,CAC7BC,KAAK,CAAC;MACFoN,OAAO,EAAE;IACb,CAAC,CAAC,EACFnN,OAAO,CAAC,GAAG,EAAED,KAAK,CAAC;MAAEoN,OAAO,EAAE;IAAI,CAAC,CAAC,CAAC,CACxC,CAAC,EACFrN,UAAU,CAAC,oBAAoB,EAAE,CAC7BC,KAAK,CAAC;MACFoN,OAAO,EAAE;IACb,CAAC,CAAC,EACFnN,OAAO,CAAC,GAAG,EAAED,KAAK,CAAC;MAAEoN,OAAO,EAAE;IAAE,CAAC,CAAC,CAAC,CACtC,CAAC,CACL,CAAC;EACL;EAAAgzB,eAAA;AAAA,EAAuD;AAC5D;EAAA,QAAAjG,SAAA,oBAAAA,SAAA,KAn9G0G97B,EAAE,CAAA+7B,iBAAA,CAm9GjB2f,WAAW,EAAc,CAAC;IACzGjrC,IAAI,EAAEvQ,SAAS;IACfg1B,IAAI,EAAE,CAAC;MACC8G,QAAQ,EAAE,4BAA4B;MACtCt3B,QAAQ,EAAG;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;MACiBq9B,eAAe,EAAErhC,uBAAuB,CAACshC,MAAM;MAC/CtuB,UAAU,EAAE,CACRjS,OAAO,CAAC,gBAAgB,EAAE,CACtBC,UAAU,CAAC,oBAAoB,EAAE,CAC7BC,KAAK,CAAC;QACFoN,OAAO,EAAE;MACb,CAAC,CAAC,EACFnN,OAAO,CAAC,GAAG,EAAED,KAAK,CAAC;QAAEoN,OAAO,EAAE;MAAI,CAAC,CAAC,CAAC,CACxC,CAAC,EACFrN,UAAU,CAAC,oBAAoB,EAAE,CAC7BC,KAAK,CAAC;QACFoN,OAAO,EAAE;MACb,CAAC,CAAC,EACFnN,OAAO,CAAC,GAAG,EAAED,KAAK,CAAC;QAAEoN,OAAO,EAAE;MAAE,CAAC,CAAC,CAAC,CACtC,CAAC,CACL,CAAC;IAEV,CAAC;EACT,CAAC,CAAC,EAAkB,YAAY;IAAE,OAAO,CAAC;MAAE0B,IAAI,EAAEU,SAAS;MAAE+qB,UAAU,EAAE,CAAC;QAC9DzrB,IAAI,EAAErQ,MAAM;QACZ80B,IAAI,EAAE,CAACj1B,WAAW;MACtB,CAAC;IAAE,CAAC,CAAC;EAAE,CAAC,EAAkB;IAAEgL,IAAI,EAAE,CAAC;MACnCwF,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEqW,IAAI,EAAE,CAAC;MACPjG,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE0K,MAAM,EAAE,CAAC;MACT0F,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEmO,MAAM,EAAE,CAAC;MACTiC,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEsW,OAAO,EAAE,CAAC;MACVlG,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE0G,MAAM,EAAE,CAAC;MACT0J,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEy7C,cAAc,EAAE,CAAC;MACjBrrC,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEwQ,eAAe,EAAE,CAAC;MAClBJ,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE6Q,eAAe,EAAE,CAAC;MAClBT,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE07C,KAAK,EAAE,CAAC;MACRtrC,IAAI,EAAE7P;IACV,CAAC,CAAC;IAAEm8C,aAAa,EAAE,CAAC;MAChBtsC,IAAI,EAAEnQ,SAAS;MACf40B,IAAI,EAAE,CAAC,eAAe,EAAE;QAAE6oB,MAAM,EAAE;MAAM,CAAC;IAC7C,CAAC;EAAE,CAAC;AAAA;AAEhB,MAAMC,QAAQ,CAAC;EACXvlB,WAAWA,CAACC,OAAO,EAAEyK,EAAE,EAAE;IACrB,IAAI,CAACA,EAAE,GAAGA,EAAE;IACZ,IAAI,CAACj4B,MAAM,GAAG,EAAE;IAChB,IAAI,CAACrJ,MAAM,GAAG,IAAIlB,YAAY,CAAC,CAAC;IAChC,IAAI,CAACs9C,cAAc,GAAG,IAAIt9C,YAAY,CAAC,CAAC;IACxC,IAAI,CAACu9C,WAAW,GAAG,KAAK;IACxB,IAAI,CAACxlB,OAAO,GAAGA,OAAO,CAACS,aAAa;EACxC;EACA0H,WAAWA,CAACC,OAAO,EAAE;IACjB,IAAI,CAACyC,MAAM,CAAC,CAAC;IACb,IAAI,CAAC,IAAI,CAAC2a,WAAW,EAAE;MACnB,IAAI,CAACC,QAAQ,CAAC,CAAC;MACf,IAAI,CAACD,WAAW,GAAG,IAAI;IAC3B;EACJ;EACA3a,MAAMA,CAAA,EAAG;IACL,IAAI,CAACt4B,IAAI,GAAG,IAAI,CAACmzC,OAAO,CAAC,CAAC;IAC1B,IAAI,CAAClzC,MAAM,GAAG,IAAI,CAACD,IAAI,CAACC,MAAM;IAC9B,MAAMmzC,OAAO,GAAG,IAAI,CAACr3C,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAACkE,MAAM;IAC1C,IAAI,CAACozC,OAAO,GAAG,IAAI,CAACC,UAAU,CAAC,CAAC;IAChC,IAAI,CAACxzC,MAAM,GAAG,IAAI,CAACyzC,SAAS,CAAC,CAAC;IAC9B,IAAI,IAAI,CAACC,KAAK,EAAE;MACZ,IAAI,CAACC,WAAW,CAAC,CAAC;IACtB;IACA,IAAI,CAAC1xC,SAAS,GAAI,iBAAgBqxC,OAAQ,GAAE;IAC5C,IAAI,CAACM,QAAQ,GAAG,QAAQ,GAAG7qB,EAAE,CAAC,CAAC,CAACwS,QAAQ,CAAC,CAAC;IAC1C,IAAI,CAACsY,MAAM,GAAI,QAAO,IAAI,CAACD,QAAS,GAAE;IACtC,IAAI,CAACxb,EAAE,CAACK,YAAY,CAAC,CAAC;EAC1B;EACA+a,UAAUA,CAAA,EAAG;IACT,IAAIM,MAAM,GAAG,EAAE;IACf,KAAK,MAAMloC,OAAO,IAAI,IAAI,CAACA,OAAO,EAAE;MAChC,KAAK,MAAMotB,CAAC,IAAIptB,OAAO,CAACsG,MAAM,EAAE;QAC5B,IAAI,CAAC4hC,MAAM,CAACC,QAAQ,CAAC/a,CAAC,CAACh2B,IAAI,CAAC,EAAE;UAC1B8wC,MAAM,CAAC7gB,IAAI,CAAC+F,CAAC,CAACh2B,IAAI,CAAC;QACvB;MACJ;IACJ;IACA,IAAIjH,MAAM,GAAG,EAAE;IACf,IAAI,IAAI,CAAC0O,SAAS,KAAKkrB,SAAS,CAAC4V,IAAI,EAAE;MACnC,MAAMzzC,GAAG,GAAG0+B,IAAI,CAAC1+B,GAAG,CAAC,GAAGg8C,MAAM,CAAC;MAC/B,MAAM/7C,GAAG,GAAGy+B,IAAI,CAACz+B,GAAG,CAAC,GAAG+7C,MAAM,CAAC;MAC/B/3C,MAAM,GAAG,CAACjE,GAAG,EAAEC,GAAG,CAAC;IACvB,CAAC,MACI,IAAI,IAAI,CAAC0S,SAAS,KAAKkrB,SAAS,CAACmE,MAAM,EAAE;MAC1Cga,MAAM,GAAGA,MAAM,CAACjP,GAAG,CAAC0M,CAAC,IAAI/F,MAAM,CAAC+F,CAAC,CAAC,CAAC;MACnC,MAAMz5C,GAAG,GAAG0+B,IAAI,CAAC1+B,GAAG,CAAC,GAAGg8C,MAAM,CAAC;MAC/B,MAAM/7C,GAAG,GAAGy+B,IAAI,CAACz+B,GAAG,CAAC,GAAG+7C,MAAM,CAAC;MAC/B/3C,MAAM,GAAG,CAACjE,GAAG,EAAEC,GAAG,CAAC;IACvB,CAAC,MACI;MACDgE,MAAM,GAAG+3C,MAAM;IACnB;IACA,OAAO/3C,MAAM;EACjB;EACA03C,SAASA,CAAA,EAAG;IACR,IAAIxT,KAAK;IACT,IAAI,IAAI,CAACx1B,SAAS,KAAKkrB,SAAS,CAAC4V,IAAI,EAAE;MACnCtL,KAAK,GAAGjpC,SAAS,CAAC,CAAC,CAACa,KAAK,CAAC,CAAC,CAAC,EAAE,IAAI,CAACqI,IAAI,CAACE,KAAK,CAAC,CAAC,CAACrE,MAAM,CAAC,IAAI,CAACw3C,OAAO,CAAC;IACxE,CAAC,MACI,IAAI,IAAI,CAAC9oC,SAAS,KAAKkrB,SAAS,CAACmE,MAAM,EAAE;MAC1CmG,KAAK,GAAGhpC,WAAW,CAAC,CAAC,CAACY,KAAK,CAAC,CAAC,CAAC,EAAE,IAAI,CAACqI,IAAI,CAACE,KAAK,CAAC,CAAC,CAACrE,MAAM,CAAC,IAAI,CAACw3C,OAAO,CAAC;IAC1E,CAAC,MACI,IAAI,IAAI,CAAC9oC,SAAS,KAAKkrB,SAAS,CAACkG,OAAO,EAAE;MAC3CoE,KAAK,GAAG/oC,UAAU,CAAC,CAAC,CAACW,KAAK,CAAC,CAAC,CAAC,EAAE,IAAI,CAACqI,IAAI,CAACE,KAAK,CAAC,CAAC,CAAC0iC,OAAO,CAAC,GAAG,CAAC,CAAC/mC,MAAM,CAAC,IAAI,CAACw3C,OAAO,CAAC;IACtF;IACA,OAAOtT,KAAK;EAChB;EACAmT,QAAQA,CAAA,EAAG;IACP,IAAI,IAAI,CAACM,KAAK,EACV;IACJ,MAAMvzC,MAAM,GAAG,IAAI,CAACA,MAAM;IAC1B,MAAMC,KAAK,GAAG,IAAI,CAACnE,IAAI,CAAC,CAAC,CAAC;IAC1B,IAAI,CAACy3C,KAAK,GAAG38C,MAAM,CAAC,CAAC,CAChBi9C,MAAM,CAAC,CACR,CAAC,CAAC,EAAE,CAAC,CAAC,EACN,CAAC5zC,KAAK,EAAED,MAAM,CAAC,CAClB,CAAC,CACG8zC,EAAE,CAAC,WAAW,EAAE,CAAC;MAAEC;IAAU,CAAC,KAAK;MACpC,MAAMC,YAAY,GAAGD,SAAS,IAAI,IAAI,CAACl0C,MAAM,CAACnI,KAAK,CAAC,CAAC;MACrD,MAAMu8C,SAAS,GAAGD,YAAY,CAACtP,GAAG,CAAC,IAAI,CAAC7kC,MAAM,CAACq0C,MAAM,CAAC;MACtD,IAAI,CAACnB,cAAc,CAACp4C,IAAI,CAACs5C,SAAS,CAAC;MACnC,IAAI,CAAChc,EAAE,CAACK,YAAY,CAAC,CAAC;IAC1B,CAAC,CAAC;IACF3hC,MAAM,CAAC,IAAI,CAAC62B,OAAO,CAAC,CAAC72B,MAAM,CAAC,QAAQ,CAAC,CAAC0kC,IAAI,CAAC,IAAI,CAACkY,KAAK,CAAC;EAC1D;EACAC,WAAWA,CAAA,EAAG;IACV,IAAI,CAAC,IAAI,CAACD,KAAK,EACX;IACJ,MAAMvzC,MAAM,GAAG,IAAI,CAACA,MAAM;IAC1B,MAAMC,KAAK,GAAG,IAAI,CAACnE,IAAI,CAAC,CAAC,CAAC;IAC1B,IAAI,CAACy3C,KAAK,CAACM,MAAM,CAAC,CACd,CAAC,CAAC,EAAE,CAAC,CAAC,EACN,CAAC5zC,KAAK,EAAED,MAAM,CAAC,CAClB,CAAC;IACFrJ,MAAM,CAAC,IAAI,CAAC62B,OAAO,CAAC,CAAC72B,MAAM,CAAC,QAAQ,CAAC,CAAC0kC,IAAI,CAAC,IAAI,CAACkY,KAAK,CAAC;IACtD;IACA58C,MAAM,CAAC,IAAI,CAAC62B,OAAO,CAAC,CACf72B,MAAM,CAAC,YAAY,CAAC,CACpB62C,IAAI,CAAC,MAAM,EAAEvnC,SAAS,CAAC,CACvBunC,IAAI,CAAC,QAAQ,EAAEvnC,SAAS,CAAC,CACzBunC,IAAI,CAAC,cAAc,EAAEvnC,SAAS,CAAC;IACpC,IAAI,CAACgyB,EAAE,CAACK,YAAY,CAAC,CAAC;EAC1B;EACA4a,OAAOA,CAAA,EAAG;IACN,MAAMjzC,KAAK,GAAG,IAAI,CAACnE,IAAI,CAAC,CAAC,CAAC;IAC1B,MAAMiE,IAAI,GAAG;MACTE,KAAK;MACLD,MAAM,EAAE,IAAI,CAACA;IACjB,CAAC;IACD,OAAOD,IAAI;EACf;AACJ;AACA+yC,QAAQ,CAACpkB,IAAI,YAAAylB,iBAAAvlB,CAAA;EAAA,YAAAA,CAAA,IAAwFkkB,QAAQ,EAhqHHh+C,EAAE,CAAA+5B,iBAAA,CAgqHmB/5B,EAAE,CAACg6B,UAAU,GAhqHlCh6B,EAAE,CAAA+5B,iBAAA,CAgqH6C/5B,EAAE,CAACikC,iBAAiB;AAAA,CAA4C;AACzN+Z,QAAQ,CAAC9jB,IAAI,kBAjqH6Fl6B,EAAE,CAAAm6B,iBAAA;EAAA1pB,IAAA,EAiqHnButC,QAAQ;EAAA5jB,SAAA;EAAAc,MAAA;IAAAl0B,IAAA;IAAA2P,OAAA;IAAAa,MAAA;IAAAC,YAAA;IAAAC,MAAA;IAAA4nC,SAAA;IAAA9pC,SAAA;IAAAtK,MAAA;EAAA;EAAA0yB,OAAA;IAAA/7B,MAAA;IAAAo8C,cAAA;EAAA;EAAArc,QAAA,GAjqHS5hC,EAAE,CAAA6hC,oBAAA;EAAA+G,KAAA,EAAAp2B,IAAA;EAAAyyB,kBAAA,EAAAz+B,GAAA;EAAA20B,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAA32B,QAAA,WAAA66C,kBAAAv7C,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MAAFhE,EAAE,CAAAmlC,eAAA;MAAFnlC,EAAE,CAAA8H,cAAA;MAAF9H,EAAE,CAAAmE,cAAA,UAkqHpD,CAAC,YACnB,CAAC;MAnqHmEnE,EAAE,CAAA8E,SAAA,sBAwqHnG,CAAC;MAxqHgG9E,EAAE,CAAAqE,YAAA,CAyqH1F,CAAC;MAzqHuFrE,EAAE,CAAAmE,cAAA,UA0qHzE,CAAC;MA1qHsEnE,EAAE,CAAAolC,YAAA,EA2qH5E,CAAC;MA3qHyEplC,EAAE,CAAAqE,YAAA,CA4qH/F,CAAC;MA5qH4FrE,EAAE,CAAA8E,SAAA,aA6qHR,CAAC,UACnE,CAAC;MA9qHuE9E,EAAE,CAAAqE,YAAA,CA+qHjG,CAAC;IAAA;IAAA,IAAAL,EAAA;MA/qH8FhE,EAAE,CAAAoI,WAAA,cAAAnE,GAAA,CAAA+I,SAAA;MAAFhN,EAAE,CAAAwE,SAAA,CAmqHvE,CAAC;MAnqHoExE,EAAE,CAAAoI,WAAA,OAAAnE,GAAA,CAAA06C,QAAA;MAAF3+C,EAAE,CAAAwE,SAAA,EA6qHjE,CAAC;MA7qH8DxE,EAAE,CAAAoI,WAAA,UAAAnE,GAAA,CAAA+C,IAAA,eAAA/C,GAAA,CAAAiH,MAAA;IAAA;EAAA;EAAAywB,MAAA;EAAAC,aAAA;EAAAmG,eAAA;AAAA,EAgrHwN;AACpU;EAAA,QAAAjG,SAAA,oBAAAA,SAAA,KAjrH0G97B,EAAE,CAAA+7B,iBAAA,CAirHjBiiB,QAAQ,EAAc,CAAC;IACtGvtC,IAAI,EAAEvQ,SAAS;IACfg1B,IAAI,EAAE,CAAC;MAAE8G,QAAQ,EAAE,wBAAwB;MAAEt3B,QAAQ,EAAG;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;MAAEk3B,aAAa,EAAEz7B,iBAAiB,CAAC87B,IAAI;MAAE8F,eAAe,EAAErhC,uBAAuB,CAACshC,MAAM;MAAErG,MAAM,EAAE,CAAC,oMAAoM;IAAE,CAAC;EACrS,CAAC,CAAC,EAAkB,YAAY;IAAE,OAAO,CAAC;MAAElrB,IAAI,EAAEzQ,EAAE,CAACg6B;IAAW,CAAC,EAAE;MAAEvpB,IAAI,EAAEzQ,EAAE,CAACikC;IAAkB,CAAC,CAAC;EAAE,CAAC,EAAkB;IAAEj9B,IAAI,EAAE,CAAC;MACxHyJ,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEsW,OAAO,EAAE,CAAC;MACVlG,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEmX,MAAM,EAAE,CAAC;MACT/G,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEoX,YAAY,EAAE,CAAC;MACfhH,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEqX,MAAM,EAAE,CAAC;MACTjH,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEi/C,SAAS,EAAE,CAAC;MACZ7uC,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEmV,SAAS,EAAE,CAAC;MACZ/E,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE6K,MAAM,EAAE,CAAC;MACTuF,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEwB,MAAM,EAAE,CAAC;MACT4O,IAAI,EAAE7P;IACV,CAAC,CAAC;IAAEq9C,cAAc,EAAE,CAAC;MACjBxtC,IAAI,EAAE7P;IACV,CAAC;EAAE,CAAC;AAAA;AAEhB,MAAM4+C,uBAAuB,CAAC;EAC1B/mB,WAAWA,CAAA,EAAG;IACV,IAAI,CAACryB,KAAK,GAAG,OAAO;IACpB,IAAI,CAACsN,UAAU,GAAG,IAAI;IACtB,IAAI,CAAC7R,MAAM,GAAG,IAAIlB,YAAY,CAAC,CAAC;IAChC,IAAI,CAACoF,QAAQ,GAAG,IAAIpF,YAAY,CAAC,CAAC;IAClC,IAAI,CAACsF,UAAU,GAAG,IAAItF,YAAY,CAAC,CAAC;IACpC,IAAI,CAAC8+C,WAAW,GAAG,EAAE;IACrB,IAAI,CAAC1uB,eAAe,GAAG3qB,KAAK,IAAIA,KAAK;IACrC,IAAI,CAACs5C,oBAAoB,GAAGvsC,UAAU,IAAIA,UAAU;IACpD,IAAI,CAACN,sBAAsB,GAAG/E,KAAK,IAAIA,KAAK,CAACuF,cAAc,CAAC,CAAC;EACjE;EACAwtB,WAAWA,CAACC,OAAO,EAAE;IACjB,IAAI,CAACyC,MAAM,CAAC,CAAC;EACjB;EACAoc,QAAQA,CAAA,EAAG;IACP,OAAO,IAAI,CAAC7vC,IAAI,CAAC8/B,GAAG,CAAC7L,CAAC,IAAIwS,MAAM,CAACxS,CAAC,CAACj2B,KAAK,CAAC,CAAC,CAAC+7B,MAAM,CAAC,CAAC+V,GAAG,EAAE7b,CAAC,KAAK6b,GAAG,GAAG7b,CAAC,EAAE,CAAC,CAAC;EAC7E;EACAR,MAAMA,CAAA,EAAG;IACL,IAAI,CAACjoB,KAAK,GAAG,IAAI,CAACqkC,QAAQ,CAAC,CAAC;IAC5B,IAAI,CAACjtC,YAAY,GAAG,IAAI,CAAC4I,KAAK;IAC9B,IAAI,CAACmkC,WAAW,GAAG,IAAI,CAACI,cAAc,CAAC,CAAC;EAC5C;EACAA,cAAcA,CAAA,EAAG;IACb,OAAO,IAAI,CAAC/vC,IAAI,CAAC8/B,GAAG,CAAC7L,CAAC,IAAI;MACtB,MAAM39B,KAAK,GAAG67B,WAAW,CAAC8B,CAAC,CAACh2B,IAAI,CAAC;MACjC,MAAMD,KAAK,GAAGi2B,CAAC,CAACj2B,KAAK;MACrB,MAAMxH,KAAK,GAAG,IAAI,CAACS,MAAM,CAACwiB,QAAQ,CAACnjB,KAAK,CAAC;MACzC,MAAM+M,UAAU,GAAG,IAAI,CAACmI,KAAK,GAAG,CAAC,GAAIxN,KAAK,GAAG,IAAI,CAACwN,KAAK,GAAI,GAAG,GAAG,CAAC;MAClE,MAAMjV,cAAc,GAAG,OAAO,IAAI,CAAC0qB,eAAe,KAAK,UAAU,GAAG,IAAI,CAACA,eAAe,CAAC3qB,KAAK,CAAC,GAAGA,KAAK;MACvG,OAAO;QACH4M,MAAM,EAAElF,KAAK;QACbgC,IAAI,EAAEi0B,CAAC;QACPj2B,KAAK;QACLxH,KAAK;QACLF,KAAK,EAAEC,cAAc;QACrBsN,YAAY,EAAEm1B,SAAS,CAACziC,cAAc,EAAE,EAAE,CAAC;QAC3Cy5C,YAAY,EAAE/b,CAAC,CAACh2B,IAAI;QACpBoF,UAAU,EAAE,IAAI,CAACusC,oBAAoB,GAAG,IAAI,CAACA,oBAAoB,CAACvsC,UAAU,CAAC,GAAGA,UAAU,CAACE,cAAc,CAAC;MAC9G,CAAC;IACL,CAAC,CAAC;EACN;EACAuE,OAAOA,CAACzP,KAAK,EAAE07B,IAAI,EAAE;IACjB,OAAOA,IAAI,CAACz9B,KAAK;EACrB;AACJ;AACAo5C,uBAAuB,CAAC5lB,IAAI,YAAAmmB,gCAAAjmB,CAAA;EAAA,YAAAA,CAAA,IAAwF0lB,uBAAuB;AAAA,CAAmD;AAC9LA,uBAAuB,CAACtlB,IAAI,kBAxwH8El6B,EAAE,CAAAm6B,iBAAA;EAAA1pB,IAAA,EAwwHJ+uC,uBAAuB;EAAAplB,SAAA;EAAAc,MAAA;IAAA/vB,KAAA;IAAA2E,IAAA;IAAA/I,MAAA;IAAAX,KAAA;IAAAsN,UAAA;IAAAf,eAAA;IAAAoe,eAAA;IAAA2uB,oBAAA;EAAA;EAAA9hB,OAAA;IAAA/7B,MAAA;IAAAkE,QAAA;IAAAE,UAAA;EAAA;EAAA27B,QAAA,GAxwHrB5hC,EAAE,CAAA6hC,oBAAA;EAAA1G,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAA32B,QAAA,WAAAs7C,iCAAAh8C,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MAAFhE,EAAE,CAAAmE,cAAA,YAywH/C,CAAC;MAzwH4CnE,EAAE,CAAAoE,UAAA,IAAAqO,sCAAA,gBAgxHtG,CAAC,IAAAG,sCAAA,gBAC2C,CAAC;MAjxHuD5S,EAAE,CAAAmE,cAAA,YAoxH9E,CAAC;MApxH2EnE,EAAE,CAAAkF,MAAA,EAsxHvG,CAAC;MAtxHoGlF,EAAE,CAAAqE,YAAA,CAsxHjG,CAAC;MAtxH8FrE,EAAE,CAAAmE,cAAA,YAuxHnE,CAAC,YACT,CAAC;MAxxHwEnE,EAAE,CAAAoE,UAAA,IAAAkP,sCAAA,gBAgyHlG,CAAC;MAhyH+FtT,EAAE,CAAAqE,YAAA,CAszH/F,CAAC,CACH,CAAC,CACH,CAAC;IAAA;IAAA,IAAAL,EAAA;MAxzHgGhE,EAAE,CAAA2M,WAAA,UAAA1I,GAAA,CAAAkH,KAAA,MAywHhD,CAAC;MAzwH6CnL,EAAE,CAAAwE,SAAA,CA2wHpF,CAAC;MA3wHiFxE,EAAE,CAAAyE,UAAA,SAAAR,GAAA,CAAAyP,UA2wHpF,CAAC;MA3wHiF1T,EAAE,CAAAwE,SAAA,CAixH5D,CAAC;MAjxHyDxE,EAAE,CAAAyE,UAAA,UAAAR,GAAA,CAAAyP,UAixH5D,CAAC;MAjxHyD1T,EAAE,CAAAwE,SAAA,EAsxHvG,CAAC;MAtxHoGxE,EAAE,CAAAqI,kBAAA,MAAApE,GAAA,CAAAmC,KAAA,KAsxHvG,CAAC;MAtxHoGpG,EAAE,CAAAwE,SAAA,EA0xH1D,CAAC;MA1xHuDxE,EAAE,CAAAyE,UAAA,YAAAR,GAAA,CAAAw7C,WA0xH1D,CAAC,iBAAAx7C,GAAA,CAAA2T,OAAe,CAAC;IAAA;EAAA;EAAA4jB,YAAA,GA+BssC2e,gBAAgB,EAA2Nn5C,EAAE,CAACy6B,IAAI,EAA0Ez6B,EAAE,CAACmjC,OAAO;EAAAxI,MAAA;EAAAC,aAAA;EAAAmG,eAAA;AAAA,EAAwL;AACvwD;EAAA,QAAAjG,SAAA,oBAAAA,SAAA,KA1zH0G97B,EAAE,CAAA+7B,iBAAA,CA0zHjByjB,uBAAuB,EAAc,CAAC;IACrH/uC,IAAI,EAAEvQ,SAAS;IACfg1B,IAAI,EAAE,CAAC;MAAE8G,QAAQ,EAAE,4BAA4B;MAAEt3B,QAAQ,EAAG;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;MAAEk3B,aAAa,EAAEz7B,iBAAiB,CAAC87B,IAAI;MAAE8F,eAAe,EAAErhC,uBAAuB,CAACshC,MAAM;MAAErG,MAAM,EAAE,CAAC,mtCAAmtC;IAAE,CAAC;EACpzC,CAAC,CAAC,QAAkB;IAAExwB,KAAK,EAAE,CAAC;MACtBsF,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEyP,IAAI,EAAE,CAAC;MACPW,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE0G,MAAM,EAAE,CAAC;MACT0J,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE+F,KAAK,EAAE,CAAC;MACRqK,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEqT,UAAU,EAAE,CAAC;MACbjD,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEwB,MAAM,EAAE,CAAC;MACT4O,IAAI,EAAE7P;IACV,CAAC,CAAC;IAAEmF,QAAQ,EAAE,CAAC;MACX0K,IAAI,EAAE7P;IACV,CAAC,CAAC;IAAEqF,UAAU,EAAE,CAAC;MACbwK,IAAI,EAAE7P;IACV,CAAC,CAAC;IAAE+R,eAAe,EAAE,CAAC;MAClBlC,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE0wB,eAAe,EAAE,CAAC;MAClBtgB,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEq/C,oBAAoB,EAAE,CAAC;MACvBjvC,IAAI,EAAEpQ;IACV,CAAC;EAAE,CAAC;AAAA;AAEhB,MAAM4/C,UAAU,GAAG,CACf/H,aAAa,EACbzR,kBAAkB,EAClB0T,gBAAgB,EAChBuB,WAAW,EACXtX,cAAc,EACdlB,eAAe,EACfZ,oBAAoB,EACpB3B,oBAAoB,EACpByU,eAAe,EACfW,qBAAqB,EACrBe,kBAAkB,EAClBI,wBAAwB,EACxBlC,0BAA0B,EAC1B4C,0BAA0B,EAC1BoG,QAAQ,EACRwB,uBAAuB,CAC1B;AACD,MAAMU,iBAAiB,CAAC;AAExBA,iBAAiB,CAACtmB,IAAI,YAAAumB,0BAAArmB,CAAA;EAAA,YAAAA,CAAA,IAAwFomB,iBAAiB;AAAA,CAAkD;AACjLA,iBAAiB,CAACrP,IAAI,kBA35HoF7wC,EAAE,CAAA8wC,gBAAA;EAAArgC,IAAA,EA25HGyvC;AAAiB,EA8BzE;AACvDA,iBAAiB,CAACnP,IAAI,kBA17HoF/wC,EAAE,CAAAgxC,gBAAA;EAAAC,OAAA,GA07HgC,CAAC9vC,YAAY,EAAEwvC,UAAU,EAAE8D,aAAa,CAAC,EAAEtzC,YAAY,EAAEwvC,UAAU,EAAE8D,aAAa;AAAA,EAAI;AAClO;EAAA,QAAA3Y,SAAA,oBAAAA,SAAA,KA37H0G97B,EAAE,CAAA+7B,iBAAA,CA27HjBmkB,iBAAiB,EAAc,CAAC;IAC/GzvC,IAAI,EAAE3P,QAAQ;IACdo0B,IAAI,EAAE,CAAC;MACC+b,OAAO,EAAE,CAAC9vC,YAAY,EAAEwvC,UAAU,EAAE8D,aAAa,CAAC;MAClDvD,YAAY,EAAE,CAAC,GAAG+O,UAAU,EAAE3a,kBAAkB,CAAC;MACjD6L,OAAO,EAAE,CAAChwC,YAAY,EAAEwvC,UAAU,EAAE8D,aAAa,EAAE,GAAGwL,UAAU,EAAE3a,kBAAkB;IACxF,CAAC;EACT,CAAC,CAAC;AAAA;AAEV,SAAS8a,uBAAuBA,CAAC;EAAEj1C,KAAK;EAAED,MAAM;EAAEm1C,OAAO;EAAEC,SAAS,GAAG,KAAK;EAAEC,SAAS,GAAG,KAAK;EAAEC,WAAW,GAAG,CAAC;EAAEC,UAAU,GAAG,CAAC;EAAEC,UAAU,GAAG,KAAK;EAAEC,UAAU,GAAG,KAAK;EAAEtc,UAAU,GAAG,KAAK;EAAEE,UAAU,GAAG7D,SAAS,CAACkG,OAAO;EAAEga,cAAc,GAAGh6C,cAAc,CAAC8G,KAAK;EAAEmzC,OAAO,GAAG;AAAG,CAAC,EAAE;EACjR,IAAIC,OAAO,GAAGT,OAAO,CAAC,CAAC,CAAC;EACxB,IAAI1b,UAAU,GAAGx5B,KAAK;EACtB,IAAI41C,WAAW,GAAG71C,MAAM,GAAGm1C,OAAO,CAAC,CAAC,CAAC,GAAGA,OAAO,CAAC,CAAC,CAAC;EAClD,IAAIhc,UAAU,IAAIuc,cAAc,KAAKh6C,cAAc,CAAC8G,KAAK,EAAE;IACvD,IAAI62B,UAAU,KAAK7D,SAAS,CAACkG,OAAO,EAAE;MAClCia,OAAO,IAAI,CAAC;IAChB,CAAC,MACI;MACDA,OAAO,IAAI,CAAC;IAChB;EACJ;EACAlc,UAAU,GAAIA,UAAU,GAAGkc,OAAO,GAAI,EAAE;EACxClc,UAAU,GAAGA,UAAU,GAAG0b,OAAO,CAAC,CAAC,CAAC,GAAGA,OAAO,CAAC,CAAC,CAAC;EACjD,IAAIC,SAAS,EAAE;IACXS,WAAW,IAAI,CAAC;IAChBA,WAAW,IAAIP,WAAW;IAC1B,IAAIE,UAAU,EAAE;MACZ;MACA,MAAM1xC,MAAM,GAAG,EAAE,GAAG,CAAC;MACrB+xC,WAAW,IAAI/xC,MAAM;IACzB;EACJ;EACA,IAAIuxC,SAAS,EAAE;IACX5b,UAAU,IAAI,CAAC;IACfA,UAAU,IAAI8b,UAAU;IACxBK,OAAO,IAAIL,UAAU;IACrBK,OAAO,IAAI,EAAE;IACb,IAAIH,UAAU,EAAE;MACZ;MACA,MAAM3xC,MAAM,GAAG,EAAE,GAAG,CAAC;MACrB21B,UAAU,IAAI31B,MAAM;MACpB8xC,OAAO,IAAI9xC,MAAM;IACrB;EACJ;EACA21B,UAAU,GAAGpD,IAAI,CAACz+B,GAAG,CAAC,CAAC,EAAE6hC,UAAU,CAAC;EACpCoc,WAAW,GAAGxf,IAAI,CAACz+B,GAAG,CAAC,CAAC,EAAEi+C,WAAW,CAAC;EACtC,OAAO;IACH51C,KAAK,EAAEo2B,IAAI,CAACqD,KAAK,CAACD,UAAU,CAAC;IAC7Bz5B,MAAM,EAAEq2B,IAAI,CAACqD,KAAK,CAACmc,WAAW,CAAC;IAC/BD,OAAO,EAAEvf,IAAI,CAACqD,KAAK,CAACkc,OAAO;EAC/B,CAAC;AACL;AAEA,MAAME,SAAS,GAAG,CACd;EACIjzC,IAAI,EAAE,OAAO;EACbkzC,UAAU,EAAE,IAAI;EAChB/E,KAAK,EAAExb,SAAS,CAACkG,OAAO;EACxB9/B,MAAM,EAAE,CACJ,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS;AAEjB,CAAC,EACD;EACIiH,IAAI,EAAE,SAAS;EACfkzC,UAAU,EAAE,IAAI;EAChB/E,KAAK,EAAExb,SAAS,CAACkG,OAAO;EACxB9/B,MAAM,EAAE,CACJ,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS;AAEjB,CAAC,EACD;EACIiH,IAAI,EAAE,MAAM;EACZkzC,UAAU,EAAE,IAAI;EAChB/E,KAAK,EAAExb,SAAS,CAACkG,OAAO;EACxB9/B,MAAM,EAAE,CACJ,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS;AAEjB,CAAC,EACD;EACIiH,IAAI,EAAE,MAAM;EACZkzC,UAAU,EAAE,IAAI;EAChB/E,KAAK,EAAExb,SAAS,CAACkG,OAAO;EACxB9/B,MAAM,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS;AACnG,CAAC,EACD;EACIiH,IAAI,EAAE,OAAO;EACbkzC,UAAU,EAAE,IAAI;EAChB/E,KAAK,EAAExb,SAAS,CAACmE,MAAM;EACvB/9B,MAAM,EAAE,CACJ,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS;AAEjB,CAAC,EACD;EACIiH,IAAI,EAAE,KAAK;EACXkzC,UAAU,EAAE,IAAI;EAChB/E,KAAK,EAAExb,SAAS,CAACmE,MAAM;EACvB/9B,MAAM,EAAE,CACJ,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS;AAEjB,CAAC,EACD;EACIiH,IAAI,EAAE,MAAM;EACZkzC,UAAU,EAAE,IAAI;EAChB/E,KAAK,EAAExb,SAAS,CAACmE,MAAM;EACvB/9B,MAAM,EAAE,CACJ,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS;AAEjB,CAAC,EACD;EACIiH,IAAI,EAAE,OAAO;EACbkzC,UAAU,EAAE,KAAK;EACjB/E,KAAK,EAAExb,SAAS,CAACkG,OAAO;EACxB9/B,MAAM,EAAE,CACJ,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS;AAEjB,CAAC,EACD;EACIiH,IAAI,EAAE,OAAO;EACbkzC,UAAU,EAAE,KAAK;EACjB/E,KAAK,EAAExb,SAAS,CAACkG,OAAO;EACxB9/B,MAAM,EAAE,CACJ,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS;AAEjB,CAAC,EACD;EACIiH,IAAI,EAAE,QAAQ;EACdkzC,UAAU,EAAE,KAAK;EACjB/E,KAAK,EAAExb,SAAS,CAACkG,OAAO;EACxB9/B,MAAM,EAAE,CACJ,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS;AAEjB,CAAC,EACD;EACIiH,IAAI,EAAE,SAAS;EACfkzC,UAAU,EAAE,KAAK;EACjB/E,KAAK,EAAExb,SAAS,CAACkG,OAAO;EACxB9/B,MAAM,EAAE,CACJ,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS;AAEjB,CAAC,EACD;EACIiH,IAAI,EAAE,OAAO;EACbkzC,UAAU,EAAE,KAAK;EACjB/E,KAAK,EAAExb,SAAS,CAACkG,OAAO;EACxB9/B,MAAM,EAAE,CACJ,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS;AAEjB,CAAC,EACD;EACIiH,IAAI,EAAE,QAAQ;EACdkzC,UAAU,EAAE,KAAK;EACjB/E,KAAK,EAAExb,SAAS,CAACkG,OAAO;EACxB9/B,MAAM,EAAE,CACJ,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS;AAEjB,CAAC,EACD;EACIiH,IAAI,EAAE,OAAO;EACbkzC,UAAU,EAAE,KAAK;EACjB/E,KAAK,EAAExb,SAAS,CAACkG,OAAO;EACxB9/B,MAAM,EAAE,CACJ,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS;AAEjB,CAAC,EACD;EACIiH,IAAI,EAAE,aAAa;EACnBkzC,UAAU,EAAE,KAAK;EACjB/E,KAAK,EAAExb,SAAS,CAACkG,OAAO;EACxB9/B,MAAM,EAAE,CACJ,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS;AAEjB,CAAC,CACJ;AAED,MAAMo6C,WAAW,CAAC;EACdzoB,WAAWA,CAACjhB,MAAM,EAAE/G,IAAI,EAAE3J,MAAM,EAAE2Q,YAAY,EAAE;IAC5C,IAAI,OAAOD,MAAM,KAAK,QAAQ,EAAE;MAC5BA,MAAM,GAAGwpC,SAAS,CAACld,IAAI,CAACqd,EAAE,IAAI;QAC1B,OAAOA,EAAE,CAACpzC,IAAI,KAAKyJ,MAAM;MAC7B,CAAC,CAAC;IACN;IACA,IAAI,CAAC4pC,WAAW,GAAG5pC,MAAM,CAAC1Q,MAAM;IAChC,IAAI,CAAC0O,SAAS,GAAG/E,IAAI;IACrB,IAAI,CAAC3J,MAAM,GAAGA,MAAM;IACpB,IAAI,CAAC2Q,YAAY,GAAGA,YAAY;IAChC,IAAI,CAACuzB,KAAK,GAAG,IAAI,CAACqW,mBAAmB,CAAC7pC,MAAM,EAAE/G,IAAI,EAAE,IAAI,CAAC3J,MAAM,CAAC;EACpE;EACAu6C,mBAAmBA,CAAC7pC,MAAM,EAAE/G,IAAI,EAAE3J,MAAM,EAAE;IACtC,IAAI,OAAO0Q,MAAM,KAAK,QAAQ,EAAE;MAC5BA,MAAM,GAAGwpC,SAAS,CAACld,IAAI,CAACqd,EAAE,IAAI;QAC1B,OAAOA,EAAE,CAACpzC,IAAI,KAAKyJ,MAAM;MAC7B,CAAC,CAAC;IACN;IACA,IAAI8pC,UAAU;IACd,QAAQ7wC,IAAI;MACR,KAAKiwB,SAAS,CAAC6gB,QAAQ;QACnBD,UAAU,GAAGn/C,aAAa,CAAC,CAAC,CACvBS,KAAK,CAAC4U,MAAM,CAAC1Q,MAAM,CAAC,CACpBA,MAAM,CAACA,MAAM,CAAC;QACnB;MACJ,KAAK45B,SAAS,CAACkG,OAAO;QAClB0a,UAAU,GAAGp/C,YAAY,CAAC,CAAC,CACtBU,KAAK,CAAC4U,MAAM,CAAC1Q,MAAM,CAAC,CACpBA,MAAM,CAACA,MAAM,CAAC;QACnB;MACJ,KAAK45B,SAAS,CAACmE,MAAM;QACjB;UACI,MAAMuc,WAAW,GAAG,CAAC,GAAG5pC,MAAM,CAAC1Q,MAAM,CAAC;UACtC,IAAIs6C,WAAW,CAACh1C,MAAM,KAAK,CAAC,EAAE;YAC1Bg1C,WAAW,CAACpjB,IAAI,CAACojB,WAAW,CAAC,CAAC,CAAC,CAAC;YAChC,IAAI,CAACA,WAAW,GAAGA,WAAW;UAClC;UACA,MAAMI,MAAM,GAAG5+C,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,GAAGw+C,WAAW,CAACh1C,MAAM,CAAC;UACpDk1C,UAAU,GAAGt/C,WAAW,CAAC,CAAC,CACrBY,KAAK,CAACw+C,WAAW,CAAC,CAClBt6C,MAAM,CAAC06C,MAAM,CAAC;QACvB;QACA;MACJ;QACI;IACR;IACA,OAAOF,UAAU;EACrB;EACA/3B,QAAQA,CAACzb,KAAK,EAAE;IACZ,IAAIA,KAAK,KAAKqD,SAAS,IAAIrD,KAAK,KAAK,IAAI,EAAE;MACvC,MAAM,IAAI6wB,KAAK,CAAC,uBAAuB,CAAC;IAC5C;IACA,IAAI,IAAI,CAACnpB,SAAS,KAAKkrB,SAAS,CAACmE,MAAM,EAAE;MACrC,MAAM1oB,UAAU,GAAGna,WAAW,CAAC,CAAC,CAC3B8E,MAAM,CAAC,IAAI,CAACA,MAAM,CAAC,CACnBlE,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;MAClB,OAAO,IAAI,CAACooC,KAAK,CAAC7uB,UAAU,CAACrO,KAAK,CAAC,CAAC;IACxC,CAAC,MACI;MACD,IAAI,OAAO,IAAI,CAAC2J,YAAY,KAAK,UAAU,EAAE;QACzC,OAAO,IAAI,CAACA,YAAY,CAAC3J,KAAK,CAAC;MACnC;MACA,MAAMsjB,cAAc,GAAGtjB,KAAK,CAACw4B,QAAQ,CAAC,CAAC;MACvC,IAAImb,KAAK,CAAC,CAAC;MACX,IAAI,IAAI,CAAChqC,YAAY,IAAI,IAAI,CAACA,YAAY,CAACrL,MAAM,GAAG,CAAC,EAAE;QACnDq1C,KAAK,GAAG,IAAI,CAAChqC,YAAY,CAACqsB,IAAI,CAAC4d,OAAO,IAAI;UACtC,OAAOA,OAAO,CAAC3zC,IAAI,CAAC4zC,WAAW,CAAC,CAAC,KAAKvwB,cAAc,CAACuwB,WAAW,CAAC,CAAC;QACtE,CAAC,CAAC;MACN;MACA,IAAIF,KAAK,EAAE;QACP,OAAOA,KAAK,CAAC3zC,KAAK;MACtB,CAAC,MACI;QACD,OAAO,IAAI,CAACk9B,KAAK,CAACl9B,KAAK,CAAC;MAC5B;IACJ;EACJ;EACA8zC,sBAAsBA,CAAC9zC,KAAK,EAAE8sC,KAAK,EAAE;IACjC,IAAIA,KAAK,KAAKzpC,SAAS,EAAE;MACrBypC,KAAK,GAAG,IAAI,CAAC9zC,MAAM,CAAC,CAAC,CAAC;IAC1B;IACA,MAAMqV,UAAU,GAAGna,WAAW,CAAC,CAAC,CAC3B8E,MAAM,CAAC,IAAI,CAACA,MAAM,CAAC,CACnBlE,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAClB,MAAMi/C,eAAe,GAAGz/C,SAAS,CAAC,CAAC,CAAC0E,MAAM,CAAC,IAAI,CAACs6C,WAAW,CAAC,CAACx+C,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC1E,MAAMuxB,QAAQ,GAAG,IAAI,CAAC5K,QAAQ,CAACzb,KAAK,CAAC;IACrC;IACA,MAAMurC,QAAQ,GAAGl9B,UAAU,CAACy+B,KAAK,CAAC;IAClC,MAAM1mB,UAAU,GAAG,IAAI,CAAC3K,QAAQ,CAACqxB,KAAK,CAAC;IACvC,MAAMtB,MAAM,GAAGn9B,UAAU,CAACrO,KAAK,CAAC;IAChC,IAAI4vB,CAAC,GAAG,CAAC;IACT,IAAIokB,UAAU,GAAGzI,QAAQ;IACzB,MAAMnE,KAAK,GAAG,EAAE;IAChBA,KAAK,CAAClX,IAAI,CAAC;MACP13B,KAAK,EAAE4tB,UAAU;MACjBllB,MAAM,EAAEqqC,QAAQ;MAChB0I,cAAc,EAAE1I,QAAQ;MACxBtqC,OAAO,EAAE;IACb,CAAC,CAAC;IACF,OAAO+yC,UAAU,GAAGxI,MAAM,IAAI5b,CAAC,GAAG,IAAI,CAAC0jB,WAAW,CAACh1C,MAAM,EAAE;MACvD,MAAM9F,KAAK,GAAG,IAAI,CAAC86C,WAAW,CAAC1jB,CAAC,CAAC;MACjC,MAAM1uB,MAAM,GAAG6yC,eAAe,CAACv7C,KAAK,CAAC;MACrC,IAAI0I,MAAM,IAAIqqC,QAAQ,EAAE;QACpB3b,CAAC,EAAE;QACH;MACJ;MACA,IAAI1uB,MAAM,CAACqtC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC/C,MAAM,GAAGuI,eAAe,CAACpW,SAAS,CAAC,CAAC,EAAE4Q,OAAO,CAAC,CAAC,CAAC,EAAE;QACxE;MACJ;MACAnH,KAAK,CAAClX,IAAI,CAAC;QACP13B,KAAK;QACL0I,MAAM;QACND,OAAO,EAAE;MACb,CAAC,CAAC;MACF+yC,UAAU,GAAG9yC,MAAM;MACnB0uB,CAAC,EAAE;IACP;IACA,IAAIwX,KAAK,CAACA,KAAK,CAAC9oC,MAAM,GAAG,CAAC,CAAC,CAAC4C,MAAM,GAAG,GAAG,EAAE;MACtCkmC,KAAK,CAAClX,IAAI,CAAC;QACP13B,KAAK,EAAE6tB,QAAQ;QACfnlB,MAAM,EAAEsqC,MAAM;QACdvqC,OAAO,EAAE;MACb,CAAC,CAAC;IACN;IACA,IAAIuqC,MAAM,KAAKD,QAAQ,EAAE;MACrBnE,KAAK,CAAC,CAAC,CAAC,CAAClmC,MAAM,GAAG,CAAC;MACnBkmC,KAAK,CAAC,CAAC,CAAC,CAAClmC,MAAM,GAAG,GAAG;IACzB,CAAC,MACI;MACD;MACA,IAAIkmC,KAAK,CAACA,KAAK,CAAC9oC,MAAM,GAAG,CAAC,CAAC,CAAC4C,MAAM,KAAK,GAAG,EAAE;QACxC,KAAK,MAAM+5B,CAAC,IAAImM,KAAK,EAAE;UACnBnM,CAAC,CAAC/5B,MAAM,GAAI,CAAC+5B,CAAC,CAAC/5B,MAAM,GAAGqqC,QAAQ,KAAKC,MAAM,GAAGD,QAAQ,CAAC,GAAI,GAAG;QAClE;MACJ;IACJ;IACA,OAAOnE,KAAK;EAChB;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS8M,sBAAsBA,CAACrrC,OAAO,EAAE;EACrC,MAAMsrC,QAAQ,GAAG,IAAIC,GAAG,CAAC,CAAC;EAC1B,KAAK,MAAM/sB,MAAM,IAAIxe,OAAO,EAAE;IAC1B,KAAK,MAAMotB,CAAC,IAAI5O,MAAM,CAAClY,MAAM,EAAE;MAC3BglC,QAAQ,CAACE,GAAG,CAACpe,CAAC,CAACh2B,IAAI,CAAC;IACxB;EACJ;EACA,OAAOsnC,KAAK,CAAC+M,IAAI,CAACH,QAAQ,CAAC;AAC/B;AACA;AACA;AACA;AACA;AACA,SAASI,YAAYA,CAACxD,MAAM,EAAEyD,aAAa,GAAG,IAAI,EAAE;EAChD,IAAIA,aAAa,EAAE;IACf,MAAMC,QAAQ,GAAG1D,MAAM,CAAC2D,KAAK,CAAC10C,KAAK,IAAIA,KAAK,YAAY0nB,IAAI,CAAC;IAC7D,IAAI+sB,QAAQ,EAAE;MACV,OAAO7hB,SAAS,CAAC4V,IAAI;IACzB;EACJ;EACA,MAAMmM,UAAU,GAAG5D,MAAM,CAAC2D,KAAK,CAAC10C,KAAK,IAAI,OAAOA,KAAK,KAAK,QAAQ,CAAC;EACnE,IAAI20C,UAAU,EAAE;IACZ,OAAO/hB,SAAS,CAACmE,MAAM;EAC3B;EACA,OAAOnE,SAAS,CAACkG,OAAO;AAC5B;AACA,SAAS8b,eAAeA,CAAC7D,MAAM,EAAE8D,SAAS,EAAEC,SAAS,EAAE;EACnD,MAAMptC,SAAS,GAAG6sC,YAAY,CAACxD,MAAM,CAAC;EACtC,IAAInoC,IAAI,GAAG,EAAE;EACb,IAAI5P,MAAM,GAAG,EAAE;EACf,IAAI0O,SAAS,KAAKkrB,SAAS,CAACmE,MAAM,EAAE;IAChCga,MAAM,GAAGA,MAAM,CAACjP,GAAG,CAAC0M,CAAC,IAAI/F,MAAM,CAAC+F,CAAC,CAAC,CAAC;EACvC;EACA,IAAIz5C,GAAG;EACP,IAAIC,GAAG;EACP,IAAI0S,SAAS,KAAKkrB,SAAS,CAAC4V,IAAI,IAAI9gC,SAAS,KAAKkrB,SAAS,CAACmE,MAAM,EAAE;IAChE,MAAMge,YAAY,GAAGhE,MAAM,CAACjP,GAAG,CAAC0M,CAAC,IAAI/F,MAAM,CAAC+F,CAAC,CAAC,CAAC;IAC/Cz5C,GAAG,GAAG8/C,SAAS,GAAGA,SAAS,GAAGphB,IAAI,CAAC1+B,GAAG,CAAC,GAAGggD,YAAY,CAAC;IACvD//C,GAAG,GAAG8/C,SAAS,GAAGA,SAAS,GAAGrhB,IAAI,CAACz+B,GAAG,CAAC,GAAG+/C,YAAY,CAAC;EAC3D;EACA,IAAIrtC,SAAS,KAAKkrB,SAAS,CAAC4V,IAAI,EAAE;IAC9BxvC,MAAM,GAAG,CAAC,IAAI0uB,IAAI,CAAC3yB,GAAG,CAAC,EAAE,IAAI2yB,IAAI,CAAC1yB,GAAG,CAAC,CAAC;IACvC4T,IAAI,GAAG,CAAC,GAAGmoC,MAAM,CAAC,CAACiE,IAAI,CAAC,CAACC,CAAC,EAAEjK,CAAC,KAAK;MAC9B,MAAMkK,KAAK,GAAGD,CAAC,CAACE,OAAO,CAAC,CAAC;MACzB,MAAMC,KAAK,GAAGpK,CAAC,CAACmK,OAAO,CAAC,CAAC;MACzB,IAAID,KAAK,GAAGE,KAAK,EACb,OAAO,CAAC;MACZ,IAAIA,KAAK,GAAGF,KAAK,EACb,OAAO,CAAC,CAAC;MACb,OAAO,CAAC;IACZ,CAAC,CAAC;EACN,CAAC,MACI,IAAIxtC,SAAS,KAAKkrB,SAAS,CAACmE,MAAM,EAAE;IACrC/9B,MAAM,GAAG,CAACjE,GAAG,EAAEC,GAAG,CAAC;IACnB;IACA4T,IAAI,GAAG,CAAC,GAAGmoC,MAAM,CAAC,CAACiE,IAAI,CAAC,CAACC,CAAC,EAAEjK,CAAC,KAAKiK,CAAC,GAAGjK,CAAC,CAAC;EAC5C,CAAC,MACI;IACDhyC,MAAM,GAAG+3C,MAAM;IACfnoC,IAAI,GAAGmoC,MAAM;EACjB;EACA,OAAO;IAAE/3C,MAAM;IAAE4P,IAAI;IAAElB;EAAU,CAAC;AACtC;AAEA,SAAS2tC,UAAUA,CAACrzC,IAAI,EAAEszC,QAAQ,EAAEniB,SAAS,GAAG,KAAK,EAAE;EACnD,OAAOnxB,IAAI,CAACgzC,IAAI,CAAC,CAACC,CAAC,EAAEjK,CAAC,KAAK;IACvB,IAAI7X,SAAS,KAAK,KAAK,EAAE;MACrB,OAAO8hB,CAAC,CAACK,QAAQ,CAAC,GAAGtK,CAAC,CAACsK,QAAQ,CAAC;IACpC,CAAC,MACI;MACD,OAAOtK,CAAC,CAACsK,QAAQ,CAAC,GAAGL,CAAC,CAACK,QAAQ,CAAC;IACpC;EACJ,CAAC,CAAC;AACN;AACA,SAASC,YAAYA,CAACvzC,IAAI,EAAEszC,QAAQ,EAAEniB,SAAS,GAAG,KAAK,EAAEn6B,MAAM,EAAE;EAC7D,OAAOgJ,IAAI,CAACgzC,IAAI,CAAC,CAACC,CAAC,EAAEjK,CAAC,KAAK;IACvB,MAAMwK,IAAI,GAAGP,CAAC,CAACK,QAAQ,CAAC;IACxB,MAAMG,IAAI,GAAGzK,CAAC,CAACsK,QAAQ,CAAC;IACxB,MAAMI,IAAI,GAAG18C,MAAM,CAACu2B,OAAO,CAACimB,IAAI,CAAC;IACjC,MAAMG,IAAI,GAAG38C,MAAM,CAACu2B,OAAO,CAACkmB,IAAI,CAAC;IACjC,IAAItiB,SAAS,KAAK,KAAK,EAAE;MACrB,OAAOuiB,IAAI,GAAGC,IAAI;IACtB,CAAC,MACI;MACD,OAAOA,IAAI,GAAGD,IAAI;IACtB;EACJ,CAAC,CAAC;AACN;AACA,SAASE,UAAUA,CAAC5zC,IAAI,EAAEszC,QAAQ,EAAEniB,SAAS,GAAG,KAAK,EAAE;EACnD,OAAOnxB,IAAI,CAACgzC,IAAI,CAAC,CAACC,CAAC,EAAEjK,CAAC,KAAK;IACvB,MAAMkK,KAAK,GAAGD,CAAC,CAACK,QAAQ,CAAC,CAACH,OAAO,CAAC,CAAC;IACnC,MAAMC,KAAK,GAAGpK,CAAC,CAACsK,QAAQ,CAAC,CAACH,OAAO,CAAC,CAAC;IACnC,IAAIhiB,SAAS,KAAK,KAAK,EAAE;MACrB,IAAI+hB,KAAK,GAAGE,KAAK,EACb,OAAO,CAAC;MACZ,IAAIA,KAAK,GAAGF,KAAK,EACb,OAAO,CAAC,CAAC;MACb,OAAO,CAAC;IACZ,CAAC,MACI;MACD,IAAIA,KAAK,GAAGE,KAAK,EACb,OAAO,CAAC,CAAC;MACb,IAAIA,KAAK,GAAGF,KAAK,EACb,OAAO,CAAC;MACZ,OAAO,CAAC;IACZ;EACJ,CAAC,CAAC;AACN;AAEA,MAAMW,mBAAmB,CAAC;EACtBlrB,WAAWA,CAAA,EAAG;IACV,IAAI,CAACljB,SAAS,GAAG,MAAM;IACvB,IAAI,CAACquC,OAAO,GAAG,KAAK;IACpB,IAAI,CAACC,UAAU,GAAG,KAAK;IACvB,IAAI,CAACnwC,UAAU,GAAG,IAAI;IACtB,IAAI,CAAC7R,MAAM,GAAG,IAAIlB,YAAY,CAAC,CAAC;EACpC;EACAkgC,WAAWA,CAACC,OAAO,EAAE;IACjB,IAAI,CAACyC,MAAM,CAAC,CAAC;EACjB;EACAA,MAAMA,CAAA,EAAG;IACL,IAAI,CAACugB,cAAc,CAAC,CAAC;IACrB,IAAIC,WAAW;IACf,IAAIC,YAAY;IAChB,MAAMC,SAAS,GAAGlgB,CAAC,IAAI;MACnB,MAAM39B,KAAK,GAAG29B,CAAC,CAACh2B,IAAI;MACpB,OAAO,IAAI,CAAChD,MAAM,CAAC3E,KAAK,CAAC;IAC7B,CAAC;IACD,IAAI,IAAI,CAACw9C,OAAO,IAAI,IAAI,CAACC,UAAU,EAAE;MACjCE,WAAW,GAAG1hD,IAAI,CAAC,CAAC,CACfqP,CAAC,CAACuyC,SAAS,CAAC,CACZC,EAAE,CAAC,CAACngB,CAAC,EAAErG,CAAC,KAAK,IAAI,CAAClvB,MAAM,CAACu1B,CAAC,CAACqY,EAAE,CAAC,CAAC,CAC/BtvC,EAAE,CAAC,CAACi3B,CAAC,EAAErG,CAAC,KAAK,IAAI,CAAClvB,MAAM,CAACu1B,CAAC,CAACyS,EAAE,CAAC,CAAC;MACpCwN,YAAY,GAAG3hD,IAAI,CAAC,CAAC,CAChBqP,CAAC,CAACuyC,SAAS,CAAC,CACZC,EAAE,CAACngB,CAAC,IAAI,IAAI,CAACv1B,MAAM,CAAC5L,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAC/BkK,EAAE,CAACi3B,CAAC,IAAI,IAAI,CAACv1B,MAAM,CAAC5L,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACxC,CAAC,MACI;MACDmhD,WAAW,GAAG1hD,IAAI,CAAC,CAAC,CACfqP,CAAC,CAACuyC,SAAS,CAAC,CACZC,EAAE,CAAC,MAAO,IAAI,CAAC3uC,SAAS,KAAK,MAAM,GAAG,IAAI,CAAC/G,MAAM,CAAC5L,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC4L,MAAM,CAAC,IAAI,CAAC+G,SAAS,CAAE,CAAC,CAC5FzI,EAAE,CAACi3B,CAAC,IAAI,IAAI,CAACv1B,MAAM,CAACu1B,CAAC,CAACj2B,KAAK,CAAC,CAAC;MAClCk2C,YAAY,GAAG3hD,IAAI,CAAC,CAAC,CAChBqP,CAAC,CAACuyC,SAAS,CAAC,CACZC,EAAE,CAACngB,CAAC,IAAK,IAAI,CAACxuB,SAAS,KAAK,MAAM,GAAG,IAAI,CAAC/G,MAAM,CAAC5L,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC4L,MAAM,CAAC,IAAI,CAAC+G,SAAS,CAAE,CAAC,CAC3FzI,EAAE,CAACi3B,CAAC,IAAK,IAAI,CAACxuB,SAAS,KAAK,MAAM,GAAG,IAAI,CAAC/G,MAAM,CAAC5L,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC4L,MAAM,CAAC,IAAI,CAAC+G,SAAS,CAAE,CAAC;IACpG;IACAwuC,WAAW,CAACruC,KAAK,CAAC,IAAI,CAACA,KAAK,CAAC;IAC7BsuC,YAAY,CAACtuC,KAAK,CAAC,IAAI,CAACA,KAAK,CAAC;IAC9B,IAAI,CAAC3G,OAAO,GAAG,GAAG;IAClB,IAAIe,IAAI,GAAG,IAAI,CAACA,IAAI,CAACmN,MAAM;IAC3B,IAAI,IAAI,CAACzH,SAAS,KAAKkrB,SAAS,CAACmE,MAAM,EAAE;MACrC/0B,IAAI,GAAGqzC,UAAU,CAACrzC,IAAI,EAAE,MAAM,CAAC;IACnC,CAAC,MACI,IAAI,IAAI,CAAC0F,SAAS,KAAKkrB,SAAS,CAAC4V,IAAI,EAAE;MACxCxmC,IAAI,GAAG4zC,UAAU,CAAC5zC,IAAI,EAAE,MAAM,CAAC;IACnC,CAAC,MACI;MACDA,IAAI,GAAGuzC,YAAY,CAACvzC,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,IAAI,CAAC/E,MAAM,CAACjE,MAAM,CAAC,CAAC,CAAC;IAClE;IACA,IAAI,CAACstB,IAAI,GAAG2vB,WAAW,CAACj0C,IAAI,CAAC;IAC7B,IAAI,CAAC0oC,YAAY,GAAGwL,YAAY,CAACl0C,IAAI,CAAC;EAC1C;EACAg0C,cAAcA,CAAA,EAAG;IACb,IAAI,IAAI,CAAC/8C,MAAM,CAACyO,SAAS,KAAKkrB,SAAS,CAACmE,MAAM,EAAE;MAC5C,IAAI,CAACxb,WAAW,GAAG,IAAI;MACvB,IAAI,IAAI,CAACu6B,OAAO,IAAI,IAAI,CAACC,UAAU,EAAE;QACjC,MAAMM,QAAQ,GAAG,IAAI,CAACr0C,IAAI,CAACmN,MAAM,CAAC2yB,GAAG,CAAC7L,CAAC,IAAIA,CAAC,CAACqY,EAAE,CAAC;QAChD,MAAMgI,QAAQ,GAAG,IAAI,CAACt0C,IAAI,CAACmN,MAAM,CAAC2yB,GAAG,CAAC7L,CAAC,IAAIA,CAAC,CAACyS,EAAE,CAAC;QAChD,MAAM1zC,GAAG,GAAGy+B,IAAI,CAACz+B,GAAG,CAAC,GAAGshD,QAAQ,CAAC;QACjC,MAAMvhD,GAAG,GAAG0+B,IAAI,CAAC1+B,GAAG,CAAC,GAAGshD,QAAQ,CAAC;QACjC,IAAI,CAAC7zC,aAAa,GAAG,IAAI,CAACvJ,MAAM,CAAC66C,sBAAsB,CAAC9+C,GAAG,EAAED,GAAG,CAAC;MACrE,CAAC,MACI;QACD,MAAMg8C,MAAM,GAAG,IAAI,CAAC/uC,IAAI,CAACmN,MAAM,CAAC2yB,GAAG,CAAC7L,CAAC,IAAIA,CAAC,CAACj2B,KAAK,CAAC;QACjD,MAAMhL,GAAG,GAAGy+B,IAAI,CAACz+B,GAAG,CAAC,GAAG+7C,MAAM,CAAC;QAC/B,IAAI,CAACvuC,aAAa,GAAG,IAAI,CAACvJ,MAAM,CAAC66C,sBAAsB,CAAC9+C,GAAG,CAAC;MAChE;IACJ,CAAC,MACI;MACD,IAAI,CAACumB,WAAW,GAAG,KAAK;MACxB,IAAI,CAAC/Y,aAAa,GAAGa,SAAS;IAClC;EACJ;EACA5K,QAAQA,CAACq9B,KAAK,EAAE;IACZ,IAAI,CAAC,IAAI,CAACn8B,aAAa,EACnB,OAAO,KAAK;IAChB,MAAMo8B,IAAI,GAAG,IAAI,CAACp8B,aAAa,CAACq8B,IAAI,CAACC,CAAC,IAAI;MACtC,OAAOH,KAAK,CAAC71B,IAAI,KAAKg2B,CAAC,CAACh2B,IAAI;IAChC,CAAC,CAAC;IACF,OAAO81B,IAAI,KAAK1yB,SAAS;EAC7B;EACAgY,UAAUA,CAACya,KAAK,EAAE;IACd,IAAI,CAAC,IAAI,CAACn8B,aAAa,IAAI,IAAI,CAACA,aAAa,CAAC2E,MAAM,KAAK,CAAC,EACtD,OAAO,KAAK;IAChB,MAAMy3B,IAAI,GAAG,IAAI,CAACp8B,aAAa,CAACq8B,IAAI,CAACC,CAAC,IAAI;MACtC,OAAOH,KAAK,CAAC71B,IAAI,KAAKg2B,CAAC,CAACh2B,IAAI;IAChC,CAAC,CAAC;IACF,OAAO81B,IAAI,KAAK1yB,SAAS;EAC7B;AACJ;AACAwyC,mBAAmB,CAAC/pB,IAAI,YAAAyqB,4BAAAvqB,CAAA;EAAA,YAAAA,CAAA,IAAwF6pB,mBAAmB;AAAA,CAAmD;AACtLA,mBAAmB,CAACzpB,IAAI,kBA/kJkFl6B,EAAE,CAAAm6B,iBAAA;EAAA1pB,IAAA,EA+kJRkzC,mBAAmB;EAAAvpB,SAAA;EAAAc,MAAA;IAAAprB,IAAA;IAAA/E,MAAA;IAAAyD,MAAA;IAAA+G,SAAA;IAAAxO,MAAA;IAAAyO,SAAA;IAAAouC,OAAA;IAAAC,UAAA;IAAApuC,QAAA;IAAAC,KAAA;IAAAjO,aAAA;IAAAiM,UAAA;EAAA;EAAAkqB,OAAA;IAAA/7B,MAAA;EAAA;EAAA+/B,QAAA,GA/kJb5hC,EAAE,CAAA6hC,oBAAA;EAAA+G,KAAA,EAAAh1B,IAAA;EAAAunB,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAA32B,QAAA,WAAA4/C,6BAAAtgD,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MAAFhE,EAAE,CAAA8H,cAAA;MAAF9H,EAAE,CAAA8E,SAAA,UA6lJvG,CAAC;IAAA;IAAA,IAAAd,EAAA;MA7lJoGhE,EAAE,CAAA0Q,WAAA,WAAAzM,GAAA,CAAAsC,QAAA,CAAAtC,GAAA,CAAA6L,IAAA,CA2lJxE,CAAC,aAAA7L,GAAA,CAAAklB,UAAA,CAAAllB,GAAA,CAAA6L,IAAA,CACG,CAAC;MA5lJiE9P,EAAE,CAAAyE,UAAA,SAAAR,GAAA,CAAA6L,IAmlJ1F,CAAC,SAAA7L,GAAA,CAAAmwB,IACD,CAAC,SAAAnwB,GAAA,CAAA8C,MAAA,CAAAwiB,QAAA,CAAAtlB,GAAA,CAAA6L,IAAA,CAAA/B,IAAA,CACqB,CAAC,UAAA9J,GAAA,CAAAqM,aACb,CAAC,iBAAArM,GAAA,CAAAu0C,YACK,CAAC,YAAAv0C,GAAA,CAAA8K,OACX,CAAC,aAAA9K,GAAA,CAAAwR,QAAA,IAAAxR,GAAA,CAAAolB,WACgB,CAAC,eAAAplB,GAAA,CAAAyP,UACZ,CAAC;IAAA;EAAA;EAAA8nB,YAAA,GAIW0c,aAAa;EAAAtc,aAAA;EAAAmG,eAAA;AAAA,EAA6O;AACpS;EAAA,QAAAjG,SAAA,oBAAAA,SAAA,KA/lJ0G97B,EAAE,CAAA+7B,iBAAA,CA+lJjB4nB,mBAAmB,EAAc,CAAC;IACjHlzC,IAAI,EAAEvQ,SAAS;IACfg1B,IAAI,EAAE,CAAC;MACC8G,QAAQ,EAAE,2BAA2B;MACrCt3B,QAAQ,EAAG;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;MACiBq9B,eAAe,EAAErhC,uBAAuB,CAACshC;IAC7C,CAAC;EACT,CAAC,CAAC,QAAkB;IAAElyB,IAAI,EAAE,CAAC;MACrBW,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE0K,MAAM,EAAE,CAAC;MACT0F,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEmO,MAAM,EAAE,CAAC;MACTiC,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEkV,SAAS,EAAE,CAAC;MACZ9E,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE0G,MAAM,EAAE,CAAC;MACT0J,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEmV,SAAS,EAAE,CAAC;MACZ/E,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEujD,OAAO,EAAE,CAAC;MACVnzC,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEwjD,UAAU,EAAE,CAAC;MACbpzC,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEoV,QAAQ,EAAE,CAAC;MACXhF,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEqV,KAAK,EAAE,CAAC;MACRjF,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEoH,aAAa,EAAE,CAAC;MAChBgJ,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEqT,UAAU,EAAE,CAAC;MACbjD,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEwB,MAAM,EAAE,CAAC;MACT4O,IAAI,EAAE7P;IACV,CAAC;EAAE,CAAC;AAAA;AAEhB,MAAM2jD,kBAAkB,SAAS9d,kBAAkB,CAAC;EAChDhO,WAAWA,CAAA,EAAG;IACV,KAAK,CAAC,GAAG7C,SAAS,CAAC;IACnB,IAAI,CAACle,MAAM,GAAG,KAAK;IACnB,IAAI,CAAC8sC,WAAW,GAAG,QAAQ;IAC3B,IAAI,CAAC5D,cAAc,GAAGh6C,cAAc,CAAC8G,KAAK;IAC1C,IAAI,CAAC+2C,KAAK,GAAG,KAAK;IAClB,IAAI,CAACC,KAAK,GAAG,KAAK;IAClB,IAAI,CAACnvC,SAAS,GAAG,MAAM;IACvB,IAAI,CAAC+pC,SAAS,GAAG,KAAK;IACtB,IAAI,CAACqF,QAAQ,GAAG,KAAK;IACrB,IAAI,CAACz6C,aAAa,GAAG,IAAI;IACzB,IAAI,CAACwL,KAAK,GAAGpT,WAAW;IACxB,IAAI,CAACmF,aAAa,GAAG,EAAE;IACvB,IAAI,CAAC6M,cAAc,GAAG,IAAI;IAC1B,IAAI,CAACW,cAAc,GAAG,IAAI;IAC1B,IAAI,CAACV,gBAAgB,GAAG,IAAI;IAC5B,IAAI,CAACC,kBAAkB,GAAG,EAAE;IAC5B,IAAI,CAACU,kBAAkB,GAAG,EAAE;IAC5B,IAAI,CAAC0vC,YAAY,GAAG,KAAK;IACzB,IAAI,CAAC/zC,eAAe,GAAG,KAAK;IAC5B,IAAI,CAACxF,SAAS,GAAG,KAAK;IACtB,IAAI,CAACtF,QAAQ,GAAG,IAAIpF,YAAY,CAAC,CAAC;IAClC,IAAI,CAACsF,UAAU,GAAG,IAAItF,YAAY,CAAC,CAAC;IACpC,IAAI,CAAC+nC,MAAM,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;IAC9B,IAAI,CAAC8X,WAAW,GAAG,CAAC;IACpB,IAAI,CAACC,UAAU,GAAG,CAAC;IACnB,IAAI,CAAClpC,cAAc,GAAG,EAAE;IACxB,IAAI,CAACstC,eAAe,GAAG,EAAE;IACzB,IAAI,CAACjtC,OAAO,GAAG,CAACzP,KAAK,EAAE07B,IAAI,KAAK;MAC5B,OAAOA,IAAI,CAAC91B,IAAI;IACpB,CAAC;EACL;EACAw1B,MAAMA,CAAA,EAAG;IACL,KAAK,CAACA,MAAM,CAAC,CAAC;IACd,IAAI,CAACt4B,IAAI,GAAGm1C,uBAAuB,CAAC;MAChCj1C,KAAK,EAAE,IAAI,CAACA,KAAK;MACjBD,MAAM,EAAE,IAAI,CAACA,MAAM;MACnBm1C,OAAO,EAAE,IAAI,CAAC3X,MAAM;MACpB4X,SAAS,EAAE,IAAI,CAACmE,KAAK;MACrBlE,SAAS,EAAE,IAAI,CAACmE,KAAK;MACrBlE,WAAW,EAAE,IAAI,CAACA,WAAW;MAC7BC,UAAU,EAAE,IAAI,CAACA,UAAU;MAC3BC,UAAU,EAAE,IAAI,CAACtsC,cAAc;MAC/BusC,UAAU,EAAE,IAAI,CAAC5rC,cAAc;MAC/BsvB,UAAU,EAAE,IAAI,CAAC3sB,MAAM;MACvB6sB,UAAU,EAAE,IAAI,CAACoC,UAAU;MAC3Bia,cAAc,EAAE,IAAI,CAACA;IACzB,CAAC,CAAC;IACF,IAAI,IAAI,CAAC+D,QAAQ,EAAE;MACf,IAAI,CAAC15C,IAAI,CAACC,MAAM,IAAI,IAAI,CAACqM,cAAc,GAAG,IAAI,CAACmxB,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAACmc,eAAe;IACnF;IACA,IAAI,CAACvG,OAAO,GAAG,IAAI,CAACC,UAAU,CAAC,CAAC;IAChC,IAAI,IAAI,CAACuG,cAAc,EAAE;MACrB,IAAI,CAACxG,OAAO,GAAG,IAAI,CAACwG,cAAc;IACtC;IACA,IAAI,CAACC,OAAO,GAAG,IAAI,CAACC,UAAU,CAAC,CAAC;IAChC,IAAI,CAACC,YAAY,GAAG,IAAI,CAACC,eAAe,CAAC,CAAC;IAC1C,IAAI,CAACn6C,MAAM,GAAG,IAAI,CAACyzC,SAAS,CAAC,IAAI,CAACF,OAAO,EAAE,IAAI,CAACrzC,IAAI,CAACE,KAAK,CAAC;IAC3D,IAAI,CAACqD,MAAM,GAAG,IAAI,CAAC22C,SAAS,CAAC,IAAI,CAACJ,OAAO,EAAE,IAAI,CAAC95C,IAAI,CAACC,MAAM,CAAC;IAC5D,IAAI,CAACk6C,cAAc,CAAC,CAAC;IACrB,IAAI,CAACC,SAAS,CAAC,CAAC;IAChB,IAAI,CAAC3+C,aAAa,GAAG,IAAI,CAAC4+C,gBAAgB,CAAC,CAAC;IAC5C,IAAI,CAACt4C,SAAS,GAAI,aAAY,IAAI,CAAC/B,IAAI,CAAC61C,OAAQ,KAAI,IAAI,CAACpY,MAAM,CAAC,CAAC,CAAE,GAAE;IACrE,IAAI,CAAC6c,UAAU,GAAG,MAAM,GAAGzxB,EAAE,CAAC,CAAC,CAACwS,QAAQ,CAAC,CAAC;IAC1C,IAAI,CAACrf,QAAQ,GAAI,QAAO,IAAI,CAACs+B,UAAW,GAAE;EAC9C;EACAH,cAAcA,CAAA,EAAG;IACb,IAAI,IAAI,CAACT,QAAQ,EAAE;MACf,IAAI,CAACrtC,aAAa,GAAG,IAAI,CAACrM,IAAI,CAACE,KAAK;MACpC,IAAI,CAACq6C,eAAe,GAAG,IAAI,CAACjH,UAAU,CAAC,CAAC;MACxC,IAAI,CAACxnC,cAAc,GAAG,IAAI,CAACynC,SAAS,CAAC,IAAI,CAACgH,eAAe,EAAE,IAAI,CAACluC,aAAa,CAAC;MAC9E,IAAI,CAACN,cAAc,GAAG,IAAI,CAACmuC,SAAS,CAAC,IAAI,CAACJ,OAAO,EAAE,IAAI,CAACxtC,cAAc,CAAC;MACvE,IAAI,CAACI,iBAAiB,GAAI,aAAY,IAAI,CAAC1M,IAAI,CAAC61C,OAAQ,KAAI,CAAC,IAAI,CAACpY,MAAM,CAAC,CAAC,CAAE,GAAE;IAClF;EACJ;EACA6V,UAAUA,CAAA,EAAG;IACT,IAAIM,MAAM,GAAGmD,sBAAsB,CAAC,IAAI,CAACrrC,OAAO,CAAC;IACjD,IAAI,CAACnB,SAAS,GAAG6sC,YAAY,CAACxD,MAAM,CAAC;IACrC,IAAI/3C,MAAM,GAAG,EAAE;IACf,IAAI,IAAI,CAAC0O,SAAS,KAAKkrB,SAAS,CAACmE,MAAM,EAAE;MACrCga,MAAM,GAAGA,MAAM,CAACjP,GAAG,CAAC0M,CAAC,IAAI/F,MAAM,CAAC+F,CAAC,CAAC,CAAC;IACvC;IACA,IAAIz5C,GAAG;IACP,IAAIC,GAAG;IACP,IAAI,IAAI,CAAC0S,SAAS,KAAKkrB,SAAS,CAAC4V,IAAI,IAAI,IAAI,CAAC9gC,SAAS,KAAKkrB,SAAS,CAACmE,MAAM,EAAE;MAC1EhiC,GAAG,GAAG,IAAI,CAAC8/C,SAAS,GAAG,IAAI,CAACA,SAAS,GAAGphB,IAAI,CAAC1+B,GAAG,CAAC,GAAGg8C,MAAM,CAAC;MAC3D/7C,GAAG,GAAG,IAAI,CAAC8/C,SAAS,GAAG,IAAI,CAACA,SAAS,GAAGrhB,IAAI,CAACz+B,GAAG,CAAC,GAAG+7C,MAAM,CAAC;IAC/D;IACA,IAAI,IAAI,CAACrpC,SAAS,KAAKkrB,SAAS,CAAC4V,IAAI,EAAE;MACnCxvC,MAAM,GAAG,CAAC,IAAI0uB,IAAI,CAAC3yB,GAAG,CAAC,EAAE,IAAI2yB,IAAI,CAAC1yB,GAAG,CAAC,CAAC;MACvC,IAAI,CAAC4T,IAAI,GAAG,CAAC,GAAGmoC,MAAM,CAAC,CAACiE,IAAI,CAAC,CAACC,CAAC,EAAEjK,CAAC,KAAK;QACnC,MAAMkK,KAAK,GAAGD,CAAC,CAACE,OAAO,CAAC,CAAC;QACzB,MAAMC,KAAK,GAAGpK,CAAC,CAACmK,OAAO,CAAC,CAAC;QACzB,IAAID,KAAK,GAAGE,KAAK,EACb,OAAO,CAAC;QACZ,IAAIA,KAAK,GAAGF,KAAK,EACb,OAAO,CAAC,CAAC;QACb,OAAO,CAAC;MACZ,CAAC,CAAC;IACN,CAAC,MACI,IAAI,IAAI,CAACxtC,SAAS,KAAKkrB,SAAS,CAACmE,MAAM,EAAE;MAC1C/9B,MAAM,GAAG,CAACjE,GAAG,EAAEC,GAAG,CAAC;MACnB;MACA,IAAI,CAAC4T,IAAI,GAAG,CAAC,GAAGmoC,MAAM,CAAC,CAACiE,IAAI,CAAC,CAACC,CAAC,EAAEjK,CAAC,KAAKiK,CAAC,GAAGjK,CAAC,CAAC;IACjD,CAAC,MACI;MACDhyC,MAAM,GAAG+3C,MAAM;MACf,IAAI,CAACnoC,IAAI,GAAGmoC,MAAM;IACtB;IACA,OAAO/3C,MAAM;EACjB;EACAk+C,UAAUA,CAAA,EAAG;IACT,MAAMl+C,MAAM,GAAG,EAAE;IACjB,KAAK,MAAM6P,OAAO,IAAI,IAAI,CAACA,OAAO,EAAE;MAChC,KAAK,MAAMotB,CAAC,IAAIptB,OAAO,CAACsG,MAAM,EAAE;QAC5B,IAAI,CAACnW,MAAM,CAACg4C,QAAQ,CAAC/a,CAAC,CAACj2B,KAAK,CAAC,EAAE;UAC3BhH,MAAM,CAACk3B,IAAI,CAAC+F,CAAC,CAACj2B,KAAK,CAAC;QACxB;MACJ;IACJ;IACA,MAAM+wC,MAAM,GAAG,CAAC,GAAG/3C,MAAM,CAAC;IAC1B,IAAI,CAAC,IAAI,CAACw4C,SAAS,EAAE;MACjBT,MAAM,CAAC7gB,IAAI,CAAC,CAAC,CAAC;IAClB;IACA,IAAI,IAAI,CAACzoB,SAAS,KAAK,MAAM,EAAE;MAC3BspC,MAAM,CAAC7gB,IAAI,CAAC,IAAI,CAACzoB,SAAS,CAAC;IAC/B;IACA,MAAM1S,GAAG,GAAG,IAAI,CAAC4iD,SAAS,GAAG,IAAI,CAACA,SAAS,GAAGlkB,IAAI,CAAC1+B,GAAG,CAAC,GAAGg8C,MAAM,CAAC;IACjE,MAAM/7C,GAAG,GAAG,IAAI,CAAC4iD,SAAS,GAAG,IAAI,CAACA,SAAS,GAAGnkB,IAAI,CAACz+B,GAAG,CAAC,GAAG+7C,MAAM,CAAC;IACjE,OAAO,CAACh8C,GAAG,EAAEC,GAAG,CAAC;EACrB;EACAoiD,eAAeA,CAAA,EAAG;IACd,OAAO,IAAI,CAACvuC,OAAO,CAACi5B,GAAG,CAAC7L,CAAC,IAAIA,CAAC,CAACh2B,IAAI,CAAC;EACxC;EACAywC,SAASA,CAAC13C,MAAM,EAAEqE,KAAK,EAAE;IACrB,IAAI6/B,KAAK;IACT,IAAI,IAAI,CAACx1B,SAAS,KAAKkrB,SAAS,CAAC4V,IAAI,EAAE;MACnCtL,KAAK,GAAGjpC,SAAS,CAAC,CAAC;IACvB,CAAC,MACI,IAAI,IAAI,CAACyT,SAAS,KAAKkrB,SAAS,CAACmE,MAAM,EAAE;MAC1CmG,KAAK,GAAGhpC,WAAW,CAAC,CAAC;IACzB,CAAC,MACI,IAAI,IAAI,CAACwT,SAAS,KAAKkrB,SAAS,CAACkG,OAAO,EAAE;MAC3CoE,KAAK,GAAG/oC,UAAU,CAAC,CAAC,CAAC4rC,OAAO,CAAC,GAAG,CAAC;IACrC;IACA7C,KAAK,CAACpoC,KAAK,CAAC,CAAC,CAAC,EAAEuI,KAAK,CAAC,CAAC,CAACrE,MAAM,CAACA,MAAM,CAAC;IACtC,OAAO,IAAI,CAAC89C,YAAY,GAAG5Z,KAAK,CAAC2a,IAAI,CAAC,CAAC,GAAG3a,KAAK;EACnD;EACAma,SAASA,CAACr+C,MAAM,EAAEoE,MAAM,EAAE;IACtB,MAAM8/B,KAAK,GAAGhpC,WAAW,CAAC,CAAC,CAACY,KAAK,CAAC,CAACsI,MAAM,EAAE,CAAC,CAAC,CAAC,CAACpE,MAAM,CAACA,MAAM,CAAC;IAC7D,OAAO,IAAI,CAAC89C,YAAY,GAAG5Z,KAAK,CAAC2a,IAAI,CAAC,CAAC,GAAG3a,KAAK;EACnD;EACAqX,YAAYA,CAACxD,MAAM,EAAE;IACjB,IAAI+G,IAAI,GAAG,IAAI;IACf,IAAIC,GAAG,GAAG,IAAI;IACd,KAAK,MAAM/3C,KAAK,IAAI+wC,MAAM,EAAE;MACxB,IAAIxY,MAAM,CAACv4B,KAAK,CAAC,EAAE;QACf83C,IAAI,GAAG,KAAK;MAChB;MACA,IAAIpf,QAAQ,CAAC14B,KAAK,CAAC,EAAE;QACjB+3C,GAAG,GAAG,KAAK;MACf;IACJ;IACA,IAAID,IAAI,EAAE;MACN,OAAOllB,SAAS,CAAC4V,IAAI;IACzB;IACA,IAAIuP,GAAG,EAAE;MACL,OAAOnlB,SAAS,CAACmE,MAAM;IAC3B;IACA,OAAOnE,SAAS,CAACkG,OAAO;EAC5B;EACAxvB,YAAYA,CAACtQ,MAAM,EAAE;IACjB,IAAI,CAACg+C,cAAc,GAAGh+C,MAAM;IAC5B,IAAI,CAACw3C,OAAO,GAAG,IAAI,CAACwG,cAAc;IAClC,IAAI,CAAC/5C,MAAM,GAAG,IAAI,CAACyzC,SAAS,CAAC,IAAI,CAACF,OAAO,EAAE,IAAI,CAACrzC,IAAI,CAACE,KAAK,CAAC;EAC/D;EACAsL,qBAAqBA,CAACotB,IAAI,EAAE;IACxB,IAAI,CAAC1tB,eAAe,GAAG0tB,IAAI,CAAC/1B,KAAK;IACjC,IAAI,CAACg4C,aAAa,CAAC,CAAC;EACxB;EACAvvC,WAAWA,CAAA,EAAG;IACV,IAAI,CAACJ,eAAe,GAAG,IAAI;IAC3B,IAAI,CAAC2vC,aAAa,CAAC,CAAC;EACxB;EACAj2C,OAAOA,CAACC,IAAI,EAAEmN,MAAM,EAAE;IAClB,IAAIA,MAAM,EAAE;MACRnN,IAAI,CAACmN,MAAM,GAAGA,MAAM,CAAClP,IAAI;IAC7B;IACA,IAAI,CAAClM,MAAM,CAACgE,IAAI,CAACiK,IAAI,CAAC;EAC1B;EACAu1C,SAASA,CAAA,EAAG;IACR,IAAIv+C,MAAM;IACV,IAAI,IAAI,CAAC6/B,UAAU,KAAKjG,SAAS,CAACkG,OAAO,EAAE;MACvC9/B,MAAM,GAAG,IAAI,CAACm+C,YAAY;IAC9B,CAAC,MACI;MACDn+C,MAAM,GAAG,IAAI,CAACi+C,OAAO;IACzB;IACA,IAAI,CAACh+C,MAAM,GAAG,IAAIm6C,WAAW,CAAC,IAAI,CAAC1pC,MAAM,EAAE,IAAI,CAACmvB,UAAU,EAAE7/B,MAAM,EAAE,IAAI,CAAC2Q,YAAY,CAAC;EAC1F;EACA6tC,gBAAgBA,CAAA,EAAG;IACf,MAAMS,IAAI,GAAG;MACTvwC,SAAS,EAAE,IAAI,CAACmxB,UAAU;MAC1B5/B,MAAM,EAAEoK,SAAS;MACjBrK,MAAM,EAAE,EAAE;MACV/B,KAAK,EAAEoM,SAAS;MAChBxK,QAAQ,EAAE,IAAI,CAACi6C;IACnB,CAAC;IACD,IAAImF,IAAI,CAACvwC,SAAS,KAAKkrB,SAAS,CAACkG,OAAO,EAAE;MACtCmf,IAAI,CAACj/C,MAAM,GAAG,IAAI,CAACm+C,YAAY;MAC/Bc,IAAI,CAACh/C,MAAM,GAAG,IAAI,CAACA,MAAM;MACzBg/C,IAAI,CAAChhD,KAAK,GAAG,IAAI,CAACy/C,WAAW;IACjC,CAAC,MACI;MACDuB,IAAI,CAACj/C,MAAM,GAAG,IAAI,CAACi+C,OAAO;MAC1BgB,IAAI,CAACh/C,MAAM,GAAG,IAAI,CAACA,MAAM,CAACikC,KAAK;IACnC;IACA,OAAO+a,IAAI;EACf;EACAjxC,gBAAgBA,CAAC;IAAE3J;EAAM,CAAC,EAAE;IACxB,IAAI,CAACs1C,UAAU,GAAGt1C,KAAK;IACvB,IAAI,CAACo4B,MAAM,CAAC,CAAC;EACjB;EACApvB,iBAAiBA,CAAC;IAAEjJ;EAAO,CAAC,EAAE;IAC1B,IAAI,CAACs1C,WAAW,GAAGt1C,MAAM;IACzB,IAAI,CAACq4B,MAAM,CAAC,CAAC;EACjB;EACAvtB,UAAUA,CAAC6tB,IAAI,EAAE;IACb,MAAMzG,GAAG,GAAG,IAAI,CAAC31B,aAAa,CAACk8B,SAAS,CAACI,CAAC,IAAI;MAC1C,OAAOA,CAAC,CAACh2B,IAAI,KAAK81B,IAAI,CAAC91B,IAAI,IAAIg2B,CAAC,CAACj2B,KAAK,KAAK+1B,IAAI,CAAC/1B,KAAK;IACzD,CAAC,CAAC;IACF,IAAIsvB,GAAG,GAAG,CAAC,CAAC,EAAE;MACV;IACJ;IACA,IAAI,CAAC31B,aAAa,GAAG,CAACo8B,IAAI,EAAE,GAAG,IAAI,CAACp8B,aAAa,CAAC;IAClD,IAAI,CAAC1B,QAAQ,CAACF,IAAI,CAAC;MAAEiI,KAAK,EAAE+1B,IAAI;MAAEmiB,OAAO,EAAE,IAAI,CAACv+C;IAAc,CAAC,CAAC;EACpE;EACAyO,YAAYA,CAAC2tB,IAAI,EAAE;IACf,MAAMzG,GAAG,GAAG,IAAI,CAAC31B,aAAa,CAACk8B,SAAS,CAACI,CAAC,IAAI;MAC1C,OAAOA,CAAC,CAACh2B,IAAI,KAAK81B,IAAI,CAAC91B,IAAI,IAAIg2B,CAAC,CAACj2B,KAAK,KAAK+1B,IAAI,CAAC/1B,KAAK;IACzD,CAAC,CAAC;IACF,IAAI,CAACrG,aAAa,CAAC61B,MAAM,CAACF,GAAG,EAAE,CAAC,CAAC;IACjC,IAAI,CAAC31B,aAAa,GAAG,CAAC,GAAG,IAAI,CAACA,aAAa,CAAC;IAC5C,IAAI,CAACxB,UAAU,CAACJ,IAAI,CAAC;MAAEiI,KAAK,EAAE+1B,IAAI;MAAEmiB,OAAO,EAAE,IAAI,CAACv+C;IAAc,CAAC,CAAC;EACtE;EACAq+C,aAAaA,CAAA,EAAG;IACZ,IAAI,CAACr+C,aAAa,GAAG,CAAC,GAAG,IAAI,CAACA,aAAa,CAAC;IAC5C,KAAK,MAAMm8B,KAAK,IAAI,IAAI,CAACn8B,aAAa,EAAE;MACpC,IAAI,CAACxB,UAAU,CAACJ,IAAI,CAAC;QAAEiI,KAAK,EAAE81B,KAAK;QAAEoiB,OAAO,EAAE;MAAG,CAAC,CAAC;IACvD;IACA,IAAI,CAACv+C,aAAa,GAAG,EAAE;EAC3B;AACJ;AACA88C,kBAAkB,CAAC3qB,IAAI;EAAA,IAAAqsB,+BAAA;EAAA,gBAAAC,2BAAApsB,CAAA;IAAA,QAAAmsB,+BAAA,KAAAA,+BAAA,GA/4JmFjmD,EAAE,CAAAmmD,qBAAA,CA+4JG5B,kBAAkB,IAAAzqB,CAAA,IAAlByqB,kBAAkB;EAAA;AAAA,IAAqD;AACtLA,kBAAkB,CAACrqB,IAAI,kBAh5JmFl6B,EAAE,CAAAm6B,iBAAA;EAAA1pB,IAAA,EAg5JT8zC,kBAAkB;EAAAnqB,SAAA;EAAAgsB,cAAA,WAAAC,kCAAAriD,EAAA,EAAAC,GAAA,EAAAqiD,QAAA;IAAA,IAAAtiD,EAAA;MAh5JXhE,EAAE,CAAAumD,cAAA,CAAAD,QAAA,EAAAzyC,IAAA;MAAF7T,EAAE,CAAAumD,cAAA,CAAAD,QAAA,EAAAxyC,IAAA;IAAA;IAAA,IAAA9P,EAAA;MAAA,IAAAw2B,EAAA;MAAFx6B,EAAE,CAAAy6B,cAAA,CAAAD,EAAA,GAAFx6B,EAAE,CAAA06B,WAAA,QAAAz2B,GAAA,CAAAiN,eAAA,GAAAspB,EAAA,CAAAG,KAAA;MAAF36B,EAAE,CAAAy6B,cAAA,CAAAD,EAAA,GAAFx6B,EAAE,CAAA06B,WAAA,QAAAz2B,GAAA,CAAA2S,qBAAA,GAAA4jB,EAAA,CAAAG,KAAA;IAAA;EAAA;EAAAE,YAAA,WAAA2rB,gCAAAxiD,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MAAFhE,EAAE,CAAAuF,UAAA,wBAAAkhD,iDAAA;QAAA,OAg5JTxiD,GAAA,CAAAsS,WAAA,CAAY,CAAC;MAAA,CAAI,CAAC;IAAA;EAAA;EAAA2kB,MAAA;IAAAxjB,MAAA;IAAA8sC,WAAA;IAAA5D,cAAA;IAAA6D,KAAA;IAAAC,KAAA;IAAAnvC,SAAA;IAAA+pC,SAAA;IAAAlrC,cAAA;IAAAW,cAAA;IAAAV,UAAA;IAAAW,UAAA;IAAA2vC,QAAA;IAAAlvC,QAAA;IAAAvL,aAAA;IAAAwL,KAAA;IAAAjO,aAAA;IAAAk/B,UAAA;IAAAryB,cAAA;IAAAW,cAAA;IAAAV,gBAAA;IAAAC,kBAAA;IAAAU,kBAAA;IAAAT,mBAAA;IAAAU,mBAAA;IAAAT,UAAA;IAAAU,UAAA;IAAAwvC,YAAA;IAAA/zC,eAAA;IAAA8xC,SAAA;IAAAC,SAAA;IAAA6C,SAAA;IAAAC,SAAA;IAAAr6C,SAAA;EAAA;EAAAuyB,OAAA;IAAA73B,QAAA;IAAAE,UAAA;EAAA;EAAA27B,QAAA,GAh5JX5hC,EAAE,CAAA0mD,0BAAA;EAAAvrB,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAA32B,QAAA,WAAAiiD,4BAAA3iD,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MAAFhE,EAAE,CAAAmE,cAAA,yBA05JxG,CAAC;MA15JqGnE,EAAE,CAAAuF,UAAA,8BAAAqhD,yEAAAnhD,MAAA;QAAA,OAu5JlFxB,GAAA,CAAA4L,OAAA,CAAApK,MAAc,CAAC;MAAA,EAAC,iCAAAohD,4EAAAphD,MAAA;QAAA,OACbxB,GAAA,CAAA+R,UAAA,CAAAvQ,MAAiB,CAAC;MAAA,EAAC,mCAAAqhD,8EAAArhD,MAAA;QAAA,OACjBxB,GAAA,CAAAiS,YAAA,CAAAzQ,MAAmB,CAAC;MAAA,EAAC;MAz5JsDzF,EAAE,CAAA8H,cAAA;MAAF9H,EAAE,CAAAmE,cAAA,UA25J7F,CAAC,cAC4B,CAAC;MA55J6DnE,EAAE,CAAA8E,SAAA,UAi6JjG,CAAC;MAj6J8F9E,EAAE,CAAAqE,YAAA,CAk6JtF,CAAC,CACP,CAAC;MAn6JyFrE,EAAE,CAAAmE,cAAA,UAo6J1C,CAAC;MAp6JuCnE,EAAE,CAAAoE,UAAA,IAAA6P,oCAAA,eAo7JpG,CAAC,IAAAU,oCAAA,eAeD,CAAC;MAn8JiG3U,EAAE,CAAAmE,cAAA,OAo8JlE,CAAC;MAp8J+DnE,EAAE,CAAAoE,UAAA,IAAAiR,oCAAA,eAq8J3C,CAAC,IAAAe,oCAAA,cAgBI,CAAC;MAr9JmCpW,EAAE,CAAAqE,YAAA,CAq/J7F,CAAC,CACH,CAAC;MAt/J4FrE,EAAE,CAAAoE,UAAA,KAAA6S,qCAAA,eAmgKtG,CAAC;MAngKmGjX,EAAE,CAAAqE,YAAA,CAmhKtF,CAAC;IAAA;IAAA,IAAAL,EAAA;MAnhKmFhE,EAAE,CAAAyE,UAAA,SAAFzE,EAAE,CAAAqX,eAAA,KAAAtD,IAAA,EAAA9P,GAAA,CAAAkH,KAAA,EAAAlH,GAAA,CAAAiH,MAAA,CAk5J/E,CAAC,eAAAjH,GAAA,CAAAyT,MACJ,CAAC,kBAAAzT,GAAA,CAAAyC,aACS,CAAC,kBAAAzC,GAAA,CAAAwD,aACD,CAAC,eAAAxD,GAAA,CAAAyP,UACP,CAAC;MAt5J2E1T,EAAE,CAAAwE,SAAA,EA45JjE,CAAC;MA55J8DxE,EAAE,CAAAoI,WAAA,OAAAnE,GAAA,CAAAshD,UAAA;MAAFvlD,EAAE,CAAAwE,SAAA,CA85JnE,CAAC;MA95JgExE,EAAE,CAAAoI,WAAA,UAAAnE,GAAA,CAAAgH,IAAA,CAAAE,KAAA,iBAAAlH,GAAA,CAAAgH,IAAA,CAAAC,MAAA;MAAFlL,EAAE,CAAAwE,SAAA,CAo6JpE,CAAC;MAp6JiExE,EAAE,CAAAoI,WAAA,cAAAnE,GAAA,CAAA+I,SAAA;MAAFhN,EAAE,CAAAwE,SAAA,CAu6JvF,CAAC;MAv6JoFxE,EAAE,CAAAyE,UAAA,SAAAR,GAAA,CAAAwgD,KAu6JvF,CAAC;MAv6JoFzkD,EAAE,CAAAwE,SAAA,CAu7JvF,CAAC;MAv7JoFxE,EAAE,CAAAyE,UAAA,SAAAR,GAAA,CAAAygD,KAu7JvF,CAAC;MAv7JoF1kD,EAAE,CAAAwE,SAAA,CAo8JnE,CAAC;MAp8JgExE,EAAE,CAAAoI,WAAA,cAAAnE,GAAA,CAAAgjB,QAAA;MAAFjnB,EAAE,CAAAwE,SAAA,CAq8J7D,CAAC;MAr8J0DxE,EAAE,CAAAyE,UAAA,YAAAR,GAAA,CAAA0S,OAq8J7D,CAAC,iBAAA1S,GAAA,CAAA2T,OAAe,CAAC;MAr8J0C5X,EAAE,CAAAwE,SAAA,CAq9JrE,CAAC;MAr9JkExE,EAAE,CAAAyE,UAAA,UAAAR,GAAA,CAAA4M,eAq9JrE,CAAC;MAr9JkE7Q,EAAE,CAAAwE,SAAA,CAy/J5D,CAAC;MAz/JyDxE,EAAE,CAAAyE,UAAA,SAAAR,GAAA,CAAA0gD,QAAA,IAAA1gD,GAAA,CAAAuR,SAAA,aAy/J5D,CAAC;IAAA;EAAA;EAAAgmB,YAAA,GA2Bq3D4I,cAAc,EAAuNsJ,cAAc,EAAsR0C,cAAc,EAA0TuT,mBAAmB,EAA+NjI,WAAW,EAAmM3F,qBAAqB,EAAgPiI,QAAQ,EAA0Mh9C,EAAE,CAACy6B,IAAI,EAA0Ez6B,EAAE,CAACmjC,OAAO;EAAAxI,MAAA;EAAAC,aAAA;EAAAmG,eAAA;AAAA,EAAwL;AACj6H;EAAA,QAAAjG,SAAA,oBAAAA,SAAA,KArhK0G97B,EAAE,CAAA+7B,iBAAA,CAqhKjBwoB,kBAAkB,EAAc,CAAC;IAChH9zC,IAAI,EAAEvQ,SAAS;IACfg1B,IAAI,EAAE,CAAC;MAAE8G,QAAQ,EAAE,uBAAuB;MAAEt3B,QAAQ,EAAG;AACnq9B,eAAe,EAAErhC,uBAAuB,CAACshC,MAAM;MAAEpG,aAAa,EAAEz7B,iBAAiB,CAAC87B,IAAI;MAAEN,MAAM,EAAE,CAAC,g3DAAg3D;IAAE,CAAC;EACj9D,CAAC,CAAC,QAAkB;IAAEjkB,MAAM,EAAE,CAAC;MACvBjH,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEmkD,WAAW,EAAE,CAAC;MACd/zC,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEugD,cAAc,EAAE,CAAC;MACjBnwC,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEokD,KAAK,EAAE,CAAC;MACRh0C,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEqkD,KAAK,EAAE,CAAC;MACRj0C,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEkV,SAAS,EAAE,CAAC;MACZ9E,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEi/C,SAAS,EAAE,CAAC;MACZ7uC,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE+T,cAAc,EAAE,CAAC;MACjB3D,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE0U,cAAc,EAAE,CAAC;MACjBtE,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEgU,UAAU,EAAE,CAAC;MACb5D,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE2U,UAAU,EAAE,CAAC;MACbvE,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEskD,QAAQ,EAAE,CAAC;MACXl0C,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEoV,QAAQ,EAAE,CAAC;MACXhF,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE6J,aAAa,EAAE,CAAC;MAChBuG,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEqV,KAAK,EAAE,CAAC;MACRjF,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEoH,aAAa,EAAE,CAAC;MAChBgJ,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEsmC,UAAU,EAAE,CAAC;MACbl2B,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEiU,cAAc,EAAE,CAAC;MACjB7D,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE4U,cAAc,EAAE,CAAC;MACjBxE,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEkU,gBAAgB,EAAE,CAAC;MACnB9D,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEmU,kBAAkB,EAAE,CAAC;MACrB/D,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE6U,kBAAkB,EAAE,CAAC;MACrBzE,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEoU,mBAAmB,EAAE,CAAC;MACtBhE,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE8U,mBAAmB,EAAE,CAAC;MACtB1E,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEqU,UAAU,EAAE,CAAC;MACbjE,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE+U,UAAU,EAAE,CAAC;MACb3E,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEukD,YAAY,EAAE,CAAC;MACfn0C,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEwQ,eAAe,EAAE,CAAC;MAClBJ,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEsiD,SAAS,EAAE,CAAC;MACZlyC,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEuiD,SAAS,EAAE,CAAC;MACZnyC,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEolD,SAAS,EAAE,CAAC;MACZh1C,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEqlD,SAAS,EAAE,CAAC;MACZj1C,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEgL,SAAS,EAAE,CAAC;MACZoF,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE0F,QAAQ,EAAE,CAAC;MACX0K,IAAI,EAAE7P;IACV,CAAC,CAAC;IAAEqF,UAAU,EAAE,CAAC;MACbwK,IAAI,EAAE7P;IACV,CAAC,CAAC;IAAEsQ,eAAe,EAAE,CAAC;MAClBT,IAAI,EAAE1P,YAAY;MAClBm0B,IAAI,EAAE,CAAC,iBAAiB;IAC5B,CAAC,CAAC;IAAEte,qBAAqB,EAAE,CAAC;MACxBnG,IAAI,EAAE1P,YAAY;MAClBm0B,IAAI,EAAE,CAAC,uBAAuB;IAClC,CAAC,CAAC;IAAE3e,WAAW,EAAE,CAAC;MACd9F,IAAI,EAAEjQ,YAAY;MAClB00B,IAAI,EAAE,CAAC,YAAY;IACvB,CAAC;EAAE,CAAC;AAAA;AAEhB,MAAM6xB,4BAA4B,SAAStgB,kBAAkB,CAAC;EAC1DhO,WAAWA,CAAA,EAAG;IACV,KAAK,CAAC,GAAG7C,SAAS,CAAC;IACnB,IAAI,CAACle,MAAM,GAAG,KAAK;IACnB,IAAI,CAAC8sC,WAAW,GAAG,QAAQ;IAC3B,IAAI,CAAC5D,cAAc,GAAGh6C,cAAc,CAAC8G,KAAK;IAC1C,IAAI,CAAC0G,cAAc,GAAG,KAAK;IAC3B,IAAI,CAACW,cAAc,GAAG,KAAK;IAC3B,IAAI,CAAC7K,aAAa,GAAG,IAAI;IACzB,IAAI,CAACwL,KAAK,GAAGpT,WAAW;IACxB,IAAI,CAACmF,aAAa,GAAG,EAAE;IACvB,IAAI,CAAC6M,cAAc,GAAG,IAAI;IAC1B,IAAI,CAACW,cAAc,GAAG,IAAI;IAC1B,IAAI,CAACV,gBAAgB,GAAG,IAAI;IAC5B,IAAI,CAACC,kBAAkB,GAAG,EAAE;IAC5B,IAAI,CAACU,kBAAkB,GAAG,EAAE;IAC5B,IAAI,CAAC0vC,YAAY,GAAG,KAAK;IACzB,IAAI,CAAC/zC,eAAe,GAAG,KAAK;IAC5B,IAAI,CAACxF,SAAS,GAAG,KAAK;IACtB,IAAI,CAACtF,QAAQ,GAAG,IAAIpF,YAAY,CAAC,CAAC;IAClC,IAAI,CAACsF,UAAU,GAAG,IAAItF,YAAY,CAAC,CAAC;IACpC,IAAI,CAACokD,OAAO,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC;IACvB,IAAI,CAACrc,MAAM,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;IAC9B,IAAI,CAAC8X,WAAW,GAAG,CAAC;IACpB,IAAI,CAACC,UAAU,GAAG,CAAC;IACnB,IAAI,CAACnoC,UAAU,GAAGw9B,UAAU;IAC5B,IAAI,CAACv+B,cAAc,GAAG,EAAE;IACxB,IAAI,CAACstC,eAAe,GAAG,EAAE;IACzB,IAAI,CAACjtC,OAAO,GAAG,CAACzP,KAAK,EAAE07B,IAAI,KAAK;MAC5B,OAAOA,IAAI,CAAC91B,IAAI;IACpB,CAAC;EACL;EACAw1B,MAAMA,CAAA,EAAG;IACL,KAAK,CAACA,MAAM,CAAC,CAAC;IACd,IAAI,CAACt4B,IAAI,GAAGm1C,uBAAuB,CAAC;MAChCj1C,KAAK,EAAE,IAAI,CAACA,KAAK;MACjBD,MAAM,EAAE,IAAI,CAACA,MAAM;MACnBm1C,OAAO,EAAE,IAAI,CAAC3X,MAAM;MACpB4X,SAAS,EAAE,IAAI,CAACmE,KAAK;MACrBlE,SAAS,EAAE,IAAI,CAACmE,KAAK;MACrBlE,WAAW,EAAE,IAAI,CAACA,WAAW;MAC7BC,UAAU,EAAE,IAAI,CAACA,UAAU;MAC3BC,UAAU,EAAE,IAAI,CAACtsC,cAAc;MAC/BusC,UAAU,EAAE,IAAI,CAAC5rC,cAAc;MAC/BsvB,UAAU,EAAE,IAAI,CAAC3sB,MAAM;MACvB6sB,UAAU,EAAE,IAAI,CAACoC,UAAU;MAC3Bia,cAAc,EAAE,IAAI,CAACA;IACzB,CAAC,CAAC;IACF,IAAI,IAAI,CAAC+D,QAAQ,EAAE;MACf,IAAI,CAAC15C,IAAI,CAACC,MAAM,IAAI,IAAI,CAACqM,cAAc,GAAG,IAAI,CAACmxB,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAACmc,eAAe;IACnF;IACA,IAAI,CAACvG,OAAO,GAAG,IAAI,CAACC,UAAU,CAAC,CAAC;IAChC,IAAI,IAAI,CAACuG,cAAc,EAAE;MACrB,IAAI,CAACxG,OAAO,GAAG,IAAI,CAACwG,cAAc;IACtC;IACA,IAAI,CAACG,YAAY,GAAG,IAAI,CAACC,eAAe,CAAC,CAAC;IAC1C,IAAI,CAACn6C,MAAM,GAAG,IAAI,CAACyzC,SAAS,CAAC,IAAI,CAACF,OAAO,EAAE,IAAI,CAACrzC,IAAI,CAACE,KAAK,CAAC;IAC3D,IAAI,CAACqD,MAAM,GAAG,IAAI,CAAC22C,SAAS,CAAC,IAAI,CAACJ,OAAO,EAAE,IAAI,CAAC95C,IAAI,CAACC,MAAM,CAAC;IAC5D,KAAK,IAAIwyB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAAChnB,IAAI,CAACtK,MAAM,EAAEsxB,CAAC,EAAE,EAAE;MACvC,MAAMuc,GAAG,GAAG,IAAI,CAACvjC,IAAI,CAACgnB,CAAC,CAAC;MACxB,IAAI0e,EAAE,GAAG,CAAC;MACV,IAAI9gC,KAAK,GAAG,CAAC;MACb,KAAK,MAAM4gC,KAAK,IAAI,IAAI,CAACvlC,OAAO,EAAE;QAC9B,MAAMotB,CAAC,GAAGmY,KAAK,CAACj/B,MAAM,CAAC6mB,IAAI,CAACD,IAAI,IAAI;UAChC,IAAIkf,CAAC,GAAGlf,IAAI,CAAC91B,IAAI;UACjB,IAAI+qC,CAAC,GAAGmB,GAAG;UACX,IAAI,IAAI,CAACzkC,SAAS,KAAKkrB,SAAS,CAAC4V,IAAI,EAAE;YACnCyM,CAAC,GAAGA,CAAC,CAACiE,OAAO,CAAC,CAAC;YACflO,CAAC,GAAGA,CAAC,CAACkO,OAAO,CAAC,CAAC;UACnB;UACA,OAAOjE,CAAC,KAAKjK,CAAC;QAClB,CAAC,CAAC;QACF,IAAI/U,CAAC,EAAE;UACHzoB,KAAK,IAAIyoB,CAAC,CAACj2B,KAAK;QACpB;MACJ;MACA,KAAK,MAAMouC,KAAK,IAAI,IAAI,CAACvlC,OAAO,EAAE;QAC9B,IAAIotB,CAAC,GAAGmY,KAAK,CAACj/B,MAAM,CAAC6mB,IAAI,CAACD,IAAI,IAAI;UAC9B,IAAIkf,CAAC,GAAGlf,IAAI,CAAC91B,IAAI;UACjB,IAAI+qC,CAAC,GAAGmB,GAAG;UACX,IAAI,IAAI,CAACzkC,SAAS,KAAKkrB,SAAS,CAAC4V,IAAI,EAAE;YACnCyM,CAAC,GAAGA,CAAC,CAACiE,OAAO,CAAC,CAAC;YACflO,CAAC,GAAGA,CAAC,CAACkO,OAAO,CAAC,CAAC;UACnB;UACA,OAAOjE,CAAC,KAAKjK,CAAC;QAClB,CAAC,CAAC;QACF,IAAI/U,CAAC,EAAE;UACHA,CAAC,CAACqY,EAAE,GAAGA,EAAE;UACTrY,CAAC,CAACyS,EAAE,GAAG4F,EAAE,GAAGrY,CAAC,CAACj2B,KAAK;UACnBsuC,EAAE,IAAIrY,CAAC,CAACj2B,KAAK;QACjB,CAAC,MACI;UACDi2B,CAAC,GAAG;YACAh2B,IAAI,EAAEksC,GAAG;YACTnsC,KAAK,EAAE,CAAC;YACRsuC,EAAE;YACF5F,EAAE,EAAE4F;UACR,CAAC;UACDF,KAAK,CAACj/B,MAAM,CAAC+gB,IAAI,CAAC+F,CAAC,CAAC;QACxB;QACA,IAAIzoB,KAAK,GAAG,CAAC,EAAE;UACXyoB,CAAC,CAACqY,EAAE,GAAIrY,CAAC,CAACqY,EAAE,GAAG,GAAG,GAAI9gC,KAAK;UAC3ByoB,CAAC,CAACyS,EAAE,GAAIzS,CAAC,CAACyS,EAAE,GAAG,GAAG,GAAIl7B,KAAK;QAC/B,CAAC,MACI;UACDyoB,CAAC,CAACqY,EAAE,GAAG,CAAC;UACRrY,CAAC,CAACyS,EAAE,GAAG,CAAC;QACZ;MACJ;IACJ;IACA,IAAI,CAAC4O,cAAc,CAAC,CAAC;IACrB,IAAI,CAACC,SAAS,CAAC,CAAC;IAChB,IAAI,CAAC3+C,aAAa,GAAG,IAAI,CAAC4+C,gBAAgB,CAAC,CAAC;IAC5C,IAAI,CAACt4C,SAAS,GAAI,aAAY,IAAI,CAAC/B,IAAI,CAAC61C,OAAQ,MAAK,IAAI,CAACpY,MAAM,CAAC,CAAC,CAAE,GAAE;IACtE,IAAI,CAAC6c,UAAU,GAAG,MAAM,GAAGzxB,EAAE,CAAC,CAAC,CAACwS,QAAQ,CAAC,CAAC;IAC1C,IAAI,CAACrf,QAAQ,GAAI,QAAO,IAAI,CAACs+B,UAAW,GAAE;EAC9C;EACAH,cAAcA,CAAA,EAAG;IACb,IAAI,IAAI,CAACT,QAAQ,EAAE;MACf,IAAI,CAACrtC,aAAa,GAAG,IAAI,CAACrM,IAAI,CAACE,KAAK;MACpC,IAAI,CAACq6C,eAAe,GAAG,IAAI,CAACjH,UAAU,CAAC,CAAC;MACxC,IAAI,CAACxnC,cAAc,GAAG,IAAI,CAACynC,SAAS,CAAC,IAAI,CAACgH,eAAe,EAAE,IAAI,CAACluC,aAAa,CAAC;MAC9E,IAAI,CAACN,cAAc,GAAG,IAAI,CAACmuC,SAAS,CAAC,IAAI,CAACJ,OAAO,EAAE,IAAI,CAACxtC,cAAc,CAAC;MACvE,IAAI,CAACI,iBAAiB,GAAI,aAAY,IAAI,CAAC1M,IAAI,CAAC61C,OAAQ,KAAI,CAAC,IAAI,CAACpY,MAAM,CAAC,CAAC,CAAE,GAAE;IAClF;EACJ;EACA6V,UAAUA,CAAA,EAAG;IACT,IAAIM,MAAM,GAAGmD,sBAAsB,CAAC,IAAI,CAACrrC,OAAO,CAAC;IACjD,IAAI,CAACnB,SAAS,GAAG6sC,YAAY,CAACxD,MAAM,CAAC;IACrC,IAAI/3C,MAAM,GAAG,EAAE;IACf,IAAI,IAAI,CAAC0O,SAAS,KAAKkrB,SAAS,CAAC4V,IAAI,EAAE;MACnC,MAAMzzC,GAAG,GAAG0+B,IAAI,CAAC1+B,GAAG,CAAC,GAAGg8C,MAAM,CAAC;MAC/B,MAAM/7C,GAAG,GAAGy+B,IAAI,CAACz+B,GAAG,CAAC,GAAG+7C,MAAM,CAAC;MAC/B/3C,MAAM,GAAG,CAAC,IAAI0uB,IAAI,CAAC3yB,GAAG,CAAC,EAAE,IAAI2yB,IAAI,CAAC1yB,GAAG,CAAC,CAAC;MACvC,IAAI,CAAC4T,IAAI,GAAG,CAAC,GAAGmoC,MAAM,CAAC,CAACiE,IAAI,CAAC,CAACC,CAAC,EAAEjK,CAAC,KAAK;QACnC,MAAMkK,KAAK,GAAGD,CAAC,CAACE,OAAO,CAAC,CAAC;QACzB,MAAMC,KAAK,GAAGpK,CAAC,CAACmK,OAAO,CAAC,CAAC;QACzB,IAAID,KAAK,GAAGE,KAAK,EACb,OAAO,CAAC;QACZ,IAAIA,KAAK,GAAGF,KAAK,EACb,OAAO,CAAC,CAAC;QACb,OAAO,CAAC;MACZ,CAAC,CAAC;IACN,CAAC,MACI,IAAI,IAAI,CAACxtC,SAAS,KAAKkrB,SAAS,CAACmE,MAAM,EAAE;MAC1Cga,MAAM,GAAGA,MAAM,CAACjP,GAAG,CAAC0M,CAAC,IAAI/F,MAAM,CAAC+F,CAAC,CAAC,CAAC;MACnC,MAAMz5C,GAAG,GAAG0+B,IAAI,CAAC1+B,GAAG,CAAC,GAAGg8C,MAAM,CAAC;MAC/B,MAAM/7C,GAAG,GAAGy+B,IAAI,CAACz+B,GAAG,CAAC,GAAG+7C,MAAM,CAAC;MAC/B/3C,MAAM,GAAG,CAACjE,GAAG,EAAEC,GAAG,CAAC;MACnB;MACA,IAAI,CAAC4T,IAAI,GAAG,CAAC,GAAGmoC,MAAM,CAAC,CAACiE,IAAI,CAAC,CAACC,CAAC,EAAEjK,CAAC,KAAKiK,CAAC,GAAGjK,CAAC,CAAC;IACjD,CAAC,MACI;MACDhyC,MAAM,GAAG+3C,MAAM;MACf,IAAI,CAACnoC,IAAI,GAAGmoC,MAAM;IACtB;IACA,OAAO/3C,MAAM;EACjB;EACAo+C,eAAeA,CAAA,EAAG;IACd,OAAO,IAAI,CAACvuC,OAAO,CAACi5B,GAAG,CAAC7L,CAAC,IAAIA,CAAC,CAACh2B,IAAI,CAAC;EACxC;EACAywC,SAASA,CAAC13C,MAAM,EAAEqE,KAAK,EAAE;IACrB,IAAI6/B,KAAK;IACT,IAAI,IAAI,CAACx1B,SAAS,KAAKkrB,SAAS,CAAC4V,IAAI,EAAE;MACnCtL,KAAK,GAAGjpC,SAAS,CAAC,CAAC;IACvB,CAAC,MACI,IAAI,IAAI,CAACyT,SAAS,KAAKkrB,SAAS,CAACmE,MAAM,EAAE;MAC1CmG,KAAK,GAAGhpC,WAAW,CAAC,CAAC;IACzB,CAAC,MACI,IAAI,IAAI,CAACwT,SAAS,KAAKkrB,SAAS,CAACkG,OAAO,EAAE;MAC3CoE,KAAK,GAAG/oC,UAAU,CAAC,CAAC,CAAC4rC,OAAO,CAAC,GAAG,CAAC;IACrC;IACA7C,KAAK,CAACpoC,KAAK,CAAC,CAAC,CAAC,EAAEuI,KAAK,CAAC,CAAC,CAACrE,MAAM,CAACA,MAAM,CAAC;IACtC,OAAO,IAAI,CAAC89C,YAAY,GAAG5Z,KAAK,CAAC2a,IAAI,CAAC,CAAC,GAAG3a,KAAK;EACnD;EACAma,SAASA,CAACr+C,MAAM,EAAEoE,MAAM,EAAE;IACtB,MAAM8/B,KAAK,GAAGhpC,WAAW,CAAC,CAAC,CAACY,KAAK,CAAC,CAACsI,MAAM,EAAE,CAAC,CAAC,CAAC,CAACpE,MAAM,CAACA,MAAM,CAAC;IAC7D,OAAO,IAAI,CAAC89C,YAAY,GAAG5Z,KAAK,CAAC2a,IAAI,CAAC,CAAC,GAAG3a,KAAK;EACnD;EACA5zB,YAAYA,CAACtQ,MAAM,EAAE;IACjB,IAAI,CAACg+C,cAAc,GAAGh+C,MAAM;IAC5B,IAAI,CAACw3C,OAAO,GAAG,IAAI,CAACwG,cAAc;IAClC,IAAI,CAAC/5C,MAAM,GAAG,IAAI,CAACyzC,SAAS,CAAC,IAAI,CAACF,OAAO,EAAE,IAAI,CAACrzC,IAAI,CAACE,KAAK,CAAC;EAC/D;EACAsL,qBAAqBA,CAACotB,IAAI,EAAE;IACxB,IAAI,CAAC1tB,eAAe,GAAG0tB,IAAI,CAAC/1B,KAAK;IACjC,IAAI,CAACg4C,aAAa,CAAC,CAAC;EACxB;EACAvvC,WAAWA,CAAA,EAAG;IACV,IAAI,CAACJ,eAAe,GAAG,IAAI;IAC3B,IAAI,CAAC2vC,aAAa,CAAC,CAAC;EACxB;EACAj2C,OAAOA,CAACC,IAAI,EAAEmN,MAAM,EAAE;IAClB,IAAIA,MAAM,EAAE;MACRnN,IAAI,CAACmN,MAAM,GAAGA,MAAM,CAAClP,IAAI;IAC7B;IACA,IAAI,CAAClM,MAAM,CAACgE,IAAI,CAACiK,IAAI,CAAC;EAC1B;EACAu1C,SAASA,CAAA,EAAG;IACR,IAAIv+C,MAAM;IACV,IAAI,IAAI,CAAC6/B,UAAU,KAAKjG,SAAS,CAACkG,OAAO,EAAE;MACvC9/B,MAAM,GAAG,IAAI,CAACm+C,YAAY;IAC9B,CAAC,MACI;MACDn+C,MAAM,GAAG,IAAI,CAACi+C,OAAO;IACzB;IACA,IAAI,CAACh+C,MAAM,GAAG,IAAIm6C,WAAW,CAAC,IAAI,CAAC1pC,MAAM,EAAE,IAAI,CAACmvB,UAAU,EAAE7/B,MAAM,EAAE,IAAI,CAAC2Q,YAAY,CAAC;EAC1F;EACA6tC,gBAAgBA,CAAA,EAAG;IACf,MAAMS,IAAI,GAAG;MACTvwC,SAAS,EAAE,IAAI,CAACmxB,UAAU;MAC1B5/B,MAAM,EAAEoK,SAAS;MACjBrK,MAAM,EAAE,EAAE;MACV/B,KAAK,EAAEoM,SAAS;MAChBxK,QAAQ,EAAE,IAAI,CAACi6C;IACnB,CAAC;IACD,IAAImF,IAAI,CAACvwC,SAAS,KAAKkrB,SAAS,CAACkG,OAAO,EAAE;MACtCmf,IAAI,CAACj/C,MAAM,GAAG,IAAI,CAACm+C,YAAY;MAC/Bc,IAAI,CAACh/C,MAAM,GAAG,IAAI,CAACA,MAAM;MACzBg/C,IAAI,CAAChhD,KAAK,GAAG,IAAI,CAACy/C,WAAW;IACjC,CAAC,MACI;MACDuB,IAAI,CAACj/C,MAAM,GAAG,IAAI,CAACi+C,OAAO;MAC1BgB,IAAI,CAACh/C,MAAM,GAAG,IAAI,CAACA,MAAM,CAACikC,KAAK;IACnC;IACA,OAAO+a,IAAI;EACf;EACAjxC,gBAAgBA,CAAC;IAAE3J;EAAM,CAAC,EAAE;IACxB,IAAI,CAACs1C,UAAU,GAAGt1C,KAAK;IACvB,IAAI,CAACo4B,MAAM,CAAC,CAAC;EACjB;EACApvB,iBAAiBA,CAAC;IAAEjJ;EAAO,CAAC,EAAE;IAC1B,IAAI,CAACs1C,WAAW,GAAGt1C,MAAM;IACzB,IAAI,CAACq4B,MAAM,CAAC,CAAC;EACjB;EACAvtB,UAAUA,CAAC6tB,IAAI,EAAE;IACb,MAAMzG,GAAG,GAAG,IAAI,CAAC31B,aAAa,CAACk8B,SAAS,CAACI,CAAC,IAAI;MAC1C,OAAOA,CAAC,CAACh2B,IAAI,KAAK81B,IAAI,CAAC91B,IAAI,IAAIg2B,CAAC,CAACj2B,KAAK,KAAK+1B,IAAI,CAAC/1B,KAAK;IACzD,CAAC,CAAC;IACF,IAAIsvB,GAAG,GAAG,CAAC,CAAC,EAAE;MACV;IACJ;IACA,IAAI,CAAC31B,aAAa,GAAG,CAACo8B,IAAI,EAAE,GAAG,IAAI,CAACp8B,aAAa,CAAC;IAClD,IAAI,CAAC1B,QAAQ,CAACF,IAAI,CAAC;MAAEiI,KAAK,EAAE+1B,IAAI;MAAEmiB,OAAO,EAAE,IAAI,CAACv+C;IAAc,CAAC,CAAC;EACpE;EACAyO,YAAYA,CAAC2tB,IAAI,EAAE;IACf,MAAMzG,GAAG,GAAG,IAAI,CAAC31B,aAAa,CAACk8B,SAAS,CAACI,CAAC,IAAI;MAC1C,OAAOA,CAAC,CAACh2B,IAAI,KAAK81B,IAAI,CAAC91B,IAAI,IAAIg2B,CAAC,CAACj2B,KAAK,KAAK+1B,IAAI,CAAC/1B,KAAK;IACzD,CAAC,CAAC;IACF,IAAI,CAACrG,aAAa,CAAC61B,MAAM,CAACF,GAAG,EAAE,CAAC,CAAC;IACjC,IAAI,CAAC31B,aAAa,GAAG,CAAC,GAAG,IAAI,CAACA,aAAa,CAAC;IAC5C,IAAI,CAACxB,UAAU,CAACJ,IAAI,CAAC;MAAEiI,KAAK,EAAE+1B,IAAI;MAAEmiB,OAAO,EAAE,IAAI,CAACv+C;IAAc,CAAC,CAAC;EACtE;EACAq+C,aAAaA,CAAA,EAAG;IACZ,IAAI,CAACr+C,aAAa,GAAG,CAAC,GAAG,IAAI,CAACA,aAAa,CAAC;IAC5C,KAAK,MAAMm8B,KAAK,IAAI,IAAI,CAACn8B,aAAa,EAAE;MACpC,IAAI,CAACxB,UAAU,CAACJ,IAAI,CAAC;QAAEiI,KAAK,EAAE81B,KAAK;QAAEoiB,OAAO,EAAE;MAAG,CAAC,CAAC;IACvD;IACA,IAAI,CAACv+C,aAAa,GAAG,EAAE;EAC3B;AACJ;AACAs/C,4BAA4B,CAACntB,IAAI;EAAA,IAAAqtB,yCAAA;EAAA,gBAAAC,qCAAAptB,CAAA;IAAA,QAAAmtB,yCAAA,KAAAA,yCAAA,GAl/KyEjnD,EAAE,CAAAmmD,qBAAA,CAk/KaY,4BAA4B,IAAAjtB,CAAA,IAA5BitB,4BAA4B;EAAA;AAAA,IAAqD;AAC1MA,4BAA4B,CAAC7sB,IAAI,kBAn/KyEl6B,EAAE,CAAAm6B,iBAAA;EAAA1pB,IAAA,EAm/KCs2C,4BAA4B;EAAA3sB,SAAA;EAAAgsB,cAAA,WAAAe,4CAAAnjD,EAAA,EAAAC,GAAA,EAAAqiD,QAAA;IAAA,IAAAtiD,EAAA;MAn/K/BhE,EAAE,CAAAumD,cAAA,CAAAD,QAAA,EAAAzyC,IAAA;MAAF7T,EAAE,CAAAumD,cAAA,CAAAD,QAAA,EAAAxyC,IAAA;IAAA;IAAA,IAAA9P,EAAA;MAAA,IAAAw2B,EAAA;MAAFx6B,EAAE,CAAAy6B,cAAA,CAAAD,EAAA,GAAFx6B,EAAE,CAAA06B,WAAA,QAAAz2B,GAAA,CAAAiN,eAAA,GAAAspB,EAAA,CAAAG,KAAA;MAAF36B,EAAE,CAAAy6B,cAAA,CAAAD,EAAA,GAAFx6B,EAAE,CAAA06B,WAAA,QAAAz2B,GAAA,CAAA2S,qBAAA,GAAA4jB,EAAA,CAAAG,KAAA;IAAA;EAAA;EAAAE,YAAA,WAAAusB,0CAAApjD,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MAAFhE,EAAE,CAAAuF,UAAA,wBAAA8hD,2DAAA;QAAA,OAm/KCpjD,GAAA,CAAAsS,WAAA,CAAY,CAAC;MAAA,CAAc,CAAC;IAAA;EAAA;EAAA2kB,MAAA;IAAAxjB,MAAA;IAAA8sC,WAAA;IAAA5D,cAAA;IAAA6D,KAAA;IAAAC,KAAA;IAAAtwC,cAAA;IAAAW,cAAA;IAAAV,UAAA;IAAAW,UAAA;IAAA2vC,QAAA;IAAAlvC,QAAA;IAAAvL,aAAA;IAAAwL,KAAA;IAAAjO,aAAA;IAAAk/B,UAAA;IAAAryB,cAAA;IAAAW,cAAA;IAAAV,gBAAA;IAAAC,kBAAA;IAAAU,kBAAA;IAAAT,mBAAA;IAAAU,mBAAA;IAAAT,UAAA;IAAAU,UAAA;IAAAwvC,YAAA;IAAA/zC,eAAA;IAAAxF,SAAA;EAAA;EAAAuyB,OAAA;IAAA73B,QAAA;IAAAE,UAAA;EAAA;EAAA27B,QAAA,GAn/K/B5hC,EAAE,CAAA0mD,0BAAA;EAAAvrB,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAA32B,QAAA,WAAA4iD,sCAAAtjD,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MAAFhE,EAAE,CAAAmE,cAAA,yBA6/KxG,CAAC;MA7/KqGnE,EAAE,CAAAuF,UAAA,8BAAAgiD,mFAAA9hD,MAAA;QAAA,OA0/KlFxB,GAAA,CAAA4L,OAAA,CAAApK,MAAc,CAAC;MAAA,EAAC,iCAAA+hD,sFAAA/hD,MAAA;QAAA,OACbxB,GAAA,CAAA+R,UAAA,CAAAvQ,MAAiB,CAAC;MAAA,EAAC,mCAAAgiD,wFAAAhiD,MAAA;QAAA,OACjBxB,GAAA,CAAAiS,YAAA,CAAAzQ,MAAmB,CAAC;MAAA,EAAC;MA5/KsDzF,EAAE,CAAA8H,cAAA;MAAF9H,EAAE,CAAAmE,cAAA,UA8/K7F,CAAC,cAC4B,CAAC;MA//K6DnE,EAAE,CAAA8E,SAAA,UAogLjG,CAAC;MApgL8F9E,EAAE,CAAAqE,YAAA,CAqgLtF,CAAC,CACP,CAAC;MAtgLyFrE,EAAE,CAAAmE,cAAA,UAugL1C,CAAC;MAvgLuCnE,EAAE,CAAAoE,UAAA,IAAAyT,8CAAA,eAuhLpG,CAAC,IAAAE,8CAAA,eAeD,CAAC;MAtiLiG/X,EAAE,CAAAmE,cAAA,OAuiLlE,CAAC;MAviL+DnE,EAAE,CAAAoE,UAAA,IAAA6T,8CAAA,eAwiL3C,CAAC,IAAAO,8CAAA,eAgBI,CAAC;MAxjLmCxY,EAAE,CAAAqE,YAAA,CA0lL7F,CAAC,CACH,CAAC;MA3lL4FrE,EAAE,CAAAoE,UAAA,KAAAwU,+CAAA,eAwmLtG,CAAC;MAxmLmG5Y,EAAE,CAAAqE,YAAA,CAwnLtF,CAAC;IAAA;IAAA,IAAAL,EAAA;MAxnLmFhE,EAAE,CAAAyE,UAAA,SAAFzE,EAAE,CAAAqX,eAAA,KAAAtD,IAAA,EAAA9P,GAAA,CAAAkH,KAAA,EAAAlH,GAAA,CAAAiH,MAAA,CAq/K/E,CAAC,eAAAjH,GAAA,CAAAyT,MACJ,CAAC,kBAAAzT,GAAA,CAAAyC,aACS,CAAC,kBAAAzC,GAAA,CAAAwD,aACD,CAAC,eAAAxD,GAAA,CAAAyP,UACP,CAAC;MAz/K2E1T,EAAE,CAAAwE,SAAA,EA+/KjE,CAAC;MA//K8DxE,EAAE,CAAAoI,WAAA,OAAAnE,GAAA,CAAAshD,UAAA;MAAFvlD,EAAE,CAAAwE,SAAA,CAigLnE,CAAC;MAjgLgExE,EAAE,CAAAoI,WAAA,UAAAnE,GAAA,CAAAgH,IAAA,CAAAE,KAAA,iBAAAlH,GAAA,CAAAgH,IAAA,CAAAC,MAAA;MAAFlL,EAAE,CAAAwE,SAAA,CAugLpE,CAAC;MAvgLiExE,EAAE,CAAAoI,WAAA,cAAAnE,GAAA,CAAA+I,SAAA;MAAFhN,EAAE,CAAAwE,SAAA,CA0gLvF,CAAC;MA1gLoFxE,EAAE,CAAAyE,UAAA,SAAAR,GAAA,CAAAwgD,KA0gLvF,CAAC;MA1gLoFzkD,EAAE,CAAAwE,SAAA,CA0hLvF,CAAC;MA1hLoFxE,EAAE,CAAAyE,UAAA,SAAAR,GAAA,CAAAygD,KA0hLvF,CAAC;MA1hLoF1kD,EAAE,CAAAwE,SAAA,CAuiLnE,CAAC;MAviLgExE,EAAE,CAAAoI,WAAA,cAAAnE,GAAA,CAAAgjB,QAAA;MAAFjnB,EAAE,CAAAwE,SAAA,CAwiL7D,CAAC;MAxiL0DxE,EAAE,CAAAyE,UAAA,YAAAR,GAAA,CAAA0S,OAwiL7D,CAAC,iBAAA1S,GAAA,CAAA2T,OAAe,CAAC;MAxiL0C5X,EAAE,CAAAwE,SAAA,CAwjLrE,CAAC;MAxjLkExE,EAAE,CAAAyE,UAAA,UAAAR,GAAA,CAAA4M,eAwjLrE,CAAC;MAxjLkE7Q,EAAE,CAAAwE,SAAA,CA8lL5D,CAAC;MA9lLyDxE,EAAE,CAAAyE,UAAA,SAAAR,GAAA,CAAA0gD,QAAA,IAAA1gD,GAAA,CAAAuR,SAAA,aA8lL5D,CAAC;IAAA;EAAA;EAAAgmB,YAAA,GA2Bq3D4I,cAAc,EAAuNsJ,cAAc,EAAsR0C,cAAc,EAA0TuT,mBAAmB,EAA+NjI,WAAW,EAAmM3F,qBAAqB,EAAgPiI,QAAQ,EAA0Mh9C,EAAE,CAACy6B,IAAI,EAA0Ez6B,EAAE,CAACmjC,OAAO;EAAAxI,MAAA,GAAA7iB,IAAA;EAAA8iB,aAAA;EAAAmG,eAAA;AAAA,EAAwL;AACj6H;EAAA,QAAAjG,SAAA,oBAAAA,SAAA,KA1nL0G97B,EAAE,CAAA+7B,iBAAA,CA0nLjBgrB,4BAA4B,EAAc,CAAC;IAC1Ht2C,IAAI,EAAEvQ,SAAS;IACfg1B,IAAI,EAAE,CAAC;MAAE8G,QAAQ,EAAE,kCAAkC;MAAEtq9B,eAAe,EAAErhC,uBAAuB,CAACshC,MAAM;MAAEpG,aAAa,EAAEz7B,iBAAiB,CAAC87B,IAAI;MAAEN,MAAM,EAAE,CAAC,g3DAAg3D;IAAE,CAAC;EACj9D,CAAC,CAAC,QAAkB;IAAEjkB,MAAM,EAAE,CAAC;MACvBjH,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEmkD,WAAW,EAAE,CAAC;MACd/zC,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEugD,cAAc,EAAE,CAAC;MACjBnwC,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEokD,KAAK,EAAE,CAAC;MACRh0C,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEqkD,KAAK,EAAE,CAAC;MACRj0C,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE+T,cAAc,EAAE,CAAC;MACjB3D,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE0U,cAAc,EAAE,CAAC;MACjBtE,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEgU,UAAU,EAAE,CAAC;MACb5D,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE2U,UAAU,EAAE,CAAC;MACbvE,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEskD,QAAQ,EAAE,CAAC;MACXl0C,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEoV,QAAQ,EAAE,CAAC;MACXhF,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE6J,aAAa,EAAE,CAAC;MAChBuG,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEqV,KAAK,EAAE,CAAC;MACRjF,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEoH,aAAa,EAAE,CAAC;MAChBgJ,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEsmC,UAAU,EAAE,CAAC;MACbl2B,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEiU,cAAc,EAAE,CAAC;MACjB7D,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE4U,cAAc,EAAE,CAAC;MACjBxE,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEkU,gBAAgB,EAAE,CAAC;MACnB9D,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEmU,kBAAkB,EAAE,CAAC;MACrB/D,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE6U,kBAAkB,EAAE,CAAC;MACrBzE,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEoU,mBAAmB,EAAE,CAAC;MACtBhE,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE8U,mBAAmB,EAAE,CAAC;MACtB1E,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEqU,UAAU,EAAE,CAAC;MACbjE,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE+U,UAAU,EAAE,CAAC;MACb3E,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEukD,YAAY,EAAE,CAAC;MACfn0C,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEwQ,eAAe,EAAE,CAAC;MAClBJ,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEgL,SAAS,EAAE,CAAC;MACZoF,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE0F,QAAQ,EAAE,CAAC;MACX0K,IAAI,EAAE7P;IACV,CAAC,CAAC;IAAEqF,UAAU,EAAE,CAAC;MACbwK,IAAI,EAAE7P;IACV,CAAC,CAAC;IAAEsQ,eAAe,EAAE,CAAC;MAClBT,IAAI,EAAE1P,YAAY;MAClBm0B,IAAI,EAAE,CAAC,iBAAiB;IAC5B,CAAC,CAAC;IAAEte,qBAAqB,EAAE,CAAC;MACxBnG,IAAI,EAAE1P,YAAY;MAClBm0B,IAAI,EAAE,CAAC,uBAAuB;IAClC,CAAC,CAAC;IAAE3e,WAAW,EAAE,CAAC;MACd9F,IAAI,EAAEjQ,YAAY;MAClB00B,IAAI,EAAE,CAAC,YAAY;IACvB,CAAC;EAAE,CAAC;AAAA;AAEhB,MAAMwyB,yBAAyB,SAASjhB,kBAAkB,CAAC;EACvDhO,WAAWA,CAAA,EAAG;IACV,KAAK,CAAC,GAAG7C,SAAS,CAAC;IACnB,IAAI,CAACle,MAAM,GAAG,KAAK;IACnB,IAAI,CAAC8sC,WAAW,GAAG,QAAQ;IAC3B,IAAI,CAAC5D,cAAc,GAAGh6C,cAAc,CAAC8G,KAAK;IAC1C,IAAI,CAAC+2C,KAAK,GAAG,KAAK;IAClB,IAAI,CAACC,KAAK,GAAG,KAAK;IAClB,IAAI,CAACC,QAAQ,GAAG,KAAK;IACrB,IAAI,CAACz6C,aAAa,GAAG,IAAI;IACzB,IAAI,CAACwL,KAAK,GAAGpT,WAAW;IACxB,IAAI,CAACmF,aAAa,GAAG,EAAE;IACvB,IAAI,CAAC6M,cAAc,GAAG,IAAI;IAC1B,IAAI,CAACW,cAAc,GAAG,IAAI;IAC1B,IAAI,CAACV,gBAAgB,GAAG,IAAI;IAC5B,IAAI,CAACC,kBAAkB,GAAG,EAAE;IAC5B,IAAI,CAACU,kBAAkB,GAAG,EAAE;IAC5B,IAAI,CAAC0vC,YAAY,GAAG,KAAK;IACzB,IAAI,CAAC/zC,eAAe,GAAG,KAAK;IAC5B,IAAI,CAACxF,SAAS,GAAG,KAAK;IACtB,IAAI,CAACtF,QAAQ,GAAG,IAAIpF,YAAY,CAAC,CAAC;IAClC,IAAI,CAACsF,UAAU,GAAG,IAAItF,YAAY,CAAC,CAAC;IACpC,IAAI,CAAC+nC,MAAM,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;IAC9B,IAAI,CAAC8X,WAAW,GAAG,CAAC;IACpB,IAAI,CAACC,UAAU,GAAG,CAAC;IACnB,IAAI,CAAClpC,cAAc,GAAG,EAAE;IACxB,IAAI,CAACstC,eAAe,GAAG,EAAE;IACzB,IAAI,CAACvsC,UAAU,GAAGw9B,UAAU;EAChC;EACAvS,MAAMA,CAAA,EAAG;IACL,KAAK,CAACA,MAAM,CAAC,CAAC;IACd,IAAI,CAACt4B,IAAI,GAAGm1C,uBAAuB,CAAC;MAChCj1C,KAAK,EAAE,IAAI,CAACA,KAAK;MACjBD,MAAM,EAAE,IAAI,CAACA,MAAM;MACnBm1C,OAAO,EAAE,IAAI,CAAC3X,MAAM;MACpB4X,SAAS,EAAE,IAAI,CAACmE,KAAK;MACrBlE,SAAS,EAAE,IAAI,CAACmE,KAAK;MACrBlE,WAAW,EAAE,IAAI,CAACA,WAAW;MAC7BC,UAAU,EAAE,IAAI,CAACA,UAAU;MAC3BC,UAAU,EAAE,IAAI,CAACtsC,cAAc;MAC/BusC,UAAU,EAAE,IAAI,CAAC5rC,cAAc;MAC/BsvB,UAAU,EAAE,IAAI,CAAC3sB,MAAM;MACvB6sB,UAAU,EAAE,IAAI,CAACoC,UAAU;MAC3Bia,cAAc,EAAE,IAAI,CAACA;IACzB,CAAC,CAAC;IACF,IAAI,IAAI,CAAC+D,QAAQ,EAAE;MACf,IAAI,CAAC15C,IAAI,CAACC,MAAM,IAAI,IAAI,CAACqM,cAAc,GAAG,IAAI,CAACmxB,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAACmc,eAAe;IACnF;IACA,IAAI,CAACvG,OAAO,GAAG,IAAI,CAACC,UAAU,CAAC,CAAC;IAChC,IAAI,IAAI,CAACuG,cAAc,EAAE;MACrB,IAAI,CAACxG,OAAO,GAAG,IAAI,CAACwG,cAAc;IACtC;IACA,IAAI,CAACC,OAAO,GAAG,IAAI,CAACC,UAAU,CAAC,CAAC;IAChC,IAAI,CAACC,YAAY,GAAG,IAAI,CAACC,eAAe,CAAC,CAAC;IAC1C,IAAI,CAACn6C,MAAM,GAAG,IAAI,CAACyzC,SAAS,CAAC,IAAI,CAACF,OAAO,EAAE,IAAI,CAACrzC,IAAI,CAACE,KAAK,CAAC;IAC3D,IAAI,CAACqD,MAAM,GAAG,IAAI,CAAC22C,SAAS,CAAC,IAAI,CAACJ,OAAO,EAAE,IAAI,CAAC95C,IAAI,CAACC,MAAM,CAAC;IAC5D,KAAK,IAAIwyB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAAChnB,IAAI,CAACtK,MAAM,EAAEsxB,CAAC,EAAE,EAAE;MACvC,MAAMuc,GAAG,GAAG,IAAI,CAACvjC,IAAI,CAACgnB,CAAC,CAAC;MACxB,IAAI0e,EAAE,GAAG,CAAC;MACV,KAAK,MAAMF,KAAK,IAAI,IAAI,CAACvlC,OAAO,EAAE;QAC9B,IAAIotB,CAAC,GAAGmY,KAAK,CAACj/B,MAAM,CAAC6mB,IAAI,CAACD,IAAI,IAAI;UAC9B,IAAIkf,CAAC,GAAGlf,IAAI,CAAC91B,IAAI;UACjB,IAAI+qC,CAAC,GAAGmB,GAAG;UACX,IAAI,IAAI,CAACzkC,SAAS,KAAKkrB,SAAS,CAAC4V,IAAI,EAAE;YACnCyM,CAAC,GAAGA,CAAC,CAACiE,OAAO,CAAC,CAAC;YACflO,CAAC,GAAGA,CAAC,CAACkO,OAAO,CAAC,CAAC;UACnB;UACA,OAAOjE,CAAC,KAAKjK,CAAC;QAClB,CAAC,CAAC;QACF,IAAI/U,CAAC,EAAE;UACHA,CAAC,CAACqY,EAAE,GAAGA,EAAE;UACTrY,CAAC,CAACyS,EAAE,GAAG4F,EAAE,GAAGrY,CAAC,CAACj2B,KAAK;UACnBsuC,EAAE,IAAIrY,CAAC,CAACj2B,KAAK;QACjB,CAAC,MACI;UACDi2B,CAAC,GAAG;YACAh2B,IAAI,EAAEksC,GAAG;YACTnsC,KAAK,EAAE,CAAC;YACRsuC,EAAE;YACF5F,EAAE,EAAE4F;UACR,CAAC;UACDF,KAAK,CAACj/B,MAAM,CAAC+gB,IAAI,CAAC+F,CAAC,CAAC;QACxB;MACJ;IACJ;IACA,IAAI,CAACqhB,cAAc,CAAC,CAAC;IACrB,IAAI,CAACC,SAAS,CAAC,CAAC;IAChB,IAAI,CAAC3+C,aAAa,GAAG,IAAI,CAAC4+C,gBAAgB,CAAC,CAAC;IAC5C,IAAI,CAACt4C,SAAS,GAAI,aAAY,IAAI,CAAC/B,IAAI,CAAC61C,OAAQ,MAAK,IAAI,CAACpY,MAAM,CAAC,CAAC,CAAE,GAAE;IACtE,IAAI,CAAC6c,UAAU,GAAG,MAAM,GAAGzxB,EAAE,CAAC,CAAC,CAACwS,QAAQ,CAAC,CAAC;IAC1C,IAAI,CAACrf,QAAQ,GAAI,QAAO,IAAI,CAACs+B,UAAW,GAAE;EAC9C;EACAH,cAAcA,CAAA,EAAG;IACb,IAAI,IAAI,CAACT,QAAQ,EAAE;MACf,IAAI,CAACrtC,aAAa,GAAG,IAAI,CAACrM,IAAI,CAACE,KAAK;MACpC,IAAI,CAACq6C,eAAe,GAAG,IAAI,CAACjH,UAAU,CAAC,CAAC;MACxC,IAAI,CAACxnC,cAAc,GAAG,IAAI,CAACynC,SAAS,CAAC,IAAI,CAACgH,eAAe,EAAE,IAAI,CAACluC,aAAa,CAAC;MAC9E,IAAI,CAACN,cAAc,GAAG,IAAI,CAACmuC,SAAS,CAAC,IAAI,CAACJ,OAAO,EAAE,IAAI,CAACxtC,cAAc,CAAC;MACvE,IAAI,CAACI,iBAAiB,GAAI,aAAY,IAAI,CAAC1M,IAAI,CAAC61C,OAAQ,KAAI,CAAC,IAAI,CAACpY,MAAM,CAAC,CAAC,CAAE,GAAE;IAClF;EACJ;EACA6V,UAAUA,CAAA,EAAG;IACT,IAAIM,MAAM,GAAGmD,sBAAsB,CAAC,IAAI,CAACrrC,OAAO,CAAC;IACjD,IAAI,CAACnB,SAAS,GAAG6sC,YAAY,CAACxD,MAAM,CAAC;IACrC,IAAI/3C,MAAM,GAAG,EAAE;IACf,IAAI,IAAI,CAAC0O,SAAS,KAAKkrB,SAAS,CAACmE,MAAM,EAAE;MACrCga,MAAM,GAAGA,MAAM,CAACjP,GAAG,CAAC0M,CAAC,IAAI/F,MAAM,CAAC+F,CAAC,CAAC,CAAC;IACvC;IACA,IAAIz5C,GAAG;IACP,IAAIC,GAAG;IACP,IAAI,IAAI,CAAC0S,SAAS,KAAKkrB,SAAS,CAAC4V,IAAI,IAAI,IAAI,CAAC9gC,SAAS,KAAKkrB,SAAS,CAACmE,MAAM,EAAE;MAC1EhiC,GAAG,GAAG,IAAI,CAAC8/C,SAAS,GAAG,IAAI,CAACA,SAAS,GAAGphB,IAAI,CAAC1+B,GAAG,CAAC,GAAGg8C,MAAM,CAAC;MAC3D/7C,GAAG,GAAG,IAAI,CAAC8/C,SAAS,GAAG,IAAI,CAACA,SAAS,GAAGrhB,IAAI,CAACz+B,GAAG,CAAC,GAAG+7C,MAAM,CAAC;IAC/D;IACA,IAAI,IAAI,CAACrpC,SAAS,KAAKkrB,SAAS,CAAC4V,IAAI,EAAE;MACnCxvC,MAAM,GAAG,CAAC,IAAI0uB,IAAI,CAAC3yB,GAAG,CAAC,EAAE,IAAI2yB,IAAI,CAAC1yB,GAAG,CAAC,CAAC;MACvC,IAAI,CAAC4T,IAAI,GAAG,CAAC,GAAGmoC,MAAM,CAAC,CAACiE,IAAI,CAAC,CAACC,CAAC,EAAEjK,CAAC,KAAK;QACnC,MAAMkK,KAAK,GAAGD,CAAC,CAACE,OAAO,CAAC,CAAC;QACzB,MAAMC,KAAK,GAAGpK,CAAC,CAACmK,OAAO,CAAC,CAAC;QACzB,IAAID,KAAK,GAAGE,KAAK,EACb,OAAO,CAAC;QACZ,IAAIA,KAAK,GAAGF,KAAK,EACb,OAAO,CAAC,CAAC;QACb,OAAO,CAAC;MACZ,CAAC,CAAC;IACN,CAAC,MACI,IAAI,IAAI,CAACxtC,SAAS,KAAKkrB,SAAS,CAACmE,MAAM,EAAE;MAC1C/9B,MAAM,GAAG,CAACjE,GAAG,EAAEC,GAAG,CAAC;MACnB;MACA,IAAI,CAAC4T,IAAI,GAAG,CAAC,GAAGmoC,MAAM,CAAC,CAACiE,IAAI,CAAC,CAACC,CAAC,EAAEjK,CAAC,KAAKiK,CAAC,GAAGjK,CAAC,CAAC;IACjD,CAAC,MACI;MACDhyC,MAAM,GAAG+3C,MAAM;MACf,IAAI,CAACnoC,IAAI,GAAGmoC,MAAM;IACtB;IACA,OAAO/3C,MAAM;EACjB;EACAk+C,UAAUA,CAAA,EAAG;IACT,MAAMl+C,MAAM,GAAG,EAAE;IACjB,KAAK,IAAI42B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAAChnB,IAAI,CAACtK,MAAM,EAAEsxB,CAAC,EAAE,EAAE;MACvC,MAAMuc,GAAG,GAAG,IAAI,CAACvjC,IAAI,CAACgnB,CAAC,CAAC;MACxB,IAAIkiB,GAAG,GAAG,CAAC;MACX,KAAK,MAAM1D,KAAK,IAAI,IAAI,CAACvlC,OAAO,EAAE;QAC9B,MAAMotB,CAAC,GAAGmY,KAAK,CAACj/B,MAAM,CAAC6mB,IAAI,CAACD,IAAI,IAAI;UAChC,IAAIkf,CAAC,GAAGlf,IAAI,CAAC91B,IAAI;UACjB,IAAI+qC,CAAC,GAAGmB,GAAG;UACX,IAAI,IAAI,CAACzkC,SAAS,KAAKkrB,SAAS,CAAC4V,IAAI,EAAE;YACnCyM,CAAC,GAAGA,CAAC,CAACiE,OAAO,CAAC,CAAC;YACflO,CAAC,GAAGA,CAAC,CAACkO,OAAO,CAAC,CAAC;UACnB;UACA,OAAOjE,CAAC,KAAKjK,CAAC;QAClB,CAAC,CAAC;QACF,IAAI/U,CAAC,EAAE;UACH6b,GAAG,IAAI7b,CAAC,CAACj2B,KAAK;QAClB;MACJ;MACAhH,MAAM,CAACk3B,IAAI,CAAC4hB,GAAG,CAAC;IACpB;IACA,MAAM/8C,GAAG,GAAG,IAAI,CAAC4iD,SAAS,GAAG,IAAI,CAACA,SAAS,GAAGlkB,IAAI,CAAC1+B,GAAG,CAAC,CAAC,EAAE,GAAGiE,MAAM,CAAC;IACpE,MAAMhE,GAAG,GAAG,IAAI,CAAC4iD,SAAS,GAAG,IAAI,CAACA,SAAS,GAAGnkB,IAAI,CAACz+B,GAAG,CAAC,GAAGgE,MAAM,CAAC;IACjE,OAAO,CAACjE,GAAG,EAAEC,GAAG,CAAC;EACrB;EACAoiD,eAAeA,CAAA,EAAG;IACd,OAAO,IAAI,CAACvuC,OAAO,CAACi5B,GAAG,CAAC7L,CAAC,IAAIA,CAAC,CAACh2B,IAAI,CAAC;EACxC;EACAywC,SAASA,CAAC13C,MAAM,EAAEqE,KAAK,EAAE;IACrB,IAAI6/B,KAAK;IACT,IAAI,IAAI,CAACx1B,SAAS,KAAKkrB,SAAS,CAAC4V,IAAI,EAAE;MACnCtL,KAAK,GAAGjpC,SAAS,CAAC,CAAC;IACvB,CAAC,MACI,IAAI,IAAI,CAACyT,SAAS,KAAKkrB,SAAS,CAACmE,MAAM,EAAE;MAC1CmG,KAAK,GAAGhpC,WAAW,CAAC,CAAC;IACzB,CAAC,MACI,IAAI,IAAI,CAACwT,SAAS,KAAKkrB,SAAS,CAACkG,OAAO,EAAE;MAC3CoE,KAAK,GAAG/oC,UAAU,CAAC,CAAC,CAAC4rC,OAAO,CAAC,GAAG,CAAC;IACrC;IACA7C,KAAK,CAACpoC,KAAK,CAAC,CAAC,CAAC,EAAEuI,KAAK,CAAC,CAAC,CAACrE,MAAM,CAACA,MAAM,CAAC;IACtC,OAAO,IAAI,CAAC89C,YAAY,GAAG5Z,KAAK,CAAC2a,IAAI,CAAC,CAAC,GAAG3a,KAAK;EACnD;EACAma,SAASA,CAACr+C,MAAM,EAAEoE,MAAM,EAAE;IACtB,MAAM8/B,KAAK,GAAGhpC,WAAW,CAAC,CAAC,CAACY,KAAK,CAAC,CAACsI,MAAM,EAAE,CAAC,CAAC,CAAC,CAACpE,MAAM,CAACA,MAAM,CAAC;IAC7D,OAAO,IAAI,CAAC89C,YAAY,GAAG5Z,KAAK,CAAC2a,IAAI,CAAC,CAAC,GAAG3a,KAAK;EACnD;EACA5zB,YAAYA,CAACtQ,MAAM,EAAE;IACjB,IAAI,CAACg+C,cAAc,GAAGh+C,MAAM;IAC5B,IAAI,CAACw3C,OAAO,GAAG,IAAI,CAACwG,cAAc;IAClC,IAAI,CAAC/5C,MAAM,GAAG,IAAI,CAACyzC,SAAS,CAAC,IAAI,CAACF,OAAO,EAAE,IAAI,CAACrzC,IAAI,CAACE,KAAK,CAAC;EAC/D;EACAsL,qBAAqBA,CAACotB,IAAI,EAAE;IACxB,IAAI,CAAC1tB,eAAe,GAAG0tB,IAAI,CAAC/1B,KAAK;IACjC,IAAI,CAACg4C,aAAa,CAAC,CAAC;EACxB;EACAvvC,WAAWA,CAAA,EAAG;IACV,IAAI,CAACJ,eAAe,GAAG,IAAI;IAC3B,IAAI,CAAC2vC,aAAa,CAAC,CAAC;EACxB;EACAj2C,OAAOA,CAACC,IAAI,EAAEmN,MAAM,EAAE;IAClB,IAAIA,MAAM,EAAE;MACRnN,IAAI,CAACmN,MAAM,GAAGA,MAAM,CAAClP,IAAI;IAC7B;IACA,IAAI,CAAClM,MAAM,CAACgE,IAAI,CAACiK,IAAI,CAAC;EAC1B;EACA8H,OAAOA,CAACzP,KAAK,EAAE07B,IAAI,EAAE;IACjB,OAAQ,GAAEA,IAAI,CAAC91B,IAAK,EAAC;EACzB;EACAs3C,SAASA,CAAA,EAAG;IACR,IAAIv+C,MAAM;IACV,IAAI,IAAI,CAAC6/B,UAAU,KAAKjG,SAAS,CAACkG,OAAO,EAAE;MACvC9/B,MAAM,GAAG,IAAI,CAACm+C,YAAY;IAC9B,CAAC,MACI;MACDn+C,MAAM,GAAG,IAAI,CAACi+C,OAAO;IACzB;IACA,IAAI,CAACh+C,MAAM,GAAG,IAAIm6C,WAAW,CAAC,IAAI,CAAC1pC,MAAM,EAAE,IAAI,CAACmvB,UAAU,EAAE7/B,MAAM,EAAE,IAAI,CAAC2Q,YAAY,CAAC;EAC1F;EACA6tC,gBAAgBA,CAAA,EAAG;IACf,MAAMS,IAAI,GAAG;MACTvwC,SAAS,EAAE,IAAI,CAACmxB,UAAU;MAC1B5/B,MAAM,EAAEoK,SAAS;MACjBrK,MAAM,EAAE,EAAE;MACV/B,KAAK,EAAEoM,SAAS;MAChBxK,QAAQ,EAAE,IAAI,CAACi6C;IACnB,CAAC;IACD,IAAImF,IAAI,CAACvwC,SAAS,KAAKkrB,SAAS,CAACkG,OAAO,EAAE;MACtCmf,IAAI,CAACj/C,MAAM,GAAG,IAAI,CAACm+C,YAAY;MAC/Bc,IAAI,CAACh/C,MAAM,GAAG,IAAI,CAACA,MAAM;MACzBg/C,IAAI,CAAChhD,KAAK,GAAG,IAAI,CAACy/C,WAAW;IACjC,CAAC,MACI;MACDuB,IAAI,CAACj/C,MAAM,GAAG,IAAI,CAACi+C,OAAO;MAC1BgB,IAAI,CAACh/C,MAAM,GAAG,IAAI,CAACA,MAAM,CAACikC,KAAK;IACnC;IACA,OAAO+a,IAAI;EACf;EACAjxC,gBAAgBA,CAAC;IAAE3J;EAAM,CAAC,EAAE;IACxB,IAAI,CAACs1C,UAAU,GAAGt1C,KAAK;IACvB,IAAI,CAACo4B,MAAM,CAAC,CAAC;EACjB;EACApvB,iBAAiBA,CAAC;IAAEjJ;EAAO,CAAC,EAAE;IAC1B,IAAI,CAACs1C,WAAW,GAAGt1C,MAAM;IACzB,IAAI,CAACq4B,MAAM,CAAC,CAAC;EACjB;EACAvtB,UAAUA,CAAC6tB,IAAI,EAAE;IACb,MAAMzG,GAAG,GAAG,IAAI,CAAC31B,aAAa,CAACk8B,SAAS,CAACI,CAAC,IAAI;MAC1C,OAAOA,CAAC,CAACh2B,IAAI,KAAK81B,IAAI,CAAC91B,IAAI,IAAIg2B,CAAC,CAACj2B,KAAK,KAAK+1B,IAAI,CAAC/1B,KAAK;IACzD,CAAC,CAAC;IACF,IAAIsvB,GAAG,GAAG,CAAC,CAAC,EAAE;MACV;IACJ;IACA,IAAI,CAAC31B,aAAa,GAAG,CAACo8B,IAAI,EAAE,GAAG,IAAI,CAACp8B,aAAa,CAAC;IAClD,IAAI,CAAC1B,QAAQ,CAACF,IAAI,CAAC;MAAEiI,KAAK,EAAE+1B,IAAI;MAAEmiB,OAAO,EAAE,IAAI,CAACv+C;IAAc,CAAC,CAAC;EACpE;EACAyO,YAAYA,CAAC2tB,IAAI,EAAE;IACf,MAAMzG,GAAG,GAAG,IAAI,CAAC31B,aAAa,CAACk8B,SAAS,CAACI,CAAC,IAAI;MAC1C,OAAOA,CAAC,CAACh2B,IAAI,KAAK81B,IAAI,CAAC91B,IAAI,IAAIg2B,CAAC,CAACj2B,KAAK,KAAK+1B,IAAI,CAAC/1B,KAAK;IACzD,CAAC,CAAC;IACF,IAAI,CAACrG,aAAa,CAAC61B,MAAM,CAACF,GAAG,EAAE,CAAC,CAAC;IACjC,IAAI,CAAC31B,aAAa,GAAG,CAAC,GAAG,IAAI,CAACA,aAAa,CAAC;IAC5C,IAAI,CAACxB,UAAU,CAACJ,IAAI,CAAC;MAAEiI,KAAK,EAAE+1B,IAAI;MAAEmiB,OAAO,EAAE,IAAI,CAACv+C;IAAc,CAAC,CAAC;EACtE;EACAq+C,aAAaA,CAAA,EAAG;IACZ,IAAI,CAACr+C,aAAa,GAAG,CAAC,GAAG,IAAI,CAACA,aAAa,CAAC;IAC5C,KAAK,MAAMm8B,KAAK,IAAI,IAAI,CAACn8B,aAAa,EAAE;MACpC,IAAI,CAACxB,UAAU,CAACJ,IAAI,CAAC;QAAEiI,KAAK,EAAE81B,KAAK;QAAEoiB,OAAO,EAAE;MAAG,CAAC,CAAC;IACvD;IACA,IAAI,CAACv+C,aAAa,GAAG,EAAE;EAC3B;AACJ;AACAigD,yBAAyB,CAAC9tB,IAAI;EAAA,IAAA+tB,sCAAA;EAAA,gBAAAC,kCAAA9tB,CAAA;IAAA,QAAA6tB,sCAAA,KAAAA,sCAAA,GAplM4E3nD,EAAE,CAAAmmD,qBAAA,CAolMUuB,yBAAyB,IAAA5tB,CAAA,IAAzB4tB,yBAAyB;EAAA;AAAA,IAAqD;AACpMA,yBAAyB,CAACxtB,IAAI,kBArlM4El6B,EAAE,CAAAm6B,iBAAA;EAAA1pB,IAAA,EAqlMFi3C,yBAAyB;EAAAttB,SAAA;EAAAgsB,cAAA,WAAAyB,yCAAA7jD,EAAA,EAAAC,GAAA,EAAAqiD,QAAA;IAAA,IAAAtiD,EAAA;MArlMzBhE,EAAE,CAAAumD,cAAA,CAAAD,QAAA,EAAAzyC,IAAA;MAAF7T,EAAE,CAAAumD,cAAA,CAAAD,QAAA,EAAAxyC,IAAA;IAAA;IAAA,IAAA9P,EAAA;MAAA,IAAAw2B,EAAA;MAAFx6B,EAAE,CAAAy6B,cAAA,CAAAD,EAAA,GAAFx6B,EAAE,CAAA06B,WAAA,QAAAz2B,GAAA,CAAAiN,eAAA,GAAAspB,EAAA,CAAAG,KAAA;MAAF36B,EAAE,CAAAy6B,cAAA,CAAAD,EAAA,GAAFx6B,EAAE,CAAA06B,WAAA,QAAAz2B,GAAA,CAAA2S,qBAAA,GAAA4jB,EAAA,CAAAG,KAAA;IAAA;EAAA;EAAAE,YAAA,WAAAitB,uCAAA9jD,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MAAFhE,EAAE,CAAAuF,UAAA,wBAAAwiD,wDAAA;QAAA,OAqlMF9jD,GAAA,CAAAsS,WAAA,CAAY,CAAC;MAAA,CAAW,CAAC;IAAA;EAAA;EAAA2kB,MAAA;IAAAxjB,MAAA;IAAA8sC,WAAA;IAAA5D,cAAA;IAAA6D,KAAA;IAAAC,KAAA;IAAAtwC,cAAA;IAAAW,cAAA;IAAAV,UAAA;IAAAW,UAAA;IAAA2vC,QAAA;IAAAlvC,QAAA;IAAAvL,aAAA;IAAAwL,KAAA;IAAAjO,aAAA;IAAAk/B,UAAA;IAAAryB,cAAA;IAAAW,cAAA;IAAAV,gBAAA;IAAAC,kBAAA;IAAAU,kBAAA;IAAAT,mBAAA;IAAAU,mBAAA;IAAAT,UAAA;IAAAU,UAAA;IAAAwvC,YAAA;IAAA/zC,eAAA;IAAA8xC,SAAA;IAAAC,SAAA;IAAA6C,SAAA;IAAAC,SAAA;IAAAr6C,SAAA;EAAA;EAAAuyB,OAAA;IAAA73B,QAAA;IAAAE,UAAA;EAAA;EAAA27B,QAAA,GArlMzB5hC,EAAE,CAAA0mD,0BAAA;EAAAvrB,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAA32B,QAAA,WAAAsjD,mCAAAhkD,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MAAFhE,EAAE,CAAAmE,cAAA,yBA+lMxG,CAAC;MA/lMqGnE,EAAE,CAAAuF,UAAA,8BAAA0iD,gFAAAxiD,MAAA;QAAA,OA4lMlFxB,GAAA,CAAA4L,OAAA,CAAApK,MAAc,CAAC;MAAA,EAAC,iCAAAyiD,mFAAAziD,MAAA;QAAA,OACbxB,GAAA,CAAA+R,UAAA,CAAAvQ,MAAiB,CAAC;MAAA,EAAC,mCAAA0iD,qFAAA1iD,MAAA;QAAA,OACjBxB,GAAA,CAAAiS,YAAA,CAAAzQ,MAAmB,CAAC;MAAA,EAAC;MA9lMsDzF,EAAE,CAAA8H,cAAA;MAAF9H,EAAE,CAAAmE,cAAA,UAgmM7F,CAAC,cAC4B,CAAC;MAjmM6DnE,EAAE,CAAA8E,SAAA,UAsmMjG,CAAC;MAtmM8F9E,EAAE,CAAAqE,YAAA,CAumMtF,CAAC,CACP,CAAC;MAxmMyFrE,EAAE,CAAAmE,cAAA,UAymM1C,CAAC;MAzmMuCnE,EAAE,CAAAoE,UAAA,IAAA2U,2CAAA,eAynMpG,CAAC,IAAAE,2CAAA,eAeD,CAAC;MAxoMiGjZ,EAAE,CAAAmE,cAAA,OAyoMlE,CAAC;MAzoM+DnE,EAAE,CAAAoE,UAAA,IAAA+U,2CAAA,eA0oM3C,CAAC,IAAAK,2CAAA,eAgBI,CAAC;MA1pMmCxZ,EAAE,CAAAqE,YAAA,CA2rM7F,CAAC,CACH,CAAC;MA5rM4FrE,EAAE,CAAAoE,UAAA,KAAAwV,4CAAA,eAysMtG,CAAC;MAzsMmG5Z,EAAE,CAAAqE,YAAA,CAytMtF,CAAC;IAAA;IAAA,IAAAL,EAAA;MAztMmFhE,EAAE,CAAAyE,UAAA,SAAFzE,EAAE,CAAAqX,eAAA,KAAAtD,IAAA,EAAA9P,GAAA,CAAAkH,KAAA,EAAAlH,GAAA,CAAAiH,MAAA,CAulM/E,CAAC,eAAAjH,GAAA,CAAAyT,MACJ,CAAC,kBAAAzT,GAAA,CAAAyC,aACS,CAAC,kBAAAzC,GAAA,CAAAwD,aACD,CAAC,eAAAxD,GAAA,CAAAyP,UACP,CAAC;MA3lM2E1T,EAAE,CAAAwE,SAAA,EAimMjE,CAAC;MAjmM8DxE,EAAE,CAAAoI,WAAA,OAAAnE,GAAA,CAAAshD,UAAA;MAAFvlD,EAAE,CAAAwE,SAAA,CAmmMnE,CAAC;MAnmMgExE,EAAE,CAAAoI,WAAA,UAAAnE,GAAA,CAAAgH,IAAA,CAAAE,KAAA,iBAAAlH,GAAA,CAAAgH,IAAA,CAAAC,MAAA;MAAFlL,EAAE,CAAAwE,SAAA,CAymMpE,CAAC;MAzmMiExE,EAAE,CAAAoI,WAAA,cAAAnE,GAAA,CAAA+I,SAAA;MAAFhN,EAAE,CAAAwE,SAAA,CA4mMvF,CAAC;MA5mMoFxE,EAAE,CAAAyE,UAAA,SAAAR,GAAA,CAAAwgD,KA4mMvF,CAAC;MA5mMoFzkD,EAAE,CAAAwE,SAAA,CA4nMvF,CAAC;MA5nMoFxE,EAAE,CAAAyE,UAAA,SAAAR,GAAA,CAAAygD,KA4nMvF,CAAC;MA5nMoF1kD,EAAE,CAAAwE,SAAA,CAyoMnE,CAAC;MAzoMgExE,EAAE,CAAAoI,WAAA,cAAAnE,GAAA,CAAAgjB,QAAA;MAAFjnB,EAAE,CAAAwE,SAAA,CA0oM7D,CAAC;MA1oM0DxE,EAAE,CAAAyE,UAAA,YAAAR,GAAA,CAAA0S,OA0oM7D,CAAC,iBAAA1S,GAAA,CAAA2T,OAAe,CAAC;MA1oM0C5X,EAAE,CAAAwE,SAAA,CA0pMrE,CAAC;MA1pMkExE,EAAE,CAAAyE,UAAA,UAAAR,GAAA,CAAA4M,eA0pMrE,CAAC;MA1pMkE7Q,EAAE,CAAAwE,SAAA,CA+rM5D,CAAC;MA/rMyDxE,EAAE,CAAAyE,UAAA,SAAAR,GAAA,CAAA0gD,QAAA,IAAA1gD,GAAA,CAAAuR,SAAA,aA+rM5D,CAAC;IAAA;EAAA;EAAAgmB,YAAA,GA2Bq3D4I,cAAc,EAAuNsJ,cAAc,EAAsR0C,cAAc,EAA0TuT,mBAAmB,EAA+NjI,WAAW,EAAmM3F,qBAAqB,EAAgPiI,QAAQ,EAA0Mh9C,EAAE,CAACy6B,IAAI,EAA0Ez6B,EAAE,CAACmjC,OAAO;EAAAxI,MAAA,GAAA7iB,IAAA;EAAA8iB,aAAA;EAAAmG,eAAA;AAAA,EAAwL;AACj6H;EAAA,QAAAjG,SAAA,oBAAAA,SAAA,KA3tM0G97B,EAAE,CAAA+7B,iBAAA,CA2tMjB2rB,yBAAyB,EAAc,CAAC;IACvHj3C,IAAI,EAAEvQ,SAAS;IACfg1B,IAAI,EAAE,CAAC;MAAE8G,QAAQ,EAAE,+BAA+B;MAAEtq9B,eAAe,EAAErhC,uBAAuB,CAACshC,MAAM;MAAEpG,aAAa,EAAEz7B,iBAAiB,CAAC87B,IAAI;MAAEN,MAAM,EAAE,CAAC,g3DAAg3D;IAAE,CAAC;EACj9D,CAAC,CAAC,QAAkB;IAAEjkB,MAAM,EAAE,CAAC;MACvBjH,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEmkD,WAAW,EAAE,CAAC;MACd/zC,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEugD,cAAc,EAAE,CAAC;MACjBnwC,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEokD,KAAK,EAAE,CAAC;MACRh0C,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEqkD,KAAK,EAAE,CAAC;MACRj0C,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE+T,cAAc,EAAE,CAAC;MACjB3D,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE0U,cAAc,EAAE,CAAC;MACjBtE,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEgU,UAAU,EAAE,CAAC;MACb5D,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE2U,UAAU,EAAE,CAAC;MACbvE,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEskD,QAAQ,EAAE,CAAC;MACXl0C,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEoV,QAAQ,EAAE,CAAC;MACXhF,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE6J,aAAa,EAAE,CAAC;MAChBuG,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEqV,KAAK,EAAE,CAAC;MACRjF,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEoH,aAAa,EAAE,CAAC;MAChBgJ,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEsmC,UAAU,EAAE,CAAC;MACbl2B,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEiU,cAAc,EAAE,CAAC;MACjB7D,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE4U,cAAc,EAAE,CAAC;MACjBxE,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEkU,gBAAgB,EAAE,CAAC;MACnB9D,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEmU,kBAAkB,EAAE,CAAC;MACrB/D,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE6U,kBAAkB,EAAE,CAAC;MACrBzE,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEoU,mBAAmB,EAAE,CAAC;MACtBhE,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE8U,mBAAmB,EAAE,CAAC;MACtB1E,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEqU,UAAU,EAAE,CAAC;MACbjE,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE+U,UAAU,EAAE,CAAC;MACb3E,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEukD,YAAY,EAAE,CAAC;MACfn0C,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEwQ,eAAe,EAAE,CAAC;MAClBJ,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEsiD,SAAS,EAAE,CAAC;MACZlyC,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEuiD,SAAS,EAAE,CAAC;MACZnyC,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEolD,SAAS,EAAE,CAAC;MACZh1C,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEqlD,SAAS,EAAE,CAAC;MACZj1C,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEgL,SAAS,EAAE,CAAC;MACZoF,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE0F,QAAQ,EAAE,CAAC;MACX0K,IAAI,EAAE7P;IACV,CAAC,CAAC;IAAEqF,UAAU,EAAE,CAAC;MACbwK,IAAI,EAAE7P;IACV,CAAC,CAAC;IAAEsQ,eAAe,EAAE,CAAC;MAClBT,IAAI,EAAE1P,YAAY;MAClBm0B,IAAI,EAAE,CAAC,iBAAiB;IAC5B,CAAC,CAAC;IAAEte,qBAAqB,EAAE,CAAC;MACxBnG,IAAI,EAAE1P,YAAY;MAClBm0B,IAAI,EAAE,CAAC,uBAAuB;IAClC,CAAC,CAAC;IAAE3e,WAAW,EAAE,CAAC;MACd9F,IAAI,EAAEjQ,YAAY;MAClB00B,IAAI,EAAE,CAAC,YAAY;IACvB,CAAC;EAAE,CAAC;AAAA;AAEhB,MAAMkzB,eAAe,CAAC;AAEtBA,eAAe,CAACxuB,IAAI,YAAAyuB,wBAAAvuB,CAAA;EAAA,YAAAA,CAAA,IAAwFsuB,eAAe;AAAA,CAAkD;AAC7KA,eAAe,CAACvX,IAAI,kBAn7MsF7wC,EAAE,CAAA8wC,gBAAA;EAAArgC,IAAA,EAm7MC23C;AAAe,EAAgQ;AAC5XA,eAAe,CAACrX,IAAI,kBAp7MsF/wC,EAAE,CAAAgxC,gBAAA;EAAAC,OAAA,GAo7M4B,CAACiP,iBAAiB,CAAC;AAAA,EAAI;AAC/J;EAAA,QAAApkB,SAAA,oBAAAA,SAAA,KAr7M0G97B,EAAE,CAAA+7B,iBAAA,CAq7MjBqsB,eAAe,EAAc,CAAC;IAC7G33C,IAAI,EAAE3P,QAAQ;IACdo0B,IAAI,EAAE,CAAC;MACC+b,OAAO,EAAE,CAACiP,iBAAiB,CAAC;MAC5BhP,YAAY,EAAE,CAACqT,kBAAkB,EAAEwC,4BAA4B,EAAEW,yBAAyB,EAAE/D,mBAAmB,CAAC;MAChHxS,OAAO,EAAE,CAACoT,kBAAkB,EAAEwC,4BAA4B,EAAEW,yBAAyB,EAAE/D,mBAAmB;IAC9G,CAAC;EACT,CAAC,CAAC;AAAA;AAEV,MAAM2E,YAAY,CAAC;EACf7vB,WAAWA,CAACC,OAAO,EAAE;IACjB,IAAI,CAACje,UAAU,GAAG,IAAI;IACtB,IAAI,CAAChF,QAAQ,GAAG,KAAK;IACrB,IAAI,CAACzG,MAAM,GAAG,CAAC;IACf,IAAI,CAACzI,QAAQ,GAAG,KAAK;IACrB,IAAI,CAACmN,UAAU,GAAG,IAAI;IACtB,IAAI,CAACoH,aAAa,GAAG,IAAI;IACzB,IAAI,CAACjZ,MAAM,GAAG,IAAIlB,YAAY,CAAC,CAAC;IAChC,IAAI,CAACoF,QAAQ,GAAG,IAAIpF,YAAY,CAAC,CAAC;IAClC,IAAI,CAACsF,UAAU,GAAG,IAAItF,YAAY,CAAC,CAAC;IACpC,IAAI,CAAC0oB,WAAW,GAAG,KAAK;IACxB,IAAI,CAAC1E,OAAO,GAAG,KAAK;IACpB,IAAI,CAAC+T,OAAO,GAAGA,OAAO,CAACS,aAAa;EACxC;EACA0H,WAAWA,CAACC,OAAO,EAAE;IACjB,IAAIA,OAAO,CAACrmB,UAAU,EAAE;MACpB,IAAI,CAAC29B,aAAa,CAAC,CAAC;IACxB;IACA,IAAI,CAAC7U,MAAM,CAAC,CAAC;EACjB;EACAA,MAAMA,CAAA,EAAG;IACL,IAAI,CAAClzB,UAAU,GAAG,MAAM,GAAGyjB,EAAE,CAAC,CAAC,CAACwS,QAAQ,CAAC,CAAC;IAC1C,IAAI,CAAC72B,YAAY,GAAI,QAAO,IAAI,CAACY,UAAW,GAAE;IAC9C,IAAI,IAAI,CAACoF,QAAQ,IAAI,IAAI,CAACy/B,KAAK,EAAE;MAC7B,IAAI,CAAC5kC,aAAa,GAAG,IAAI,CAAC+nC,WAAW,CAAC,CAAC;MACvC,IAAI,CAAChvB,WAAW,GAAG,IAAI;IAC3B,CAAC,MACI;MACD,IAAI,CAACA,WAAW,GAAG,KAAK;IAC5B;IACA,IAAI,CAACivB,YAAY,CAAC,CAAC;IACnB,IAAI,CAACiQ,cAAc,CAAC,CAAC;EACzB;EACAnQ,aAAaA,CAAA,EAAG;IACZ,IAAI,CAAChkB,IAAI,GAAG,IAAI,CAACo0B,eAAe,CAAC,CAAC;IAClCzyB,UAAU,CAAC,IAAI,CAACwN,MAAM,CAACtK,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC;EAC3C;EACAqf,YAAYA,CAAA,EAAG;IACX,MAAMG,IAAI,GAAG52C,MAAM,CAAC,IAAI,CAAC62B,OAAO,CAAC,CAAC72B,MAAM,CAAC,MAAM,CAAC;IAChD,MAAMuyB,IAAI,GAAG,IAAI,CAACq0B,OAAO,CAAC,CAAC;IAC3B,IAAI,IAAI,CAAC/0C,UAAU,EAAE;MACjB+kC,IAAI,CAAC/2C,UAAU,CAAC,CAAC,CAACu0B,QAAQ,CAAC,GAAG,CAAC,CAACyiB,IAAI,CAAC,GAAG,EAAEtkB,IAAI,CAAC;IACnD,CAAC,MACI;MACDqkB,IAAI,CAACC,IAAI,CAAC,GAAG,EAAEtkB,IAAI,CAAC;IACxB;EACJ;EACAikB,WAAWA,CAAA,EAAG;IACV,IAAI,IAAI,CAACnD,KAAK,EAAE;MACZ,OAAO,IAAI,CAACA,KAAK;IACrB;IACA,OAAO,CACH;MACIlmC,MAAM,EAAE,CAAC;MACT1I,KAAK,EAAE,IAAI,CAAC4hB,IAAI;MAChBnZ,OAAO,EAAE,IAAI,CAAC25C,eAAe,CAAC;IAClC,CAAC,EACD;MACI15C,MAAM,EAAE,GAAG;MACX1I,KAAK,EAAE,IAAI,CAAC4hB,IAAI;MAChBnZ,OAAO,EAAE;IACb,CAAC,CACJ;EACL;EACAy5C,eAAeA,CAAA,EAAG;IACd,IAAI,CAAC,IAAI,CAAC90C,UAAU,EAAE;MAClB,OAAO,IAAI,CAAC+0C,OAAO,CAAC,CAAC;IACzB;IACA,IAAIl5C,MAAM,GAAG,IAAI,CAACo5C,SAAS,CAAC,CAAC;IAC7B,IAAIv0B,IAAI;IACR,IAAI,IAAI,CAAC3Z,UAAU,EAAE;MACjB,IAAI,IAAI,CAAChP,WAAW,KAAK8Y,cAAc,CAACnU,QAAQ,EAAE;QAC9Cb,MAAM,GAAGgyB,IAAI,CAAC1+B,GAAG,CAAC,IAAI,CAACqI,MAAM,EAAEqE,MAAM,CAAC;QACtC6kB,IAAI,GAAGia,WAAW,CAAC,IAAI,CAAC38B,CAAC,EAAE,IAAI,CAACC,CAAC,GAAG,IAAI,CAACzG,MAAM,EAAE,IAAI,CAACC,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAACy9C,KAAK,CAAC;MAClF,CAAC,MACI,IAAI,IAAI,CAACn9C,WAAW,KAAK8Y,cAAc,CAAC/J,UAAU,EAAE;QACrDjL,MAAM,GAAGgyB,IAAI,CAAC1+B,GAAG,CAAC,IAAI,CAACsI,KAAK,EAAEoE,MAAM,CAAC;QACrC6kB,IAAI,GAAGia,WAAW,CAAC,IAAI,CAAC38B,CAAC,EAAE,IAAI,CAACC,CAAC,EAAE,CAAC,EAAE,IAAI,CAACzG,MAAM,EAAE,CAAC,EAAE,IAAI,CAAC09C,KAAK,CAAC;MACrE;IACJ,CAAC,MACI;MACD,IAAI,IAAI,CAACn9C,WAAW,KAAK8Y,cAAc,CAACnU,QAAQ,EAAE;QAC9CgkB,IAAI,GAAGia,WAAW,CAAC,IAAI,CAAC38B,CAAC,EAAE,IAAI,CAACC,CAAC,GAAG,IAAI,CAACzG,MAAM,EAAE,IAAI,CAACC,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAACy9C,KAAK,CAAC;MAClF,CAAC,MACI,IAAI,IAAI,CAACn9C,WAAW,KAAK8Y,cAAc,CAAC/J,UAAU,EAAE;QACrD4Z,IAAI,GAAGia,WAAW,CAAC,IAAI,CAAC38B,CAAC,EAAE,IAAI,CAACC,CAAC,EAAE,CAAC,EAAE,IAAI,CAACzG,MAAM,EAAE,CAAC,EAAE,IAAI,CAAC09C,KAAK,CAAC;MACrE;IACJ;IACA,OAAOx0B,IAAI;EACf;EACAq0B,OAAOA,CAAA,EAAG;IACN,IAAIl5C,MAAM,GAAG,IAAI,CAACo5C,SAAS,CAAC,CAAC;IAC7B,IAAIv0B,IAAI;IACR,IAAI,IAAI,CAAC3Z,UAAU,EAAE;MACjB,IAAI,IAAI,CAAChP,WAAW,KAAK8Y,cAAc,CAACnU,QAAQ,EAAE;QAC9Cb,MAAM,GAAGgyB,IAAI,CAAC1+B,GAAG,CAAC,IAAI,CAACqI,MAAM,EAAEqE,MAAM,CAAC;QACtC6kB,IAAI,GAAGia,WAAW,CAAC,IAAI,CAAC38B,CAAC,EAAE,IAAI,CAACC,CAAC,EAAE,IAAI,CAACxG,KAAK,EAAE,IAAI,CAACD,MAAM,EAAEqE,MAAM,EAAE,IAAI,CAACq5C,KAAK,CAAC;MACnF,CAAC,MACI,IAAI,IAAI,CAACn9C,WAAW,KAAK8Y,cAAc,CAAC/J,UAAU,EAAE;QACrDjL,MAAM,GAAGgyB,IAAI,CAAC1+B,GAAG,CAAC,IAAI,CAACsI,KAAK,EAAEoE,MAAM,CAAC;QACrC6kB,IAAI,GAAGia,WAAW,CAAC,IAAI,CAAC38B,CAAC,EAAE,IAAI,CAACC,CAAC,EAAE,IAAI,CAACxG,KAAK,EAAE,IAAI,CAACD,MAAM,EAAEqE,MAAM,EAAE,IAAI,CAACq5C,KAAK,CAAC;MACnF;IACJ,CAAC,MACI;MACDx0B,IAAI,GAAGia,WAAW,CAAC,IAAI,CAAC38B,CAAC,EAAE,IAAI,CAACC,CAAC,EAAE,IAAI,CAACxG,KAAK,EAAE,IAAI,CAACD,MAAM,EAAEqE,MAAM,EAAE,IAAI,CAACq5C,KAAK,CAAC;IACnF;IACA,OAAOx0B,IAAI;EACf;EACAu0B,SAASA,CAAA,EAAG;IACR,IAAIp5C,MAAM,GAAG,CAAC;IACd,IAAI,IAAI,CAACkL,UAAU,IAAI,IAAI,CAACvP,MAAM,GAAG,CAAC,IAAI,IAAI,CAACC,KAAK,GAAG,CAAC,EAAE;MACtDoE,MAAM,GAAGgyB,IAAI,CAACqD,KAAK,CAACrD,IAAI,CAAC1+B,GAAG,CAAC,CAAC,EAAE,IAAI,CAACqI,MAAM,GAAG,CAAC,EAAE,IAAI,CAACC,KAAK,GAAG,CAAC,CAAC,CAAC;IACrE;IACA,OAAOoE,MAAM;EACjB;EACAm5C,eAAeA,CAAA,EAAG;IACd,IAAI,IAAI,CAACjuC,UAAU,EAAE;MACjB,OAAO,GAAG;IACd,CAAC,MACI;MACD,OAAO,GAAG;IACd;EACJ;EACA,IAAImuC,KAAKA,CAAA,EAAG;IACR,IAAIA,KAAK,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;IACxC,IAAI,IAAI,CAACnuC,UAAU,EAAE;MACjB,IAAI,IAAI,CAAChP,WAAW,KAAK8Y,cAAc,CAACnU,QAAQ,EAAE;QAC9C,IAAI,IAAI,CAACN,IAAI,CAAChC,KAAK,GAAG,CAAC,EAAE;UACrB86C,KAAK,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,CAAC;QACtC,CAAC,MACI;UACDA,KAAK,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,CAAC;QACtC;MACJ,CAAC,MACI,IAAI,IAAI,CAACn9C,WAAW,KAAK8Y,cAAc,CAAC/J,UAAU,EAAE;QACrD,IAAI,IAAI,CAAC1K,IAAI,CAAChC,KAAK,GAAG,CAAC,EAAE;UACrB86C,KAAK,GAAG,CAAC,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC;QACtC,CAAC,MACI;UACDA,KAAK,GAAG,CAAC,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,CAAC;QACtC;MACJ;IACJ;IACA,OAAOA,KAAK;EAChB;EACAnmB,YAAYA,CAAA,EAAG;IACX,IAAI,CAAC18B,QAAQ,CAACF,IAAI,CAAC,IAAI,CAACiK,IAAI,CAAC;EACjC;EACA4yB,YAAYA,CAAA,EAAG;IACX,IAAI,CAACz8B,UAAU,CAACJ,IAAI,CAAC,IAAI,CAACiK,IAAI,CAAC;EACnC;EACAy4C,cAAcA,CAAA,EAAG;IACb,IAAI,CAAC5jC,OAAO,GACR,IAAI,CAAC7J,aAAa,KACZ,IAAI,CAACrP,WAAW,KAAK8Y,cAAc,CAACnU,QAAQ,IAAI,IAAI,CAAClF,MAAM,KAAK,CAAC,IAC9D,IAAI,CAACO,WAAW,KAAK8Y,cAAc,CAAC/J,UAAU,IAAI,IAAI,CAACrP,KAAK,KAAK,CAAE,CAAC;EACrF;AACJ;AACAm9C,YAAY,CAAC1uB,IAAI,YAAAivB,qBAAA/uB,CAAA;EAAA,YAAAA,CAAA,IAAwFwuB,YAAY,EA7lNXtoD,EAAE,CAAA+5B,iBAAA,CA6lN2B/5B,EAAE,CAACg6B,UAAU;AAAA,CAA4C;AAChMsuB,YAAY,CAACpuB,IAAI,kBA9lNyFl6B,EAAE,CAAAm6B,iBAAA;EAAA1pB,IAAA,EA8lNf63C,YAAY;EAAAluB,SAAA;EAAAS,YAAA,WAAAiuB,0BAAA9kD,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MA9lNChE,EAAE,CAAAuF,UAAA,wBAAAwjD,2CAAA;QAAA,OA8lNf9kD,GAAA,CAAAw+B,YAAA,CAAa,CAAC;MAAA,CAAH,CAAC,wBAAAumB,2CAAA;QAAA,OAAZ/kD,GAAA,CAAAy+B,YAAA,CAAa,CAAC;MAAA,CAAH,CAAC;IAAA;EAAA;EAAAxH,MAAA;IAAAhT,IAAA;IAAApY,IAAA;IAAA3E,KAAA;IAAAD,MAAA;IAAAwG,CAAA;IAAAC,CAAA;IAAAlG,WAAA;IAAAgP,UAAA;IAAAhF,QAAA;IAAAzG,MAAA;IAAAzI,QAAA;IAAA2uC,KAAA;IAAAxhC,UAAA;IAAAgH,SAAA;IAAAI,aAAA;EAAA;EAAA8iB,OAAA;IAAA/7B,MAAA;IAAAkE,QAAA;IAAAE,UAAA;EAAA;EAAA27B,QAAA,GA9lNC5hC,EAAE,CAAA6hC,oBAAA;EAAA+G,KAAA,EAAA9uB,IAAA;EAAAqhB,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAA32B,QAAA,WAAAukD,sBAAAjlD,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MAAFhE,EAAE,CAAAoE,UAAA,IAAA2V,iCAAA,iBA+lN3E,CAAC;MA/lNwE/Z,EAAE,CAAA8H,cAAA;MAAF9H,EAAE,CAAAmE,cAAA,aA6mNvG,CAAC;MA7mNoGnE,EAAE,CAAAuF,UAAA,mBAAA2jD,4CAAA;QAAA,OA4mN7FjlD,GAAA,CAAApC,MAAA,CAAAgE,IAAA,CAAA5B,GAAA,CAAA6L,IAAgB,CAAC;MAAA,EAAC;MA5mNyE9P,EAAE,CAAAqE,YAAA,CA6mNvG,CAAC;IAAA;IAAA,IAAAL,EAAA;MA7mNoGhE,EAAE,CAAAyE,UAAA,SAAAR,GAAA,CAAAolB,WA+lN7E,CAAC;MA/lN0ErpB,EAAE,CAAAwE,SAAA,CAumN9E,CAAC;MAvmN2ExE,EAAE,CAAA0Q,WAAA,WAAAzM,GAAA,CAAAsC,QAumN9E,CAAC,WAAAtC,GAAA,CAAA0gB,OACF,CAAC;MAxmN4E3kB,EAAE,CAAAoI,WAAA,MAAAnE,GAAA,CAAAmwB,IAAA,gBAAAnwB,GAAA,CAAAyW,SAAA,UAAAzW,GAAA,CAAAolB,WAAA,GAAAplB,GAAA,CAAAwL,YAAA,GAAAxL,GAAA,CAAAikB,IAAA;IAAA;EAAA;EAAAsT,YAAA,GA8mNlEwZ,0BAA0B,EAAmHh0C,EAAE,CAACy6B,IAAI;EAAAG,aAAA;EAAAmG,eAAA;AAAA,EAAwH;AACtT;EAAA,QAAAjG,SAAA,oBAAAA,SAAA,KA/mN0G97B,EAAE,CAAA+7B,iBAAA,CA+mNjBusB,YAAY,EAAc,CAAC;IAC1G73C,IAAI,EAAEvQ,SAAS;IACfg1B,IAAI,EAAE,CAAC;MACC8G,QAAQ,EAAE,mBAAmB;MAC7Bt3B,QAAQ,EAAG;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;MACiBq9B,eAAe,EAAErhC,uBAAuB,CAACshC;IAC7C,CAAC;EACT,CAAC,CAAC,EAAkB,YAAY;IAAE,OAAO,CAAC;MAAEvxB,IAAI,EAAEzQ,EAAE,CAACg6B;IAAW,CAAC,CAAC;EAAE,CAAC,EAAkB;IAAE9R,IAAI,EAAE,CAAC;MACxFzX,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEyP,IAAI,EAAE,CAAC;MACPW,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE8K,KAAK,EAAE,CAAC;MACRsF,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE6K,MAAM,EAAE,CAAC;MACTuF,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEqR,CAAC,EAAE,CAAC;MACJjB,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEsR,CAAC,EAAE,CAAC;MACJlB,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEoL,WAAW,EAAE,CAAC;MACdgF,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEoa,UAAU,EAAE,CAAC;MACbhK,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEoV,QAAQ,EAAE,CAAC;MACXhF,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE2O,MAAM,EAAE,CAAC;MACTyB,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEkG,QAAQ,EAAE,CAAC;MACXkK,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE60C,KAAK,EAAE,CAAC;MACRzkC,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEqT,UAAU,EAAE,CAAC;MACbjD,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEqa,SAAS,EAAE,CAAC;MACZjK,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEya,aAAa,EAAE,CAAC;MAChBrK,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEwB,MAAM,EAAE,CAAC;MACT4O,IAAI,EAAE7P;IACV,CAAC,CAAC;IAAEmF,QAAQ,EAAE,CAAC;MACX0K,IAAI,EAAE7P;IACV,CAAC,CAAC;IAAEqF,UAAU,EAAE,CAAC;MACbwK,IAAI,EAAE7P;IACV,CAAC,CAAC;IAAE6hC,YAAY,EAAE,CAAC;MACfhyB,IAAI,EAAEjQ,YAAY;MAClB00B,IAAI,EAAE,CAAC,YAAY;IACvB,CAAC,CAAC;IAAEwN,YAAY,EAAE,CAAC;MACfjyB,IAAI,EAAEjQ,YAAY;MAClB00B,IAAI,EAAE,CAAC,YAAY;IACvB,CAAC;EAAE,CAAC;AAAA;AAEhB,IAAIi0B,YAAY;AAChB,CAAC,UAAUA,YAAY,EAAE;EACrBA,YAAY,CAAC,UAAU,CAAC,GAAG,UAAU;EACrCA,YAAY,CAAC,YAAY,CAAC,GAAG,YAAY;EACzCA,YAAY,CAAC,SAAS,CAAC,GAAG,SAAS;AACvC,CAAC,EAAEA,YAAY,KAAKA,YAAY,GAAG,CAAC,CAAC,CAAC,CAAC;AAEvC,IAAIC,OAAO;AACX,CAAC,UAAUA,OAAO,EAAE;EAChBA,OAAO,CAAC,UAAU,CAAC,GAAG,UAAU;EAChCA,OAAO,CAAC,UAAU,CAAC,GAAG,UAAU;AACpC,CAAC,EAAEA,OAAO,KAAKA,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC;AAE7B,MAAMC,iBAAiB,CAAC;EACpB5wB,WAAWA,CAACC,OAAO,EAAE;IACjB,IAAI,CAAC2R,iBAAiB,GAAG,IAAI1pC,YAAY,CAAC,CAAC;IAC3C,IAAI,CAAC2oD,iBAAiB,GAAG,CAAC;IAC1B,IAAI,CAACC,eAAe,GAAG,CAAC;IACxB,IAAI,CAAC7wB,OAAO,GAAGA,OAAO,CAACS,aAAa;EACxC;EACA0H,WAAWA,CAACC,OAAO,EAAE;IACjB,IAAI,CAACyC,MAAM,CAAC,CAAC;EACjB;EACAimB,OAAOA,CAAA,EAAG;IACN,MAAMjb,CAAC,GAAG,IAAI,CAAC7V,OAAO,CAACW,qBAAqB,CAAC,CAAC,CAACnuB,MAAM;IACrD,MAAMojC,CAAC,GAAG,IAAI,CAAC5V,OAAO,CAACW,qBAAqB,CAAC,CAAC,CAACluB,KAAK;IACpD,OAAO;MAAED,MAAM,EAAEqjC,CAAC;MAAEpjC,KAAK,EAAEmjC,CAAC;MAAEtyB,QAAQ,EAAE,IAAI,CAAClO,KAAK,GAAG;IAAE,CAAC;EAC5D;EACAkrB,eAAeA,CAAA,EAAG;IACd,IAAI,CAACqR,iBAAiB,CAACxkC,IAAI,CAAC,IAAI,CAAC2jD,OAAO,CAAC,CAAC,CAAC;EAC/C;EACAjmB,MAAMA,CAAA,EAAG;IACL,IAAI,IAAI,CAAC5wB,eAAe,EAAE;MACtB,IAAI,CAAC82C,aAAa,GAAG,IAAI,CAAC92C,eAAe,CAAC,IAAI,CAAC7E,KAAK,CAAC;IACzD,CAAC,MACI;MACD,IAAI,CAAC27C,aAAa,GAAGxnB,WAAW,CAAC,IAAI,CAACn0B,KAAK,CAAC;IAChD;IACA,IAAI,IAAI,CAACrC,WAAW,KAAK,YAAY,EAAE;MACnC,IAAI,CAACiG,CAAC,GAAG,IAAI,CAACg4C,IAAI,GAAG,IAAI,CAACC,QAAQ;MAClC;MACA;MACA,IAAI,IAAI,CAAC77C,KAAK,GAAG,CAAC,EAAE;QAChB,IAAI,CAAC4D,CAAC,GAAG,IAAI,CAACA,CAAC,GAAG,IAAI,CAAC43C,iBAAiB;QACxC,IAAI,CAAC//C,UAAU,GAAG,KAAK;MAC3B,CAAC,MACI;QACD,IAAI,CAACmI,CAAC,GAAG,IAAI,CAACA,CAAC,GAAG,IAAI,CAAC43C,iBAAiB;QACxC,IAAI,CAAC//C,UAAU,GAAG,OAAO;MAC7B;MACA,IAAI,CAACoI,CAAC,GAAG,IAAI,CAACi4C,IAAI,GAAG,IAAI,CAACC,SAAS,GAAG,CAAC;IAC3C,CAAC,MACI;MACD;MACA,IAAI,CAACn4C,CAAC,GAAG,IAAI,CAACg4C,IAAI,GAAG,IAAI,CAACC,QAAQ,GAAG,CAAC;MACtC,IAAI,CAACh4C,CAAC,GAAG,IAAI,CAACi4C,IAAI,GAAG,IAAI,CAACC,SAAS;MACnC,IAAI,IAAI,CAAC/7C,KAAK,GAAG,CAAC,EAAE;QAChB,IAAI,CAAC6D,CAAC,GAAG,IAAI,CAACA,CAAC,GAAG,IAAI,CAAC43C,eAAe;QACtC,IAAI,CAAChgD,UAAU,GAAG,KAAK;MAC3B,CAAC,MACI;QACD,IAAI,CAACoI,CAAC,GAAG,IAAI,CAACA,CAAC,GAAG,IAAI,CAAC43C,eAAe;QACtC,IAAI,CAAChgD,UAAU,GAAG,OAAO;MAC7B;MACA,IAAI,CAACyD,SAAS,GAAI,eAAc,IAAI,CAAC0E,CAAE,MAAK,IAAI,CAACC,CAAE,GAAE;IACzD;EACJ;AACJ;AACA03C,iBAAiB,CAACzvB,IAAI,YAAAkwB,0BAAAhwB,CAAA;EAAA,YAAAA,CAAA,IAAwFuvB,iBAAiB,EAtvNrBrpD,EAAE,CAAA+5B,iBAAA,CAsvNqC/5B,EAAE,CAACg6B,UAAU;AAAA,CAA4C;AAC1MqvB,iBAAiB,CAACnvB,IAAI,kBAvvNoFl6B,EAAE,CAAAm6B,iBAAA;EAAA1pB,IAAA,EAuvNV44C,iBAAiB;EAAAjvB,SAAA;EAAAc,MAAA;IAAAptB,KAAA;IAAA6E,eAAA;IAAA+2C,IAAA;IAAAE,IAAA;IAAAD,QAAA;IAAAE,SAAA;IAAAp+C,WAAA;EAAA;EAAAmyB,OAAA;IAAAyM,iBAAA;EAAA;EAAAzI,QAAA,GAvvNT5hC,EAAE,CAAA6hC,oBAAA;EAAA+G,KAAA,EAAA5uB,IAAA;EAAAmhB,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAA32B,QAAA,WAAAqlD,2BAAA/lD,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MAAFhE,EAAE,CAAA8H,cAAA;MAAF9H,EAAE,CAAAmE,cAAA,aA+vNxG,CAAC;MA/vNqGnE,EAAE,CAAAkF,MAAA,EAiwNzG,CAAC;MAjwNsGlF,EAAE,CAAAqE,YAAA,CAiwN9F,CAAC;IAAA;IAAA,IAAAL,EAAA;MAjwN2FhE,EAAE,CAAAoI,WAAA,gBAAAnE,GAAA,CAAAsF,UAAA,eAAAtF,GAAA,CAAA+I,SAAA,OAAA/I,GAAA,CAAAyN,CAAA,OAAAzN,GAAA,CAAA0N,CAAA;MAAF3R,EAAE,CAAAwE,SAAA,CAiwNzG,CAAC;MAjwNsGxE,EAAE,CAAAqI,kBAAA,MAAApE,GAAA,CAAAwlD,aAAA,KAiwNzG,CAAC;IAAA;EAAA;EAAA9tB,MAAA;EAAAoG,eAAA;AAAA,EACoH;AACxH;EAAA,QAAAjG,SAAA,oBAAAA,SAAA,KAnwN0G97B,EAAE,CAAA+7B,iBAAA,CAmwNjBstB,iBAAiB,EAAc,CAAC;IAC/G54C,IAAI,EAAEvQ,SAAS;IACfg1B,IAAI,EAAE,CAAC;MAAE8G,QAAQ,EAAE,yBAAyB;MAAEt3B,QAAQ,EAAG;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;MAAEq9B,eAAe,EAAErhC,uBAAuB,CAACshC,MAAM;MAAErG,MAAM,EAAE,CAAC,kCAAkC;IAAE,CAAC;EAC5F,CAAC,CAAC,EAAkB,YAAY;IAAE,OAAO,CAAC;MAAElrB,IAAI,EAAEzQ,EAAE,CAACg6B;IAAW,CAAC,CAAC;EAAE,CAAC,EAAkB;IAAElsB,KAAK,EAAE,CAAC;MACzF2C,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEsS,eAAe,EAAE,CAAC;MAClBlC,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEqpD,IAAI,EAAE,CAAC;MACPj5C,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEupD,IAAI,EAAE,CAAC;MACPn5C,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEspD,QAAQ,EAAE,CAAC;MACXl5C,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEwpD,SAAS,EAAE,CAAC;MACZp5C,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEoL,WAAW,EAAE,CAAC;MACdgF,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEgqC,iBAAiB,EAAE,CAAC;MACpB55B,IAAI,EAAE7P;IACV,CAAC;EAAE,CAAC;AAAA;AAEhB,MAAMopD,gBAAgB,CAAC;EACnBvxB,WAAWA,CAAA,EAAG;IACV,IAAI,CAAChoB,IAAI,GAAG04C,YAAY,CAACnT,QAAQ;IACjC,IAAI,CAACnlC,eAAe,GAAG,KAAK;IAC5B,IAAI,CAAC6C,UAAU,GAAG,IAAI;IACtB,IAAI,CAACwJ,aAAa,GAAG,KAAK;IAC1B,IAAI,CAACpC,aAAa,GAAG,IAAI;IACzB,IAAI,CAACjZ,MAAM,GAAG,IAAIlB,YAAY,CAAC,CAAC;IAChC,IAAI,CAACoF,QAAQ,GAAG,IAAIpF,YAAY,CAAC,CAAC;IAClC,IAAI,CAACsF,UAAU,GAAG,IAAItF,YAAY,CAAC,CAAC;IACpC,IAAI,CAACwa,qBAAqB,GAAG,IAAIxa,YAAY,CAAC,CAAC;IAC/C,IAAI,CAAC8a,iBAAiB,GAAG,EAAE;IAC3B,IAAI,CAACtL,cAAc,GAAGoU,cAAc;EACxC;EACAsc,WAAWA,CAACC,OAAO,EAAE;IACjB,IAAI,CAACyC,MAAM,CAAC,CAAC;EACjB;EACAA,MAAMA,CAAA,EAAG;IACL,IAAI,CAAC0mB,qBAAqB,CAAC,CAAC;IAC5B,MAAM7N,EAAE,GAAG;MACP,CAACgN,OAAO,CAACc,QAAQ,GAAG,CAAC;MACrB,CAACd,OAAO,CAACptC,QAAQ,GAAG;IACxB,CAAC;IACD,IAAImuC,MAAM;IACVA,MAAM,GAAGf,OAAO,CAACc,QAAQ;IACzB,IAAI5uC,KAAK;IACT,IAAI,IAAI,CAAC7K,IAAI,KAAK04C,YAAY,CAAC7qC,UAAU,EAAE;MACvChD,KAAK,GAAG,IAAI,CAAC2B,MAAM,CAAC2yB,GAAG,CAAC7L,CAAC,IAAIA,CAAC,CAACj2B,KAAK,CAAC,CAAC+7B,MAAM,CAAC,CAAC+V,GAAG,EAAE7b,CAAC,KAAK6b,GAAG,GAAG7b,CAAC,EAAE,CAAC,CAAC;IACxE;IACA,MAAM4e,SAAS,GAAGphB,IAAI,CAACz+B,GAAG,CAAC,IAAI,CAACiI,MAAM,CAACjE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;IACtD,IAAI,CAACsZ,IAAI,GAAG,IAAI,CAACnD,MAAM,CAAC2yB,GAAG,CAAC7L,CAAC,IAAI;MAC7B,IAAIj2B,KAAK,GAAGi2B,CAAC,CAACj2B,KAAK;MACnB,MAAM1H,KAAK,GAAG,IAAI,CAACgkD,QAAQ,CAACrmB,CAAC,CAAC;MAC9B,MAAM19B,cAAc,GAAG47B,WAAW,CAAC77B,KAAK,CAAC;MACzC,MAAMqU,UAAU,GAAG,IAAI,CAACA,UAAU;MAClC0vC,MAAM,GAAGr8C,KAAK,GAAG,CAAC,GAAGs7C,OAAO,CAACc,QAAQ,GAAGd,OAAO,CAACptC,QAAQ;MACxD,MAAMquC,GAAG,GAAG;QACRv8C,KAAK;QACL1H,KAAK;QACLqU,UAAU;QACV3K,IAAI,EAAEi0B,CAAC;QACP19B;MACJ,CAAC;MACDgkD,GAAG,CAACn/C,MAAM,GAAG,IAAI,CAACsD,MAAM,CAACi9B,SAAS,CAAC,CAAC;MACpC,IAAI,IAAI,CAACh7B,IAAI,KAAK04C,YAAY,CAACnT,QAAQ,EAAE;QACrCqU,GAAG,CAACl/C,KAAK,GAAGo2B,IAAI,CAACoL,GAAG,CAAC,IAAI,CAAC5hC,MAAM,CAAC+C,KAAK,CAAC,GAAG,IAAI,CAAC/C,MAAM,CAAC43C,SAAS,CAAC,CAAC;QACjE,IAAI70C,KAAK,GAAG,CAAC,EAAE;UACXu8C,GAAG,CAAC34C,CAAC,GAAG,IAAI,CAAC3G,MAAM,CAAC+C,KAAK,CAAC;QAC9B,CAAC,MACI;UACDu8C,GAAG,CAAC34C,CAAC,GAAG,IAAI,CAAC3G,MAAM,CAAC43C,SAAS,CAAC;QAClC;QACA0H,GAAG,CAAC14C,CAAC,GAAG,IAAI,CAACnD,MAAM,CAACpI,KAAK,CAAC;MAC9B,CAAC,MACI,IAAI,IAAI,CAACqK,IAAI,KAAK04C,YAAY,CAAC5wC,OAAO,EAAE;QACzC,MAAM+xC,OAAO,GAAGlO,EAAE,CAAC+N,MAAM,CAAC;QAC1B,MAAMI,OAAO,GAAGD,OAAO,GAAGx8C,KAAK;QAC/BsuC,EAAE,CAAC+N,MAAM,CAAC,IAAIr8C,KAAK;QACnBu8C,GAAG,CAACl/C,KAAK,GAAG,IAAI,CAACJ,MAAM,CAACw/C,OAAO,CAAC,GAAG,IAAI,CAACx/C,MAAM,CAACu/C,OAAO,CAAC;QACvDD,GAAG,CAAC34C,CAAC,GAAG,IAAI,CAAC3G,MAAM,CAACu/C,OAAO,CAAC;QAC5BD,GAAG,CAAC14C,CAAC,GAAG,CAAC;QACT04C,GAAG,CAACC,OAAO,GAAGA,OAAO;QACrBD,GAAG,CAACE,OAAO,GAAGA,OAAO;MACzB,CAAC,MACI,IAAI,IAAI,CAAC95C,IAAI,KAAK04C,YAAY,CAAC7qC,UAAU,EAAE;QAC5C,IAAIgsC,OAAO,GAAGlO,EAAE,CAAC+N,MAAM,CAAC;QACxB,IAAII,OAAO,GAAGD,OAAO,GAAGx8C,KAAK;QAC7BsuC,EAAE,CAAC+N,MAAM,CAAC,IAAIr8C,KAAK;QACnB,IAAIwN,KAAK,GAAG,CAAC,EAAE;UACXgvC,OAAO,GAAIA,OAAO,GAAG,GAAG,GAAIhvC,KAAK;UACjCivC,OAAO,GAAIA,OAAO,GAAG,GAAG,GAAIjvC,KAAK;QACrC,CAAC,MACI;UACDgvC,OAAO,GAAG,CAAC;UACXC,OAAO,GAAG,CAAC;QACf;QACAF,GAAG,CAACl/C,KAAK,GAAG,IAAI,CAACJ,MAAM,CAACw/C,OAAO,CAAC,GAAG,IAAI,CAACx/C,MAAM,CAACu/C,OAAO,CAAC;QACvDD,GAAG,CAAC34C,CAAC,GAAG,IAAI,CAAC3G,MAAM,CAACu/C,OAAO,CAAC;QAC5BD,GAAG,CAAC14C,CAAC,GAAG,CAAC;QACT04C,GAAG,CAACC,OAAO,GAAGA,OAAO;QACrBD,GAAG,CAACE,OAAO,GAAGA,OAAO;QACrBz8C,KAAK,GAAG,CAACy8C,OAAO,GAAGD,OAAO,EAAEjO,OAAO,CAAC,CAAC,CAAC,GAAG,GAAG;MAChD;MACA,IAAI,IAAI,CAACt1C,MAAM,CAACyO,SAAS,KAAKkrB,SAAS,CAACkG,OAAO,EAAE;QAC7CyjB,GAAG,CAAC/jD,KAAK,GAAG,IAAI,CAACS,MAAM,CAACwiB,QAAQ,CAACnjB,KAAK,CAAC;MAC3C,CAAC,MACI;QACD,IAAI,IAAI,CAACqK,IAAI,KAAK04C,YAAY,CAACnT,QAAQ,EAAE;UACrCqU,GAAG,CAAC/jD,KAAK,GAAG,IAAI,CAACS,MAAM,CAACwiB,QAAQ,CAACzb,KAAK,CAAC;UACvCu8C,GAAG,CAAC/5C,aAAa,GAAG,IAAI,CAACvJ,MAAM,CAAC66C,sBAAsB,CAAC9zC,KAAK,CAAC;QACjE,CAAC,MACI;UACDu8C,GAAG,CAAC/jD,KAAK,GAAG,IAAI,CAACS,MAAM,CAACwiB,QAAQ,CAAC8gC,GAAG,CAACE,OAAO,CAAC;UAC7CF,GAAG,CAAC/5C,aAAa,GAAG,IAAI,CAACvJ,MAAM,CAAC66C,sBAAsB,CAACyI,GAAG,CAACE,OAAO,EAAEF,GAAG,CAACC,OAAO,CAAC;QACpF;MACJ;MACA,IAAIjU,YAAY,GAAGhwC,cAAc;MACjCgkD,GAAG,CAAC3vC,SAAS,GAAGrU,cAAc,GAAG,GAAG,GAAGyH,KAAK,CAACuF,cAAc,CAAC,CAAC;MAC7D,IAAI,IAAI,CAAC1C,UAAU,KAAK,IAAI,IAAI,IAAI,CAACA,UAAU,KAAKQ,SAAS,EAAE;QAC3DklC,YAAY,GAAI,GAAE,IAAI,CAAC1lC,UAAW,MAAKtK,cAAe,EAAC;QACvDgkD,GAAG,CAACv6C,IAAI,CAACmN,MAAM,GAAG,IAAI,CAACtM,UAAU;QACjC05C,GAAG,CAAC3vC,SAAS,GAAG,IAAI,CAAC/J,UAAU,GAAG,GAAG,GAAG05C,GAAG,CAAC3vC,SAAS;MACzD;MACA2vC,GAAG,CAACxvC,WAAW,GAAG,IAAI,CAAChK,eAAe,GAChCM,SAAS,GACR;AACnB,sCAAsCgxB,WAAW,CAACkU,YAAY,CAAE;AAChE,oCAAoC,IAAI,CAAC96B,mBAAmB,GAAG,IAAI,CAACA,mBAAmB,CAACzN,KAAK,CAAC,GAAGA,KAAK,CAACuF,cAAc,CAAC,CAAE;AACxH,OAAO;MACK,OAAOg3C,GAAG;IACd,CAAC,CAAC;IACF,IAAI,CAACG,gBAAgB,CAAC,CAAC;EAC3B;EACAA,gBAAgBA,CAAA,EAAG;IACf,IAAI,IAAI,CAAC/5C,IAAI,KAAK04C,YAAY,CAAC5wC,OAAO,EAAE;MACpC,IAAI,CAACkD,iBAAiB,GAAG,EAAE;MAC3B,MAAMgvC,OAAO,GAAG,CAAC,CAAC;MAClBA,OAAO,CAACxtC,MAAM,GAAG,IAAI,CAACtM,UAAU;MAChC,MAAM+5C,aAAa,GAAG,IAAI,CAACztC,MAAM,CAAC2yB,GAAG,CAAC7L,CAAC,IAAIA,CAAC,CAACj2B,KAAK,CAAC,CAAC+7B,MAAM,CAAC,CAAC+V,GAAG,EAAE7b,CAAC,KAAMA,CAAC,GAAG,CAAC,GAAG6b,GAAG,GAAG7b,CAAC,GAAG6b,GAAI,EAAE,CAAC,CAAC;MAClG,MAAM+K,aAAa,GAAG,IAAI,CAAC1tC,MAAM,CAAC2yB,GAAG,CAAC7L,CAAC,IAAIA,CAAC,CAACj2B,KAAK,CAAC,CAAC+7B,MAAM,CAAC,CAAC+V,GAAG,EAAE7b,CAAC,KAAMA,CAAC,GAAG,CAAC,GAAG6b,GAAG,GAAG7b,CAAC,GAAG6b,GAAI,EAAE,CAAC,CAAC;MAClG6K,OAAO,CAACnvC,KAAK,GAAGovC,aAAa,GAAGC,aAAa;MAC7CF,OAAO,CAAC/4C,CAAC,GAAG,CAAC;MACb+4C,OAAO,CAAC94C,CAAC,GAAG,CAAC;MACb;MACA,IAAI84C,OAAO,CAACnvC,KAAK,GAAG,CAAC,EAAE;QACnBmvC,OAAO,CAACt/C,KAAK,GAAG,IAAI,CAACJ,MAAM,CAAC2/C,aAAa,CAAC;MAC9C,CAAC,MACI;QACDD,OAAO,CAACt/C,KAAK,GAAG,IAAI,CAACJ,MAAM,CAAC4/C,aAAa,CAAC;MAC9C;MACAF,OAAO,CAACv/C,MAAM,GAAG,IAAI,CAACsD,MAAM,CAACi9B,SAAS,CAAC,CAAC;MACxC,IAAI,CAAChwB,iBAAiB,CAACuiB,IAAI,CAACysB,OAAO,CAAC;IACxC,CAAC,MACI;MACD,IAAI,CAAChvC,iBAAiB,GAAG,IAAI,CAACwB,MAAM,CAAC2yB,GAAG,CAAC7L,CAAC,IAAI;QAC1C,MAAM0mB,OAAO,GAAG,CAAC,CAAC;QAClBA,OAAO,CAACxtC,MAAM,GAAG,IAAI,CAACtM,UAAU,IAAIozB,CAAC,CAAC39B,KAAK;QAC3CqkD,OAAO,CAACnvC,KAAK,GAAGyoB,CAAC,CAACj2B,KAAK;QACvB28C,OAAO,CAAC/4C,CAAC,GAAG,IAAI,CAAC3G,MAAM,CAAC,CAAC,CAAC;QAC1B0/C,OAAO,CAAC94C,CAAC,GAAG,IAAI,CAACnD,MAAM,CAACu1B,CAAC,CAAC39B,KAAK,CAAC;QAChCqkD,OAAO,CAACt/C,KAAK,GAAG,IAAI,CAACJ,MAAM,CAAC0/C,OAAO,CAACnvC,KAAK,CAAC,GAAG,IAAI,CAACvQ,MAAM,CAAC,CAAC,CAAC;QAC3D0/C,OAAO,CAACv/C,MAAM,GAAG,IAAI,CAACsD,MAAM,CAACi9B,SAAS,CAAC,CAAC;QACxC,OAAOgf,OAAO;MAClB,CAAC,CAAC;IACN;EACJ;EACAR,qBAAqBA,CAAA,EAAG;IACpB,IAAI,CAACtvC,gBAAgB,GAAG,IAAI,CAAC9J,eAAe,GAAGM,SAAS,GAAGwlB,cAAc,CAAC5lB,GAAG;IAC7E,IAAI,CAAC6J,WAAW,GAAG,IAAI,CAAC/J,eAAe,GAAGM,SAAS,GAAGigC,UAAU,CAACngC,OAAO;EAC5E;EACA1K,QAAQA,CAACq9B,KAAK,EAAE;IACZ,IAAI,CAAC,IAAI,CAACn8B,aAAa,EACnB,OAAO,KAAK;IAChB,MAAMo8B,IAAI,GAAG,IAAI,CAACp8B,aAAa,CAACq8B,IAAI,CAAC8mB,MAAM,IAAI;MAC3C,OAAOhnB,KAAK,CAAC71B,IAAI,KAAK68C,MAAM,CAAC78C,IAAI,IAAI61B,KAAK,CAAC91B,KAAK,KAAK88C,MAAM,CAAC98C,KAAK;IACrE,CAAC,CAAC;IACF,OAAO+1B,IAAI,KAAK1yB,SAAS;EAC7B;EACAi5C,QAAQA,CAACS,QAAQ,EAAE;IACf,IAAIA,QAAQ,CAACzkD,KAAK,EAAE;MAChB,OAAOykD,QAAQ,CAACzkD,KAAK;IACzB;IACA,OAAOykD,QAAQ,CAAC98C,IAAI;EACxB;EACA6J,OAAOA,CAACzP,KAAK,EAAEkiD,GAAG,EAAE;IAChB,OAAOA,GAAG,CAACjkD,KAAK;EACpB;EACAsV,gBAAgBA,CAACvT,KAAK,EAAE2iD,QAAQ,EAAE;IAC9B,OAAO3iD,KAAK,GAAG,GAAG,GAAG2iD,QAAQ,CAAC7tC,MAAM,GAAG,GAAG,GAAG6tC,QAAQ,CAACxvC,KAAK;EAC/D;EACAlB,KAAKA,CAACtK,IAAI,EAAE;IACR,IAAI,CAACjO,MAAM,CAACgE,IAAI,CAACiK,IAAI,CAAC;EAC1B;AACJ;AACAk6C,gBAAgB,CAACpwB,IAAI,YAAAmxB,yBAAAjxB,CAAA;EAAA,YAAAA,CAAA,IAAwFkwB,gBAAgB;AAAA,CAAmD;AAChLA,gBAAgB,CAAC9vB,IAAI,kBAl9NqFl6B,EAAE,CAAAm6B,iBAAA;EAAA1pB,IAAA,EAk9NXu5C,gBAAgB;EAAA5vB,SAAA;EAAAc,MAAA;IAAAjwB,IAAA;IAAAwF,IAAA;IAAAwM,MAAA;IAAAlS,MAAA;IAAAyD,MAAA;IAAAzH,MAAA;IAAA8J,eAAA;IAAA4E,QAAA;IAAAhO,aAAA;IAAAkJ,UAAA;IAAAO,eAAA;IAAAuJ,UAAA;IAAA/G,UAAA;IAAAwJ,aAAA;IAAA3B,mBAAA;IAAAT,aAAA;EAAA;EAAA8iB,OAAA;IAAA/7B,MAAA;IAAAkE,QAAA;IAAAE,UAAA;IAAAkV,qBAAA;EAAA;EAAAymB,QAAA,GAl9NP5hC,EAAE,CAAA6hC,oBAAA;EAAA+G,KAAA,EAAA3uB,IAAA;EAAAkhB,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAA32B,QAAA,WAAAsmD,0BAAAhnD,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MAAFhE,EAAE,CAAAoE,UAAA,IAAA8V,kCAAA,eA++NxG,CAAC,IAAAsB,kCAAA,cAC2B,CAAC;IAAA;IAAA,IAAAxX,EAAA;MAh/NyEhE,EAAE,CAAAyE,UAAA,YAAAR,GAAA,CAAAmc,IAq9N9E,CAAC,iBAAAnc,GAAA,CAAA2T,OAAe,CAAC;MAr9N2D5X,EAAE,CAAAwE,SAAA,CAg/N9E,CAAC;MAh/N2ExE,EAAE,CAAAyE,UAAA,SAAAR,GAAA,CAAAiZ,aAg/N9E,CAAC;IAAA;EAAA;EAAAse,YAAA,GAcW8sB,YAAY,EAAqQe,iBAAiB,EAA6LroD,EAAE,CAACmjC,OAAO,EAAgGmN,gBAAgB,EAA6atwC,EAAE,CAACy6B,IAAI;EAAAG,aAAA;EAAA9rB,IAAA;IAAA+mC,SAAA,EAA+E,CAC9nCp1C,OAAO,CAAC,gBAAgB,EAAE,CACtBC,UAAU,CAAC,QAAQ,EAAE,CACjBC,KAAK,CAAC;MACFoN,OAAO,EAAE;IACb,CAAC,CAAC,EACFnN,OAAO,CAAC,GAAG,EAAED,KAAK,CAAC;MAAEoN,OAAO,EAAE;IAAE,CAAC,CAAC,CAAC,CACtC,CAAC,CACL,CAAC;EACL;EAAAgzB,eAAA;AAAA,EAAuD;AAC5D;EAAA,QAAAjG,SAAA,oBAAAA,SAAA,KAxgO0G97B,EAAE,CAAA+7B,iBAAA,CAwgOjBiuB,gBAAgB,EAAc,CAAC;IAC9Gv5C,IAAI,EAAEvQ,SAAS;IACfg1B,IAAI,EAAE,CAAC;MACC8G,QAAQ,EAAE,iCAAiC;MAC3Ct3B,QAAQ,EAAG;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;MACiBq9B,eAAe,EAAErhC,uBAAuB,CAACshC,MAAM;MAC/CtuB,UAAU,EAAE,CACRjS,OAAO,CAAC,gBAAgB,EAAE,CACtBC,UAAU,CAAC,QAAQ,EAAE,CACjBC,KAAK,CAAC;QACFoN,OAAO,EAAE;MACb,CAAC,CAAC,EACFnN,OAAO,CAAC,GAAG,EAAED,KAAK,CAAC;QAAEoN,OAAO,EAAE;MAAE,CAAC,CAAC,CAAC,CACtC,CAAC,CACL,CAAC;IAEV,CAAC;EACT,CAAC,CAAC,QAAkB;IAAE9D,IAAI,EAAE,CAAC;MACrBwF,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEoQ,IAAI,EAAE,CAAC;MACPA,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE4c,MAAM,EAAE,CAAC;MACTxM,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE0K,MAAM,EAAE,CAAC;MACT0F,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEmO,MAAM,EAAE,CAAC;MACTiC,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE0G,MAAM,EAAE,CAAC;MACT0J,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEwQ,eAAe,EAAE,CAAC;MAClBJ,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEoV,QAAQ,EAAE,CAAC;MACXhF,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEoH,aAAa,EAAE,CAAC;MAChBgJ,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEsQ,UAAU,EAAE,CAAC;MACbF,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE6Q,eAAe,EAAE,CAAC;MAClBT,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEoa,UAAU,EAAE,CAAC;MACbhK,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEqT,UAAU,EAAE,CAAC;MACbjD,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE6c,aAAa,EAAE,CAAC;MAChBzM,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEkb,mBAAmB,EAAE,CAAC;MACtB9K,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEya,aAAa,EAAE,CAAC;MAChBrK,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEwB,MAAM,EAAE,CAAC;MACT4O,IAAI,EAAE7P;IACV,CAAC,CAAC;IAAEmF,QAAQ,EAAE,CAAC;MACX0K,IAAI,EAAE7P;IACV,CAAC,CAAC;IAAEqF,UAAU,EAAE,CAAC;MACbwK,IAAI,EAAE7P;IACV,CAAC,CAAC;IAAEua,qBAAqB,EAAE,CAAC;MACxB1K,IAAI,EAAE7P;IACV,CAAC;EAAE,CAAC;AAAA;AAEhB,MAAMqqD,sBAAsB,SAASxkB,kBAAkB,CAAC;EACpDhO,WAAWA,CAAA,EAAG;IACV,KAAK,CAAC,GAAG7C,SAAS,CAAC;IACnB,IAAI,CAACle,MAAM,GAAG,KAAK;IACnB,IAAI,CAAC8sC,WAAW,GAAG,QAAQ;IAC3B,IAAI,CAAC5D,cAAc,GAAGh6C,cAAc,CAAC8G,KAAK;IAC1C,IAAI,CAACmD,eAAe,GAAG,KAAK;IAC5B,IAAI,CAAC3G,aAAa,GAAG,IAAI;IACzB,IAAI,CAACzC,aAAa,GAAG,EAAE;IACvB,IAAI,CAAC6M,cAAc,GAAG,IAAI;IAC1B,IAAI,CAACW,cAAc,GAAG,IAAI;IAC1B,IAAI,CAACV,gBAAgB,GAAG,IAAI;IAC5B,IAAI,CAACC,kBAAkB,GAAG,EAAE;IAC5B,IAAI,CAACU,kBAAkB,GAAG,EAAE;IAC5B,IAAI,CAACg2C,UAAU,GAAG,CAAC;IACnB,IAAI,CAACtG,YAAY,GAAG,KAAK;IACzB,IAAI,CAACnqC,UAAU,GAAG,IAAI;IACtB,IAAI,CAACyC,aAAa,GAAG,KAAK;IAC1B,IAAI,CAACpC,aAAa,GAAG,IAAI;IACzB,IAAI,CAACzP,SAAS,GAAG,KAAK;IACtB,IAAI,CAACtF,QAAQ,GAAG,IAAIpF,YAAY,CAAC,CAAC;IAClC,IAAI,CAACsF,UAAU,GAAG,IAAItF,YAAY,CAAC,CAAC;IACpC,IAAI,CAAC+nC,MAAM,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;IAC9B,IAAI,CAAC8X,WAAW,GAAG,CAAC;IACpB,IAAI,CAACC,UAAU,GAAG,CAAC;IACnB,IAAI,CAAC1kC,iBAAiB,GAAG;MAAEC,QAAQ,EAAE,CAAC;MAAEkuC,QAAQ,EAAE;IAAE,CAAC;EACzD;EACA3mB,MAAMA,CAAA,EAAG;IACL,KAAK,CAACA,MAAM,CAAC,CAAC;IACd,IAAI,CAAC,IAAI,CAACrmB,aAAa,EAAE;MACrB,IAAI,CAACnB,iBAAiB,GAAG;QAAEC,QAAQ,EAAE,CAAC;QAAEkuC,QAAQ,EAAE;MAAE,CAAC;IACzD;IACA,IAAI,CAACxhB,MAAM,GAAG,CAAC,EAAE,EAAE,EAAE,GAAG,IAAI,CAAC3sB,iBAAiB,CAACmuC,QAAQ,EAAE,EAAE,EAAE,EAAE,GAAG,IAAI,CAACnuC,iBAAiB,CAACC,QAAQ,CAAC;IAClG,IAAI,CAAC/Q,IAAI,GAAGm1C,uBAAuB,CAAC;MAChCj1C,KAAK,EAAE,IAAI,CAACA,KAAK;MACjBD,MAAM,EAAE,IAAI,CAACA,MAAM;MACnBm1C,OAAO,EAAE,IAAI,CAAC3X,MAAM;MACpB4X,SAAS,EAAE,IAAI,CAACmE,KAAK;MACrBlE,SAAS,EAAE,IAAI,CAACmE,KAAK;MACrBlE,WAAW,EAAE,IAAI,CAACA,WAAW;MAC7BC,UAAU,EAAE,IAAI,CAACA,UAAU;MAC3BC,UAAU,EAAE,IAAI,CAACtsC,cAAc;MAC/BusC,UAAU,EAAE,IAAI,CAAC5rC,cAAc;MAC/BsvB,UAAU,EAAE,IAAI,CAAC3sB,MAAM;MACvB6sB,UAAU,EAAE,IAAI,CAACoC,UAAU;MAC3Bia,cAAc,EAAE,IAAI,CAACA;IACzB,CAAC,CAAC;IACF,IAAI,CAACpZ,WAAW,CAAC,CAAC;IAClB,IAAI,CAACz8B,MAAM,GAAG,IAAI,CAACyzC,SAAS,CAAC,CAAC;IAC9B,IAAI,CAAChwC,MAAM,GAAG,IAAI,CAAC22C,SAAS,CAAC,CAAC;IAC9B,IAAI,CAACE,SAAS,CAAC,CAAC;IAChB,IAAI,CAAC3+C,aAAa,GAAG,IAAI,CAAC4+C,gBAAgB,CAAC,CAAC;IAC5C,IAAI,CAACt4C,SAAS,GAAI,aAAY,IAAI,CAAC/B,IAAI,CAAC61C,OAAQ,MAAK,IAAI,CAACpY,MAAM,CAAC,CAAC,CAAE,GAAE;EAC1E;EACA8V,SAASA,CAAA,EAAG;IACR,IAAI,CAACF,OAAO,GAAG,IAAI,CAACC,UAAU,CAAC,CAAC;IAChC,MAAMvT,KAAK,GAAGhpC,WAAW,CAAC,CAAC,CAACY,KAAK,CAAC,CAAC,CAAC,EAAE,IAAI,CAACqI,IAAI,CAACE,KAAK,CAAC,CAAC,CAACrE,MAAM,CAAC,IAAI,CAACw3C,OAAO,CAAC;IAC5E,OAAO,IAAI,CAACsG,YAAY,GAAG5Z,KAAK,CAAC2a,IAAI,CAAC,CAAC,GAAG3a,KAAK;EACnD;EACAma,SAASA,CAAA,EAAG;IACR,IAAI,CAACJ,OAAO,GAAG,IAAI,CAACC,UAAU,CAAC,CAAC;IAChC,MAAM/sB,OAAO,GAAG,IAAI,CAAC8sB,OAAO,CAAC34C,MAAM,IAAI,IAAI,CAACnB,IAAI,CAACC,MAAM,GAAG,IAAI,CAACggD,UAAU,GAAG,CAAC,CAAC;IAC9E,OAAO9oD,SAAS,CAAC,CAAC,CAAC+oD,UAAU,CAAC,CAAC,CAAC,EAAE,IAAI,CAAClgD,IAAI,CAACC,MAAM,CAAC,CAAC,CAACusC,YAAY,CAACxf,OAAO,CAAC,CAACnxB,MAAM,CAAC,IAAI,CAACi+C,OAAO,CAAC;EACnG;EACAxG,UAAUA,CAAA,EAAG;IACT,MAAMM,MAAM,GAAG,IAAI,CAACloC,OAAO,CAACi5B,GAAG,CAAC7L,CAAC,IAAIA,CAAC,CAACj2B,KAAK,CAAC;IAC7C,MAAMjL,GAAG,GAAG,IAAI,CAAC8/C,SAAS,GAAGphB,IAAI,CAAC1+B,GAAG,CAAC,IAAI,CAAC8/C,SAAS,EAAE,GAAG9D,MAAM,CAAC,GAAGtd,IAAI,CAAC1+B,GAAG,CAAC,CAAC,EAAE,GAAGg8C,MAAM,CAAC;IACzF,MAAM/7C,GAAG,GAAG,IAAI,CAAC8/C,SAAS,GAAGrhB,IAAI,CAACz+B,GAAG,CAAC,IAAI,CAAC8/C,SAAS,EAAE,GAAG/D,MAAM,CAAC,GAAGtd,IAAI,CAACz+B,GAAG,CAAC,CAAC,EAAE,GAAG+7C,MAAM,CAAC;IACzF,OAAO,CAACh8C,GAAG,EAAEC,GAAG,CAAC;EACrB;EACAkiD,UAAUA,CAAA,EAAG;IACT,OAAO,IAAI,CAACruC,OAAO,CAACi5B,GAAG,CAAC7L,CAAC,IAAIA,CAAC,CAAC39B,KAAK,CAAC;EACzC;EACAyJ,OAAOA,CAACC,IAAI,EAAE;IACV,IAAI,CAACjO,MAAM,CAACgE,IAAI,CAACiK,IAAI,CAAC;EAC1B;EACAu1C,SAASA,CAAA,EAAG;IACR,IAAIv+C,MAAM;IACV,IAAI,IAAI,CAAC6/B,UAAU,KAAKjG,SAAS,CAACkG,OAAO,EAAE;MACvC9/B,MAAM,GAAG,IAAI,CAACi+C,OAAO;IACzB,CAAC,MACI;MACDj+C,MAAM,GAAG,IAAI,CAACw3C,OAAO;IACzB;IACA,IAAI,CAACv3C,MAAM,GAAG,IAAIm6C,WAAW,CAAC,IAAI,CAAC1pC,MAAM,EAAE,IAAI,CAACmvB,UAAU,EAAE7/B,MAAM,EAAE,IAAI,CAAC2Q,YAAY,CAAC;EAC1F;EACA6tC,gBAAgBA,CAAA,EAAG;IACf,MAAMS,IAAI,GAAG;MACTvwC,SAAS,EAAE,IAAI,CAACmxB,UAAU;MAC1B5/B,MAAM,EAAEoK,SAAS;MACjBrK,MAAM,EAAE,EAAE;MACV/B,KAAK,EAAEoM,SAAS;MAChBxK,QAAQ,EAAE,IAAI,CAACi6C;IACnB,CAAC;IACD,IAAImF,IAAI,CAACvwC,SAAS,KAAK,SAAS,EAAE;MAC9BuwC,IAAI,CAACj/C,MAAM,GAAG,IAAI,CAACi+C,OAAO;MAC1BgB,IAAI,CAACh/C,MAAM,GAAG,IAAI,CAACA,MAAM;MACzBg/C,IAAI,CAAChhD,KAAK,GAAG,IAAI,CAACy/C,WAAW;IACjC,CAAC,MACI;MACDuB,IAAI,CAACj/C,MAAM,GAAG,IAAI,CAACw3C,OAAO;MAC1ByH,IAAI,CAACh/C,MAAM,GAAG,IAAI,CAACA,MAAM,CAACikC,KAAK;IACnC;IACA,OAAO+a,IAAI;EACf;EACAjxC,gBAAgBA,CAAC;IAAE3J;EAAM,CAAC,EAAE;IACxB,IAAI,CAACs1C,UAAU,GAAGt1C,KAAK;IACvB,IAAI,CAACo4B,MAAM,CAAC,CAAC;EACjB;EACApvB,iBAAiBA,CAAC;IAAEjJ;EAAO,CAAC,EAAE;IAC1B,IAAI,CAACs1C,WAAW,GAAGt1C,MAAM;IACzB,IAAI,CAACq4B,MAAM,CAAC,CAAC;EACjB;EACAzmB,0BAA0BA,CAAC+2B,KAAK,EAAE;IAC9B,IAAIA,KAAK,CAACz4B,IAAI,CAACY,QAAQ,EAAE;MACrB,IAAI,CAACD,iBAAiB,CAACC,QAAQ,GAAGulB,IAAI,CAACz+B,GAAG,CAAC,IAAI,CAACiZ,iBAAiB,CAACC,QAAQ,EAAE63B,KAAK,CAACz4B,IAAI,CAACjQ,KAAK,CAAC;IACjG,CAAC,MACI;MACD,IAAI,CAAC4Q,iBAAiB,CAACmuC,QAAQ,GAAG3oB,IAAI,CAACz+B,GAAG,CAAC,IAAI,CAACiZ,iBAAiB,CAACmuC,QAAQ,EAAErW,KAAK,CAACz4B,IAAI,CAACjQ,KAAK,CAAC;IACjG;IACA,IAAI0oC,KAAK,CAAC1rC,KAAK,KAAK,IAAI,CAACwO,OAAO,CAACvK,MAAM,GAAG,CAAC,EAAE;MACzC2pB,UAAU,CAAC,MAAM,IAAI,CAACwN,MAAM,CAAC,CAAC,CAAC;IACnC;EACJ;EACAvtB,UAAUA,CAAC6tB,IAAI,EAAEunB,UAAU,GAAG,KAAK,EAAE;IACjCvnB,IAAI,GAAG,IAAI,CAACltB,OAAO,CAACmtB,IAAI,CAACC,CAAC,IAAI;MAC1B,IAAIqnB,UAAU,EAAE;QACZ,OAAOrnB,CAAC,CAAC39B,KAAK,KAAKy9B,IAAI,CAAC91B,IAAI;MAChC,CAAC,MACI;QACD,OAAOg2B,CAAC,CAACh2B,IAAI,KAAK81B,IAAI,CAAC91B,IAAI;MAC/B;IACJ,CAAC,CAAC;IACF,MAAMqvB,GAAG,GAAG,IAAI,CAAC31B,aAAa,CAACk8B,SAAS,CAACI,CAAC,IAAI;MAC1C,OAAOA,CAAC,CAACh2B,IAAI,KAAK81B,IAAI,CAAC91B,IAAI,IAAIg2B,CAAC,CAACj2B,KAAK,KAAK+1B,IAAI,CAAC/1B,KAAK,IAAIi2B,CAAC,CAAC9mB,MAAM,KAAK4mB,IAAI,CAAC5mB,MAAM;IACrF,CAAC,CAAC;IACF,IAAImgB,GAAG,GAAG,CAAC,CAAC,EAAE;MACV;IACJ;IACA,IAAI,CAAC31B,aAAa,GAAG,CAACo8B,IAAI,EAAE,GAAG,IAAI,CAACp8B,aAAa,CAAC;IAClD,IAAI,CAAC1B,QAAQ,CAACF,IAAI,CAAC;MAAEiI,KAAK,EAAE+1B,IAAI;MAAEmiB,OAAO,EAAE,IAAI,CAACv+C;IAAc,CAAC,CAAC;EACpE;EACAyO,YAAYA,CAAC2tB,IAAI,EAAEunB,UAAU,GAAG,KAAK,EAAE;IACnCvnB,IAAI,GAAG,IAAI,CAACltB,OAAO,CAACmtB,IAAI,CAACC,CAAC,IAAI;MAC1B,IAAIqnB,UAAU,EAAE;QACZ,OAAOrnB,CAAC,CAAC39B,KAAK,KAAKy9B,IAAI,CAAC91B,IAAI;MAChC,CAAC,MACI;QACD,OAAOg2B,CAAC,CAACh2B,IAAI,KAAK81B,IAAI,CAAC91B,IAAI;MAC/B;IACJ,CAAC,CAAC;IACF,MAAMqvB,GAAG,GAAG,IAAI,CAAC31B,aAAa,CAACk8B,SAAS,CAACI,CAAC,IAAI;MAC1C,OAAOA,CAAC,CAACh2B,IAAI,KAAK81B,IAAI,CAAC91B,IAAI,IAAIg2B,CAAC,CAACj2B,KAAK,KAAK+1B,IAAI,CAAC/1B,KAAK,IAAIi2B,CAAC,CAAC9mB,MAAM,KAAK4mB,IAAI,CAAC5mB,MAAM;IACrF,CAAC,CAAC;IACF,IAAI,CAACxV,aAAa,CAAC61B,MAAM,CAACF,GAAG,EAAE,CAAC,CAAC;IACjC,IAAI,CAAC31B,aAAa,GAAG,CAAC,GAAG,IAAI,CAACA,aAAa,CAAC;IAC5C,IAAI,CAACxB,UAAU,CAACJ,IAAI,CAAC;MAAEiI,KAAK,EAAE+1B,IAAI;MAAEmiB,OAAO,EAAE,IAAI,CAACv+C;IAAc,CAAC,CAAC;EACtE;AACJ;AACAwjD,sBAAsB,CAACrxB,IAAI;EAAA,IAAAyxB,mCAAA;EAAA,gBAAAC,+BAAAxxB,CAAA;IAAA,QAAAuxB,mCAAA,KAAAA,mCAAA,GA9wO+ErrD,EAAE,CAAAmmD,qBAAA,CA8wOO8E,sBAAsB,IAAAnxB,CAAA,IAAtBmxB,sBAAsB;EAAA;AAAA,IAAqD;AAC9LA,sBAAsB,CAAC/wB,IAAI,kBA/wO+El6B,EAAE,CAAAm6B,iBAAA;EAAA1pB,IAAA,EA+wOLw6C,sBAAsB;EAAA7wB,SAAA;EAAAgsB,cAAA,WAAAmF,sCAAAvnD,EAAA,EAAAC,GAAA,EAAAqiD,QAAA;IAAA,IAAAtiD,EAAA;MA/wOnBhE,EAAE,CAAAumD,cAAA,CAAAD,QAAA,EAAAzyC,IAAA;IAAA;IAAA,IAAA7P,EAAA;MAAA,IAAAw2B,EAAA;MAAFx6B,EAAE,CAAAy6B,cAAA,CAAAD,EAAA,GAAFx6B,EAAE,CAAA06B,WAAA,QAAAz2B,GAAA,CAAAiN,eAAA,GAAAspB,EAAA,CAAAG,KAAA;IAAA;EAAA;EAAAO,MAAA;IAAAxjB,MAAA;IAAA8sC,WAAA;IAAA5D,cAAA;IAAA6D,KAAA;IAAAC,KAAA;IAAAtwC,cAAA;IAAAW,cAAA;IAAAV,UAAA;IAAAW,UAAA;IAAAnE,eAAA;IAAA4E,QAAA;IAAAvL,aAAA;IAAAzC,aAAA;IAAAk/B,UAAA;IAAAryB,cAAA;IAAAW,cAAA;IAAAV,gBAAA;IAAAC,kBAAA;IAAAU,kBAAA;IAAAT,mBAAA;IAAAU,mBAAA;IAAAT,UAAA;IAAAU,UAAA;IAAA81C,UAAA;IAAAtG,YAAA;IAAAnqC,UAAA;IAAAmoC,SAAA;IAAAD,SAAA;IAAAzlC,aAAA;IAAA3B,mBAAA;IAAAT,aAAA;IAAAzP,SAAA;EAAA;EAAAuyB,OAAA;IAAA73B,QAAA;IAAAE,UAAA;EAAA;EAAA27B,QAAA,GAAF5hC,EAAE,CAAA0mD,0BAAA;EAAAvrB,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAA32B,QAAA,WAAA8mD,gCAAAxnD,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MAAFhE,EAAE,CAAAmE,cAAA,yBAyxOxG,CAAC;MAzxOqGnE,EAAE,CAAAuF,UAAA,8BAAAkmD,6EAAAhmD,MAAA;QAAA,OAsxOlFxB,GAAA,CAAA4L,OAAA,CAAApK,MAAc,CAAC;MAAA,EAAC,iCAAAimD,gFAAAjmD,MAAA;QAAA,OACbxB,GAAA,CAAA+R,UAAA,CAAAvQ,MAAA,EAAmB,IAAI,CAAC;MAAA,EAAC,mCAAAkmD,kFAAAlmD,MAAA;QAAA,OACvBxB,GAAA,CAAAiS,YAAA,CAAAzQ,MAAA,EAAqB,IAAI,CAAC;MAAA,EAAC;MAxxOgDzF,EAAE,CAAA8H,cAAA;MAAF9H,EAAE,CAAAmE,cAAA,UA0xO3C,CAAC;MA1xOwCnE,EAAE,CAAAoE,UAAA,IAAAuX,wCAAA,eA0yOpG,CAAC,IAAAE,wCAAA,eAeD,CAAC;MAzzOiG7b,EAAE,CAAAmE,cAAA,UA80OpG,CAAC;MA90OiGnE,EAAE,CAAAuF,UAAA,oBAAAqmD,oDAAAnmD,MAAA;QAAA,OA00OxFxB,GAAA,CAAA4L,OAAA,CAAApK,MAAc,CAAC;MAAA,EAAC,sBAAAomD,sDAAApmD,MAAA;QAAA,OACdxB,GAAA,CAAA+R,UAAA,CAAAvQ,MAAiB,CAAC;MAAA,EAAC,wBAAAqmD,wDAAArmD,MAAA;QAAA,OACjBxB,GAAA,CAAAiS,YAAA,CAAAzQ,MAAmB,CAAC;MAAA,EAAC,mCAAAsmD,mEAAAtmD,MAAA;QAAA,OACVxB,GAAA,CAAA6Y,0BAAA,CAAArX,MAAiC,CAAC;MAAA,EAAC;MA70OoCzF,EAAE,CAAAqE,YAAA,CA80O5F,CAAC,CACJ,CAAC,CACQ,CAAC;IAAA;IAAA,IAAAL,EAAA;MAh1OmFhE,EAAE,CAAAyE,UAAA,SAAFzE,EAAE,CAAAqX,eAAA,KAAAtD,IAAA,EAAA9P,GAAA,CAAAkH,KAAA,EAAAlH,GAAA,CAAAiH,MAAA,CAixO/E,CAAC,eAAAjH,GAAA,CAAAyT,MACJ,CAAC,kBAAAzT,GAAA,CAAAyC,aACS,CAAC,kBAAAzC,GAAA,CAAAwD,aACD,CAAC,eAAAxD,GAAA,CAAAyP,UACP,CAAC;MArxO2E1T,EAAE,CAAAwE,SAAA,CA0xOpE,CAAC;MA1xOiExE,EAAE,CAAAoI,WAAA,cAAAnE,GAAA,CAAA+I,SAAA;MAAFhN,EAAE,CAAAwE,SAAA,CA6xOvF,CAAC;MA7xOoFxE,EAAE,CAAAyE,UAAA,SAAAR,GAAA,CAAAwgD,KA6xOvF,CAAC;MA7xOoFzkD,EAAE,CAAAwE,SAAA,CA6yOvF,CAAC;MA7yOoFxE,EAAE,CAAAyE,UAAA,SAAAR,GAAA,CAAAygD,KA6yOvF,CAAC;MA7yOoF1kD,EAAE,CAAAwE,SAAA,CA4zOlF,CAAC;MA5zO+ExE,EAAE,CAAAyE,UAAA,WAAAR,GAAA,CAAA8G,MA4zOlF,CAAC,WAAA9G,GAAA,CAAAuK,MACD,CAAC,WAAAvK,GAAA,CAAA8C,MACD,CAAC,WAAA9C,GAAA,CAAA0S,OACA,CAAC,SAAA1S,GAAA,CAAAgH,IACN,CAAC,aAAAhH,GAAA,CAAAwR,QACO,CAAC,oBAAAxR,GAAA,CAAA4M,eACa,CAAC,oBAAA5M,GAAA,CAAAiN,eACD,CAAC,kBAAAjN,GAAA,CAAAwD,aACL,CAAC,eAAAxD,GAAA,CAAAwW,UACP,CAAC,eAAAxW,GAAA,CAAAyP,UACD,CAAC,kBAAAzP,GAAA,CAAAiZ,aACK,CAAC,wBAAAjZ,GAAA,CAAAsX,mBACW,CAAC,kBAAAtX,GAAA,CAAA6W,aACb,CAAC;IAAA;EAAA;EAAA0gB,YAAA,GAQ63D4I,cAAc,EAAuNsJ,cAAc,EAAsR0C,cAAc,EAA0T4Z,gBAAgB,EAAuXhpD,EAAE,CAACy6B,IAAI;EAAAE,MAAA,GAAA7iB,IAAA;EAAA8iB,aAAA;EAAAmG,eAAA;AAAA,EAAkK;AACvyG;EAAA,QAAAjG,SAAA,oBAAAA,SAAA,KAl1O0G97B,EAAE,CAAA+7B,iBAAA,CAk1OjBkvB,sBAAsB,EAAc,CAAC;IACpHx6C,IAAI,EAAEvQ,SAAS;IACfg1B,IAAI,EAAE,CAAC;MAAE8G,QAAQ,EAAE,2BAA2B;MAAEt3B,QAAQ,EAAG;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;MAAEq9B,eAAe,EAAErhC,uBAAuB,CAACshC,MAAM;MAAEpG,aAAa,EAAEz7B,iBAAiB,CAAC87B,IAAI;MAAEN,MAAM,EAAE,CAAC,g3DAAg3D;IAAE,CAAC;EACj9D,CAAC,CAAC,QAAkB;IAAEjkB,MAAM,EAAE,CAAC;MACvBjH,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEmkD,WAAW,EAAE,CAAC;MACd/zC,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEugD,cAAc,EAAE,CAAC;MACjBnwC,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEokD,KAAK,EAAE,CAAC;MACRh0C,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEqkD,KAAK,EAAE,CAAC;MACRj0C,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE+T,cAAc,EAAE,CAAC;MACjB3D,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE0U,cAAc,EAAE,CAAC;MACjBtE,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEgU,UAAU,EAAE,CAAC;MACb5D,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE2U,UAAU,EAAE,CAAC;MACbvE,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEwQ,eAAe,EAAE,CAAC;MAClBJ,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEoV,QAAQ,EAAE,CAAC;MACXhF,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE6J,aAAa,EAAE,CAAC;MAChBuG,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEoH,aAAa,EAAE,CAAC;MAChBgJ,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEsmC,UAAU,EAAE,CAAC;MACbl2B,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEiU,cAAc,EAAE,CAAC;MACjB7D,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE4U,cAAc,EAAE,CAAC;MACjBxE,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEkU,gBAAgB,EAAE,CAAC;MACnB9D,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEmU,kBAAkB,EAAE,CAAC;MACrB/D,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE6U,kBAAkB,EAAE,CAAC;MACrBzE,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEoU,mBAAmB,EAAE,CAAC;MACtBhE,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE8U,mBAAmB,EAAE,CAAC;MACtB1E,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEqU,UAAU,EAAE,CAAC;MACbjE,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE+U,UAAU,EAAE,CAAC;MACb3E,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE6qD,UAAU,EAAE,CAAC;MACbz6C,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEukD,YAAY,EAAE,CAAC;MACfn0C,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEoa,UAAU,EAAE,CAAC;MACbhK,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEuiD,SAAS,EAAE,CAAC;MACZnyC,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEsiD,SAAS,EAAE,CAAC;MACZlyC,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE6c,aAAa,EAAE,CAAC;MAChBzM,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEkb,mBAAmB,EAAE,CAAC;MACtB9K,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEya,aAAa,EAAE,CAAC;MAChBrK,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEgL,SAAS,EAAE,CAAC;MACZoF,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE0F,QAAQ,EAAE,CAAC;MACX0K,IAAI,EAAE7P;IACV,CAAC,CAAC;IAAEqF,UAAU,EAAE,CAAC;MACbwK,IAAI,EAAE7P;IACV,CAAC,CAAC;IAAEsQ,eAAe,EAAE,CAAC;MAClBT,IAAI,EAAE1P,YAAY;MAClBm0B,IAAI,EAAE,CAAC,iBAAiB;IAC5B,CAAC;EAAE,CAAC;AAAA;AAEhB,MAAM82B,wBAAwB,SAASvlB,kBAAkB,CAAC;EACtDhO,WAAWA,CAAA,EAAG;IACV,KAAK,CAAC,GAAG7C,SAAS,CAAC;IACnB,IAAI,CAACle,MAAM,GAAG,KAAK;IACnB,IAAI,CAAC8sC,WAAW,GAAG,QAAQ;IAC3B,IAAI,CAAC5D,cAAc,GAAGh6C,cAAc,CAAC8G,KAAK;IAC1C,IAAI,CAACmD,eAAe,GAAG,KAAK;IAC5B,IAAI,CAAC3G,aAAa,GAAG,IAAI;IACzB,IAAI,CAACzC,aAAa,GAAG,EAAE;IACvB,IAAI,CAAC6M,cAAc,GAAG,IAAI;IAC1B,IAAI,CAACW,cAAc,GAAG,IAAI;IAC1B,IAAI,CAACV,gBAAgB,GAAG,IAAI;IAC5B,IAAI,CAACC,kBAAkB,GAAG,EAAE;IAC5B,IAAI,CAACU,kBAAkB,GAAG,EAAE;IAC5B,IAAI,CAAC+2C,YAAY,GAAG,EAAE;IACtB,IAAI,CAACf,UAAU,GAAG,CAAC;IACnB,IAAI,CAACtG,YAAY,GAAG,KAAK;IACzB,IAAI,CAACnqC,UAAU,GAAG,IAAI;IACtB,IAAI,CAACyC,aAAa,GAAG,KAAK;IAC1B,IAAI,CAACpC,aAAa,GAAG,IAAI;IACzB,IAAI,CAACzP,SAAS,GAAG,KAAK;IACtB,IAAI,CAACtF,QAAQ,GAAG,IAAIpF,YAAY,CAAC,CAAC;IAClC,IAAI,CAACsF,UAAU,GAAG,IAAItF,YAAY,CAAC,CAAC;IACpC,IAAI,CAAC+nC,MAAM,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;IAC9B,IAAI,CAAC8X,WAAW,GAAG,CAAC;IACpB,IAAI,CAACC,UAAU,GAAG,CAAC;IACnB,IAAI,CAAC1kC,iBAAiB,GAAG;MAAEC,QAAQ,EAAE,CAAC;MAAEkuC,QAAQ,EAAE;IAAE,CAAC;IACrD,IAAI,CAAC35C,KAAK,GAAG,KAAK;IAClB,IAAI,CAACJ,cAAc,GAAGoU,cAAc;IACpC,IAAI,CAAC3M,OAAO,GAAG,CAACzP,KAAK,EAAE07B,IAAI,KAAK;MAC5B,OAAOA,IAAI,CAAC91B,IAAI;IACpB,CAAC;EACL;EACA84B,QAAQA,CAAA,EAAG;IACP,IAAI3lC,gBAAgB,CAAC,IAAI,CAAC03B,UAAU,CAAC,EAAE;MACnC,IAAI,CAACroB,KAAK,GAAG,IAAI;IACrB;EACJ;EACAgzB,MAAMA,CAAA,EAAG;IACL,KAAK,CAACA,MAAM,CAAC,CAAC;IACd,IAAI,CAAC,IAAI,CAACrmB,aAAa,EAAE;MACrB,IAAI,CAACnB,iBAAiB,GAAG;QAAEC,QAAQ,EAAE,CAAC;QAAEkuC,QAAQ,EAAE;MAAE,CAAC;IACzD;IACA,IAAI,CAACxhB,MAAM,GAAG,CAAC,EAAE,EAAE,EAAE,GAAG,IAAI,CAAC3sB,iBAAiB,CAACmuC,QAAQ,EAAE,EAAE,EAAE,EAAE,GAAG,IAAI,CAACnuC,iBAAiB,CAACC,QAAQ,CAAC;IAClG,IAAI,CAAC/Q,IAAI,GAAGm1C,uBAAuB,CAAC;MAChCj1C,KAAK,EAAE,IAAI,CAACA,KAAK;MACjBD,MAAM,EAAE,IAAI,CAACA,MAAM;MACnBm1C,OAAO,EAAE,IAAI,CAAC3X,MAAM;MACpB4X,SAAS,EAAE,IAAI,CAACmE,KAAK;MACrBlE,SAAS,EAAE,IAAI,CAACmE,KAAK;MACrBlE,WAAW,EAAE,IAAI,CAACA,WAAW;MAC7BC,UAAU,EAAE,IAAI,CAACA,UAAU;MAC3BC,UAAU,EAAE,IAAI,CAACtsC,cAAc;MAC/BusC,UAAU,EAAE,IAAI,CAAC5rC,cAAc;MAC/BsvB,UAAU,EAAE,IAAI,CAAC3sB,MAAM;MACvB6sB,UAAU,EAAE,IAAI,CAACoC,UAAU;MAC3Bia,cAAc,EAAE,IAAI,CAACA;IACzB,CAAC,CAAC;IACF,IAAI,CAACpZ,WAAW,CAAC,CAAC;IAClB,IAAI,CAAC0kB,WAAW,GAAG,IAAI,CAACC,cAAc,CAAC,CAAC;IACxC,IAAI,CAACC,WAAW,GAAG,IAAI,CAACC,cAAc,CAAC,CAAC;IACxC,IAAI,CAACC,WAAW,GAAG,IAAI,CAACC,cAAc,CAAC,CAAC;IACxC,IAAI,CAACjwC,UAAU,GAAG,IAAI,CAACkwC,aAAa,CAAC,CAAC;IACtC,IAAI,CAACxvC,UAAU,GAAG,IAAI,CAACyvC,aAAa,CAAC,CAAC;IACtC,IAAI,CAACtwC,UAAU,GAAG,IAAI,CAACuwC,aAAa,CAAC,CAAC;IACtC,IAAI,CAACrH,SAAS,CAAC,CAAC;IAChB,IAAI,CAAC3+C,aAAa,GAAG,IAAI,CAAC4+C,gBAAgB,CAAC,CAAC;IAC5C,IAAI,CAACt4C,SAAS,GAAI,aAAY,IAAI,CAAC/B,IAAI,CAAC61C,OAAQ,MAAK,IAAI,CAACpY,MAAM,CAAC,CAAC,CAAE,GAAE;EAC1E;EACA8jB,aAAaA,CAAA,EAAG;IACZ,MAAMv0B,OAAO,GAAG,IAAI,CAACi0B,WAAW,CAAC9/C,MAAM,IAAI,IAAI,CAACnB,IAAI,CAACC,MAAM,GAAG,IAAI,CAAC+gD,YAAY,GAAG,CAAC,CAAC;IACpF,OAAO7pD,SAAS,CAAC,CAAC,CACb+oD,UAAU,CAAC,CAAC,CAAC,EAAE,IAAI,CAAClgD,IAAI,CAACC,MAAM,CAAC,CAAC,CACjCusC,YAAY,CAACxf,OAAO,CAAC,CACrB00B,YAAY,CAAC10B,OAAO,GAAG,CAAC,CAAC,CACzBnxB,MAAM,CAAC,IAAI,CAAColD,WAAW,CAAC;EACjC;EACAO,aAAaA,CAAA,EAAG;IACZ,MAAMvhD,MAAM,GAAG,IAAI,CAACoR,UAAU,CAACmvB,SAAS,CAAC,CAAC;IAC1C,MAAMxT,OAAO,GAAG,IAAI,CAACm0B,WAAW,CAAChgD,MAAM,IAAIlB,MAAM,GAAG,IAAI,CAACggD,UAAU,GAAG,CAAC,CAAC;IACxE,OAAO9oD,SAAS,CAAC,CAAC,CAAC+oD,UAAU,CAAC,CAAC,CAAC,EAAEjgD,MAAM,CAAC,CAAC,CAACusC,YAAY,CAACxf,OAAO,CAAC,CAACnxB,MAAM,CAAC,IAAI,CAACslD,WAAW,CAAC;EAC7F;EACAM,aAAaA,CAAA,EAAG;IACZ,MAAM1hB,KAAK,GAAGhpC,WAAW,CAAC,CAAC,CAACY,KAAK,CAAC,CAAC,CAAC,EAAE,IAAI,CAACqI,IAAI,CAACE,KAAK,CAAC,CAAC,CAACrE,MAAM,CAAC,IAAI,CAACwlD,WAAW,CAAC;IAChF,OAAO,IAAI,CAAC1H,YAAY,GAAG5Z,KAAK,CAAC2a,IAAI,CAAC,CAAC,GAAG3a,KAAK;EACnD;EACAmhB,cAAcA,CAAA,EAAG;IACb,MAAMrlD,MAAM,GAAG,EAAE;IACjB,KAAK,MAAMo1C,KAAK,IAAI,IAAI,CAACvlC,OAAO,EAAE;MAC9B,IAAI,CAAC7P,MAAM,CAACg4C,QAAQ,CAAC5C,KAAK,CAAC91C,KAAK,CAAC,EAAE;QAC/BU,MAAM,CAACk3B,IAAI,CAACke,KAAK,CAAC91C,KAAK,CAAC;MAC5B;IACJ;IACA,OAAOU,MAAM;EACjB;EACAulD,cAAcA,CAAA,EAAG;IACb,MAAMvlD,MAAM,GAAG,EAAE;IACjB,KAAK,MAAMo1C,KAAK,IAAI,IAAI,CAACvlC,OAAO,EAAE;MAC9B,KAAK,MAAMotB,CAAC,IAAImY,KAAK,CAACj/B,MAAM,EAAE;QAC1B,IAAI,CAACnW,MAAM,CAACg4C,QAAQ,CAAC/a,CAAC,CAAC39B,KAAK,CAAC,EAAE;UAC3BU,MAAM,CAACk3B,IAAI,CAAC+F,CAAC,CAAC39B,KAAK,CAAC;QACxB;MACJ;IACJ;IACA,OAAOU,MAAM;EACjB;EACAylD,cAAcA,CAAA,EAAG;IACb,MAAMzlD,MAAM,GAAG,EAAE;IACjB,KAAK,MAAMo1C,KAAK,IAAI,IAAI,CAACvlC,OAAO,EAAE;MAC9B,KAAK,MAAMotB,CAAC,IAAImY,KAAK,CAACj/B,MAAM,EAAE;QAC1B,IAAI,CAACnW,MAAM,CAACg4C,QAAQ,CAAC/a,CAAC,CAACj2B,KAAK,CAAC,EAAE;UAC3BhH,MAAM,CAACk3B,IAAI,CAAC+F,CAAC,CAACj2B,KAAK,CAAC;QACxB;MACJ;IACJ;IACA,MAAMjL,GAAG,GAAG0+B,IAAI,CAAC1+B,GAAG,CAAC,CAAC,EAAE,GAAGiE,MAAM,CAAC;IAClC,MAAMhE,GAAG,GAAG,IAAI,CAAC8/C,SAAS,GAAGrhB,IAAI,CAACz+B,GAAG,CAAC,IAAI,CAAC8/C,SAAS,EAAE,GAAG97C,MAAM,CAAC,GAAGy6B,IAAI,CAACz+B,GAAG,CAAC,CAAC,EAAE,GAAGgE,MAAM,CAAC;IACzF,OAAO,CAACjE,GAAG,EAAEC,GAAG,CAAC;EACrB;EACAia,cAAcA,CAACm/B,KAAK,EAAE;IAClB,OAAQ,gBAAe,IAAI,CAAC5/B,UAAU,CAAC4/B,KAAK,CAAC91C,KAAK,CAAE,GAAE;EAC1D;EACAyJ,OAAOA,CAACC,IAAI,EAAEosC,KAAK,EAAE;IACjB,IAAIA,KAAK,EAAE;MACPpsC,IAAI,CAACmN,MAAM,GAAGi/B,KAAK,CAACnuC,IAAI;IAC5B;IACA,IAAI,CAAClM,MAAM,CAACgE,IAAI,CAACiK,IAAI,CAAC;EAC1B;EACAu1C,SAASA,CAAA,EAAG;IACR,IAAIv+C,MAAM;IACV,IAAI,IAAI,CAAC6/B,UAAU,KAAKjG,SAAS,CAACkG,OAAO,EAAE;MACvC9/B,MAAM,GAAG,IAAI,CAACslD,WAAW;IAC7B,CAAC,MACI;MACDtlD,MAAM,GAAG,IAAI,CAACwlD,WAAW;IAC7B;IACA,IAAI,CAACvlD,MAAM,GAAG,IAAIm6C,WAAW,CAAC,IAAI,CAAC1pC,MAAM,EAAE,IAAI,CAACmvB,UAAU,EAAE7/B,MAAM,EAAE,IAAI,CAAC2Q,YAAY,CAAC;EAC1F;EACA6tC,gBAAgBA,CAAA,EAAG;IACf,MAAMS,IAAI,GAAG;MACTvwC,SAAS,EAAE,IAAI,CAACmxB,UAAU;MAC1B5/B,MAAM,EAAEoK,SAAS;MACjBrK,MAAM,EAAE,EAAE;MACV/B,KAAK,EAAEoM,SAAS;MAChBxK,QAAQ,EAAE,IAAI,CAACi6C;IACnB,CAAC;IACD,IAAImF,IAAI,CAACvwC,SAAS,KAAKkrB,SAAS,CAACkG,OAAO,EAAE;MACtCmf,IAAI,CAACj/C,MAAM,GAAG,IAAI,CAACslD,WAAW;MAC9BrG,IAAI,CAACh/C,MAAM,GAAG,IAAI,CAACA,MAAM;MACzBg/C,IAAI,CAAChhD,KAAK,GAAG,IAAI,CAACy/C,WAAW;IACjC,CAAC,MACI;MACDuB,IAAI,CAACj/C,MAAM,GAAG,IAAI,CAACwlD,WAAW;MAC9BvG,IAAI,CAACh/C,MAAM,GAAG,IAAI,CAACA,MAAM,CAACikC,KAAK;IACnC;IACA,OAAO+a,IAAI;EACf;EACAjxC,gBAAgBA,CAAC;IAAE3J;EAAM,CAAC,EAAE;IACxB,IAAI,CAACs1C,UAAU,GAAGt1C,KAAK;IACvB,IAAI,CAACo4B,MAAM,CAAC,CAAC;EACjB;EACApvB,iBAAiBA,CAAC;IAAEjJ;EAAO,CAAC,EAAE;IAC1B,IAAI,CAACs1C,WAAW,GAAGt1C,MAAM;IACzB,IAAI,CAACq4B,MAAM,CAAC,CAAC;EACjB;EACAzmB,0BAA0BA,CAAC+2B,KAAK,EAAE+Y,UAAU,EAAE;IAC1C,IAAI/Y,KAAK,CAACz4B,IAAI,CAACY,QAAQ,EAAE;MACrB,IAAI,CAACD,iBAAiB,CAACC,QAAQ,GAAGulB,IAAI,CAACz+B,GAAG,CAAC,IAAI,CAACiZ,iBAAiB,CAACC,QAAQ,EAAE63B,KAAK,CAACz4B,IAAI,CAACjQ,KAAK,CAAC;IACjG,CAAC,MACI;MACD,IAAI,CAAC4Q,iBAAiB,CAACmuC,QAAQ,GAAG3oB,IAAI,CAACz+B,GAAG,CAAC,IAAI,CAACiZ,iBAAiB,CAACmuC,QAAQ,EAAErW,KAAK,CAACz4B,IAAI,CAACjQ,KAAK,CAAC;IACjG;IACA,IAAIyhD,UAAU,KAAK,IAAI,CAACj2C,OAAO,CAACvK,MAAM,GAAG,CAAC,EAAE;MACxC2pB,UAAU,CAAC,MAAM,IAAI,CAACwN,MAAM,CAAC,CAAC,CAAC;IACnC;EACJ;EACAvtB,UAAUA,CAAC69B,KAAK,EAAEqI,KAAK,EAAEkP,UAAU,GAAG,KAAK,EAAE;IACzC,MAAMvnB,IAAI,GAAGpN,MAAM,CAACyR,MAAM,CAAC,CAAC,CAAC,EAAE2L,KAAK,CAAC;IACrC,IAAIqI,KAAK,EAAE;MACPrY,IAAI,CAAC5mB,MAAM,GAAGi/B,KAAK,CAACnuC,IAAI;IAC5B;IACA,MAAM21B,KAAK,GAAG,IAAI,CAAC/sB,OAAO,CACrBi5B,GAAG,CAACnI,CAAC,IAAIA,CAAC,CAACxqB,MAAM,CAAC,CAClB4vC,IAAI,CAAC,CAAC,CACNjO,MAAM,CAAClhB,CAAC,IAAI;MACb,IAAI0tB,UAAU,EAAE;QACZ,OAAO1tB,CAAC,CAACt3B,KAAK,KAAKy9B,IAAI,CAAC91B,IAAI;MAChC,CAAC,MACI;QACD,OAAO2vB,CAAC,CAAC3vB,IAAI,KAAK81B,IAAI,CAAC91B,IAAI,IAAI2vB,CAAC,CAACzgB,MAAM,KAAK4mB,IAAI,CAAC5mB,MAAM;MAC3D;IACJ,CAAC,CAAC;IACF,IAAI,CAACxV,aAAa,GAAG,CAAC,GAAGi8B,KAAK,CAAC;IAC/B,IAAI,CAAC39B,QAAQ,CAACF,IAAI,CAAC;MAAEiI,KAAK,EAAE+1B,IAAI;MAAEmiB,OAAO,EAAE,IAAI,CAACv+C;IAAc,CAAC,CAAC;EACpE;EACAyO,YAAYA,CAAC29B,KAAK,EAAEqI,KAAK,EAAEkP,UAAU,GAAG,KAAK,EAAE;IAC3C,MAAMvnB,IAAI,GAAGpN,MAAM,CAACyR,MAAM,CAAC,CAAC,CAAC,EAAE2L,KAAK,CAAC;IACrC,IAAIqI,KAAK,EAAE;MACPrY,IAAI,CAAC5mB,MAAM,GAAGi/B,KAAK,CAACnuC,IAAI;IAC5B;IACA,IAAI,CAACtG,aAAa,GAAG,IAAI,CAACA,aAAa,CAACm3C,MAAM,CAAClhB,CAAC,IAAI;MAChD,IAAI0tB,UAAU,EAAE;QACZ,OAAO1tB,CAAC,CAACt3B,KAAK,KAAKy9B,IAAI,CAAC91B,IAAI;MAChC,CAAC,MACI;QACD,OAAO,EAAE2vB,CAAC,CAAC3vB,IAAI,KAAK81B,IAAI,CAAC91B,IAAI,IAAI2vB,CAAC,CAACzgB,MAAM,KAAK4mB,IAAI,CAAC5mB,MAAM,CAAC;MAC9D;IACJ,CAAC,CAAC;IACF,IAAI,CAAChX,UAAU,CAACJ,IAAI,CAAC;MAAEiI,KAAK,EAAE+1B,IAAI;MAAEmiB,OAAO,EAAE,IAAI,CAACv+C;IAAc,CAAC,CAAC;EACtE;AACJ;AACAukD,wBAAwB,CAACpyB,IAAI;EAAA,IAAAkzB,qCAAA;EAAA,gBAAAC,iCAAAjzB,CAAA;IAAA,QAAAgzB,qCAAA,KAAAA,qCAAA,GAnrP6E9sD,EAAE,CAAAmmD,qBAAA,CAmrPS6F,wBAAwB,IAAAlyB,CAAA,IAAxBkyB,wBAAwB;EAAA;AAAA,IAAqD;AAClMA,wBAAwB,CAAC9xB,IAAI,kBAprP6El6B,EAAE,CAAAm6B,iBAAA;EAAA1pB,IAAA,EAorPHu7C,wBAAwB;EAAA5xB,SAAA;EAAAgsB,cAAA,WAAA4G,wCAAAhpD,EAAA,EAAAC,GAAA,EAAAqiD,QAAA;IAAA,IAAAtiD,EAAA;MAprPvBhE,EAAE,CAAAumD,cAAA,CAAAD,QAAA,EAAAzyC,IAAA;IAAA;IAAA,IAAA7P,EAAA;MAAA,IAAAw2B,EAAA;MAAFx6B,EAAE,CAAAy6B,cAAA,CAAAD,EAAA,GAAFx6B,EAAE,CAAA06B,WAAA,QAAAz2B,GAAA,CAAAiN,eAAA,GAAAspB,EAAA,CAAAG,KAAA;IAAA;EAAA;EAAAO,MAAA;IAAAxjB,MAAA;IAAA8sC,WAAA;IAAA5D,cAAA;IAAA6D,KAAA;IAAAC,KAAA;IAAAtwC,cAAA;IAAAW,cAAA;IAAAV,UAAA;IAAAW,UAAA;IAAAnE,eAAA;IAAA4E,QAAA;IAAAvL,aAAA;IAAAzC,aAAA;IAAAk/B,UAAA;IAAAryB,cAAA;IAAAW,cAAA;IAAAV,gBAAA;IAAAC,kBAAA;IAAAU,kBAAA;IAAAT,mBAAA;IAAAU,mBAAA;IAAAT,UAAA;IAAAU,UAAA;IAAA62C,YAAA;IAAAf,UAAA;IAAAtG,YAAA;IAAAnqC,UAAA;IAAAmoC,SAAA;IAAA1lC,aAAA;IAAA3B,mBAAA;IAAAT,aAAA;IAAAzP,SAAA;EAAA;EAAAuyB,OAAA;IAAA73B,QAAA;IAAAE,UAAA;EAAA;EAAA27B,QAAA,GAAF5hC,EAAE,CAAA0mD,0BAAA;EAAAvrB,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAA32B,QAAA,WAAAuoD,kCAAAjpD,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MAAFhE,EAAE,CAAAmE,cAAA,yBA8rPxG,CAAC;MA9rPqGnE,EAAE,CAAAuF,UAAA,iCAAA2nD,kFAAAznD,MAAA;QAAA,OA2rP/ExB,GAAA,CAAA+R,UAAA,CAAAvQ,MAAA,EAAmB0L,SAAS,EAAE,IAAI,CAAC;MAAA,EAAC,mCAAAg8C,oFAAA1nD,MAAA;QAAA,OAClCxB,GAAA,CAAAiS,YAAA,CAAAzQ,MAAA,EAAqB0L,SAAS,EAAE,IAAI,CAAC;MAAA,EAAC,8BAAAi8C,+EAAA3nD,MAAA;QAAA,OAC3CxB,GAAA,CAAA4L,OAAA,CAAApK,MAAc,CAAC;MAAA,EAAC;MA7rPgEzF,EAAE,CAAA8H,cAAA;MAAF9H,EAAE,CAAAmE,cAAA,UA+rP3C,CAAC;MA/rPwCnE,EAAE,CAAA8E,SAAA,UAusP5F,CAAC;MAvsPyF9E,EAAE,CAAAoE,UAAA,IAAA6X,0CAAA,eAutPpG,CAAC,IAAAG,0CAAA,eAeD,CAAC,IAAAe,0CAAA,cAEoB,CAAC,IAAAS,0CAAA,cA8BF,CAAC;MAtwP6E5d,EAAE,CAAAqE,YAAA,CAmyP/F,CAAC,CACQ,CAAC;IAAA;IAAA,IAAAL,EAAA;MApyPmFhE,EAAE,CAAAyE,UAAA,SAAFzE,EAAE,CAAAqX,eAAA,KAAAtD,IAAA,EAAA9P,GAAA,CAAAkH,KAAA,EAAAlH,GAAA,CAAAiH,MAAA,CAsrP/E,CAAC,eAAAjH,GAAA,CAAAyT,MACJ,CAAC,kBAAAzT,GAAA,CAAAyC,aACS,CAAC,kBAAAzC,GAAA,CAAAwD,aACD,CAAC,eAAAxD,GAAA,CAAAyP,UACP,CAAC;MA1rP2E1T,EAAE,CAAAwE,SAAA,CA+rPpE,CAAC;MA/rPiExE,EAAE,CAAAoI,WAAA,cAAAnE,GAAA,CAAA+I,SAAA;MAAFhN,EAAE,CAAAwE,SAAA,CAksP9E,CAAC;MAlsP2ExE,EAAE,CAAAyE,UAAA,WAAAR,GAAA,CAAAkY,UAksP9E,CAAC,WAAAlY,GAAA,CAAAqY,UACD,CAAC,SAAArY,GAAA,CAAA0S,OACN,CAAC,SAAA1S,GAAA,CAAAgH,IACJ,CAAC,WAAAhH,GAAA,CAAAkM,cAAA,CAAAqK,UACsB,CAAC;MAtsP4Dxa,EAAE,CAAAwE,SAAA,CA0sPvF,CAAC;MA1sPoFxE,EAAE,CAAAyE,UAAA,SAAAR,GAAA,CAAAwgD,KA0sPvF,CAAC;MA1sPoFzkD,EAAE,CAAAwE,SAAA,CA0tPvF,CAAC;MA1tPoFxE,EAAE,CAAAyE,UAAA,SAAAR,GAAA,CAAAygD,KA0tPvF,CAAC;MA1tPoF1kD,EAAE,CAAAwE,SAAA,CAwuPjF,CAAC;MAxuP8ExE,EAAE,CAAAyE,UAAA,UAAAR,GAAA,CAAAsM,KAwuPjF,CAAC;MAxuP8EvQ,EAAE,CAAAwE,SAAA,CAswPlF,CAAC;MAtwP+ExE,EAAE,CAAAyE,UAAA,SAAAR,GAAA,CAAAsM,KAswPlF,CAAC;IAAA;EAAA;EAAAirB,YAAA,GA+B24D4I,cAAc,EAAuN8S,wBAAwB,EAAiHxJ,cAAc,EAAsR0C,cAAc,EAA0T4Z,gBAAgB,EAAuXhpD,EAAE,CAACy6B,IAAI,EAA0Ez6B,EAAE,CAACmjC,OAAO;EAAAxI,MAAA,GAAA7iB,IAAA;EAAA8iB,aAAA;EAAA9rB,IAAA;IAAA+mC,SAAA,EAAqG,CAC/7Gp1C,OAAO,CAAC,gBAAgB,EAAE,CACtBC,UAAU,CAAC,QAAQ,EAAE,CACjBC,KAAK,CAAC;MACFoN,OAAO,EAAE,CAAC;MACV/B,SAAS,EAAE;IACf,CAAC,CAAC,EACFpL,OAAO,CAAC,GAAG,EAAED,KAAK,CAAC;MAAEoN,OAAO,EAAE,CAAC;MAAE/B,SAAS,EAAE;IAAW,CAAC,CAAC,CAAC,CAC7D,CAAC,CACL,CAAC;EACL;EAAA+0B,eAAA;AAAA,EAAiG;AACtG;EAAA,QAAAjG,SAAA,oBAAAA,SAAA,KAhzP0G97B,EAAE,CAAA+7B,iBAAA,CAgzPjBiwB,wBAAwB,EAAc,CAAC;IACtHv7C,IAAI,EAAEvQ,SAAS;IACfg1B,IAAI,EAAE,CAAC;MAAE8G,QAAQ,EAAE,8BAA8B;MAAEt3B,QAAQ,EAAG;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;MAAEq9B,eAAe,EAAErhC,uBAAuB,CAACshC,MAAM;MAAEpG,aAAa,EAAEz7B,iBAAiB,CAAC87B,IAAI;MAAEvoB,UAAU,EAAE,CACjFjS,OAAO,CAAC,gBAAgB,EAAE,CACtBC,UAAU,CAAC,QAAQ,EAAE,CACjBC,KAAK,CAAC;QACFoN,OAAO,EAAE,CAAC;QACV/B,SAAS,EAAE;MACf,CAAC,CAAC,EACFpL,OAAO,CAAC,GAAG,EAAED,KAAK,CAAC;QAAEoN,OAAO,EAAE,CAAC;QAAE/B,SAAS,EAAE;MAAW,CAAC,CAAC,CAAC,CAC7D,CAAC,CACL,CAAC,CACL;MAAE2uB,MAAM,EAAE,CAAC,g3DAAg3D;IAAE,CAAC;EAC34D,CAAC,CAAC,QAAkB;IAAEjkB,MAAM,EAAE,CAAC;MACvBjH,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEmkD,WAAW,EAAE,CAAC;MACd/zC,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEugD,cAAc,EAAE,CAAC;MACjBnwC,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEokD,KAAK,EAAE,CAAC;MACRh0C,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEqkD,KAAK,EAAE,CAAC;MACRj0C,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE+T,cAAc,EAAE,CAAC;MACjB3D,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE0U,cAAc,EAAE,CAAC;MACjBtE,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEgU,UAAU,EAAE,CAAC;MACb5D,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE2U,UAAU,EAAE,CAAC;MACbvE,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEwQ,eAAe,EAAE,CAAC;MAClBJ,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEoV,QAAQ,EAAE,CAAC;MACXhF,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE6J,aAAa,EAAE,CAAC;MAChBuG,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEoH,aAAa,EAAE,CAAC;MAChBgJ,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEsmC,UAAU,EAAE,CAAC;MACbl2B,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEiU,cAAc,EAAE,CAAC;MACjB7D,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE4U,cAAc,EAAE,CAAC;MACjBxE,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEkU,gBAAgB,EAAE,CAAC;MACnB9D,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEmU,kBAAkB,EAAE,CAAC;MACrB/D,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE6U,kBAAkB,EAAE,CAAC;MACrBzE,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEoU,mBAAmB,EAAE,CAAC;MACtBhE,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE8U,mBAAmB,EAAE,CAAC;MACtB1E,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEqU,UAAU,EAAE,CAAC;MACbjE,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE+U,UAAU,EAAE,CAAC;MACb3E,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE4rD,YAAY,EAAE,CAAC;MACfx7C,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE6qD,UAAU,EAAE,CAAC;MACbz6C,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEukD,YAAY,EAAE,CAAC;MACfn0C,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEoa,UAAU,EAAE,CAAC;MACbhK,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEuiD,SAAS,EAAE,CAAC;MACZnyC,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE6c,aAAa,EAAE,CAAC;MAChBzM,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEkb,mBAAmB,EAAE,CAAC;MACtB9K,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEya,aAAa,EAAE,CAAC;MAChBrK,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEgL,SAAS,EAAE,CAAC;MACZoF,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAE0F,QAAQ,EAAE,CAAC;MACX0K,IAAI,EAAE7P;IACV,CAAC,CAAC;IAAEqF,UAAU,EAAE,CAAC;MACbwK,IAAI,EAAE7P;IACV,CAAC,CAAC;IAAEsQ,eAAe,EAAE,CAAC;MAClBT,IAAI,EAAE1P,YAAY;MAClBm0B,IAAI,EAAE,CAAC,iBAAiB;IAC5B,CAAC;EAAE,CAAC;AAAA;AAEhB,MAAMm4B,gCAAgC,SAAS5mB,kBAAkB,CAAC;EAC9DhO,WAAWA,CAAA,EAAG;IACV,KAAK,CAAC,GAAG7C,SAAS,CAAC;IACnB,IAAI,CAACle,MAAM,GAAG,KAAK;IACnB,IAAI,CAAC8sC,WAAW,GAAG,QAAQ;IAC3B,IAAI,CAAC5D,cAAc,GAAGh6C,cAAc,CAAC8G,KAAK;IAC1C,IAAI,CAACmD,eAAe,GAAG,KAAK;IAC5B,IAAI,CAAC3G,aAAa,GAAG,IAAI;IACzB,IAAI,CAACzC,aAAa,GAAG,EAAE;IACvB,IAAI,CAAC6M,cAAc,GAAG,IAAI;IAC1B,IAAI,CAACW,cAAc,GAAG,IAAI;IAC1B,IAAI,CAACV,gBAAgB,GAAG,IAAI;IAC5B,IAAI,CAACC,kBAAkB,GAAG,EAAE;IAC5B,IAAI,CAACU,kBAAkB,GAAG,EAAE;IAC5B,IAAI,CAACg2C,UAAU,GAAG,CAAC;IACnB,IAAI,CAACtG,YAAY,GAAG,KAAK;IACzB,IAAI,CAAC9pC,aAAa,GAAG,IAAI;IACzB,IAAI,CAACzP,SAAS,GAAG,KAAK;IACtB,IAAI,CAACtF,QAAQ,GAAG,IAAIpF,YAAY,CAAC,CAAC;IAClC,IAAI,CAACsF,UAAU,GAAG,IAAItF,YAAY,CAAC,CAAC;IACpC,IAAI,CAAC2rD,WAAW,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC;IAC3B,IAAI,CAAC5jB,MAAM,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;IAC9B,IAAI,CAAC8X,WAAW,GAAG,CAAC;IACpB,IAAI,CAACC,UAAU,GAAG,CAAC;IACnB,IAAI,CAACpiC,YAAY,GAAG8qC,YAAY;IAChC,IAAI,CAAC54C,KAAK,GAAG,KAAK;IAClB,IAAI,CAACqH,OAAO,GAAG,CAACzP,KAAK,EAAE07B,IAAI,KAAK;MAC5B,OAAOA,IAAI,CAAC91B,IAAI;IACpB,CAAC;EACL;EACA84B,QAAQA,CAAA,EAAG;IACP,IAAI3lC,gBAAgB,CAAC,IAAI,CAAC03B,UAAU,CAAC,EAAE;MACnC,IAAI,CAACroB,KAAK,GAAG,IAAI;IACrB;EACJ;EACAgzB,MAAMA,CAAA,EAAG;IACL,KAAK,CAACA,MAAM,CAAC,CAAC;IACd,IAAI,CAACt4B,IAAI,GAAGm1C,uBAAuB,CAAC;MAChCj1C,KAAK,EAAE,IAAI,CAACA,KAAK;MACjBD,MAAM,EAAE,IAAI,CAACA,MAAM;MACnBm1C,OAAO,EAAE,IAAI,CAAC3X,MAAM;MACpB4X,SAAS,EAAE,IAAI,CAACmE,KAAK;MACrBlE,SAAS,EAAE,IAAI,CAACmE,KAAK;MACrBlE,WAAW,EAAE,IAAI,CAACA,WAAW;MAC7BC,UAAU,EAAE,IAAI,CAACA,UAAU;MAC3BC,UAAU,EAAE,IAAI,CAACtsC,cAAc;MAC/BusC,UAAU,EAAE,IAAI,CAAC5rC,cAAc;MAC/BsvB,UAAU,EAAE,IAAI,CAAC3sB,MAAM;MACvB6sB,UAAU,EAAE,IAAI,CAACoC,UAAU;MAC3Bia,cAAc,EAAE,IAAI,CAACA;IACzB,CAAC,CAAC;IACF,IAAI,CAACpZ,WAAW,CAAC,CAAC;IAClB,IAAI,CAAC0kB,WAAW,GAAG,IAAI,CAACC,cAAc,CAAC,CAAC;IACxC,IAAI,CAACC,WAAW,GAAG,IAAI,CAACC,cAAc,CAAC,CAAC;IACxC,IAAI,CAACthD,MAAM,GAAG,IAAI,CAACyzC,SAAS,CAAC,CAAC;IAC9B,IAAI,CAAChwC,MAAM,GAAG,IAAI,CAAC22C,SAAS,CAAC,CAAC;IAC9B,IAAI,CAACE,SAAS,CAAC,CAAC;IAChB,IAAI,CAAC3+C,aAAa,GAAG,IAAI,CAAC4+C,gBAAgB,CAAC,CAAC;IAC5C,IAAI,CAACt4C,SAAS,GAAI,aAAY,IAAI,CAAC/B,IAAI,CAAC61C,OAAQ,MAAK,IAAI,CAACpY,MAAM,CAAC,CAAC,CAAE,GAAE;EAC1E;EACAyjB,cAAcA,CAAA,EAAG;IACb,MAAMrlD,MAAM,GAAG,EAAE;IACjB,KAAK,MAAMo1C,KAAK,IAAI,IAAI,CAACvlC,OAAO,EAAE;MAC9B,IAAI,CAAC7P,MAAM,CAACg4C,QAAQ,CAAC5C,KAAK,CAAC91C,KAAK,CAAC,EAAE;QAC/BU,MAAM,CAACk3B,IAAI,CAACke,KAAK,CAAC91C,KAAK,CAAC;MAC5B;IACJ;IACA,OAAOU,MAAM;EACjB;EACAulD,cAAcA,CAAA,EAAG;IACb,MAAMvlD,MAAM,GAAG,EAAE;IACjB,KAAK,MAAMo1C,KAAK,IAAI,IAAI,CAACvlC,OAAO,EAAE;MAC9B,KAAK,MAAMotB,CAAC,IAAImY,KAAK,CAACj/B,MAAM,EAAE;QAC1B,IAAI,CAACnW,MAAM,CAACg4C,QAAQ,CAAC/a,CAAC,CAAC39B,KAAK,CAAC,EAAE;UAC3BU,MAAM,CAACk3B,IAAI,CAAC+F,CAAC,CAAC39B,KAAK,CAAC;QACxB;MACJ;IACJ;IACA,OAAOU,MAAM;EACjB;EACAq+C,SAASA,CAAA,EAAG;IACR,MAAMltB,OAAO,GAAG,IAAI,CAACi0B,WAAW,CAAC9/C,MAAM,IAAI,IAAI,CAACnB,IAAI,CAACC,MAAM,GAAG,IAAI,CAACggD,UAAU,GAAG,CAAC,CAAC;IAClF,OAAO9oD,SAAS,CAAC,CAAC,CAAC+oD,UAAU,CAAC,CAAC,CAAC,EAAE,IAAI,CAAClgD,IAAI,CAACC,MAAM,CAAC,CAAC,CAACusC,YAAY,CAACxf,OAAO,CAAC,CAACnxB,MAAM,CAAC,IAAI,CAAColD,WAAW,CAAC;EACvG;EACA1N,SAASA,CAAA,EAAG;IACR,MAAMxT,KAAK,GAAGhpC,WAAW,CAAC,CAAC,CAACY,KAAK,CAAC,CAAC,CAAC,EAAE,IAAI,CAACqI,IAAI,CAACE,KAAK,CAAC,CAAC,CAACrE,MAAM,CAAC,IAAI,CAACwlD,WAAW,CAAC;IAChF,OAAO,IAAI,CAAC1H,YAAY,GAAG5Z,KAAK,CAAC2a,IAAI,CAAC,CAAC,GAAG3a,KAAK;EACnD;EACAjuB,cAAcA,CAACm/B,KAAK,EAAE;IAClB,OAAQ,gBAAe,IAAI,CAAC1tC,MAAM,CAAC0tC,KAAK,CAACnuC,IAAI,CAAE,GAAE;EACrD;EACA8B,OAAOA,CAACC,IAAI,EAAEosC,KAAK,EAAE;IACjB,IAAIA,KAAK,EAAE;MACPpsC,IAAI,CAACmN,MAAM,GAAGi/B,KAAK,CAACnuC,IAAI;IAC5B;IACA,IAAI,CAAClM,MAAM,CAACgE,IAAI,CAACiK,IAAI,CAAC;EAC1B;EACAu1C,SAASA,CAAA,EAAG;IACR,IAAIv+C,MAAM;IACV,IAAI,IAAI,CAAC6/B,UAAU,KAAKjG,SAAS,CAACkG,OAAO,EAAE;MACvC9/B,MAAM,GAAG,IAAI,CAACslD,WAAW;IAC7B,CAAC,MACI;MACDtlD,MAAM,GAAG,IAAI,CAACwlD,WAAW;IAC7B;IACA,IAAI,CAACvlD,MAAM,GAAG,IAAIm6C,WAAW,CAAC,IAAI,CAAC1pC,MAAM,EAAE,IAAI,CAACmvB,UAAU,EAAE7/B,MAAM,EAAE,IAAI,CAAC2Q,YAAY,CAAC;EAC1F;EACA6tC,gBAAgBA,CAAA,EAAG;IACf,MAAMS,IAAI,GAAG;MACTvwC,SAAS,EAAE,IAAI,CAACmxB,UAAU;MAC1B5/B,MAAM,EAAEoK,SAAS;MACjBrK,MAAM,EAAE,EAAE;MACV/B,KAAK,EAAEoM,SAAS;MAChBxK,QAAQ,EAAE,IAAI,CAACi6C;IACnB,CAAC;IACD,IAAImF,IAAI,CAACvwC,SAAS,KAAKkrB,SAAS,CAACkG,OAAO,EAAE;MACtCmf,IAAI,CAACj/C,MAAM,GAAG,IAAI,CAACslD,WAAW;MAC9BrG,IAAI,CAACh/C,MAAM,GAAG,IAAI,CAACA,MAAM;MACzBg/C,IAAI,CAAChhD,KAAK,GAAG,IAAI,CAACy/C,WAAW;IACjC,CAAC,MACI;MACDuB,IAAI,CAACj/C,MAAM,GAAG,IAAI,CAACwlD,WAAW;MAC9BvG,IAAI,CAACh/C,MAAM,GAAG,IAAI,CAACA,MAAM,CAACikC,KAAK;IACnC;IACA,OAAO+a,IAAI;EACf;EACAjxC,gBAAgBA,CAAC;IAAE3J;EAAM,CAAC,EAAE;IACxB,IAAI,CAACs1C,UAAU,GAAGt1C,KAAK;IACvB,IAAI,CAACo4B,MAAM,CAAC,CAAC;EACjB;EACApvB,iBAAiBA,CAAC;IAAEjJ;EAAO,CAAC,EAAE;IAC1B,IAAI,CAACs1C,WAAW,GAAGt1C,MAAM;IACzB,IAAI,CAACq4B,MAAM,CAAC,CAAC;EACjB;EACAvtB,UAAUA,CAAC69B,KAAK,EAAEqI,KAAK,EAAEkP,UAAU,GAAG,KAAK,EAAE;IACzC,MAAMvnB,IAAI,GAAGpN,MAAM,CAACyR,MAAM,CAAC,CAAC,CAAC,EAAE2L,KAAK,CAAC;IACrC,IAAIqI,KAAK,EAAE;MACPrY,IAAI,CAAC5mB,MAAM,GAAGi/B,KAAK,CAACnuC,IAAI;IAC5B;IACA,MAAM21B,KAAK,GAAG,IAAI,CAAC/sB,OAAO,CACrBi5B,GAAG,CAACnI,CAAC,IAAIA,CAAC,CAACxqB,MAAM,CAAC,CAClB4vC,IAAI,CAAC,CAAC,CACNjO,MAAM,CAAClhB,CAAC,IAAI;MACb,IAAI0tB,UAAU,EAAE;QACZ,OAAO1tB,CAAC,CAACt3B,KAAK,KAAKy9B,IAAI,CAAC91B,IAAI;MAChC,CAAC,MACI;QACD,OAAO2vB,CAAC,CAAC3vB,IAAI,KAAK81B,IAAI,CAAC91B,IAAI,IAAI2vB,CAAC,CAACzgB,MAAM,KAAK4mB,IAAI,CAAC5mB,MAAM;MAC3D;IACJ,CAAC,CAAC;IACF,IAAI,CAACxV,aAAa,GAAG,CAAC,GAAGi8B,KAAK,CAAC;IAC/B,IAAI,CAAC39B,QAAQ,CAACF,IAAI,CAAC;MAAEiI,KAAK,EAAE+1B,IAAI;MAAEmiB,OAAO,EAAE,IAAI,CAACv+C;IAAc,CAAC,CAAC;EACpE;EACAyO,YAAYA,CAAC29B,KAAK,EAAEqI,KAAK,EAAEkP,UAAU,GAAG,KAAK,EAAE;IAC3C,MAAMvnB,IAAI,GAAGpN,MAAM,CAACyR,MAAM,CAAC,CAAC,CAAC,EAAE2L,KAAK,CAAC;IACrC,IAAIqI,KAAK,EAAE;MACPrY,IAAI,CAAC5mB,MAAM,GAAGi/B,KAAK,CAACnuC,IAAI;IAC5B;IACA,IAAI,CAACtG,aAAa,GAAG,IAAI,CAACA,aAAa,CAACm3C,MAAM,CAAClhB,CAAC,IAAI;MAChD,IAAI0tB,UAAU,EAAE;QACZ,OAAO1tB,CAAC,CAACt3B,KAAK,KAAKy9B,IAAI,CAAC91B,IAAI;MAChC,CAAC,MACI;QACD,OAAO,EAAE2vB,CAAC,CAAC3vB,IAAI,KAAK81B,IAAI,CAAC91B,IAAI,IAAI2vB,CAAC,CAACzgB,MAAM,KAAK4mB,IAAI,CAAC5mB,MAAM,CAAC;MAC9D;IACJ,CAAC,CAAC;IACF,IAAI,CAAChX,UAAU,CAACJ,IAAI,CAAC;MAAEiI,KAAK,EAAE+1B,IAAI;MAAEmiB,OAAO,EAAE,IAAI,CAACv+C;IAAc,CAAC,CAAC;EACtE;AACJ;AACA4lD,gCAAgC,CAACzzB,IAAI;EAAA,IAAA0zB,6CAAA;EAAA,gBAAAC,yCAAAzzB,CAAA;IAAA,QAAAwzB,6CAAA,KAAAA,6CAAA,GAhqQqEttD,EAAE,CAAAmmD,qBAAA,CAgqQiBkH,gCAAgC,IAAAvzB,CAAA,IAAhCuzB,gCAAgC;EAAA;AAAA,IAAqD;AAClNA,gCAAgC,CAACnzB,IAAI,kBAjqQqEl6B,EAAE,CAAAm6B,iBAAA;EAAA1pB,IAAA,EAiqQK48C,gCAAgC;EAAAjzB,SAAA;EAAAgsB,cAAA,WAAAoH,gDAAAxpD,EAAA,EAAAC,GAAA,EAAAqiD,QAAA;IAAA,IAAAtiD,EAAA;MAjqQvChE,EAAE,CAAAumD,cAAA,CAAAD,QAAA,EAAAzyC,IAAA;IAAA;IAAA,IAAA7P,EAAA;MAAA,IAAAw2B,EAAA;MAAFx6B,EAAE,CAAAy6B,cAAA,CAAAD,EAAA,GAAFx6B,EAAE,CAAA06B,WAAA,QAAAz2B,GAAA,CAAAiN,eAAA,GAAAspB,EAAA,CAAAG,KAAA;IAAA;EAAA;EAAAO,MAAA;IAAAxjB,MAAA;IAAA8sC,WAAA;IAAA5D,cAAA;IAAA6D,KAAA;IAAAC,KAAA;IAAAtwC,cAAA;IAAAW,cAAA;IAAAV,UAAA;IAAAW,UAAA;IAAAnE,eAAA;IAAA4E,QAAA;IAAAvL,aAAA;IAAAzC,aAAA;IAAAk/B,UAAA;IAAAryB,cAAA;IAAAW,cAAA;IAAAV,gBAAA;IAAAC,kBAAA;IAAAU,kBAAA;IAAAT,mBAAA;IAAAU,mBAAA;IAAAT,UAAA;IAAAU,UAAA;IAAA81C,UAAA;IAAAtG,YAAA;IAAA9pC,aAAA;IAAAzP,SAAA;EAAA;EAAAuyB,OAAA;IAAA73B,QAAA;IAAAE,UAAA;EAAA;EAAA27B,QAAA,GAAF5hC,EAAE,CAAA0mD,0BAAA;EAAAvrB,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAA32B,QAAA,WAAA+oD,0CAAAzpD,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MAAFhE,EAAE,CAAAmE,cAAA,yBA2qQxG,CAAC;MA3qQqGnE,EAAE,CAAAuF,UAAA,iCAAAmoD,0FAAAjoD,MAAA;QAAA,OAwqQ/ExB,GAAA,CAAA+R,UAAA,CAAAvQ,MAAA,EAAmB0L,SAAS,EAAE,IAAI,CAAC;MAAA,EAAC,mCAAAw8C,4FAAAloD,MAAA;QAAA,OAClCxB,GAAA,CAAAiS,YAAA,CAAAzQ,MAAA,EAAqB0L,SAAS,EAAE,IAAI,CAAC;MAAA,EAAC,8BAAAy8C,uFAAAnoD,MAAA;QAAA,OAC3CxB,GAAA,CAAA4L,OAAA,CAAApK,MAAc,CAAC;MAAA,EAAC;MA1qQgEzF,EAAE,CAAA8H,cAAA;MAAF9H,EAAE,CAAAmE,cAAA,UA4qQ3C,CAAC;MA5qQwCnE,EAAE,CAAAoE,UAAA,IAAAyZ,kDAAA,eA4rQpG,CAAC,IAAAE,kDAAA,cAcD,CAAC,IAAAQ,kDAAA,cACoB,CAAC,IAAAM,kDAAA,cA2BF,CAAC;MAtuQ6E7e,EAAE,CAAAqE,YAAA,CA6vQ/F,CAAC,CACQ,CAAC;IAAA;IAAA,IAAAL,EAAA;MA9vQmFhE,EAAE,CAAAyE,UAAA,SAAFzE,EAAE,CAAAqX,eAAA,KAAAtD,IAAA,EAAA9P,GAAA,CAAAkH,KAAA,EAAAlH,GAAA,CAAAiH,MAAA,CAmqQ/E,CAAC,eAAAjH,GAAA,CAAAyT,MACJ,CAAC,kBAAAzT,GAAA,CAAAyC,aACS,CAAC,kBAAAzC,GAAA,CAAAwD,aACD,CAAC,eAAAxD,GAAA,CAAAyP,UACP,CAAC;MAvqQ2E1T,EAAE,CAAAwE,SAAA,CA4qQpE,CAAC;MA5qQiExE,EAAE,CAAAoI,WAAA,cAAAnE,GAAA,CAAA+I,SAAA;MAAFhN,EAAE,CAAAwE,SAAA,CA+qQvF,CAAC;MA/qQoFxE,EAAE,CAAAyE,UAAA,SAAAR,GAAA,CAAAwgD,KA+qQvF,CAAC;MA/qQoFzkD,EAAE,CAAAwE,SAAA,CA+rQvF,CAAC;MA/rQoFxE,EAAE,CAAAyE,UAAA,SAAAR,GAAA,CAAAygD,KA+rQvF,CAAC;MA/rQoF1kD,EAAE,CAAAwE,SAAA,CA2sQjF,CAAC;MA3sQ8ExE,EAAE,CAAAyE,UAAA,UAAAR,GAAA,CAAAsM,KA2sQjF,CAAC;MA3sQ8EvQ,EAAE,CAAAwE,SAAA,CAsuQlF,CAAC;MAtuQ+ExE,EAAE,CAAAyE,UAAA,SAAAR,GAAA,CAAAsM,KAsuQlF,CAAC;IAAA;EAAA;EAAAirB,YAAA,GAyB24D4I,cAAc,EAAuNsJ,cAAc,EAAsR0C,cAAc,EAA0T4Z,gBAAgB,EAAuXhpD,EAAE,CAACy6B,IAAI,EAA0Ez6B,EAAE,CAACmjC,OAAO;EAAAxI,MAAA,GAAA7iB,IAAA;EAAA8iB,aAAA;EAAA9rB,IAAA;IAAA+mC,SAAA,EAAqG,CACtzGp1C,OAAO,CAAC,gBAAgB,EAAE,CACtBC,UAAU,CAAC,QAAQ,EAAE,CACjBC,KAAK,CAAC;MACFoN,OAAO,EAAE,CAAC;MACV/B,SAAS,EAAE;IACf,CAAC,CAAC,EACFpL,OAAO,CAAC,GAAG,EAAED,KAAK,CAAC;MAAEoN,OAAO,EAAE,CAAC;MAAE/B,SAAS,EAAE;IAAW,CAAC,CAAC,CAAC,CAC7D,CAAC,CACL,CAAC;EACL;EAAA+0B,eAAA;AAAA,EAAiG;AACtG;EAAA,QAAAjG,SAAA,oBAAAA,SAAA,KA1wQ0G97B,EAAE,CAAA+7B,iBAAA,CA0wQjBsxB,gCAAgC,EAAc,CAAC;IAC9H58C,IAAI,EAAEvQ,SAAS;IACfg1B,IAAI,EAAE,CAAC;MAAE8G,QAAQ,EAAE,sCAAsC;MAAEt3B,QAAQ,EAAG;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;MAAEq9B,eAAe,EAAErhC,uBAAuB,CAACshC,MAAM;MAAEpG,aAAa,EAAEz7B,iBAAiB,CAAC87B,IAAI;MAAEvoB,UAAU,EAAE,CACjFjS,OAAO,CAAC,gBAAgB,EAAE,CACtBC,UAAU,CAAC,QAAQ,EAAE,CACjBC,KAAK,CAAC;QACFoN,OAAO,EAAE,CAAC;QACV/B,SAAS,EAAE;MACf,CAAC,CAAC,EACFpL,OAAO,CAAC,GAAG,EAAED,KAAK,CAAC;QAAEoN,OAAO,EAAE,CAAC;QAAE/B,SAAS,EAAE;MAAW,CAAC,CAAC,CAAC,CAC7D,CAAC,CACL,CAAC,CACL;MAAE2uB,MAAM,EAAE,CAAC,g3DAAg3D;IAAE,CAAC;EAC34D,CAAC,CAAC,QAAkB;IAAEjkB,MAAM,EAAE,CAAC;MACvBjH,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEmkD,WAAW,EAAE,CAAC;MACd/zC,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEugD,cAAc,EAAE,CAAC;MACjBnwC,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEokD,KAAK,EAAE,CAAC;MACRh0C,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEq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AS;IACfg1B,IAAI,EAAE,CAAC;MAAE8G,QAAQ,EAAE,4BAA4B;MAAEt3B,QAAQ,EAAG;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;MAAEk3B,aAAa,EAAEz7B,iBAAiB,CAAC87B,IAAI;MAAE8F,eAAe,EAAErhC,uBAAuB,CAACshC,MAAM;MAAEtuB,UAAU,EAAE,CACjFjS,OAAO,CAAC,gBAAgB,EAAE,CACtBC,UAAU,CAAC,QAAQ,EAAE,CACjBC,KAAK,CAAC;QACFoN,OAAO,EAAE,CAAC;QACV/B,SAAS,EAAE;MACf,CAAC,CAAC,EACFpL,OAAO,CAAC,GAAG,EAAED,KAAK,CAAC;QAAEoN,OAAO,EAAE,CAAC;QAAE/B,SAAS,EAAE;MAAW,CAAC,CAAC,CAAC,CAC7D,CAAC,CACL,CAAC,CACL;MAAE2uB,MAAM,EAAE,CAAC,g3DAAg3D;IAAE,CAAC;EAC34D,CAAC,CAAC,QAAkB;IAAEjkB,MAAM,EAAE,CAAC;MACvBjH,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEmkD,WAAW,EAAE,CAAC;MACd/zC,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEugD,cAAc,EAAE,CAAC;MACjBnwC,IAAI,EAAEpQ;IACV,CAAC,CAAC;IAAEok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AQ,EAAE,CACjBC,KAAK,CAAC;MACFoN,OAAO,EAAE,CAAC;MACV/B,SAAS,EAAE;IACf,CAAC,CAAC,EACFpL,OAAO,CAAC,GAAG,EAAED,KAAK,CAAC;MAAEoN,OAAO,EAAE,CAAC;MAAE/B,SAAS,EAAE;IAAW,CAAC,CAAC,CAAC,CAC7D,CAAC,CACL,CAAC;EACL;EAAA+0B,eAAA;AAAA,EAAiG;AACtG;EAAA,QAAAjG,SAAA,oBAAAA,SAAA,KAl/U0G97B,EAAE,CAAA+7B,iBAAA,CAk/UjBm0B,8BAA8B,EAAc,CAAC;IAC5Hz/C,IAAI,EAAEvQ,SAAS;IACfg1B,IAAI,EAAE,CAAC;MAAE8G,QAAQ,EAAE,oCAAoC;MAAEt3B,QAAQ,EAAG;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;MAAEk3B,aAAa,EAAEz7B,iBAAiB,CAAC87B,IAAI;MAAE8F,eAAe,EAAErhC,uBAAuB,CAACshC,MAAM;MAAEtuB,UAAU,EAAE,CACjFjS,OAAO,CAAC,gBAAgB,EAAE,CACtBC,UAAU,CAAC,QAAQ,EAAE,CACjBC,KAAK,CAAC;QACFoN,OAAO,EAAE,CAAC;QACV/B,SAAS,EAAE;MACf,CAAC,CAAC,EACFpL,OAAO,CAAC,GAAG,EAAED,KAAK,CAAC;QAAEoN,OAAO,EAAE,CAAC;QAAE/B,SAAS,EAAE;MAAW,CAAC,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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}