{"ast":null,"code":"import { throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nexport class ErrorInterceptor {\n  intercept(req, next) {\n    return next.handle(req).pipe(catchError(error => {\n      let errorMsg = 'It seems like you are offline. Please check your network connection. :)';\n      if (error.error instanceof ErrorEvent) {\n        errorMsg = `Error: ${error.error.message}`;\n      } else {\n        errorMsg = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n      }\n      alert(errorMsg);\n      return throwError(errorMsg);\n    }));\n  }\n  static #_ = this.ɵfac = function ErrorInterceptor_Factory(t) {\n    return new (t || ErrorInterceptor)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ErrorInterceptor,\n    factory: ErrorInterceptor.ɵfac\n  });\n}","map":{"version":3,"names":["throwError","catchError","ErrorInterceptor","intercept","req","next","handle","pipe","error","errorMsg","ErrorEvent","message","status","alert","_","_2","factory","ɵfac"],"sources":["/Users/joannyprignol/code/JoPrignol/oc-project-2/src/app/interceptors/error.interceptor.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    return next.handle(req).pipe(\n      catchError((error: HttpErrorResponse) => {\n        let errorMsg = 'It seems like you are offline. Please check your network connection. :)';\n        if (error.error instanceof ErrorEvent) {\n          errorMsg = `Error: ${error.error.message}`;\n        } else {\n          errorMsg = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n        }\n        alert(errorMsg);\n        return throwError(errorMsg);\n      })\n    );\n  }\n}\n"],"mappings":"AAEA,SAAqBA,UAAU,QAAQ,MAAM;AAC7C,SAASC,UAAU,QAAQ,gBAAgB;;AAG3C,OAAM,MAAOC,gBAAgB;EAC3BC,SAASA,CAACC,GAAqB,EAAEC,IAAiB;IAChD,OAAOA,IAAI,CAACC,MAAM,CAACF,GAAG,CAAC,CAACG,IAAI,CAC1BN,UAAU,CAAEO,KAAwB,IAAI;MACtC,IAAIC,QAAQ,GAAG,yEAAyE;MACxF,IAAID,KAAK,CAACA,KAAK,YAAYE,UAAU,EAAE;QACrCD,QAAQ,GAAG,UAAUD,KAAK,CAACA,KAAK,CAACG,OAAO,EAAE;MAC5C,CAAC,MAAM;QACLF,QAAQ,GAAG,eAAeD,KAAK,CAACI,MAAM,cAAcJ,KAAK,CAACG,OAAO,EAAE;MACrE;MACAE,KAAK,CAACJ,QAAQ,CAAC;MACf,OAAOT,UAAU,CAACS,QAAQ,CAAC;IAC7B,CAAC,CAAC,CACH;EACH;EAAC,QAAAK,CAAA,G;qBAdUZ,gBAAgB;EAAA;EAAA,QAAAa,EAAA,G;WAAhBb,gBAAgB;IAAAc,OAAA,EAAhBd,gBAAgB,CAAAe;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}